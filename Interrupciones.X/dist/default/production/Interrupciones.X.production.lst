

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Feb 02 21:28:35 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  000386                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _display
    63  000386  3F                 	db	63
    64  000387  06                 	db	6
    65  000388  5B                 	db	91
    66  000389  4F                 	db	79
    67  00038A  66                 	db	102
    68  00038B  6D                 	db	109
    69  00038C  7D                 	db	125
    70  00038D  07                 	db	7
    71  00038E  7F                 	db	127
    72  00038F  67                 	db	103
    73  0000                     _RCONbits	set	4048
    74  0000                     _INTCON2bits	set	4081
    75  0000                     _INTCON3bits	set	4080
    76  0000                     _INTCONbits	set	4082
    77  0000                     _TRISBbits	set	3987
    78  0000                     _LATAbits	set	3977
    79  0000                     _LATD	set	3980
    80  0000                     _TRISD	set	3989
    81  0000                     _TRISA	set	3986
    82                           
    83                           ; #config settings
    84                           
    85                           	psect	cinit
    86  00032A                     __pcinit:
    87                           	callstack 0
    88  00032A                     start_initialization:
    89                           	callstack 0
    90  00032A                     __initialization:
    91                           	callstack 0
    92                           
    93                           ; Initialize objects allocated to COMRAM (10 bytes)
    94                           ; load TBLPTR registers with __pidataCOMRAM
    95  00032A  0E86               	movlw	low __pidataCOMRAM
    96  00032C  6EF6               	movwf	tblptrl,c
    97  00032E  0E03               	movlw	high __pidataCOMRAM
    98  000330  6EF7               	movwf	tblptrh,c
    99  000332  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   100  000334  6EF8               	movwf	tblptru,c
   101  000336  EE00  F010         	lfsr	0,__pdataCOMRAM
   102  00033A  EE10 F00A          	lfsr	1,10
   103  00033E                     copy_data0:
   104  00033E  0009               	tblrd		*+
   105  000340  CFF5 FFEE          	movff	tablat,postinc0
   106  000344  50E5               	movf	postdec1,w,c
   107  000346  50E1               	movf	fsr1l,w,c
   108  000348  E1FA               	bnz	copy_data0
   109                           
   110                           ; Clear objects allocated to COMRAM (7 bytes)
   111  00034A  EE00  F01A         	lfsr	0,__pbssCOMRAM
   112  00034E  0E07               	movlw	7
   113  000350                     clear_0:
   114  000350  6AEE               	clrf	postinc0,c
   115  000352  06E8               	decf	wreg,f,c
   116  000354  E1FD               	bnz	clear_0
   117  000356                     end_of_initialization:
   118                           	callstack 0
   119  000356                     __end_of__initialization:
   120                           	callstack 0
   121  000356  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   122  000358  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   123  00035A  0100               	movlb	0
   124  00035C  EF20  F000         	goto	_main	;jump to C main() function
   125                           
   126                           	psect	bssCOMRAM
   127  00001A                     __pbssCOMRAM:
   128                           	callstack 0
   129  00001A                     _cen:
   130                           	callstack 0
   131  00001A                     	ds	2
   132  00001C                     _dec:
   133                           	callstack 0
   134  00001C                     	ds	2
   135  00001E                     _uni:
   136                           	callstack 0
   137  00001E                     	ds	2
   138  000020                     _x:
   139                           	callstack 0
   140  000020                     	ds	1
   141                           
   142                           	psect	dataCOMRAM
   143  000010                     __pdataCOMRAM:
   144                           	callstack 0
   145  000010                     _display:
   146                           	callstack 0
   147  000010                     	ds	10
   148                           
   149                           	psect	cstackCOMRAM
   150  000001                     __pcstackCOMRAM:
   151                           	callstack 0
   152  000001                     ??_INT1_ISR:
   153                           
   154                           ; 1 bytes @ 0x0
   155  000001                     	ds	3
   156  000004                     ?___awdiv:
   157                           	callstack 0
   158  000004                     ?___awmod:
   159                           	callstack 0
   160  000004                     ___awdiv@dividend:
   161                           	callstack 0
   162  000004                     ___awmod@dividend:
   163                           	callstack 0
   164                           
   165                           ; 2 bytes @ 0x3
   166  000004                     	ds	2
   167  000006                     ___awdiv@divisor:
   168                           	callstack 0
   169  000006                     ___awmod@divisor:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x5
   173  000006                     	ds	2
   174  000008                     ___awdiv@counter:
   175                           	callstack 0
   176  000008                     ___awmod@counter:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x7
   180  000008                     	ds	1
   181  000009                     ___awdiv@sign:
   182                           	callstack 0
   183  000009                     ___awmod@sign:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x8
   187  000009                     	ds	1
   188  00000A                     ___awdiv@quotient:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x9
   192  00000A                     	ds	2
   193  00000C                     ??_main:
   194                           
   195                           ; 1 bytes @ 0xB
   196  00000C                     	ds	2
   197  00000E                     main@i:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0xD
   201  00000E                     	ds	2
   202                           
   203 ;;
   204 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   205 ;;
   206 ;; *************** function _main *****************
   207 ;; Defined at:
   208 ;;		line 27 in file "Programa_principal.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;  i               2   13[COMRAM] int 
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   217 ;; Tracked objects:
   218 ;;		On entry : 0/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   222 ;;      Params:         0       0       0       0       0       0       0       0       0
   223 ;;      Locals:         2       0       0       0       0       0       0       0       0
   224 ;;      Temps:          2       0       0       0       0       0       0       0       0
   225 ;;      Totals:         4       0       0       0       0       0       0       0       0
   226 ;;Total ram usage:        4 bytes
   227 ;; Hardware stack levels required when called:    3
   228 ;; This function calls:
   229 ;;		_Int_Init
   230 ;;		___awdiv
   231 ;;		___awmod
   232 ;; This function is called by:
   233 ;;		Startup code after reset
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           	psect	text0
   238  000040                     __ptext0:
   239                           	callstack 0
   240  000040                     _main:
   241                           	callstack 28
   242  000040                     
   243                           ;Programa_principal.c: 28:     Int_Init();
   244  000040  ECB0  F001         	call	_Int_Init	;wreg free
   245  000044                     
   246                           ;Programa_principal.c: 29:     TRISA = 0x00;
   247  000044  0E00               	movlw	0
   248  000046  6E92               	movwf	146,c	;volatile
   249  000048                     
   250                           ;Programa_principal.c: 30:     TRISD = 0x00;
   251  000048  0E00               	movlw	0
   252  00004A  6E95               	movwf	149,c	;volatile
   253  00004C                     
   254                           ;Programa_principal.c: 31:     LATD = 0x00;
   255  00004C  0E00               	movlw	0
   256  00004E  6E8C               	movwf	140,c	;volatile
   257  000050                     
   258                           ;Programa_principal.c: 32:     LATAbits.LA0 = 0;
   259  000050  9089               	bcf	137,0,c	;volatile
   260  000052                     
   261                           ;Programa_principal.c: 33:     LATAbits.LA1 = 0;
   262  000052  9289               	bcf	137,1,c	;volatile
   263  000054                     l976:
   264                           
   265                           ;Programa_principal.c: 56:         if(x == 1){
   266  000054  0420               	decf	_x^0,w,c
   267  000056  A4D8               	btfss	status,2,c
   268  000058  EF30  F000         	goto	u291
   269  00005C  EF32  F000         	goto	u290
   270  000060                     u291:
   271  000060  EF41  F000         	goto	l982
   272  000064                     u290:
   273  000064                     
   274                           ;Programa_principal.c: 57:             LATAbits.LA0 = 1;
   275  000064  8089               	bsf	137,0,c	;volatile
   276                           
   277                           ;Programa_principal.c: 58:             LATAbits.LA1 = 0;
   278  000066  9289               	bcf	137,1,c	;volatile
   279                           
   280                           ;Programa_principal.c: 59:             LATD = display[4];
   281  000068  C014  FF8C         	movff	_display+4,3980	;volatile
   282  00006C                     
   283                           ;Programa_principal.c: 60:             _delay((unsigned long)((250)*(20000000UL/4000.0))
      +                          );
   284  00006C  0E07               	movlw	7
   285  00006E  6E0D               	movwf	(??_main+1)^0,c
   286  000070  0E58               	movlw	88
   287  000072  6E0C               	movwf	??_main^0,c
   288  000074  0E5A               	movlw	90
   289  000076                     u337:
   290  000076  2EE8               	decfsz	wreg,f,c
   291  000078  D7FE               	bra	u337
   292  00007A  2E0C               	decfsz	??_main^0,f,c
   293  00007C  D7FC               	bra	u337
   294  00007E  2E0D               	decfsz	(??_main+1)^0,f,c
   295  000080  D7FA               	bra	u337
   296  000082                     l982:
   297                           
   298                           ;Programa_principal.c: 62:         if(x == 2){
   299  000082  0E02               	movlw	2
   300  000084  1820               	xorwf	_x^0,w,c
   301  000086  A4D8               	btfss	status,2,c
   302  000088  EF48  F000         	goto	u301
   303  00008C  EF4A  F000         	goto	u300
   304  000090                     u301:
   305  000090  EF2A  F000         	goto	l976
   306  000094                     u300:
   307  000094                     
   308                           ;Programa_principal.c: 63:             for(int i = 0;i<999;i++){
   309  000094  0E00               	movlw	0
   310  000096  6E0F               	movwf	(main@i+1)^0,c
   311  000098  0E00               	movlw	0
   312  00009A  6E0E               	movwf	main@i^0,c
   313  00009C                     l990:
   314                           
   315                           ;Programa_principal.c: 64:                 cen = i/100;
   316  00009C  C00E  F004         	movff	main@i,___awdiv@dividend
   317  0000A0  C00F  F005         	movff	main@i+1,___awdiv@dividend+1
   318  0000A4  0E00               	movlw	0
   319  0000A6  6E07               	movwf	(___awdiv@divisor+1)^0,c
   320  0000A8  0E64               	movlw	100
   321  0000AA  6E06               	movwf	___awdiv@divisor^0,c
   322  0000AC  ECDB  F000         	call	___awdiv	;wreg free
   323  0000B0  C004  F01A         	movff	?___awdiv,_cen
   324  0000B4  C005  F01B         	movff	?___awdiv+1,_cen+1
   325  0000B8                     
   326                           ;Programa_principal.c: 65:                 LATAbits.LA0 = 1;
   327  0000B8  8089               	bsf	137,0,c	;volatile
   328  0000BA                     
   329                           ;Programa_principal.c: 66:                 LATD = display[cen];
   330  0000BA  0E10               	movlw	low _display
   331  0000BC  241A               	addwf	_cen^0,w,c
   332  0000BE  6ED9               	movwf	fsr2l,c
   333  0000C0  0E00               	movlw	high _display
   334  0000C2  201B               	addwfc	(_cen+1)^0,w,c
   335  0000C4  6EDA               	movwf	fsr2h,c
   336  0000C6  50DF               	movf	indf2,w,c
   337  0000C8  6E8C               	movwf	140,c	;volatile
   338  0000CA                     
   339                           ;Programa_principal.c: 67:                 _delay((unsigned long)((20)*(20000000UL/4000.
      +                          0)));
   340  0000CA  0E82               	movlw	130
   341  0000CC  6E0C               	movwf	??_main^0,c
   342  0000CE  0EDE               	movlw	222
   343  0000D0                     u347:
   344  0000D0  2EE8               	decfsz	wreg,f,c
   345  0000D2  D7FE               	bra	u347
   346  0000D4  2E0C               	decfsz	??_main^0,f,c
   347  0000D6  D7FC               	bra	u347
   348  0000D8                     
   349                           ;Programa_principal.c: 68:                 LATAbits.LA0 = 0;
   350  0000D8  9089               	bcf	137,0,c	;volatile
   351  0000DA                     
   352                           ;Programa_principal.c: 69:                 dec = i/10;
   353  0000DA  C00E  F004         	movff	main@i,___awdiv@dividend
   354  0000DE  C00F  F005         	movff	main@i+1,___awdiv@dividend+1
   355  0000E2  0E00               	movlw	0
   356  0000E4  6E07               	movwf	(___awdiv@divisor+1)^0,c
   357  0000E6  0E0A               	movlw	10
   358  0000E8  6E06               	movwf	___awdiv@divisor^0,c
   359  0000EA  ECDB  F000         	call	___awdiv	;wreg free
   360  0000EE  C004  F01C         	movff	?___awdiv,_dec
   361  0000F2  C005  F01D         	movff	?___awdiv+1,_dec+1
   362  0000F6                     
   363                           ;Programa_principal.c: 70:                 if(dec>=10){
   364  0000F6  BE1D               	btfsc	(_dec+1)^0,7,c
   365  0000F8  EF87  F000         	goto	u311
   366  0000FC  501D               	movf	(_dec+1)^0,w,c
   367  0000FE  E109               	bnz	u310
   368  000100  0E0A               	movlw	10
   369  000102  5C1C               	subwf	_dec^0,w,c
   370  000104  A0D8               	btfss	status,0,c
   371  000106  EF87  F000         	goto	u311
   372  00010A  EF89  F000         	goto	u310
   373  00010E                     u311:
   374  00010E  EF97  F000         	goto	l1006
   375  000112                     u310:
   376  000112                     
   377                           ;Programa_principal.c: 71:                     dec = dec%10;
   378  000112  C01C  F004         	movff	_dec,___awmod@dividend
   379  000116  C01D  F005         	movff	_dec+1,___awmod@dividend+1
   380  00011A  0E00               	movlw	0
   381  00011C  6E07               	movwf	(___awmod@divisor+1)^0,c
   382  00011E  0E0A               	movlw	10
   383  000120  6E06               	movwf	___awmod@divisor^0,c
   384  000122  EC3D  F001         	call	___awmod	;wreg free
   385  000126  C004  F01C         	movff	?___awmod,_dec
   386  00012A  C005  F01D         	movff	?___awmod+1,_dec+1
   387  00012E                     l1006:
   388                           
   389                           ;Programa_principal.c: 73:                 LATAbits.LA1 = 1;
   390  00012E  8289               	bsf	137,1,c	;volatile
   391  000130                     
   392                           ;Programa_principal.c: 74:                 LATD = display[dec];
   393  000130  0E10               	movlw	low _display
   394  000132  241C               	addwf	_dec^0,w,c
   395  000134  6ED9               	movwf	fsr2l,c
   396  000136  0E00               	movlw	high _display
   397  000138  201D               	addwfc	(_dec+1)^0,w,c
   398  00013A  6EDA               	movwf	fsr2h,c
   399  00013C  50DF               	movf	indf2,w,c
   400  00013E  6E8C               	movwf	140,c	;volatile
   401  000140                     
   402                           ;Programa_principal.c: 75:                 _delay((unsigned long)((20)*(20000000UL/4000.
      +                          0)));
   403  000140  0E82               	movlw	130
   404  000142  6E0C               	movwf	??_main^0,c
   405  000144  0EDE               	movlw	222
   406  000146                     u357:
   407  000146  2EE8               	decfsz	wreg,f,c
   408  000148  D7FE               	bra	u357
   409  00014A  2E0C               	decfsz	??_main^0,f,c
   410  00014C  D7FC               	bra	u357
   411  00014E                     
   412                           ;Programa_principal.c: 76:                 LATAbits.LA1 = 0;
   413  00014E  9289               	bcf	137,1,c	;volatile
   414  000150                     
   415                           ;Programa_principal.c: 77:                 uni = i%10;
   416  000150  C00E  F004         	movff	main@i,___awmod@dividend
   417  000154  C00F  F005         	movff	main@i+1,___awmod@dividend+1
   418  000158  0E00               	movlw	0
   419  00015A  6E07               	movwf	(___awmod@divisor+1)^0,c
   420  00015C  0E0A               	movlw	10
   421  00015E  6E06               	movwf	___awmod@divisor^0,c
   422  000160  EC3D  F001         	call	___awmod	;wreg free
   423  000164  C004  F01E         	movff	?___awmod,_uni
   424  000168  C005  F01F         	movff	?___awmod+1,_uni+1
   425  00016C                     
   426                           ;Programa_principal.c: 78:                 LATAbits.LA2 = 1;
   427  00016C  8489               	bsf	137,2,c	;volatile
   428  00016E                     
   429                           ;Programa_principal.c: 79:                 LATD = display[uni];
   430  00016E  0E10               	movlw	low _display
   431  000170  241E               	addwf	_uni^0,w,c
   432  000172  6ED9               	movwf	fsr2l,c
   433  000174  0E00               	movlw	high _display
   434  000176  201F               	addwfc	(_uni+1)^0,w,c
   435  000178  6EDA               	movwf	fsr2h,c
   436  00017A  50DF               	movf	indf2,w,c
   437  00017C  6E8C               	movwf	140,c	;volatile
   438                           
   439                           ;Programa_principal.c: 80:                 _delay((unsigned long)((20)*(20000000UL/4000.
      +                          0)));
   440  00017E  0E82               	movlw	130
   441  000180  6E0C               	movwf	??_main^0,c
   442  000182  0EDE               	movlw	222
   443  000184                     u367:
   444  000184  2EE8               	decfsz	wreg,f,c
   445  000186  D7FE               	bra	u367
   446  000188  2E0C               	decfsz	??_main^0,f,c
   447  00018A  D7FC               	bra	u367
   448  00018C                     
   449                           ;Programa_principal.c: 81:                 LATAbits.LA2 = 0;
   450  00018C  9489               	bcf	137,2,c	;volatile
   451  00018E                     
   452                           ;Programa_principal.c: 82:             }
   453  00018E  4A0E               	infsnz	main@i^0,f,c
   454  000190  2A0F               	incf	(main@i+1)^0,f,c
   455  000192  BE0F               	btfsc	(main@i+1)^0,7,c
   456  000194  EFD5  F000         	goto	u321
   457  000198  0EE7               	movlw	231
   458  00019A  5C0E               	subwf	main@i^0,w,c
   459  00019C  0E03               	movlw	3
   460  00019E  580F               	subwfb	(main@i+1)^0,w,c
   461  0001A0  A0D8               	btfss	status,0,c
   462  0001A2  EFD5  F000         	goto	u321
   463  0001A6  EFD7  F000         	goto	u320
   464  0001AA                     u321:
   465  0001AA  EF4E  F000         	goto	l990
   466  0001AE                     u320:
   467  0001AE  EF2A  F000         	goto	l976
   468  0001B2  EF1E  F000         	goto	start
   469  0001B6                     __end_of_main:
   470                           	callstack 0
   471                           
   472 ;; *************** function ___awmod *****************
   473 ;; Defined at:
   474 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;  dividend        2    3[COMRAM] int 
   477 ;;  divisor         2    5[COMRAM] int 
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  sign            1    8[COMRAM] unsigned char 
   480 ;;  counter         1    7[COMRAM] unsigned char 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  2    3[COMRAM] int 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   490 ;;      Params:         4       0       0       0       0       0       0       0       0
   491 ;;      Locals:         2       0       0       0       0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0       0       0       0       0
   493 ;;      Totals:         6       0       0       0       0       0       0       0       0
   494 ;;Total ram usage:        6 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; Hardware stack levels required when called:    2
   497 ;; This function calls:
   498 ;;		Nothing
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text1
   505  00027A                     __ptext1:
   506                           	callstack 0
   507  00027A                     ___awmod:
   508                           	callstack 28
   509  00027A  0E00               	movlw	0
   510  00027C  6E09               	movwf	___awmod@sign^0,c
   511  00027E  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
   512  000280  EF46  F001         	goto	u230
   513  000284  EF44  F001         	goto	u231
   514  000288                     u231:
   515  000288  EF4C  F001         	goto	l936
   516  00028C                     u230:
   517  00028C  6C04               	negf	___awmod@dividend^0,c
   518  00028E  1E05               	comf	(___awmod@dividend+1)^0,f,c
   519  000290  B0D8               	btfsc	status,0,c
   520  000292  2A05               	incf	(___awmod@dividend+1)^0,f,c
   521  000294  0E01               	movlw	1
   522  000296  6E09               	movwf	___awmod@sign^0,c
   523  000298                     l936:
   524  000298  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
   525  00029A  EF53  F001         	goto	u240
   526  00029E  EF51  F001         	goto	u241
   527  0002A2                     u241:
   528  0002A2  EF57  F001         	goto	l940
   529  0002A6                     u240:
   530  0002A6  6C06               	negf	___awmod@divisor^0,c
   531  0002A8  1E07               	comf	(___awmod@divisor+1)^0,f,c
   532  0002AA  B0D8               	btfsc	status,0,c
   533  0002AC  2A07               	incf	(___awmod@divisor+1)^0,f,c
   534  0002AE                     l940:
   535  0002AE  5006               	movf	___awmod@divisor^0,w,c
   536  0002B0  1007               	iorwf	(___awmod@divisor+1)^0,w,c
   537  0002B2  B4D8               	btfsc	status,2,c
   538  0002B4  EF5E  F001         	goto	u251
   539  0002B8  EF60  F001         	goto	u250
   540  0002BC                     u251:
   541  0002BC  EF84  F001         	goto	l956
   542  0002C0                     u250:
   543  0002C0  0E01               	movlw	1
   544  0002C2  6E08               	movwf	___awmod@counter^0,c
   545  0002C4  EF68  F001         	goto	l946
   546  0002C8                     l944:
   547  0002C8  90D8               	bcf	status,0,c
   548  0002CA  3606               	rlcf	___awmod@divisor^0,f,c
   549  0002CC  3607               	rlcf	(___awmod@divisor+1)^0,f,c
   550  0002CE  2A08               	incf	___awmod@counter^0,f,c
   551  0002D0                     l946:
   552  0002D0  AE07               	btfss	(___awmod@divisor+1)^0,7,c
   553  0002D2  EF6D  F001         	goto	u261
   554  0002D6  EF6F  F001         	goto	u260
   555  0002DA                     u261:
   556  0002DA  EF64  F001         	goto	l944
   557  0002DE                     u260:
   558  0002DE                     l948:
   559  0002DE  5006               	movf	___awmod@divisor^0,w,c
   560  0002E0  5C04               	subwf	___awmod@dividend^0,w,c
   561  0002E2  5007               	movf	(___awmod@divisor+1)^0,w,c
   562  0002E4  5805               	subwfb	(___awmod@dividend+1)^0,w,c
   563  0002E6  A0D8               	btfss	status,0,c
   564  0002E8  EF78  F001         	goto	u271
   565  0002EC  EF7A  F001         	goto	u270
   566  0002F0                     u271:
   567  0002F0  EF7E  F001         	goto	l952
   568  0002F4                     u270:
   569  0002F4  5006               	movf	___awmod@divisor^0,w,c
   570  0002F6  5E04               	subwf	___awmod@dividend^0,f,c
   571  0002F8  5007               	movf	(___awmod@divisor+1)^0,w,c
   572  0002FA  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
   573  0002FC                     l952:
   574  0002FC  90D8               	bcf	status,0,c
   575  0002FE  3207               	rrcf	(___awmod@divisor+1)^0,f,c
   576  000300  3206               	rrcf	___awmod@divisor^0,f,c
   577  000302  2E08               	decfsz	___awmod@counter^0,f,c
   578  000304  EF6F  F001         	goto	l948
   579  000308                     l956:
   580  000308  5009               	movf	___awmod@sign^0,w,c
   581  00030A  B4D8               	btfsc	status,2,c
   582  00030C  EF8A  F001         	goto	u281
   583  000310  EF8C  F001         	goto	u280
   584  000314                     u281:
   585  000314  EF90  F001         	goto	l960
   586  000318                     u280:
   587  000318  6C04               	negf	___awmod@dividend^0,c
   588  00031A  1E05               	comf	(___awmod@dividend+1)^0,f,c
   589  00031C  B0D8               	btfsc	status,0,c
   590  00031E  2A05               	incf	(___awmod@dividend+1)^0,f,c
   591  000320                     l960:
   592  000320  C004  F004         	movff	___awmod@dividend,?___awmod
   593  000324  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
   594  000328  0012               	return		;funcret
   595  00032A                     __end_of___awmod:
   596                           	callstack 0
   597                           
   598 ;; *************** function ___awdiv *****************
   599 ;; Defined at:
   600 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;  dividend        2    3[COMRAM] int 
   603 ;;  divisor         2    5[COMRAM] int 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  quotient        2    9[COMRAM] int 
   606 ;;  sign            1    8[COMRAM] unsigned char 
   607 ;;  counter         1    7[COMRAM] unsigned char 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  2    3[COMRAM] int 
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   617 ;;      Params:         4       0       0       0       0       0       0       0       0
   618 ;;      Locals:         4       0       0       0       0       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0       0       0       0       0
   620 ;;      Totals:         8       0       0       0       0       0       0       0       0
   621 ;;Total ram usage:        8 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; Hardware stack levels required when called:    2
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text2
   632  0001B6                     __ptext2:
   633                           	callstack 0
   634  0001B6                     ___awdiv:
   635                           	callstack 28
   636  0001B6  0E00               	movlw	0
   637  0001B8  6E09               	movwf	___awdiv@sign^0,c
   638  0001BA  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
   639  0001BC  EFE4  F000         	goto	u170
   640  0001C0  EFE2  F000         	goto	u171
   641  0001C4                     u171:
   642  0001C4  EFEA  F000         	goto	l892
   643  0001C8                     u170:
   644  0001C8  6C06               	negf	___awdiv@divisor^0,c
   645  0001CA  1E07               	comf	(___awdiv@divisor+1)^0,f,c
   646  0001CC  B0D8               	btfsc	status,0,c
   647  0001CE  2A07               	incf	(___awdiv@divisor+1)^0,f,c
   648  0001D0  0E01               	movlw	1
   649  0001D2  6E09               	movwf	___awdiv@sign^0,c
   650  0001D4                     l892:
   651  0001D4  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
   652  0001D6  EFF1  F000         	goto	u180
   653  0001DA  EFEF  F000         	goto	u181
   654  0001DE                     u181:
   655  0001DE  EFF7  F000         	goto	l898
   656  0001E2                     u180:
   657  0001E2  6C04               	negf	___awdiv@dividend^0,c
   658  0001E4  1E05               	comf	(___awdiv@dividend+1)^0,f,c
   659  0001E6  B0D8               	btfsc	status,0,c
   660  0001E8  2A05               	incf	(___awdiv@dividend+1)^0,f,c
   661  0001EA  0E01               	movlw	1
   662  0001EC  1A09               	xorwf	___awdiv@sign^0,f,c
   663  0001EE                     l898:
   664  0001EE  0E00               	movlw	0
   665  0001F0  6E0B               	movwf	(___awdiv@quotient+1)^0,c
   666  0001F2  0E00               	movlw	0
   667  0001F4  6E0A               	movwf	___awdiv@quotient^0,c
   668  0001F6  5006               	movf	___awdiv@divisor^0,w,c
   669  0001F8  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
   670  0001FA  B4D8               	btfsc	status,2,c
   671  0001FC  EF02  F001         	goto	u191
   672  000200  EF04  F001         	goto	u190
   673  000204                     u191:
   674  000204  EF2C  F001         	goto	l920
   675  000208                     u190:
   676  000208  0E01               	movlw	1
   677  00020A  6E08               	movwf	___awdiv@counter^0,c
   678  00020C  EF0C  F001         	goto	l906
   679  000210                     l904:
   680  000210  90D8               	bcf	status,0,c
   681  000212  3606               	rlcf	___awdiv@divisor^0,f,c
   682  000214  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
   683  000216  2A08               	incf	___awdiv@counter^0,f,c
   684  000218                     l906:
   685  000218  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
   686  00021A  EF11  F001         	goto	u201
   687  00021E  EF13  F001         	goto	u200
   688  000222                     u201:
   689  000222  EF08  F001         	goto	l904
   690  000226                     u200:
   691  000226                     l908:
   692  000226  90D8               	bcf	status,0,c
   693  000228  360A               	rlcf	___awdiv@quotient^0,f,c
   694  00022A  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
   695  00022C  5006               	movf	___awdiv@divisor^0,w,c
   696  00022E  5C04               	subwf	___awdiv@dividend^0,w,c
   697  000230  5007               	movf	(___awdiv@divisor+1)^0,w,c
   698  000232  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
   699  000234  A0D8               	btfss	status,0,c
   700  000236  EF1F  F001         	goto	u211
   701  00023A  EF21  F001         	goto	u210
   702  00023E                     u211:
   703  00023E  EF26  F001         	goto	l916
   704  000242                     u210:
   705  000242  5006               	movf	___awdiv@divisor^0,w,c
   706  000244  5E04               	subwf	___awdiv@dividend^0,f,c
   707  000246  5007               	movf	(___awdiv@divisor+1)^0,w,c
   708  000248  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
   709  00024A  800A               	bsf	___awdiv@quotient^0,0,c
   710  00024C                     l916:
   711  00024C  90D8               	bcf	status,0,c
   712  00024E  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
   713  000250  3206               	rrcf	___awdiv@divisor^0,f,c
   714  000252  2E08               	decfsz	___awdiv@counter^0,f,c
   715  000254  EF13  F001         	goto	l908
   716  000258                     l920:
   717  000258  5009               	movf	___awdiv@sign^0,w,c
   718  00025A  B4D8               	btfsc	status,2,c
   719  00025C  EF32  F001         	goto	u221
   720  000260  EF34  F001         	goto	u220
   721  000264                     u221:
   722  000264  EF38  F001         	goto	l924
   723  000268                     u220:
   724  000268  6C0A               	negf	___awdiv@quotient^0,c
   725  00026A  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
   726  00026C  B0D8               	btfsc	status,0,c
   727  00026E  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
   728  000270                     l924:
   729  000270  C00A  F004         	movff	___awdiv@quotient,?___awdiv
   730  000274  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
   731  000278  0012               	return		;funcret
   732  00027A                     __end_of___awdiv:
   733                           	callstack 0
   734                           
   735 ;; *************** function _Int_Init *****************
   736 ;; Defined at:
   737 ;;		line 8 in file "Interrupcion.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		None
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   751 ;;      Params:         0       0       0       0       0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0       0       0       0       0
   754 ;;      Totals:         0       0       0       0       0       0       0       0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    2
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text3
   766  000360                     __ptext3:
   767                           	callstack 0
   768  000360                     _Int_Init:
   769                           	callstack 28
   770  000360                     
   771                           ;Interrupcion.c: 9:     TRISBbits.RB0 = 1;
   772  000360  8093               	bsf	147,0,c	;volatile
   773                           
   774                           ;Interrupcion.c: 10:     TRISBbits.RB1 = 1;
   775  000362  8293               	bsf	147,1,c	;volatile
   776                           
   777                           ;Interrupcion.c: 11:     INTCONbits.INT0IE = 1;
   778  000364  88F2               	bsf	242,4,c	;volatile
   779                           
   780                           ;Interrupcion.c: 12:     INTCON3bits.INT1E = 1;
   781  000366  86F0               	bsf	240,3,c	;volatile
   782                           
   783                           ;Interrupcion.c: 13:     INTCONbits.INT0IF = 0;
   784  000368  92F2               	bcf	242,1,c	;volatile
   785                           
   786                           ;Interrupcion.c: 14:     INTCON3bits.INT1F = 0;
   787  00036A  90F0               	bcf	240,0,c	;volatile
   788                           
   789                           ;Interrupcion.c: 15:     INTCON2bits.INTEDG0 = 0;
   790  00036C  9CF1               	bcf	241,6,c	;volatile
   791                           
   792                           ;Interrupcion.c: 16:     INTCON2bits.INTEDG1 = 0;
   793  00036E  9AF1               	bcf	241,5,c	;volatile
   794                           
   795                           ;Interrupcion.c: 17:     RCONbits.IPEN = 1;
   796  000370  8ED0               	bsf	208,7,c	;volatile
   797                           
   798                           ;Interrupcion.c: 18:     INTCON3bits.INT1P = 0;
   799  000372  9CF0               	bcf	240,6,c	;volatile
   800                           
   801                           ;Interrupcion.c: 19:     INTCONbits.GIEL = 1;
   802  000374  8CF2               	bsf	242,6,c	;volatile
   803                           
   804                           ;Interrupcion.c: 20:     INTCONbits.GIEH = 1;
   805  000376  8EF2               	bsf	242,7,c	;volatile
   806  000378  0012               	return		;funcret
   807  00037A                     __end_of_Int_Init:
   808                           	callstack 0
   809                           
   810 ;; *************** function _INT1_ISR *****************
   811 ;; Defined at:
   812 ;;		line 30 in file "Interrupcion.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   826 ;;      Params:         0       0       0       0       0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0       0       0       0       0
   828 ;;      Temps:          3       0       0       0       0       0       0       0       0
   829 ;;      Totals:         3       0       0       0       0       0       0       0       0
   830 ;;Total ram usage:        3 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    1
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		Interrupt level 1
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	intcodelo
   841  000018                     __pintcodelo:
   842                           	callstack 0
   843  000018                     _INT1_ISR:
   844                           	callstack 28
   845                           
   846                           ;incstack = 0
   847  000018  8021               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   848  00001A  CFD8 F001          	movff	status,??_INT1_ISR
   849  00001E  CFE8 F002          	movff	wreg,??_INT1_ISR+1
   850  000022  CFE0 F003          	movff	bsr,??_INT1_ISR+2
   851  000026                     
   852                           ;Interrupcion.c: 31:     x = 2;
   853  000026  0E02               	movlw	2
   854  000028  6E20               	movwf	_x^0,c
   855  00002A                     
   856                           ;Interrupcion.c: 33:     INTCON3bits.INT1F = 0;
   857  00002A  90F0               	bcf	240,0,c	;volatile
   858  00002C  C003  FFE0         	movff	??_INT1_ISR+2,bsr
   859  000030  C002  FFE8         	movff	??_INT1_ISR+1,wreg
   860  000034  C001  FFD8         	movff	??_INT1_ISR,status
   861  000038  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   862  00003A  0010               	retfie	
   863  00003C                     __end_of_INT1_ISR:
   864                           	callstack 0
   865                           
   866 ;; *************** function _INT0_ISR *****************
   867 ;; Defined at:
   868 ;;		line 24 in file "Interrupcion.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, status,2
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   882 ;;      Params:         0       0       0       0       0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0       0       0       0       0
   884 ;;      Temps:          0       0       0       0       0       0       0       0       0
   885 ;;      Totals:         0       0       0       0       0       0       0       0       0
   886 ;;Total ram usage:        0 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		Interrupt level 2
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	intcode
   896  000008                     __pintcode:
   897                           	callstack 0
   898  000008                     _INT0_ISR:
   899                           	callstack 28
   900                           
   901                           ;incstack = 0
   902  000008  8221               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   903  00000A  EDBD  F001         	call	int_func,f	;refresh shadow registers
   904                           
   905                           	psect	intcode_body
   906  00037A                     __pintcode_body:
   907                           	callstack 28
   908  00037A                     int_func:
   909                           	callstack 28
   910  00037A  0006               	pop		; remove dummy address from shadow register refresh
   911  00037C                     
   912                           ;Interrupcion.c: 25:     x = 1;
   913  00037C  0E01               	movlw	1
   914  00037E  6E20               	movwf	_x^0,c
   915  000380                     
   916                           ;Interrupcion.c: 27:     INTCONbits.INT0IF = 0;
   917  000380  92F2               	bcf	242,1,c	;volatile
   918  000382  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   919  000384  0011               	retfie		f
   920  000386                     __end_of_INT0_ISR:
   921                           	callstack 0
   922  0000                     
   923                           	psect	rparam
   924  0000                     
   925                           	psect	temp
   926  000021                     btemp:
   927                           	callstack 0
   928  000021                     	ds	1
   929  0000                     int$flags	set	btemp
   930  0000                     wtemp8	set	btemp+1
   931  0000                     ttemp5	set	btemp+1
   932  0000                     ttemp6	set	btemp+4
   933  0000                     ttemp7	set	btemp+8
   934                           
   935                           	psect	idloc
   936                           
   937                           ;Config register IDLOC0 @ 0x200000
   938                           ;	unspecified, using default values
   939  200000                     	org	2097152
   940  200000  FF                 	db	255
   941                           
   942                           ;Config register IDLOC1 @ 0x200001
   943                           ;	unspecified, using default values
   944  200001                     	org	2097153
   945  200001  FF                 	db	255
   946                           
   947                           ;Config register IDLOC2 @ 0x200002
   948                           ;	unspecified, using default values
   949  200002                     	org	2097154
   950  200002  FF                 	db	255
   951                           
   952                           ;Config register IDLOC3 @ 0x200003
   953                           ;	unspecified, using default values
   954  200003                     	org	2097155
   955  200003  FF                 	db	255
   956                           
   957                           ;Config register IDLOC4 @ 0x200004
   958                           ;	unspecified, using default values
   959  200004                     	org	2097156
   960  200004  FF                 	db	255
   961                           
   962                           ;Config register IDLOC5 @ 0x200005
   963                           ;	unspecified, using default values
   964  200005                     	org	2097157
   965  200005  FF                 	db	255
   966                           
   967                           ;Config register IDLOC6 @ 0x200006
   968                           ;	unspecified, using default values
   969  200006                     	org	2097158
   970  200006  FF                 	db	255
   971                           
   972                           ;Config register IDLOC7 @ 0x200007
   973                           ;	unspecified, using default values
   974  200007                     	org	2097159
   975  200007  FF                 	db	255
   976                           
   977                           	psect	config
   978                           
   979                           ;Config register CONFIG1L @ 0x300000
   980                           ;	PLL Prescaler Selection bits
   981                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   982                           ;	System Clock Postscaler Selection bits
   983                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   984                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   985                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   986  300000                     	org	3145728
   987  300000  00                 	db	0
   988                           
   989                           ;Config register CONFIG1H @ 0x300001
   990                           ;	Oscillator Selection bits
   991                           ;	FOSC = HS, HS oscillator (HS)
   992                           ;	Fail-Safe Clock Monitor Enable bit
   993                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   994                           ;	Internal/External Oscillator Switchover bit
   995                           ;	IESO = OFF, Oscillator Switchover mode disabled
   996  300001                     	org	3145729
   997  300001  0C                 	db	12
   998                           
   999                           ;Config register CONFIG2L @ 0x300002
  1000                           ;	Power-up Timer Enable bit
  1001                           ;	PWRT = ON, PWRT enabled
  1002                           ;	Brown-out Reset Enable bits
  1003                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1004                           ;	Brown-out Reset Voltage bits
  1005                           ;	BORV = 3, Minimum setting 2.05V
  1006                           ;	USB Voltage Regulator Enable bit
  1007                           ;	VREGEN = OFF, USB voltage regulator disabled
  1008  300002                     	org	3145730
  1009  300002  18                 	db	24
  1010                           
  1011                           ;Config register CONFIG2H @ 0x300003
  1012                           ;	Watchdog Timer Enable bit
  1013                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1014                           ;	Watchdog Timer Postscale Select bits
  1015                           ;	WDTPS = 32768, 1:32768
  1016  300003                     	org	3145731
  1017  300003  1E                 	db	30
  1018                           
  1019                           ; Padding undefined space
  1020  300004                     	org	3145732
  1021  300004  FF                 	db	255
  1022                           
  1023                           ;Config register CONFIG3H @ 0x300005
  1024                           ;	CCP2 MUX bit
  1025                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1026                           ;	PORTB A/D Enable bit
  1027                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1028                           ;	Low-Power Timer 1 Oscillator Enable bit
  1029                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1030                           ;	MCLR Pin Enable bit
  1031                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1032  300005                     	org	3145733
  1033  300005  81                 	db	129
  1034                           
  1035                           ;Config register CONFIG4L @ 0x300006
  1036                           ;	Stack Full/Underflow Reset Enable bit
  1037                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1038                           ;	Single-Supply ICSP Enable bit
  1039                           ;	LVP = ON, Single-Supply ICSP enabled
  1040                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1041                           ;	ICPRT = OFF, ICPORT disabled
  1042                           ;	Extended Instruction Set Enable bit
  1043                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1044                           ;	Background Debugger Enable bit
  1045                           ;	DEBUG = 0x1, unprogrammed default
  1046  300006                     	org	3145734
  1047  300006  84                 	db	132
  1048                           
  1049                           ; Padding undefined space
  1050  300007                     	org	3145735
  1051  300007  FF                 	db	255
  1052                           
  1053                           ;Config register CONFIG5L @ 0x300008
  1054                           ;	Code Protection bit
  1055                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1056                           ;	Code Protection bit
  1057                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1058                           ;	Code Protection bit
  1059                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1060                           ;	Code Protection bit
  1061                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1062  300008                     	org	3145736
  1063  300008  0F                 	db	15
  1064                           
  1065                           ;Config register CONFIG5H @ 0x300009
  1066                           ;	Boot Block Code Protection bit
  1067                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1068                           ;	Data EEPROM Code Protection bit
  1069                           ;	CPD = OFF, Data EEPROM is not code-protected
  1070  300009                     	org	3145737
  1071  300009  C0                 	db	192
  1072                           
  1073                           ;Config register CONFIG6L @ 0x30000A
  1074                           ;	Write Protection bit
  1075                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1076                           ;	Write Protection bit
  1077                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1078                           ;	Write Protection bit
  1079                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1080                           ;	Write Protection bit
  1081                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1082  30000A                     	org	3145738
  1083  30000A  0F                 	db	15
  1084                           
  1085                           ;Config register CONFIG6H @ 0x30000B
  1086                           ;	Configuration Register Write Protection bit
  1087                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1088                           ;	Boot Block Write Protection bit
  1089                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1090                           ;	Data EEPROM Write Protection bit
  1091                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1092  30000B                     	org	3145739
  1093  30000B  E0                 	db	224
  1094                           
  1095                           ;Config register CONFIG7L @ 0x30000C
  1096                           ;	Table Read Protection bit
  1097                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1098                           ;	Table Read Protection bit
  1099                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1100                           ;	Table Read Protection bit
  1101                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1102                           ;	Table Read Protection bit
  1103                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1104  30000C                     	org	3145740
  1105  30000C  0F                 	db	15
  1106                           
  1107                           ;Config register CONFIG7H @ 0x30000D
  1108                           ;	Boot Block Table Read Protection bit
  1109                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1110  30000D                     	org	3145741
  1111  30000D  40                 	db	64
  1112                           tosu	equ	0xFFF
  1113                           tosh	equ	0xFFE
  1114                           tosl	equ	0xFFD
  1115                           stkptr	equ	0xFFC
  1116                           pclatu	equ	0xFFB
  1117                           pclath	equ	0xFFA
  1118                           pcl	equ	0xFF9
  1119                           tblptru	equ	0xFF8
  1120                           tblptrh	equ	0xFF7
  1121                           tblptrl	equ	0xFF6
  1122                           tablat	equ	0xFF5
  1123                           prodh	equ	0xFF4
  1124                           prodl	equ	0xFF3
  1125                           indf0	equ	0xFEF
  1126                           postinc0	equ	0xFEE
  1127                           postdec0	equ	0xFED
  1128                           preinc0	equ	0xFEC
  1129                           plusw0	equ	0xFEB
  1130                           fsr0h	equ	0xFEA
  1131                           fsr0l	equ	0xFE9
  1132                           wreg	equ	0xFE8
  1133                           indf1	equ	0xFE7
  1134                           postinc1	equ	0xFE6
  1135                           postdec1	equ	0xFE5
  1136                           preinc1	equ	0xFE4
  1137                           plusw1	equ	0xFE3
  1138                           fsr1h	equ	0xFE2
  1139                           fsr1l	equ	0xFE1
  1140                           bsr	equ	0xFE0
  1141                           indf2	equ	0xFDF
  1142                           postinc2	equ	0xFDE
  1143                           postdec2	equ	0xFDD
  1144                           preinc2	equ	0xFDC
  1145                           plusw2	equ	0xFDB
  1146                           fsr2h	equ	0xFDA
  1147                           fsr2l	equ	0xFD9
  1148                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1316
                                             11 COMRAM     4     4      0
                           _Int_Init
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     604
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Int_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT1_ISR                                             3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Int_Init
   ___awdiv
   ___awmod

 _INT1_ISR (ROOT)

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      20       1       34.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      20        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Feb 02 21:28:35 2021

                      _x 0020                       l50 0378             ___awdiv@sign 0009  
                     bsr 000FE0                      l307 0328                      l294 0278  
                    l900 01F6                      l910 022C                      l902 0208  
                    l912 0242                      l904 0210                      l920 0258  
                    l922 0268                      l914 024A                      l906 0218  
                    l930 027E                      l924 0270                      l916 024C  
                    l908 0226                      l940 02AE                      l932 028C  
                    l918 0252                      l950 02F4                      l942 02C0  
                    l934 0294                      l960 0320                      l952 02FC  
                    l944 02C8                      l936 0298                      l928 027A  
                    l882 0360                      l890 01D0                      l954 0302  
                    l946 02D0                      l938 02A6                      l970 004C  
                    l892 01D4                      l884 01B6                      l948 02DE  
                    l956 0308                      l980 006C                      l972 0050  
                    l964 0040                      l894 01E2                      l886 01BA  
                    l958 0318                      l990 009C                      l982 0082  
                    l974 0052                      l966 0044                      l896 01EA  
                    l888 01C8                      l992 00B8                      l984 0094  
                    l976 0054                      l968 0048                      l898 01EE  
                    l994 00BA                      l978 0064                      l996 00CA  
                    l998 00D8                      u200 0226                      u201 0222  
                    u210 0242                      u211 023E                      u220 0268  
                    u300 0094                      u221 0264                      u301 0090  
                    u230 028C                      u310 0112                      u231 0288  
                    u311 010E                      u240 02A6                      u320 01AE  
                    u241 02A2                      u321 01AA                      u170 01C8  
                    u250 02C0                      u171 01C4                      u251 02BC  
                    u180 01E2                      u260 02DE                      u181 01DE  
                    u261 02DA                      u190 0208                      u270 02F4  
                    u191 0204                      u271 02F0                      u280 0318  
                    u281 0314                      u337 0076                      u290 0064  
                    u347 00D0                      u291 0060                      u357 0146  
                    u367 0184                      _dec 001C                      _cen 001A  
                    _uni 001E             ___awmod@sign 0009                      wreg 000FE8  
                   l1000 00DA                     l1010 0140                     l1002 00F6  
                   l1020 018C                     l1012 014E                     l1004 0112  
                   l1022 018E                     l1014 0150                     l1006 012E  
                   l1016 016C                     l1008 0130                     l1018 016E  
                   _LATD 000F8C                     i1l60 002C                     i2l55 0382  
                   _main 0040                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0021                     start 003C  
           ___param_bank 000000         __end_of_INT0_ISR 0386         __end_of_INT1_ISR 003C  
                  ?_main 0001          __end_of___awdiv 027A          __end_of___awmod 032A  
        ___awdiv@divisor 0006          ___awdiv@counter 0008                    _TRISA 000F92  
                  _TRISD 000F95                    main@i 000E                    tablat 000FF5  
                  ttemp5 0022                    ttemp6 0025                    ttemp7 0029  
                  status 000FD8                    wtemp8 0022          __initialization 032A  
           __end_of_main 01B6         __end_of_Int_Init 037A                   ??_main 000C  
          __activetblptr 000000         ___awdiv@dividend 0004                   i1l1030 002A  
                 i1l1028 0026                   i2l1024 037C                   i2l1026 0380  
              ??___awdiv 0008                ??___awmod 0008                   clear_0 0350  
       ___awdiv@quotient 000A          ___awmod@divisor 0006          ___awmod@counter 0008  
           __pdataCOMRAM 0010                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0356  
              ?_INT0_ISR 0001                ?_INT1_ISR 0001            ___rparam_used 000001  
         __pcstackCOMRAM 0001                ?_Int_Init 0001               ??_INT0_ISR 0001  
             ??_INT1_ISR 0001               ??_Int_Init 0004                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 01B6                  ___awmod 027A  
                __pcinit 032A                  __ramtop 0800                  __ptext0 0040  
                __ptext1 027A                  __ptext2 01B6                  __ptext3 0360  
                _display 0010         ___awmod@dividend 0004           __pintcode_body 037A  
   end_of_initialization 0356                  int_func 037A                  postdec1 000FE5  
                postinc0 000FEE                _TRISBbits 000F93        __size_of_INT0_ISR 037E  
      __size_of_INT1_ISR 0024            __pidataCOMRAM 0386      start_initialization 032A  
      __size_of_Int_Init 001A              __pbssCOMRAM 001A                __pintcode 0008  
               ?___awdiv 0004                 ?___awmod 0004              __pintcodelo 0018  
               _INT0_ISR 0008                 _INT1_ISR 0018                 _LATAbits 000F89  
               _RCONbits 000FD0              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
              copy_data0 033E                 _Int_Init 0360                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 00C4         __size_of___awmod 00B0  
          __size_of_main 0176                 int$flags 0021               _INTCONbits 000FF2  
               intlevel1 0000                 intlevel2 0000  
