

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Feb 09 19:57:40 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _IPR1bits	set	3999
    61  0000                     _PIR1bits	set	3998
    62  0000                     _PIE1bits	set	3997
    63  0000                     _T1CON	set	4045
    64  0000                     _TMR1L	set	4046
    65  0000                     _TMR1H	set	4047
    66  0000                     _LATD	set	3980
    67  0000                     _TRISD	set	3989
    68  0000                     _TMR0L	set	4054
    69  0000                     _LATDbits	set	3980
    70  0000                     _T0CONbits	set	4053
    71  0000                     _RCONbits	set	4048
    72  0000                     _INTCON2bits	set	4081
    73  0000                     _INTCONbits	set	4082
    74  0000                     _TRISBbits	set	3987
    75                           
    76                           	psect	smallconst
    77  000800                     __psmallconst:
    78                           	callstack 0
    79  000800  00                 	db	0
    80  000801                     STR_2:
    81  000801  52                 	db	82	;'R'
    82  000802  6F                 	db	111	;'o'
    83  000803  6E                 	db	110	;'n'
    84  000804  61                 	db	97	;'a'
    85  000805  6C                 	db	108	;'l'
    86  000806  64                 	db	100	;'d'
    87  000807  20                 	db	32
    88  000808  72                 	db	114	;'r'
    89  000809  61                 	db	97	;'a'
    90  00080A  7A                 	db	122	;'z'
    91  00080B  6F                 	db	111	;'o'
    92  00080C  6E                 	db	110	;'n'
    93  00080D  00                 	db	0
    94  00080E                     STR_1:
    95  00080E  48                 	db	72	;'H'
    96  00080F  4F                 	db	79	;'O'
    97  000810  4C                 	db	76	;'L'
    98  000811  41                 	db	65	;'A'
    99  000812  20                 	db	32
   100  000813  3A                 	db	58	;':'
   101  000814  44                 	db	68	;'D'
   102  000815  00                 	db	0
   103  000816  00                 	db	0	; dummy byte at the end
   104  0000                     
   105                           ; #config settings
   106                           
   107                           	psect	cinit
   108  000AAE                     __pcinit:
   109                           	callstack 0
   110  000AAE                     start_initialization:
   111                           	callstack 0
   112  000AAE                     __initialization:
   113                           	callstack 0
   114                           
   115                           ; Clear objects allocated to COMRAM (2 bytes)
   116  000AAE  6A0E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   117  000AB0  6A0D               	clrf	__pbssCOMRAM& (0+255),c
   118  000AB2                     end_of_initialization:
   119                           	callstack 0
   120  000AB2                     __end_of__initialization:
   121                           	callstack 0
   122  000AB2  900F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   123  000AB4  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   124  000AB6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   125  000AB8  6EF8               	movwf	tblptru,c
   126  000ABA  0E08               	movlw	high __Lsmallconst
   127  000ABC  6EF7               	movwf	tblptrh,c
   128  000ABE  0100               	movlb	0
   129  000AC0  EF0C  F004         	goto	_main	;jump to C main() function
   130                           
   131                           	psect	bssCOMRAM
   132  00000D                     __pbssCOMRAM:
   133                           	callstack 0
   134  00000D                     _i:
   135                           	callstack 0
   136  00000D                     	ds	1
   137  00000E                     _x:
   138                           	callstack 0
   139  00000E                     	ds	1
   140                           
   141                           	psect	cstackCOMRAM
   142  000001                     __pcstackCOMRAM:
   143                           	callstack 0
   144  000001                     ??_TMR0_ISR:
   145  000001                     
   146                           ; 1 bytes @ 0x0
   147  000001                     	ds	4
   148  000005                     ??_LCD_Comando:
   149  000005                     ??_LCD_Caracter:
   150                           
   151                           ; 1 bytes @ 0x4
   152  000005                     	ds	1
   153  000006                     LCD_Comando@cmd:
   154                           	callstack 0
   155  000006                     LCD_Caracter@data:
   156                           	callstack 0
   157                           
   158                           ; 1 bytes @ 0x5
   159  000006                     	ds	1
   160  000007                     ??_LCD_Init:
   161  000007                     LCD_XY@x:
   162                           	callstack 0
   163  000007                     LCD_Cadena@dat:
   164                           	callstack 0
   165                           
   166                           ; 2 bytes @ 0x6
   167  000007                     	ds	2
   168  000009                     LCD_XY@y:
   169                           	callstack 0
   170                           
   171                           ; 2 bytes @ 0x8
   172  000009                     	ds	2
   173  00000B                     ??_main:
   174                           
   175                           ; 1 bytes @ 0xA
   176  00000B                     	ds	2
   177                           
   178 ;;
   179 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   180 ;;
   181 ;; *************** function _main *****************
   182 ;; Defined at:
   183 ;;		line 17 in file "Programa_principal.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;		None
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   197 ;;      Params:         0       0       0       0       0       0       0       0       0
   198 ;;      Locals:         0       0       0       0       0       0       0       0       0
   199 ;;      Temps:          2       0       0       0       0       0       0       0       0
   200 ;;      Totals:         2       0       0       0       0       0       0       0       0
   201 ;;Total ram usage:        2 bytes
   202 ;; Hardware stack levels required when called:    4
   203 ;; This function calls:
   204 ;;		_Int_Init
   205 ;;		_LCD_Cadena
   206 ;;		_LCD_Comando
   207 ;;		_LCD_Init
   208 ;;		_LCD_XY
   209 ;;		_Timer0_Init
   210 ;; This function is called by:
   211 ;;		Startup code after reset
   212 ;; This function uses a non-reentrant model
   213 ;;
   214                           
   215                           	psect	text0
   216  000818                     __ptext0:
   217                           	callstack 0
   218  000818                     _main:
   219                           	callstack 27
   220  000818                     
   221                           ;Programa_principal.c: 18:     LCD_Init();
   222  000818  ECD5  F004         	call	_LCD_Init	;wreg free
   223  00081C                     
   224                           ;Programa_principal.c: 19:     Int_Init();
   225  00081C  EC62  F005         	call	_Int_Init	;wreg free
   226  000820                     
   227                           ;Programa_principal.c: 20:     Timer0_Init();
   228  000820  EC4B  F005         	call	_Timer0_Init	;wreg free
   229  000824                     l971:
   230                           
   231                           ;Programa_principal.c: 22:         if(x == 1){
   232  000824  040E               	decf	_x^0,w,c
   233  000826  A4D8               	btfss	status,2,c
   234  000828  EF18  F004         	goto	u121
   235  00082C  EF1A  F004         	goto	u120
   236  000830                     u121:
   237  000830  EF38  F004         	goto	l981
   238  000834                     u120:
   239  000834                     
   240                           ;Programa_principal.c: 23:             LCD_XY(0,0);
   241  000834  0E00               	movlw	0
   242  000836  6E08               	movwf	(LCD_XY@x+1)^0,c
   243  000838  0E00               	movlw	0
   244  00083A  6E07               	movwf	LCD_XY@x^0,c
   245  00083C  0E00               	movlw	0
   246  00083E  6E0A               	movwf	(LCD_XY@y+1)^0,c
   247  000840  0E00               	movlw	0
   248  000842  6E09               	movwf	LCD_XY@y^0,c
   249  000844  EC37  F005         	call	_LCD_XY	;wreg free
   250  000848                     
   251                           ;Programa_principal.c: 24:             LCD_Cadena("HOLA :D");
   252  000848  0E0E               	movlw	low STR_1
   253  00084A  6E07               	movwf	LCD_Cadena@dat^0,c
   254  00084C  0E08               	movlw	high STR_1
   255  00084E  6E08               	movwf	(LCD_Cadena@dat+1)^0,c
   256  000850  EC1C  F005         	call	_LCD_Cadena	;wreg free
   257  000854                     
   258                           ;Programa_principal.c: 25:             _delay((unsigned long)((500)*(20000000UL/4000.0))
      +                          );
   259  000854  0E0D               	movlw	13
   260  000856  6E0C               	movwf	(??_main+1)^0,c
   261  000858  0EAF               	movlw	175
   262  00085A  6E0B               	movwf	??_main^0,c
   263  00085C  0EB6               	movlw	182
   264  00085E                     u157:
   265  00085E  2EE8               	decfsz	wreg,f,c
   266  000860  D7FE               	bra	u157
   267  000862  2E0B               	decfsz	??_main^0,f,c
   268  000864  D7FC               	bra	u157
   269  000866  2E0C               	decfsz	(??_main+1)^0,f,c
   270  000868  D7FA               	bra	u157
   271  00086A  D000               	nop2	
   272  00086C                     
   273                           ;Programa_principal.c: 26:             x = 2;
   274  00086C  0E02               	movlw	2
   275  00086E  6E0E               	movwf	_x^0,c
   276  000870                     l981:
   277                           
   278                           ;Programa_principal.c: 28:         if(x == 2){
   279  000870  0E02               	movlw	2
   280  000872  180E               	xorwf	_x^0,w,c
   281  000874  A4D8               	btfss	status,2,c
   282  000876  EF3F  F004         	goto	u131
   283  00087A  EF41  F004         	goto	u130
   284  00087E                     u131:
   285  00087E  EF51  F004         	goto	l987
   286  000882                     u130:
   287  000882                     
   288                           ;Programa_principal.c: 29:             LCD_XY(0,0);
   289  000882  0E00               	movlw	0
   290  000884  6E08               	movwf	(LCD_XY@x+1)^0,c
   291  000886  0E00               	movlw	0
   292  000888  6E07               	movwf	LCD_XY@x^0,c
   293  00088A  0E00               	movlw	0
   294  00088C  6E0A               	movwf	(LCD_XY@y+1)^0,c
   295  00088E  0E00               	movlw	0
   296  000890  6E09               	movwf	LCD_XY@y^0,c
   297  000892  EC37  F005         	call	_LCD_XY	;wreg free
   298  000896                     
   299                           ;Programa_principal.c: 30:             LCD_Cadena("Ronald razon");
   300  000896  0E01               	movlw	low STR_2
   301  000898  6E07               	movwf	LCD_Cadena@dat^0,c
   302  00089A  0E08               	movlw	high STR_2
   303  00089C  6E08               	movwf	(LCD_Cadena@dat+1)^0,c
   304  00089E  EC1C  F005         	call	_LCD_Cadena	;wreg free
   305  0008A2                     l987:
   306                           
   307                           ;Programa_principal.c: 32:         if(x == 3){
   308  0008A2  0E03               	movlw	3
   309  0008A4  180E               	xorwf	_x^0,w,c
   310  0008A6  A4D8               	btfss	status,2,c
   311  0008A8  EF58  F004         	goto	u141
   312  0008AC  EF5A  F004         	goto	u140
   313  0008B0                     u141:
   314  0008B0  EF12  F004         	goto	l971
   315  0008B4                     u140:
   316  0008B4                     
   317                           ;Programa_principal.c: 33:             x = 0;
   318  0008B4  0E00               	movlw	0
   319  0008B6  6E0E               	movwf	_x^0,c
   320  0008B8                     
   321                           ;Programa_principal.c: 34:             LCD_Comando(0x01);
   322  0008B8  0E01               	movlw	1
   323  0008BA  EC63  F004         	call	_LCD_Comando
   324  0008BE  EF12  F004         	goto	l971
   325  0008C2  EF3A  F000         	goto	start
   326  0008C6                     __end_of_main:
   327                           	callstack 0
   328                           
   329 ;; *************** function _Timer0_Init *****************
   330 ;; Defined at:
   331 ;;		line 5 in file "Timer_Libreria.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, status,2
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   345 ;;      Params:         0       0       0       0       0       0       0       0       0
   346 ;;      Locals:         0       0       0       0       0       0       0       0       0
   347 ;;      Temps:          0       0       0       0       0       0       0       0       0
   348 ;;      Totals:         0       0       0       0       0       0       0       0       0
   349 ;;Total ram usage:        0 bytes
   350 ;; Hardware stack levels used:    1
   351 ;; Hardware stack levels required when called:    2
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text1
   360  000A96                     __ptext1:
   361                           	callstack 0
   362  000A96                     _Timer0_Init:
   363                           	callstack 28
   364  000A96                     
   365                           ;Timer_Libreria.c: 6:     T0CONbits.T0CS = 0;
   366  000A96  9AD5               	bcf	213,5,c	;volatile
   367                           
   368                           ;Timer_Libreria.c: 7:     T0CONbits.PSA = 0;
   369  000A98  96D5               	bcf	213,3,c	;volatile
   370  000A9A                     
   371                           ;Timer_Libreria.c: 8:     T0CONbits.T0PS = 0b111;
   372  000A9A  0E07               	movlw	7
   373  000A9C  12D5               	iorwf	213,f,c	;volatile
   374  000A9E                     
   375                           ;Timer_Libreria.c: 9:     T0CONbits.T08BIT = 1;
   376  000A9E  8CD5               	bsf	213,6,c	;volatile
   377  000AA0                     
   378                           ;Timer_Libreria.c: 10:     T0CONbits.TMR0ON = 0;
   379  000AA0  9ED5               	bcf	213,7,c	;volatile
   380                           
   381                           ;Timer_Libreria.c: 12:     TMR0L = 60;
   382  000AA2  0E3C               	movlw	60
   383  000AA4  6ED6               	movwf	214,c	;volatile
   384  000AA6                     
   385                           ;Timer_Libreria.c: 13:     INTCONbits.TMR0IE = 1;
   386  000AA6  8AF2               	bsf	242,5,c	;volatile
   387  000AA8                     
   388                           ;Timer_Libreria.c: 14:     INTCONbits.TMR0IF = 0;
   389  000AA8  94F2               	bcf	242,2,c	;volatile
   390  000AAA                     
   391                           ;Timer_Libreria.c: 15:     INTCON2bits.TMR0IP = 0;
   392  000AAA  94F1               	bcf	241,2,c	;volatile
   393  000AAC  0012               	return		;funcret
   394  000AAE                     __end_of_Timer0_Init:
   395                           	callstack 0
   396                           
   397 ;; *************** function _LCD_XY *****************
   398 ;; Defined at:
   399 ;;		line 63 in file "LCD_Libreria.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;  x               2    6[COMRAM] int 
   402 ;;  y               2    8[COMRAM] int 
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, status,2, status,0, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   414 ;;      Params:         4       0       0       0       0       0       0       0       0
   415 ;;      Locals:         0       0       0       0       0       0       0       0       0
   416 ;;      Temps:          0       0       0       0       0       0       0       0       0
   417 ;;      Totals:         4       0       0       0       0       0       0       0       0
   418 ;;Total ram usage:        4 bytes
   419 ;; Hardware stack levels used:    1
   420 ;; Hardware stack levels required when called:    3
   421 ;; This function calls:
   422 ;;		_LCD_Comando
   423 ;; This function is called by:
   424 ;;		_main
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text2
   429  000A6E                     __ptext2:
   430                           	callstack 0
   431  000A6E                     _LCD_XY:
   432                           	callstack 27
   433  000A6E                     
   434                           ;LCD_Libreria.c: 64:     if(x == 1){
   435  000A6E  0407               	decf	LCD_XY@x^0,w,c
   436  000A70  1008               	iorwf	(LCD_XY@x+1)^0,w,c
   437  000A72  A4D8               	btfss	status,2,c
   438  000A74  EF3E  F005         	goto	u101
   439  000A78  EF40  F005         	goto	u100
   440  000A7C                     u101:
   441  000A7C  EF46  F005         	goto	l955
   442  000A80                     u100:
   443  000A80                     
   444                           ;LCD_Libreria.c: 65:         LCD_Comando(0xC0+y);
   445  000A80  5009               	movf	LCD_XY@y^0,w,c
   446  000A82  0FC0               	addlw	192
   447  000A84  EC63  F004         	call	_LCD_Comando
   448                           
   449                           ;LCD_Libreria.c: 66:     }
   450  000A88  EF4A  F005         	goto	l55
   451  000A8C                     l955:
   452                           
   453                           ;LCD_Libreria.c: 68:         LCD_Comando(0x80+y);
   454  000A8C  5009               	movf	LCD_XY@y^0,w,c
   455  000A8E  0F80               	addlw	128
   456  000A90  EC63  F004         	call	_LCD_Comando
   457  000A94                     l55:
   458  000A94  0012               	return		;funcret
   459  000A96                     __end_of_LCD_XY:
   460                           	callstack 0
   461                           
   462 ;; *************** function _LCD_Init *****************
   463 ;; Defined at:
   464 ;;		line 6 in file "LCD_Libreria.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg, status,2, status,0, cstack
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   478 ;;      Params:         0       0       0       0       0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0       0       0       0       0
   480 ;;      Temps:          1       0       0       0       0       0       0       0       0
   481 ;;      Totals:         1       0       0       0       0       0       0       0       0
   482 ;;Total ram usage:        1 bytes
   483 ;; Hardware stack levels used:    1
   484 ;; Hardware stack levels required when called:    3
   485 ;; This function calls:
   486 ;;		_LCD_Comando
   487 ;; This function is called by:
   488 ;;		_main
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text3
   493  0009AA                     __ptext3:
   494                           	callstack 0
   495  0009AA                     _LCD_Init:
   496                           	callstack 27
   497  0009AA                     
   498                           ;LCD_Libreria.c: 7:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
   499  0009AA  0E62               	movlw	98
   500  0009AC  6E07               	movwf	??_LCD_Init^0,c
   501  0009AE  0E66               	movlw	102
   502  0009B0                     u167:
   503  0009B0  2EE8               	decfsz	wreg,f,c
   504  0009B2  D7FE               	bra	u167
   505  0009B4  2E07               	decfsz	??_LCD_Init^0,f,c
   506  0009B6  D7FC               	bra	u167
   507  0009B8                     
   508                           ;LCD_Libreria.c: 8:     TRISD = 0x00;
   509  0009B8  0E00               	movlw	0
   510  0009BA  6E95               	movwf	149,c	;volatile
   511  0009BC                     
   512                           ;LCD_Libreria.c: 9:     LCD_Comando(0x30);
   513  0009BC  0E30               	movlw	48
   514  0009BE  EC63  F004         	call	_LCD_Comando
   515  0009C2                     
   516                           ;LCD_Libreria.c: 10:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   517  0009C2  0E21               	movlw	33
   518  0009C4  6E07               	movwf	??_LCD_Init^0,c
   519  0009C6  0E76               	movlw	118
   520  0009C8                     u177:
   521  0009C8  2EE8               	decfsz	wreg,f,c
   522  0009CA  D7FE               	bra	u177
   523  0009CC  2E07               	decfsz	??_LCD_Init^0,f,c
   524  0009CE  D7FC               	bra	u177
   525  0009D0  D000               	nop2	
   526  0009D2                     
   527                           ;LCD_Libreria.c: 11:     LCD_Comando(0x30);
   528  0009D2  0E30               	movlw	48
   529  0009D4  EC63  F004         	call	_LCD_Comando
   530  0009D8                     
   531                           ;LCD_Libreria.c: 12:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
   532  0009D8  0EA6               	movlw	166
   533  0009DA                     u187:
   534  0009DA  2EE8               	decfsz	wreg,f,c
   535  0009DC  D7FE               	bra	u187
   536  0009DE  D000               	nop2	
   537  0009E0                     
   538                           ;LCD_Libreria.c: 13:     LCD_Comando(0x32);
   539  0009E0  0E32               	movlw	50
   540  0009E2  EC63  F004         	call	_LCD_Comando
   541  0009E6                     
   542                           ;LCD_Libreria.c: 14:     LCD_Comando(0x28);
   543  0009E6  0E28               	movlw	40
   544  0009E8  EC63  F004         	call	_LCD_Comando
   545  0009EC                     
   546                           ;LCD_Libreria.c: 15:     LCD_Comando(0x0C);
   547  0009EC  0E0C               	movlw	12
   548  0009EE  EC63  F004         	call	_LCD_Comando
   549  0009F2                     
   550                           ;LCD_Libreria.c: 16:     LCD_Comando(0x01);
   551  0009F2  0E01               	movlw	1
   552  0009F4  EC63  F004         	call	_LCD_Comando
   553  0009F8                     
   554                           ;LCD_Libreria.c: 17:     LCD_Comando(0x06);
   555  0009F8  0E06               	movlw	6
   556  0009FA  EC63  F004         	call	_LCD_Comando
   557  0009FE  0012               	return		;funcret
   558  000A00                     __end_of_LCD_Init:
   559                           	callstack 0
   560                           
   561 ;; *************** function _LCD_Comando *****************
   562 ;; Defined at:
   563 ;;		line 20 in file "LCD_Libreria.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;  cmd             1    wreg     unsigned char 
   566 ;; Auto vars:     Size  Location     Type
   567 ;;  cmd             1    5[COMRAM] unsigned char 
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, status,2, status,0
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   577 ;;      Params:         0       0       0       0       0       0       0       0       0
   578 ;;      Locals:         1       0       0       0       0       0       0       0       0
   579 ;;      Temps:          1       0       0       0       0       0       0       0       0
   580 ;;      Totals:         2       0       0       0       0       0       0       0       0
   581 ;;Total ram usage:        2 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:    2
   584 ;; This function calls:
   585 ;;		Nothing
   586 ;; This function is called by:
   587 ;;		_LCD_Init
   588 ;;		_LCD_XY
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text4
   594  0008C6                     __ptext4:
   595                           	callstack 0
   596  0008C6                     _LCD_Comando:
   597                           	callstack 27
   598                           
   599                           ;incstack = 0
   600                           ;LCD_Comando@cmd stored from wreg
   601  0008C6  6E06               	movwf	LCD_Comando@cmd^0,c
   602  0008C8                     
   603                           ;LCD_Libreria.c: 22:     LATD = (LATD&0X0F) | (cmd&0xF0);
   604  0008C8  C006  F005         	movff	LCD_Comando@cmd,??_LCD_Comando
   605  0008CC  0EF0               	movlw	240
   606  0008CE  1605               	andwf	??_LCD_Comando^0,f,c
   607  0008D0  508C               	movf	140,w,c	;volatile
   608  0008D2  0B0F               	andlw	15
   609  0008D4  1005               	iorwf	??_LCD_Comando^0,w,c
   610  0008D6  6E8C               	movwf	140,c	;volatile
   611  0008D8                     
   612                           ;LCD_Libreria.c: 39:     LATDbits.LATD2 = 0;
   613  0008D8  948C               	bcf	140,2,c	;volatile
   614  0008DA                     
   615                           ;LCD_Libreria.c: 40:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   616  0008DA  0E07               	movlw	7
   617  0008DC  6E05               	movwf	??_LCD_Comando^0,c
   618  0008DE  0E7D               	movlw	125
   619  0008E0                     u197:
   620  0008E0  2EE8               	decfsz	wreg,f,c
   621  0008E2  D7FE               	bra	u197
   622  0008E4  2E05               	decfsz	??_LCD_Comando^0,f,c
   623  0008E6  D7FC               	bra	u197
   624  0008E8  F000               	nop	
   625  0008EA                     
   626                           ;LCD_Libreria.c: 41:     LATDbits.LATD3 = 1;
   627  0008EA  868C               	bsf	140,3,c	;volatile
   628  0008EC                     
   629                           ;LCD_Libreria.c: 42:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   630  0008EC  0E07               	movlw	7
   631  0008EE  6E05               	movwf	??_LCD_Comando^0,c
   632  0008F0  0E7D               	movlw	125
   633  0008F2                     u207:
   634  0008F2  2EE8               	decfsz	wreg,f,c
   635  0008F4  D7FE               	bra	u207
   636  0008F6  2E05               	decfsz	??_LCD_Comando^0,f,c
   637  0008F8  D7FC               	bra	u207
   638  0008FA  F000               	nop	
   639  0008FC                     
   640                           ;LCD_Libreria.c: 43:     LATDbits.LATD3 = 0;
   641  0008FC  968C               	bcf	140,3,c	;volatile
   642                           
   643                           ;LCD_Libreria.c: 45:     LATD &= 0X0F;
   644  0008FE  0E0F               	movlw	15
   645  000900  168C               	andwf	140,f,c	;volatile
   646                           
   647                           ;LCD_Libreria.c: 46:     LATD |= ((cmd&0x0F)<<4);
   648  000902  C006  F005         	movff	LCD_Comando@cmd,??_LCD_Comando
   649  000906  0E0F               	movlw	15
   650  000908  1605               	andwf	??_LCD_Comando^0,f,c
   651  00090A  3805               	swapf	??_LCD_Comando^0,w,c
   652  00090C  0BF0               	andlw	240
   653  00090E  128C               	iorwf	140,f,c	;volatile
   654  000910                     
   655                           ;LCD_Libreria.c: 56:     LATDbits.LATD2 = 0;
   656  000910  948C               	bcf	140,2,c	;volatile
   657  000912                     
   658                           ;LCD_Libreria.c: 57:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   659  000912  0E07               	movlw	7
   660  000914  6E05               	movwf	??_LCD_Comando^0,c
   661  000916  0E7D               	movlw	125
   662  000918                     u217:
   663  000918  2EE8               	decfsz	wreg,f,c
   664  00091A  D7FE               	bra	u217
   665  00091C  2E05               	decfsz	??_LCD_Comando^0,f,c
   666  00091E  D7FC               	bra	u217
   667  000920  F000               	nop	
   668  000922                     
   669                           ;LCD_Libreria.c: 58:     LATDbits.LATD3 = 1;
   670  000922  868C               	bsf	140,3,c	;volatile
   671  000924                     
   672                           ;LCD_Libreria.c: 59:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   673  000924  0E07               	movlw	7
   674  000926  6E05               	movwf	??_LCD_Comando^0,c
   675  000928  0E7D               	movlw	125
   676  00092A                     u227:
   677  00092A  2EE8               	decfsz	wreg,f,c
   678  00092C  D7FE               	bra	u227
   679  00092E  2E05               	decfsz	??_LCD_Comando^0,f,c
   680  000930  D7FC               	bra	u227
   681  000932  F000               	nop	
   682  000934                     
   683                           ;LCD_Libreria.c: 60:     LATDbits.LATD3 = 0;
   684  000934  968C               	bcf	140,3,c	;volatile
   685  000936  0012               	return		;funcret
   686  000938                     __end_of_LCD_Comando:
   687                           	callstack 0
   688                           
   689 ;; *************** function _LCD_Cadena *****************
   690 ;; Defined at:
   691 ;;		line 92 in file "LCD_Libreria.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;  dat             2    6[COMRAM] PTR unsigned char 
   694 ;;		 -> STR_2(13), STR_1(8), 
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   706 ;;      Params:         2       0       0       0       0       0       0       0       0
   707 ;;      Locals:         0       0       0       0       0       0       0       0       0
   708 ;;      Temps:          0       0       0       0       0       0       0       0       0
   709 ;;      Totals:         2       0       0       0       0       0       0       0       0
   710 ;;Total ram usage:        2 bytes
   711 ;; Hardware stack levels used:    1
   712 ;; Hardware stack levels required when called:    3
   713 ;; This function calls:
   714 ;;		_LCD_Caracter
   715 ;; This function is called by:
   716 ;;		_main
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text5
   721  000A38                     __ptext5:
   722                           	callstack 0
   723  000A38                     _LCD_Cadena:
   724                           	callstack 27
   725  000A38                     
   726                           ;LCD_Libreria.c: 95:     while(*dat != '\0'){
   727  000A38  EF28  F005         	goto	l963
   728  000A3C                     l959:
   729                           
   730                           ;LCD_Libreria.c: 96:         LCD_Caracter(*dat);
   731  000A3C  C007  FFF6         	movff	LCD_Cadena@dat,tblptrl
   732  000A40  C008  FFF7         	movff	LCD_Cadena@dat+1,tblptrh
   733  000A44                     	if	0	;tblptru may be non-zero
   734  000A44                     	endif
   735  000A44                     	if	0	;tblptru may be non-zero
   736  000A44                     	endif
   737  000A44  0008               	tblrd		*
   738  000A46  50F5               	movf	tablat,w,c
   739  000A48  EC9C  F004         	call	_LCD_Caracter
   740  000A4C                     
   741                           ;LCD_Libreria.c: 97:         dat++;
   742  000A4C  4A07               	infsnz	LCD_Cadena@dat^0,f,c
   743  000A4E  2A08               	incf	(LCD_Cadena@dat+1)^0,f,c
   744  000A50                     l963:
   745                           
   746                           ;LCD_Libreria.c: 95:     while(*dat != '\0'){
   747  000A50  C007  FFF6         	movff	LCD_Cadena@dat,tblptrl
   748  000A54  C008  FFF7         	movff	LCD_Cadena@dat+1,tblptrh
   749  000A58                     	if	0	;tblptru may be non-zero
   750  000A58                     	endif
   751  000A58                     	if	0	;tblptru may be non-zero
   752  000A58                     	endif
   753  000A58  0008               	tblrd		*
   754  000A5A  50F5               	movf	tablat,w,c
   755  000A5C  0900               	iorlw	0
   756  000A5E  A4D8               	btfss	status,2,c
   757  000A60  EF34  F005         	goto	u111
   758  000A64  EF36  F005         	goto	u110
   759  000A68                     u111:
   760  000A68  EF1E  F005         	goto	l959
   761  000A6C                     u110:
   762  000A6C  0012               	return		;funcret
   763  000A6E                     __end_of_LCD_Cadena:
   764                           	callstack 0
   765                           
   766 ;; *************** function _LCD_Caracter *****************
   767 ;; Defined at:
   768 ;;		line 72 in file "LCD_Libreria.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  data            1    wreg     unsigned char 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  data            1    5[COMRAM] unsigned char 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, status,2, status,0
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   782 ;;      Params:         0       0       0       0       0       0       0       0       0
   783 ;;      Locals:         1       0       0       0       0       0       0       0       0
   784 ;;      Temps:          1       0       0       0       0       0       0       0       0
   785 ;;      Totals:         2       0       0       0       0       0       0       0       0
   786 ;;Total ram usage:        2 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    2
   789 ;; This function calls:
   790 ;;		Nothing
   791 ;; This function is called by:
   792 ;;		_LCD_Cadena
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text6
   797  000938                     __ptext6:
   798                           	callstack 0
   799  000938                     _LCD_Caracter:
   800                           	callstack 27
   801                           
   802                           ;incstack = 0
   803                           ;LCD_Caracter@data stored from wreg
   804  000938  6E06               	movwf	LCD_Caracter@data^0,c
   805  00093A                     
   806                           ;LCD_Libreria.c: 73:     LATD = (LATD&0X0F) | (data&0xF0);
   807  00093A  C006  F005         	movff	LCD_Caracter@data,??_LCD_Caracter
   808  00093E  0EF0               	movlw	240
   809  000940  1605               	andwf	??_LCD_Caracter^0,f,c
   810  000942  508C               	movf	140,w,c	;volatile
   811  000944  0B0F               	andlw	15
   812  000946  1005               	iorwf	??_LCD_Caracter^0,w,c
   813  000948  6E8C               	movwf	140,c	;volatile
   814  00094A                     
   815                           ;LCD_Libreria.c: 75:     LATDbits.LATD2 = 1;
   816  00094A  848C               	bsf	140,2,c	;volatile
   817  00094C                     
   818                           ;LCD_Libreria.c: 76:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   819  00094C  0E07               	movlw	7
   820  00094E  6E05               	movwf	??_LCD_Caracter^0,c
   821  000950  0E7D               	movlw	125
   822  000952                     u237:
   823  000952  2EE8               	decfsz	wreg,f,c
   824  000954  D7FE               	bra	u237
   825  000956  2E05               	decfsz	??_LCD_Caracter^0,f,c
   826  000958  D7FC               	bra	u237
   827  00095A  F000               	nop	
   828  00095C                     
   829                           ;LCD_Libreria.c: 77:     LATDbits.LATD3 = 1;
   830  00095C  868C               	bsf	140,3,c	;volatile
   831  00095E                     
   832                           ;LCD_Libreria.c: 78:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   833  00095E  0E07               	movlw	7
   834  000960  6E05               	movwf	??_LCD_Caracter^0,c
   835  000962  0E7D               	movlw	125
   836  000964                     u247:
   837  000964  2EE8               	decfsz	wreg,f,c
   838  000966  D7FE               	bra	u247
   839  000968  2E05               	decfsz	??_LCD_Caracter^0,f,c
   840  00096A  D7FC               	bra	u247
   841  00096C  F000               	nop	
   842  00096E                     
   843                           ;LCD_Libreria.c: 79:     LATDbits.LATD3 = 0;
   844  00096E  968C               	bcf	140,3,c	;volatile
   845                           
   846                           ;LCD_Libreria.c: 81:     LATD &= 0X0F;
   847  000970  0E0F               	movlw	15
   848  000972  168C               	andwf	140,f,c	;volatile
   849                           
   850                           ;LCD_Libreria.c: 82:     LATD |= ((data&0x0F)<<4);
   851  000974  C006  F005         	movff	LCD_Caracter@data,??_LCD_Caracter
   852  000978  0E0F               	movlw	15
   853  00097A  1605               	andwf	??_LCD_Caracter^0,f,c
   854  00097C  3805               	swapf	??_LCD_Caracter^0,w,c
   855  00097E  0BF0               	andlw	240
   856  000980  128C               	iorwf	140,f,c	;volatile
   857  000982                     
   858                           ;LCD_Libreria.c: 84:     LATDbits.LATD2 = 1;
   859  000982  848C               	bsf	140,2,c	;volatile
   860  000984                     
   861                           ;LCD_Libreria.c: 85:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   862  000984  0E07               	movlw	7
   863  000986  6E05               	movwf	??_LCD_Caracter^0,c
   864  000988  0E7D               	movlw	125
   865  00098A                     u257:
   866  00098A  2EE8               	decfsz	wreg,f,c
   867  00098C  D7FE               	bra	u257
   868  00098E  2E05               	decfsz	??_LCD_Caracter^0,f,c
   869  000990  D7FC               	bra	u257
   870  000992  F000               	nop	
   871  000994                     
   872                           ;LCD_Libreria.c: 86:     LATDbits.LATD3 = 1;
   873  000994  868C               	bsf	140,3,c	;volatile
   874  000996                     
   875                           ;LCD_Libreria.c: 87:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   876  000996  0E07               	movlw	7
   877  000998  6E05               	movwf	??_LCD_Caracter^0,c
   878  00099A  0E7D               	movlw	125
   879  00099C                     u267:
   880  00099C  2EE8               	decfsz	wreg,f,c
   881  00099E  D7FE               	bra	u267
   882  0009A0  2E05               	decfsz	??_LCD_Caracter^0,f,c
   883  0009A2  D7FC               	bra	u267
   884  0009A4  F000               	nop	
   885  0009A6                     
   886                           ;LCD_Libreria.c: 88:     LATDbits.LATD3 = 0;
   887  0009A6  968C               	bcf	140,3,c	;volatile
   888  0009A8  0012               	return		;funcret
   889  0009AA                     __end_of_LCD_Caracter:
   890                           	callstack 0
   891                           
   892 ;; *************** function _Int_Init *****************
   893 ;; Defined at:
   894 ;;		line 10 in file "Interrupcion.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		None
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   908 ;;      Params:         0       0       0       0       0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0       0       0       0       0
   911 ;;      Totals:         0       0       0       0       0       0       0       0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    2
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text7
   923  000AC4                     __ptext7:
   924                           	callstack 0
   925  000AC4                     _Int_Init:
   926                           	callstack 28
   927  000AC4                     
   928                           ;Interrupcion.c: 11:     TRISBbits.RB0 = 1;
   929  000AC4  8093               	bsf	147,0,c	;volatile
   930                           
   931                           ;Interrupcion.c: 13:     INTCONbits.INT0IE = 1;
   932  000AC6  88F2               	bsf	242,4,c	;volatile
   933                           
   934                           ;Interrupcion.c: 15:     INTCONbits.INT0IF = 0;
   935  000AC8  92F2               	bcf	242,1,c	;volatile
   936                           
   937                           ;Interrupcion.c: 17:     INTCON2bits.INTEDG0 = 0;
   938  000ACA  9CF1               	bcf	241,6,c	;volatile
   939                           
   940                           ;Interrupcion.c: 19:     RCONbits.IPEN = 1;
   941  000ACC  8ED0               	bsf	208,7,c	;volatile
   942                           
   943                           ;Interrupcion.c: 21:     INTCONbits.GIEL = 1;
   944  000ACE  8CF2               	bsf	242,6,c	;volatile
   945                           
   946                           ;Interrupcion.c: 22:     INTCONbits.GIEH = 1;
   947  000AD0  8EF2               	bsf	242,7,c	;volatile
   948  000AD2  0012               	return		;funcret
   949  000AD4                     __end_of_Int_Init:
   950                           	callstack 0
   951                           
   952 ;; *************** function _TMR0_ISR *****************
   953 ;; Defined at:
   954 ;;		line 39 in file "Interrupcion.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;		None
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, status,2, status,0
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   968 ;;      Params:         0       0       0       0       0       0       0       0       0
   969 ;;      Locals:         0       0       0       0       0       0       0       0       0
   970 ;;      Temps:          4       0       0       0       0       0       0       0       0
   971 ;;      Totals:         4       0       0       0       0       0       0       0       0
   972 ;;Total ram usage:        4 bytes
   973 ;; Hardware stack levels used:    1
   974 ;; Hardware stack levels required when called:    1
   975 ;; This function calls:
   976 ;;		Nothing
   977 ;; This function is called by:
   978 ;;		Interrupt level 1
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	intcodelo
   983  000018                     __pintcodelo:
   984                           	callstack 0
   985  000018                     _TMR0_ISR:
   986                           	callstack 27
   987                           
   988                           ;incstack = 0
   989  000018  800F               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   990  00001A  CFD8 F002          	movff	status,??_TMR0_ISR+1
   991  00001E  CFE8 F003          	movff	wreg,??_TMR0_ISR+2
   992  000022  CFE0 F004          	movff	bsr,??_TMR0_ISR+3
   993  000026                     
   994                           ;Interrupcion.c: 40:     TMR0L = 60;
   995  000026  0E3C               	movlw	60
   996  000028  6ED6               	movwf	214,c	;volatile
   997  00002A                     
   998                           ;Interrupcion.c: 41:     if(i == 10){
   999  00002A  0E0A               	movlw	10
  1000  00002C  180D               	xorwf	_i^0,w,c
  1001  00002E  A4D8               	btfss	status,2,c
  1002  000030  EF1C  F000         	goto	i1u5_21
  1003  000034  EF1E  F000         	goto	i1u5_20
  1004  000038                     i1u5_21:
  1005  000038  EF30  F000         	goto	i1l911
  1006  00003C                     i1u5_20:
  1007  00003C                     
  1008                           ;Interrupcion.c: 42:         LATDbits.LATD0 = ~LATDbits.LATD0;
  1009  00003C  B08C               	btfsc	140,0,c	;volatile
  1010  00003E  EF23  F000         	goto	i1u6_21
  1011  000042  EF26  F000         	goto	i1u6_20
  1012  000046                     i1u6_21:
  1013  000046  0E01               	movlw	1
  1014  000048  EF27  F000         	goto	i1u6_26
  1015  00004C                     i1u6_20:
  1016  00004C  0E00               	movlw	0
  1017  00004E                     i1u6_26:
  1018  00004E  0AFF               	xorlw	255
  1019  000050  6E01               	movwf	??_TMR0_ISR^0,c
  1020  000052  508C               	movf	140,w,c	;volatile
  1021  000054  1801               	xorwf	??_TMR0_ISR^0,w,c
  1022  000056  0BFE               	andlw	-2
  1023  000058  1801               	xorwf	??_TMR0_ISR^0,w,c
  1024  00005A  6E8C               	movwf	140,c	;volatile
  1025  00005C                     
  1026                           ;Interrupcion.c: 43:         i =0;
  1027  00005C  0E00               	movlw	0
  1028  00005E  6E0D               	movwf	_i^0,c
  1029  000060                     i1l911:
  1030                           
  1031                           ;Interrupcion.c: 45:     i++;
  1032  000060  2A0D               	incf	_i^0,f,c
  1033  000062                     
  1034                           ;Interrupcion.c: 46:     INTCONbits.TMR0IF = 0;
  1035  000062  94F2               	bcf	242,2,c	;volatile
  1036  000064  C004  FFE0         	movff	??_TMR0_ISR+3,bsr
  1037  000068  C003  FFE8         	movff	??_TMR0_ISR+2,wreg
  1038  00006C  C002  FFD8         	movff	??_TMR0_ISR+1,status
  1039  000070  900F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1040  000072  0010               	retfie	
  1041  000074                     __end_of_TMR0_ISR:
  1042                           	callstack 0
  1043                           
  1044 ;; *************** function _INT0_ISR *****************
  1045 ;; Defined at:
  1046 ;;		line 26 in file "Interrupcion.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1060 ;;      Params:         0       0       0       0       0       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1063 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1064 ;;Total ram usage:        0 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		Interrupt level 2
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	intcode
  1074  000008                     __pintcode:
  1075                           	callstack 0
  1076  000008                     _INT0_ISR:
  1077                           	callstack 27
  1078                           
  1079                           ;incstack = 0
  1080  000008  820F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1081  00000A  ED00  F005         	call	int_func,f	;refresh shadow registers
  1082                           
  1083                           	psect	intcode_body
  1084  000A00                     __pintcode_body:
  1085                           	callstack 27
  1086  000A00                     int_func:
  1087                           	callstack 27
  1088  000A00  0006               	pop		; remove dummy address from shadow register refresh
  1089  000A02                     
  1090                           ;Interrupcion.c: 27:     if(x == 2){
  1091  000A02  0E02               	movlw	2
  1092  000A04  180E               	xorwf	_x^0,w,c
  1093  000A06  A4D8               	btfss	status,2,c
  1094  000A08  EF08  F005         	goto	i2u3_41
  1095  000A0C  EF0A  F005         	goto	i2u3_40
  1096  000A10                     i2u3_41:
  1097  000A10  EF0E  F005         	goto	i2l26
  1098  000A14                     i2u3_40:
  1099  000A14                     
  1100                           ;Interrupcion.c: 28:         x = 3;
  1101  000A14  0E03               	movlw	3
  1102  000A16  6E0E               	movwf	_x^0,c
  1103  000A18                     
  1104                           ;Interrupcion.c: 29:         T0CONbits.TMR0ON = 0;
  1105  000A18  9ED5               	bcf	213,7,c	;volatile
  1106  000A1A                     
  1107                           ;Interrupcion.c: 30:         LATDbits.LATD0 = 0;
  1108  000A1A  908C               	bcf	140,0,c	;volatile
  1109  000A1C                     i2l26:
  1110                           
  1111                           ;Interrupcion.c: 32:     if(x == 0){
  1112  000A1C  500E               	movf	_x^0,w,c
  1113  000A1E  A4D8               	btfss	status,2,c
  1114  000A20  EF14  F005         	goto	i2u4_41
  1115  000A24  EF16  F005         	goto	i2u4_40
  1116  000A28                     i2u4_41:
  1117  000A28  EF19  F005         	goto	i2l901
  1118  000A2C                     i2u4_40:
  1119  000A2C                     
  1120                           ;Interrupcion.c: 33:         T0CONbits.TMR0ON = 1;
  1121  000A2C  8ED5               	bsf	213,7,c	;volatile
  1122  000A2E                     
  1123                           ;Interrupcion.c: 34:         x = 1;
  1124  000A2E  0E01               	movlw	1
  1125  000A30  6E0E               	movwf	_x^0,c
  1126  000A32                     i2l901:
  1127                           
  1128                           ;Interrupcion.c: 36:     INTCONbits.INT0IF = 0;
  1129  000A32  92F2               	bcf	242,1,c	;volatile
  1130  000A34  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1131  000A36  0011               	retfie		f
  1132  000A38                     __end_of_INT0_ISR:
  1133                           	callstack 0
  1134                           
  1135                           	psect	rparam
  1136  0000                     
  1137                           	psect	temp
  1138  00000F                     btemp:
  1139                           	callstack 0
  1140  00000F                     	ds	1
  1141  0000                     int$flags	set	btemp
  1142  0000                     wtemp8	set	btemp+1
  1143  0000                     ttemp5	set	btemp+1
  1144  0000                     ttemp6	set	btemp+4
  1145  0000                     ttemp7	set	btemp+8
  1146                           
  1147                           	psect	idloc
  1148                           
  1149                           ;Config register IDLOC0 @ 0x200000
  1150                           ;	unspecified, using default values
  1151  200000                     	org	2097152
  1152  200000  FF                 	db	255
  1153                           
  1154                           ;Config register IDLOC1 @ 0x200001
  1155                           ;	unspecified, using default values
  1156  200001                     	org	2097153
  1157  200001  FF                 	db	255
  1158                           
  1159                           ;Config register IDLOC2 @ 0x200002
  1160                           ;	unspecified, using default values
  1161  200002                     	org	2097154
  1162  200002  FF                 	db	255
  1163                           
  1164                           ;Config register IDLOC3 @ 0x200003
  1165                           ;	unspecified, using default values
  1166  200003                     	org	2097155
  1167  200003  FF                 	db	255
  1168                           
  1169                           ;Config register IDLOC4 @ 0x200004
  1170                           ;	unspecified, using default values
  1171  200004                     	org	2097156
  1172  200004  FF                 	db	255
  1173                           
  1174                           ;Config register IDLOC5 @ 0x200005
  1175                           ;	unspecified, using default values
  1176  200005                     	org	2097157
  1177  200005  FF                 	db	255
  1178                           
  1179                           ;Config register IDLOC6 @ 0x200006
  1180                           ;	unspecified, using default values
  1181  200006                     	org	2097158
  1182  200006  FF                 	db	255
  1183                           
  1184                           ;Config register IDLOC7 @ 0x200007
  1185                           ;	unspecified, using default values
  1186  200007                     	org	2097159
  1187  200007  FF                 	db	255
  1188                           
  1189                           	psect	config
  1190                           
  1191                           ;Config register CONFIG1L @ 0x300000
  1192                           ;	PLL Prescaler Selection bits
  1193                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1194                           ;	System Clock Postscaler Selection bits
  1195                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1196                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1197                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1198  300000                     	org	3145728
  1199  300000  00                 	db	0
  1200                           
  1201                           ;Config register CONFIG1H @ 0x300001
  1202                           ;	Oscillator Selection bits
  1203                           ;	FOSC = HS, HS oscillator (HS)
  1204                           ;	Fail-Safe Clock Monitor Enable bit
  1205                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1206                           ;	Internal/External Oscillator Switchover bit
  1207                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1208  300001                     	org	3145729
  1209  300001  0C                 	db	12
  1210                           
  1211                           ;Config register CONFIG2L @ 0x300002
  1212                           ;	Power-up Timer Enable bit
  1213                           ;	PWRT = ON, PWRT enabled
  1214                           ;	Brown-out Reset Enable bits
  1215                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1216                           ;	Brown-out Reset Voltage bits
  1217                           ;	BORV = 3, Minimum setting 2.05V
  1218                           ;	USB Voltage Regulator Enable bit
  1219                           ;	VREGEN = OFF, USB voltage regulator disabled
  1220  300002                     	org	3145730
  1221  300002  18                 	db	24
  1222                           
  1223                           ;Config register CONFIG2H @ 0x300003
  1224                           ;	Watchdog Timer Enable bit
  1225                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1226                           ;	Watchdog Timer Postscale Select bits
  1227                           ;	WDTPS = 32768, 1:32768
  1228  300003                     	org	3145731
  1229  300003  1E                 	db	30
  1230                           
  1231                           ; Padding undefined space
  1232  300004                     	org	3145732
  1233  300004  FF                 	db	255
  1234                           
  1235                           ;Config register CONFIG3H @ 0x300005
  1236                           ;	CCP2 MUX bit
  1237                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1238                           ;	PORTB A/D Enable bit
  1239                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1240                           ;	Low-Power Timer 1 Oscillator Enable bit
  1241                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1242                           ;	MCLR Pin Enable bit
  1243                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1244  300005                     	org	3145733
  1245  300005  81                 	db	129
  1246                           
  1247                           ;Config register CONFIG4L @ 0x300006
  1248                           ;	Stack Full/Underflow Reset Enable bit
  1249                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1250                           ;	Single-Supply ICSP Enable bit
  1251                           ;	LVP = ON, Single-Supply ICSP enabled
  1252                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1253                           ;	ICPRT = OFF, ICPORT disabled
  1254                           ;	Extended Instruction Set Enable bit
  1255                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1256                           ;	Background Debugger Enable bit
  1257                           ;	DEBUG = 0x1, unprogrammed default
  1258  300006                     	org	3145734
  1259  300006  84                 	db	132
  1260                           
  1261                           ; Padding undefined space
  1262  300007                     	org	3145735
  1263  300007  FF                 	db	255
  1264                           
  1265                           ;Config register CONFIG5L @ 0x300008
  1266                           ;	Code Protection bit
  1267                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1268                           ;	Code Protection bit
  1269                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1270                           ;	Code Protection bit
  1271                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1272                           ;	Code Protection bit
  1273                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1274  300008                     	org	3145736
  1275  300008  0F                 	db	15
  1276                           
  1277                           ;Config register CONFIG5H @ 0x300009
  1278                           ;	Boot Block Code Protection bit
  1279                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1280                           ;	Data EEPROM Code Protection bit
  1281                           ;	CPD = OFF, Data EEPROM is not code-protected
  1282  300009                     	org	3145737
  1283  300009  C0                 	db	192
  1284                           
  1285                           ;Config register CONFIG6L @ 0x30000A
  1286                           ;	Write Protection bit
  1287                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1288                           ;	Write Protection bit
  1289                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1290                           ;	Write Protection bit
  1291                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1292                           ;	Write Protection bit
  1293                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1294  30000A                     	org	3145738
  1295  30000A  0F                 	db	15
  1296                           
  1297                           ;Config register CONFIG6H @ 0x30000B
  1298                           ;	Configuration Register Write Protection bit
  1299                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1300                           ;	Boot Block Write Protection bit
  1301                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1302                           ;	Data EEPROM Write Protection bit
  1303                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1304  30000B                     	org	3145739
  1305  30000B  E0                 	db	224
  1306                           
  1307                           ;Config register CONFIG7L @ 0x30000C
  1308                           ;	Table Read Protection bit
  1309                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1310                           ;	Table Read Protection bit
  1311                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1312                           ;	Table Read Protection bit
  1313                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1314                           ;	Table Read Protection bit
  1315                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1316  30000C                     	org	3145740
  1317  30000C  0F                 	db	15
  1318                           
  1319                           ;Config register CONFIG7H @ 0x30000D
  1320                           ;	Boot Block Table Read Protection bit
  1321                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1322  30000D                     	org	3145741
  1323  30000D  40                 	db	64
  1324                           tosu	equ	0xFFF
  1325                           tosh	equ	0xFFE
  1326                           tosl	equ	0xFFD
  1327                           stkptr	equ	0xFFC
  1328                           pclatu	equ	0xFFB
  1329                           pclath	equ	0xFFA
  1330                           pcl	equ	0xFF9
  1331                           tblptru	equ	0xFF8
  1332                           tblptrh	equ	0xFF7
  1333                           tblptrl	equ	0xFF6
  1334                           tablat	equ	0xFF5
  1335                           prodh	equ	0xFF4
  1336                           prodl	equ	0xFF3
  1337                           indf0	equ	0xFEF
  1338                           postinc0	equ	0xFEE
  1339                           postdec0	equ	0xFED
  1340                           preinc0	equ	0xFEC
  1341                           plusw0	equ	0xFEB
  1342                           fsr0h	equ	0xFEA
  1343                           fsr0l	equ	0xFE9
  1344                           wreg	equ	0xFE8
  1345                           indf1	equ	0xFE7
  1346                           postinc1	equ	0xFE6
  1347                           postdec1	equ	0xFE5
  1348                           preinc1	equ	0xFE4
  1349                           plusw1	equ	0xFE3
  1350                           fsr1h	equ	0xFE2
  1351                           fsr1l	equ	0xFE1
  1352                           bsr	equ	0xFE0
  1353                           indf2	equ	0xFDF
  1354                           postinc2	equ	0xFDE
  1355                           postdec2	equ	0xFDD
  1356                           preinc2	equ	0xFDC
  1357                           plusw2	equ	0xFDB
  1358                           fsr2h	equ	0xFDA
  1359                           fsr2l	equ	0xFD9
  1360                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     12      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_Cadena@dat	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_LCD_XY
    _LCD_XY->_LCD_Comando
    _LCD_Init->_LCD_Comando
    _LCD_Cadena->_LCD_Caracter

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     687
                                             10 COMRAM     2     2      0
                           _Int_Init
                         _LCD_Cadena
                        _LCD_Comando
                           _LCD_Init
                             _LCD_XY
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_XY                                               4     0      4     400
                                              6 COMRAM     4     0      4
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      30
                                              6 COMRAM     1     1      0
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (2) _LCD_Comando                                          2     2      0      30
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Cadena                                           2     0      2     227
                                              6 COMRAM     2     0      2
                       _LCD_Caracter
 ---------------------------------------------------------------------------------
 (2) _LCD_Caracter                                         2     2      0      30
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Int_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _TMR0_ISR                                             4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Int_Init
   _LCD_Cadena
     _LCD_Caracter
   _LCD_Comando
   _LCD_Init
     _LCD_Comando
   _LCD_XY
     _LCD_Comando
   _Timer0_Init

 _TMR0_ISR (ROOT)

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      C       E       1       14.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      20        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Feb 09 19:57:40 2021

                      _i 000D            ?_LCD_Caracter 0001                        _x 000E  
           ?_LCD_Comando 0001                       l21 0AD2                       l50 0936  
                     l47 09FE                       l55 0A94                       l64 0A6C  
                     l58 09A8                       bsr 000FE0                      l114 0AAC  
                    l801 08EC                      l811 0924                      l803 08FC  
                    l821 095C                      l813 0934                      l805 0910  
                    l831 0994                      l823 095E                      l815 093A  
                    l807 0912                      l833 0996                      l825 096E  
                    l817 094A                      l809 0922                      l841 09B8  
                    l835 09A6                      l827 0982                      l819 094C  
                    l851 09E0                      l843 09BC                      l837 0AC4  
                    l829 0984                      l853 09E6                      l845 09C2  
                    l855 09EC                      l847 09D2                      l839 09AA  
                    l951 0A6E                      l961 0A4C                      l793 08C8  
                    l857 09F2                      l849 09D8                      l953 0A80  
                    l881 0AA0                      l963 0A50                      l795 08D8  
                    l859 09F8                      l955 0A8C                      l883 0AA6  
                    l875 0A96                      l971 0824                      l957 0A38  
                    l797 08DA                      l885 0AA8                      l877 0A9A  
                    l973 0834                      l981 0870                      l965 0818  
                    l959 0A3C                      l799 08EA                      l887 0AAA  
                    l879 0A9E                      l991 08B8                      l983 0882  
                    l975 0848                      l967 081C                      l985 0896  
                    l977 0854                      l969 0820                      l987 08A2  
                    l979 086C                      l989 08B4                      u100 0A80  
                    u101 0A7C                      u110 0A6C                      u111 0A68  
                    u120 0834                      u121 0830                      u130 0882  
                    u131 087E                      u140 08B4                      u141 08B0  
                    u207 08F2                      u217 0918                      u227 092A  
                    u237 0952                      u157 085E                      u247 0964  
                    u167 09B0                      u257 098A                      u177 09C8  
                    u267 099C                      u187 09DA                      u197 08E0  
                    wreg 000FE8                     STR_1 080E                     STR_2 0801  
                   _LATD 000F8C                     i1l34 0064                     i2l26 0A1C  
                   i2l28 0A34                     _main 0818                     btemp 000F  
                   start 0074             ___param_bank 000000           ??_LCD_Caracter 0005  
       __end_of_LCD_Init 0A00         __end_of_INT0_ISR 0A38                    ?_main 0001  
                  _T1CON 000FCD                    i1l911 0060                    i1l903 0026  
                  i1l913 0062                    i1l905 002A                    i1l907 003C  
                  i1l909 005C                    i2l901 0A32                    i2l891 0A14  
                  i2l893 0A18                    i2l895 0A1A                    i2l897 0A2C  
                  i2l889 0A02                    i2l899 0A2E                    _TMR1H 000FCF  
                  _TMR0L 000FD6                    _TMR1L 000FCE                    _TRISD 000F95  
       __end_of_TMR0_ISR 0074      __size_of_LCD_Cadena 0036                    tablat 000FF5  
                  ttemp5 0010                    ttemp6 0013                    ttemp7 0017  
                  status 000FD8                    wtemp8 0010          __initialization 0AAE  
           __end_of_main 08C6            LCD_Cadena@dat 0007         __end_of_Int_Init 0AD4  
                 ??_main 000B            __activetblptr 000001                   _LCD_XY 0A6E  
                 i1u5_20 003C                   i1u5_21 0038                   i1u6_20 004C  
                 i1u6_21 0046                   i1u6_26 004E                   i2u3_40 0A14  
                 i2u3_41 0A10                   i2u4_40 0A2C                   i2u4_41 0A28  
          ??_Timer0_Init 0005     __size_of_LCD_Comando 0072             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
   __end_of_LCD_Caracter 09AA               __accesstop 0060  __end_of__initialization 0AB2  
              ?_LCD_Init 0001                ?_INT0_ISR 0001            ___rparam_used 000001  
           ??_LCD_Cadena 0009           __pcstackCOMRAM 0001                ?_TMR0_ISR 0001  
    __end_of_Timer0_Init 0AAE       __end_of_LCD_Cadena 0A6E                  ?_LCD_XY 0007  
                LCD_XY@x 0007                  LCD_XY@y 0009                ?_Int_Init 0001  
             ??_LCD_Init 0007               ??_INT0_ISR 0001               ??_TMR0_ISR 0001  
       LCD_Caracter@data 0006          __size_of_LCD_XY 0028               ??_Int_Init 0005  
                __Hparam 0000              _Timer0_Init 0A96                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 0AAE                  __ramtop 0800  
                __ptext0 0818                  __ptext1 0A96                  __ptext2 0A6E  
                __ptext3 09AA                  __ptext4 08C6                  __ptext5 0A38  
                __ptext6 0938                  __ptext7 0AC4                _T0CONbits 000FD5  
  __size_of_LCD_Caracter 0072           LCD_Comando@cmd 0006           __pintcode_body 0A00  
   end_of_initialization 0AB2                  int_func 0A00             _LCD_Caracter 0938  
              _TRISBbits 000F93           __end_of_LCD_XY 0A96        __size_of_LCD_Init 0056  
      __size_of_INT0_ISR 0A30            ??_LCD_Comando 0005        __size_of_TMR0_ISR 005C  
    start_initialization 0AAE                 ??_LCD_XY 000B        __size_of_Int_Init 0010  
    __end_of_LCD_Comando 0938              __pbssCOMRAM 000D             ?_Timer0_Init 0001  
              __pintcode 0008              __pintcodelo 0018              __smallconst 0800  
               _LCD_Init 09AA                 _INT0_ISR 0008                 _LATDbits 000F8C  
               _IPR1bits 000F9F                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
               _RCONbits 000FD0                 _TMR0_ISR 0018              _LCD_Comando 08C6  
            _INTCON2bits 000FF1                 _Int_Init 0AC4                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0800            __size_of_main 00AE  
             _LCD_Cadena 0A38     __size_of_Timer0_Init 0018                 int$flags 000F  
             _INTCONbits 000FF2                 intlevel1 0000                 intlevel2 0000  
            ?_LCD_Cadena 0007  
