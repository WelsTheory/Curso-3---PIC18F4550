

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Feb 08 21:38:02 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4550 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataCOMRAM
    61  000320                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _hor_d
    65  000320  02                 	db	2
    66                           
    67                           ;initializer for _hor
    68  000321  03                 	db	3
    69                           
    70                           ;initializer for _min_d
    71  000322  05                 	db	5
    72                           
    73                           ;initializer for _min
    74  000323  09                 	db	9
    75                           
    76                           ;initializer for _sec_d
    77  000324  05                 	db	5
    78                           
    79                           ;initializer for _sec
    80  000325  08                 	db	8
    81  0000                     _TMR0	set	4054
    82  0000                     _IPR1bits	set	3999
    83  0000                     _PIE1bits	set	3997
    84  0000                     _T1CON	set	4045
    85  0000                     _INTCON2bits	set	4081
    86  0000                     _T0CONbits	set	4053
    87  0000                     _LATD	set	3980
    88  0000                     _TRISD	set	3989
    89  0000                     _PIR1bits	set	3998
    90  0000                     _LATDbits	set	3980
    91  0000                     _TMR1L	set	4046
    92  0000                     _TMR1H	set	4047
    93  0000                     _INTCONbits	set	4082
    94  0000                     _INTCON3bits	set	4080
    95  0000                     _RCONbits	set	4048
    96                           
    97                           ; #config settings
    98                           
    99                           	psect	cinit
   100  0002B0                     __pcinit:
   101                           	callstack 0
   102  0002B0                     start_initialization:
   103                           	callstack 0
   104  0002B0                     __initialization:
   105                           	callstack 0
   106                           
   107                           ; Initialize objects allocated to COMRAM (6 bytes)
   108                           ; load TBLPTR registers with __pidataCOMRAM
   109  0002B0  0E20               	movlw	low __pidataCOMRAM
   110  0002B2  6EF6               	movwf	tblptrl,c
   111  0002B4  0E03               	movlw	high __pidataCOMRAM
   112  0002B6  6EF7               	movwf	tblptrh,c
   113  0002B8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   114  0002BA  6EF8               	movwf	tblptru,c
   115  0002BC  EE00  F00B         	lfsr	0,__pdataCOMRAM
   116  0002C0  EE10 F006          	lfsr	1,6
   117  0002C4                     copy_data0:
   118  0002C4  0009               	tblrd		*+
   119  0002C6  CFF5 FFEE          	movff	tablat,postinc0
   120  0002CA  50E5               	movf	postdec1,w,c
   121  0002CC  50E1               	movf	fsr1l,w,c
   122  0002CE  E1FA               	bnz	copy_data0
   123  0002D0                     end_of_initialization:
   124                           	callstack 0
   125  0002D0                     __end_of__initialization:
   126                           	callstack 0
   127  0002D0  9011               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   128  0002D2  9211               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   129  0002D4  0100               	movlb	0
   130  0002D6  EF7B  F000         	goto	_main	;jump to C main() function
   131                           
   132                           	psect	dataCOMRAM
   133  00000B                     __pdataCOMRAM:
   134                           	callstack 0
   135  00000B                     _hor_d:
   136                           	callstack 0
   137  00000B                     	ds	1
   138  00000C                     _hor:
   139                           	callstack 0
   140  00000C                     	ds	1
   141  00000D                     _min_d:
   142                           	callstack 0
   143  00000D                     	ds	1
   144  00000E                     _min:
   145                           	callstack 0
   146  00000E                     	ds	1
   147  00000F                     _sec_d:
   148                           	callstack 0
   149  00000F                     	ds	1
   150  000010                     _sec:
   151                           	callstack 0
   152  000010                     	ds	1
   153                           
   154                           	psect	cstackCOMRAM
   155  000001                     __pcstackCOMRAM:
   156                           	callstack 0
   157  000001                     ??_TMR1_ISR:
   158  000001                     
   159                           ; 1 bytes @ 0x0
   160  000001                     	ds	1
   161  000002                     ??_INT1_ISR:
   162                           
   163                           ; 1 bytes @ 0x1
   164  000002                     	ds	1
   165  000003                     ??_LCD_Comando:
   166  000003                     ??_LCD_Caracter:
   167                           
   168                           ; 1 bytes @ 0x2
   169  000003                     	ds	1
   170  000004                     LCD_Comando@cmd:
   171                           	callstack 0
   172  000004                     LCD_Caracter@data:
   173                           	callstack 0
   174                           
   175                           ; 1 bytes @ 0x3
   176  000004                     	ds	1
   177  000005                     ??_LCD_Init:
   178  000005                     LCD_XY@x:
   179                           	callstack 0
   180                           
   181                           ; 2 bytes @ 0x4
   182  000005                     	ds	2
   183  000007                     LCD_XY@y:
   184                           	callstack 0
   185                           
   186                           ; 2 bytes @ 0x6
   187  000007                     	ds	2
   188  000009                     ??_main:
   189                           
   190                           ; 1 bytes @ 0x8
   191  000009                     	ds	2
   192                           
   193 ;;
   194 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   195 ;;
   196 ;; *************** function _main *****************
   197 ;; Defined at:
   198 ;;		line 17 in file "Programa_principal.c"
   199 ;; Parameters:    Size  Location     Type
   200 ;;		None
   201 ;; Auto vars:     Size  Location     Type
   202 ;;		None
   203 ;; Return value:  Size  Location     Type
   204 ;;                  1    wreg      void 
   205 ;; Registers used:
   206 ;;		wreg, status,2, status,0, cstack
   207 ;; Tracked objects:
   208 ;;		On entry : 0/0
   209 ;;		On exit  : 0/0
   210 ;;		Unchanged: 0/0
   211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   212 ;;      Params:         0       0       0       0       0       0       0       0       0
   213 ;;      Locals:         0       0       0       0       0       0       0       0       0
   214 ;;      Temps:          2       0       0       0       0       0       0       0       0
   215 ;;      Totals:         2       0       0       0       0       0       0       0       0
   216 ;;Total ram usage:        2 bytes
   217 ;; Hardware stack levels required when called:    4
   218 ;; This function calls:
   219 ;;		_Int_Init
   220 ;;		_LCD_Caracter
   221 ;;		_LCD_Init
   222 ;;		_LCD_XY
   223 ;;		_Timer1_Init
   224 ;; This function is called by:
   225 ;;		Startup code after reset
   226 ;; This function uses a non-reentrant model
   227 ;;
   228                           
   229                           	psect	text0
   230  0000F6                     __ptext0:
   231                           	callstack 0
   232  0000F6                     _main:
   233                           	callstack 27
   234  0000F6                     
   235                           ;Programa_principal.c: 18:     TRISD = 0x00;
   236  0000F6  0E00               	movlw	0
   237  0000F8  6E95               	movwf	149,c	;volatile
   238  0000FA                     
   239                           ;Programa_principal.c: 19:     LCD_Init();
   240  0000FA  EC2D  F001         	call	_LCD_Init	;wreg free
   241  0000FE                     
   242                           ;Programa_principal.c: 20:     Timer1_Init();
   243  0000FE  EC81  F001         	call	_Timer1_Init	;wreg free
   244  000102                     
   245                           ;Programa_principal.c: 21:     Int_Init();
   246  000102  EC8B  F001         	call	_Int_Init	;wreg free
   247  000106                     l106:
   248                           
   249                           ;Programa_principal.c: 23:         LCD_XY(0,0);
   250  000106  0E00               	movlw	0
   251  000108  6E06               	movwf	(LCD_XY@x+1)^0,c
   252  00010A  0E00               	movlw	0
   253  00010C  6E05               	movwf	LCD_XY@x^0,c
   254  00010E  0E00               	movlw	0
   255  000110  6E08               	movwf	(LCD_XY@y+1)^0,c
   256  000112  0E00               	movlw	0
   257  000114  6E07               	movwf	LCD_XY@y^0,c
   258  000116  EC6D  F001         	call	_LCD_XY	;wreg free
   259                           
   260                           ;Programa_principal.c: 24:         LCD_Caracter(hor_d+'0');
   261  00011A  500B               	movf	_hor_d^0,w,c
   262  00011C  0F30               	addlw	48
   263  00011E  ECF4  F000         	call	_LCD_Caracter
   264                           
   265                           ;Programa_principal.c: 25:         LCD_Caracter(hor+'0');
   266  000122  500C               	movf	_hor^0,w,c
   267  000124  0F30               	addlw	48
   268  000126  ECF4  F000         	call	_LCD_Caracter
   269                           
   270                           ;Programa_principal.c: 26:         LCD_Caracter(':');
   271  00012A  0E3A               	movlw	58
   272  00012C  ECF4  F000         	call	_LCD_Caracter
   273                           
   274                           ;Programa_principal.c: 27:         LCD_Caracter(min_d+'0');
   275  000130  500D               	movf	_min_d^0,w,c
   276  000132  0F30               	addlw	48
   277  000134  ECF4  F000         	call	_LCD_Caracter
   278                           
   279                           ;Programa_principal.c: 28:         LCD_Caracter(min+'0');
   280  000138  500E               	movf	_min^0,w,c
   281  00013A  0F30               	addlw	48
   282  00013C  ECF4  F000         	call	_LCD_Caracter
   283                           
   284                           ;Programa_principal.c: 29:         LCD_Caracter(':');
   285  000140  0E3A               	movlw	58
   286  000142  ECF4  F000         	call	_LCD_Caracter
   287                           
   288                           ;Programa_principal.c: 30:         LCD_Caracter(sec_d+'0');
   289  000146  500F               	movf	_sec_d^0,w,c
   290  000148  0F30               	addlw	48
   291  00014A  ECF4  F000         	call	_LCD_Caracter
   292                           
   293                           ;Programa_principal.c: 31:         LCD_Caracter(sec+'0');
   294  00014E  5010               	movf	_sec^0,w,c
   295  000150  0F30               	addlw	48
   296  000152  ECF4  F000         	call	_LCD_Caracter
   297  000156                     
   298                           ;Programa_principal.c: 32:         _delay((unsigned long)((500)*(20000000UL/4000.0)));
   299  000156  0E0D               	movlw	13
   300  000158  6E0A               	movwf	(??_main+1)^0,c
   301  00015A  0EAF               	movlw	175
   302  00015C  6E09               	movwf	??_main^0,c
   303  00015E  0EB6               	movlw	182
   304  000160                     u127:
   305  000160  2EE8               	decfsz	wreg,f,c
   306  000162  D7FE               	bra	u127
   307  000164  2E09               	decfsz	??_main^0,f,c
   308  000166  D7FC               	bra	u127
   309  000168  2E0A               	decfsz	(??_main+1)^0,f,c
   310  00016A  D7FA               	bra	u127
   311  00016C  D000               	nop2	
   312  00016E  EF83  F000         	goto	l106
   313  000172  EF13  F000         	goto	start
   314  000176                     __end_of_main:
   315                           	callstack 0
   316                           
   317 ;; *************** function _Timer1_Init *****************
   318 ;; Defined at:
   319 ;;		line 31 in file "Timer_Libreria.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   333 ;;      Params:         0       0       0       0       0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0       0       0       0       0
   335 ;;      Temps:          0       0       0       0       0       0       0       0       0
   336 ;;      Totals:         0       0       0       0       0       0       0       0       0
   337 ;;Total ram usage:        0 bytes
   338 ;; Hardware stack levels used:    1
   339 ;; Hardware stack levels required when called:    2
   340 ;; This function calls:
   341 ;;		Nothing
   342 ;; This function is called by:
   343 ;;		_main
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           	psect	text1
   348  000302                     __ptext1:
   349                           	callstack 0
   350  000302                     _Timer1_Init:
   351                           	callstack 28
   352  000302                     
   353                           ;Timer_Libreria.c: 32:     TMR1H = 0x80;
   354  000302  0E80               	movlw	128
   355  000304  6ECF               	movwf	207,c	;volatile
   356                           
   357                           ;Timer_Libreria.c: 33:     TMR1L = 0x00;
   358  000306  0E00               	movlw	0
   359  000308  6ECE               	movwf	206,c	;volatile
   360                           
   361                           ;Timer_Libreria.c: 34:     T1CON = 0x0F;
   362  00030A  0E0F               	movlw	15
   363  00030C  6ECD               	movwf	205,c	;volatile
   364  00030E                     
   365                           ;Timer_Libreria.c: 35:     PIE1bits.TMR1IE = 1;
   366  00030E  809D               	bsf	157,0,c	;volatile
   367  000310                     
   368                           ;Timer_Libreria.c: 36:     PIR1bits.TMR1IF = 0;
   369  000310  909E               	bcf	158,0,c	;volatile
   370  000312                     
   371                           ;Timer_Libreria.c: 37:     IPR1bits.TMR1IP = 1;
   372  000312  809F               	bsf	159,0,c	;volatile
   373  000314  0012               	return		;funcret
   374  000316                     __end_of_Timer1_Init:
   375                           	callstack 0
   376                           
   377 ;; *************** function _LCD_XY *****************
   378 ;; Defined at:
   379 ;;		line 63 in file "LCD_Libreria.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;  x               2    4[COMRAM] int 
   382 ;;  y               2    6[COMRAM] int 
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   394 ;;      Params:         4       0       0       0       0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0       0       0       0       0
   396 ;;      Temps:          0       0       0       0       0       0       0       0       0
   397 ;;      Totals:         4       0       0       0       0       0       0       0       0
   398 ;;Total ram usage:        4 bytes
   399 ;; Hardware stack levels used:    1
   400 ;; Hardware stack levels required when called:    3
   401 ;; This function calls:
   402 ;;		_LCD_Comando
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text2
   409  0002DA                     __ptext2:
   410                           	callstack 0
   411  0002DA                     _LCD_XY:
   412                           	callstack 27
   413  0002DA                     
   414                           ;LCD_Libreria.c: 64:     if(x == 1){
   415  0002DA  0405               	decf	LCD_XY@x^0,w,c
   416  0002DC  1006               	iorwf	(LCD_XY@x+1)^0,w,c
   417  0002DE  A4D8               	btfss	status,2,c
   418  0002E0  EF74  F001         	goto	u111
   419  0002E4  EF76  F001         	goto	u110
   420  0002E8                     u111:
   421  0002E8  EF7C  F001         	goto	l973
   422  0002EC                     u110:
   423  0002EC                     
   424                           ;LCD_Libreria.c: 65:         LCD_Comando(0xC0+y);
   425  0002EC  5007               	movf	LCD_XY@y^0,w,c
   426  0002EE  0FC0               	addlw	192
   427  0002F0  ECBB  F000         	call	_LCD_Comando
   428                           
   429                           ;LCD_Libreria.c: 66:     }
   430  0002F4  EF80  F001         	goto	l66
   431  0002F8                     l973:
   432                           
   433                           ;LCD_Libreria.c: 68:         LCD_Comando(0x80+y);
   434  0002F8  5007               	movf	LCD_XY@y^0,w,c
   435  0002FA  0F80               	addlw	128
   436  0002FC  ECBB  F000         	call	_LCD_Comando
   437  000300                     l66:
   438  000300  0012               	return		;funcret
   439  000302                     __end_of_LCD_XY:
   440                           	callstack 0
   441                           
   442 ;; *************** function _LCD_Init *****************
   443 ;; Defined at:
   444 ;;		line 6 in file "LCD_Libreria.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, status,2, status,0, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   458 ;;      Params:         0       0       0       0       0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0       0       0       0       0
   460 ;;      Temps:          1       0       0       0       0       0       0       0       0
   461 ;;      Totals:         1       0       0       0       0       0       0       0       0
   462 ;;Total ram usage:        1 bytes
   463 ;; Hardware stack levels used:    1
   464 ;; Hardware stack levels required when called:    3
   465 ;; This function calls:
   466 ;;		_LCD_Comando
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           	psect	text3
   473  00025A                     __ptext3:
   474                           	callstack 0
   475  00025A                     _LCD_Init:
   476                           	callstack 27
   477  00025A                     
   478                           ;LCD_Libreria.c: 7:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
   479  00025A  0E62               	movlw	98
   480  00025C  6E05               	movwf	??_LCD_Init^0,c
   481  00025E  0E66               	movlw	102
   482  000260                     u137:
   483  000260  2EE8               	decfsz	wreg,f,c
   484  000262  D7FE               	bra	u137
   485  000264  2E05               	decfsz	??_LCD_Init^0,f,c
   486  000266  D7FC               	bra	u137
   487  000268                     
   488                           ;LCD_Libreria.c: 8:     TRISD = 0x00;
   489  000268  0E00               	movlw	0
   490  00026A  6E95               	movwf	149,c	;volatile
   491  00026C                     
   492                           ;LCD_Libreria.c: 9:     LCD_Comando(0x30);
   493  00026C  0E30               	movlw	48
   494  00026E  ECBB  F000         	call	_LCD_Comando
   495  000272                     
   496                           ;LCD_Libreria.c: 10:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   497  000272  0E21               	movlw	33
   498  000274  6E05               	movwf	??_LCD_Init^0,c
   499  000276  0E76               	movlw	118
   500  000278                     u147:
   501  000278  2EE8               	decfsz	wreg,f,c
   502  00027A  D7FE               	bra	u147
   503  00027C  2E05               	decfsz	??_LCD_Init^0,f,c
   504  00027E  D7FC               	bra	u147
   505  000280  D000               	nop2	
   506  000282                     
   507                           ;LCD_Libreria.c: 11:     LCD_Comando(0x30);
   508  000282  0E30               	movlw	48
   509  000284  ECBB  F000         	call	_LCD_Comando
   510  000288                     
   511                           ;LCD_Libreria.c: 12:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
   512  000288  0EA6               	movlw	166
   513  00028A                     u157:
   514  00028A  2EE8               	decfsz	wreg,f,c
   515  00028C  D7FE               	bra	u157
   516  00028E  D000               	nop2	
   517  000290                     
   518                           ;LCD_Libreria.c: 13:     LCD_Comando(0x32);
   519  000290  0E32               	movlw	50
   520  000292  ECBB  F000         	call	_LCD_Comando
   521  000296                     
   522                           ;LCD_Libreria.c: 14:     LCD_Comando(0x28);
   523  000296  0E28               	movlw	40
   524  000298  ECBB  F000         	call	_LCD_Comando
   525  00029C                     
   526                           ;LCD_Libreria.c: 15:     LCD_Comando(0x0C);
   527  00029C  0E0C               	movlw	12
   528  00029E  ECBB  F000         	call	_LCD_Comando
   529  0002A2                     
   530                           ;LCD_Libreria.c: 16:     LCD_Comando(0x01);
   531  0002A2  0E01               	movlw	1
   532  0002A4  ECBB  F000         	call	_LCD_Comando
   533  0002A8                     
   534                           ;LCD_Libreria.c: 17:     LCD_Comando(0x06);
   535  0002A8  0E06               	movlw	6
   536  0002AA  ECBB  F000         	call	_LCD_Comando
   537  0002AE  0012               	return		;funcret
   538  0002B0                     __end_of_LCD_Init:
   539                           	callstack 0
   540                           
   541 ;; *************** function _LCD_Comando *****************
   542 ;; Defined at:
   543 ;;		line 20 in file "LCD_Libreria.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;  cmd             1    wreg     unsigned char 
   546 ;; Auto vars:     Size  Location     Type
   547 ;;  cmd             1    3[COMRAM] unsigned char 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, status,2, status,0
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   557 ;;      Params:         0       0       0       0       0       0       0       0       0
   558 ;;      Locals:         1       0       0       0       0       0       0       0       0
   559 ;;      Temps:          1       0       0       0       0       0       0       0       0
   560 ;;      Totals:         2       0       0       0       0       0       0       0       0
   561 ;;Total ram usage:        2 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; Hardware stack levels required when called:    2
   564 ;; This function calls:
   565 ;;		Nothing
   566 ;; This function is called by:
   567 ;;		_LCD_Init
   568 ;;		_LCD_XY
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text4
   573  000176                     __ptext4:
   574                           	callstack 0
   575  000176                     _LCD_Comando:
   576                           	callstack 27
   577                           
   578                           ;incstack = 0
   579                           ;LCD_Comando@cmd stored from wreg
   580  000176  6E04               	movwf	LCD_Comando@cmd^0,c
   581  000178                     
   582                           ;LCD_Libreria.c: 22:     LATD = (LATD&0X0F) | (cmd&0xF0);
   583  000178  C004  F003         	movff	LCD_Comando@cmd,??_LCD_Comando
   584  00017C  0EF0               	movlw	240
   585  00017E  1603               	andwf	??_LCD_Comando^0,f,c
   586  000180  508C               	movf	140,w,c	;volatile
   587  000182  0B0F               	andlw	15
   588  000184  1003               	iorwf	??_LCD_Comando^0,w,c
   589  000186  6E8C               	movwf	140,c	;volatile
   590  000188                     
   591                           ;LCD_Libreria.c: 39:     LATDbits.LATD2 = 0;
   592  000188  948C               	bcf	140,2,c	;volatile
   593  00018A                     
   594                           ;LCD_Libreria.c: 40:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   595  00018A  0E07               	movlw	7
   596  00018C  6E03               	movwf	??_LCD_Comando^0,c
   597  00018E  0E7D               	movlw	125
   598  000190                     u167:
   599  000190  2EE8               	decfsz	wreg,f,c
   600  000192  D7FE               	bra	u167
   601  000194  2E03               	decfsz	??_LCD_Comando^0,f,c
   602  000196  D7FC               	bra	u167
   603  000198  F000               	nop	
   604  00019A                     
   605                           ;LCD_Libreria.c: 41:     LATDbits.LATD3 = 1;
   606  00019A  868C               	bsf	140,3,c	;volatile
   607  00019C                     
   608                           ;LCD_Libreria.c: 42:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   609  00019C  0E07               	movlw	7
   610  00019E  6E03               	movwf	??_LCD_Comando^0,c
   611  0001A0  0E7D               	movlw	125
   612  0001A2                     u177:
   613  0001A2  2EE8               	decfsz	wreg,f,c
   614  0001A4  D7FE               	bra	u177
   615  0001A6  2E03               	decfsz	??_LCD_Comando^0,f,c
   616  0001A8  D7FC               	bra	u177
   617  0001AA  F000               	nop	
   618  0001AC                     
   619                           ;LCD_Libreria.c: 43:     LATDbits.LATD3 = 0;
   620  0001AC  968C               	bcf	140,3,c	;volatile
   621                           
   622                           ;LCD_Libreria.c: 45:     LATD &= 0X0F;
   623  0001AE  0E0F               	movlw	15
   624  0001B0  168C               	andwf	140,f,c	;volatile
   625                           
   626                           ;LCD_Libreria.c: 46:     LATD |= ((cmd&0x0F)<<4);
   627  0001B2  C004  F003         	movff	LCD_Comando@cmd,??_LCD_Comando
   628  0001B6  0E0F               	movlw	15
   629  0001B8  1603               	andwf	??_LCD_Comando^0,f,c
   630  0001BA  3803               	swapf	??_LCD_Comando^0,w,c
   631  0001BC  0BF0               	andlw	240
   632  0001BE  128C               	iorwf	140,f,c	;volatile
   633  0001C0                     
   634                           ;LCD_Libreria.c: 56:     LATDbits.LATD2 = 0;
   635  0001C0  948C               	bcf	140,2,c	;volatile
   636  0001C2                     
   637                           ;LCD_Libreria.c: 57:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   638  0001C2  0E07               	movlw	7
   639  0001C4  6E03               	movwf	??_LCD_Comando^0,c
   640  0001C6  0E7D               	movlw	125
   641  0001C8                     u187:
   642  0001C8  2EE8               	decfsz	wreg,f,c
   643  0001CA  D7FE               	bra	u187
   644  0001CC  2E03               	decfsz	??_LCD_Comando^0,f,c
   645  0001CE  D7FC               	bra	u187
   646  0001D0  F000               	nop	
   647  0001D2                     
   648                           ;LCD_Libreria.c: 58:     LATDbits.LATD3 = 1;
   649  0001D2  868C               	bsf	140,3,c	;volatile
   650  0001D4                     
   651                           ;LCD_Libreria.c: 59:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   652  0001D4  0E07               	movlw	7
   653  0001D6  6E03               	movwf	??_LCD_Comando^0,c
   654  0001D8  0E7D               	movlw	125
   655  0001DA                     u197:
   656  0001DA  2EE8               	decfsz	wreg,f,c
   657  0001DC  D7FE               	bra	u197
   658  0001DE  2E03               	decfsz	??_LCD_Comando^0,f,c
   659  0001E0  D7FC               	bra	u197
   660  0001E2  F000               	nop	
   661  0001E4                     
   662                           ;LCD_Libreria.c: 60:     LATDbits.LATD3 = 0;
   663  0001E4  968C               	bcf	140,3,c	;volatile
   664  0001E6  0012               	return		;funcret
   665  0001E8                     __end_of_LCD_Comando:
   666                           	callstack 0
   667                           
   668 ;; *************** function _LCD_Caracter *****************
   669 ;; Defined at:
   670 ;;		line 72 in file "LCD_Libreria.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;  data            1    wreg     unsigned char 
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  data            1    3[COMRAM] unsigned char 
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, status,2, status,0
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   684 ;;      Params:         0       0       0       0       0       0       0       0       0
   685 ;;      Locals:         1       0       0       0       0       0       0       0       0
   686 ;;      Temps:          1       0       0       0       0       0       0       0       0
   687 ;;      Totals:         2       0       0       0       0       0       0       0       0
   688 ;;Total ram usage:        2 bytes
   689 ;; Hardware stack levels used:    1
   690 ;; Hardware stack levels required when called:    2
   691 ;; This function calls:
   692 ;;		Nothing
   693 ;; This function is called by:
   694 ;;		_main
   695 ;;		_LCD_Cadena
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text5
   700  0001E8                     __ptext5:
   701                           	callstack 0
   702  0001E8                     _LCD_Caracter:
   703                           	callstack 28
   704                           
   705                           ;incstack = 0
   706                           ;LCD_Caracter@data stored from wreg
   707  0001E8  6E04               	movwf	LCD_Caracter@data^0,c
   708  0001EA                     
   709                           ;LCD_Libreria.c: 73:     LATD = (LATD&0X0F) | (data&0xF0);
   710  0001EA  C004  F003         	movff	LCD_Caracter@data,??_LCD_Caracter
   711  0001EE  0EF0               	movlw	240
   712  0001F0  1603               	andwf	??_LCD_Caracter^0,f,c
   713  0001F2  508C               	movf	140,w,c	;volatile
   714  0001F4  0B0F               	andlw	15
   715  0001F6  1003               	iorwf	??_LCD_Caracter^0,w,c
   716  0001F8  6E8C               	movwf	140,c	;volatile
   717  0001FA                     
   718                           ;LCD_Libreria.c: 75:     LATDbits.LATD2 = 1;
   719  0001FA  848C               	bsf	140,2,c	;volatile
   720  0001FC                     
   721                           ;LCD_Libreria.c: 76:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   722  0001FC  0E07               	movlw	7
   723  0001FE  6E03               	movwf	??_LCD_Caracter^0,c
   724  000200  0E7D               	movlw	125
   725  000202                     u207:
   726  000202  2EE8               	decfsz	wreg,f,c
   727  000204  D7FE               	bra	u207
   728  000206  2E03               	decfsz	??_LCD_Caracter^0,f,c
   729  000208  D7FC               	bra	u207
   730  00020A  F000               	nop	
   731  00020C                     
   732                           ;LCD_Libreria.c: 77:     LATDbits.LATD3 = 1;
   733  00020C  868C               	bsf	140,3,c	;volatile
   734  00020E                     
   735                           ;LCD_Libreria.c: 78:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   736  00020E  0E07               	movlw	7
   737  000210  6E03               	movwf	??_LCD_Caracter^0,c
   738  000212  0E7D               	movlw	125
   739  000214                     u217:
   740  000214  2EE8               	decfsz	wreg,f,c
   741  000216  D7FE               	bra	u217
   742  000218  2E03               	decfsz	??_LCD_Caracter^0,f,c
   743  00021A  D7FC               	bra	u217
   744  00021C  F000               	nop	
   745  00021E                     
   746                           ;LCD_Libreria.c: 79:     LATDbits.LATD3 = 0;
   747  00021E  968C               	bcf	140,3,c	;volatile
   748                           
   749                           ;LCD_Libreria.c: 81:     LATD &= 0X0F;
   750  000220  0E0F               	movlw	15
   751  000222  168C               	andwf	140,f,c	;volatile
   752                           
   753                           ;LCD_Libreria.c: 82:     LATD |= ((data&0x0F)<<4);
   754  000224  C004  F003         	movff	LCD_Caracter@data,??_LCD_Caracter
   755  000228  0E0F               	movlw	15
   756  00022A  1603               	andwf	??_LCD_Caracter^0,f,c
   757  00022C  3803               	swapf	??_LCD_Caracter^0,w,c
   758  00022E  0BF0               	andlw	240
   759  000230  128C               	iorwf	140,f,c	;volatile
   760  000232                     
   761                           ;LCD_Libreria.c: 84:     LATDbits.LATD2 = 1;
   762  000232  848C               	bsf	140,2,c	;volatile
   763  000234                     
   764                           ;LCD_Libreria.c: 85:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   765  000234  0E07               	movlw	7
   766  000236  6E03               	movwf	??_LCD_Caracter^0,c
   767  000238  0E7D               	movlw	125
   768  00023A                     u227:
   769  00023A  2EE8               	decfsz	wreg,f,c
   770  00023C  D7FE               	bra	u227
   771  00023E  2E03               	decfsz	??_LCD_Caracter^0,f,c
   772  000240  D7FC               	bra	u227
   773  000242  F000               	nop	
   774  000244                     
   775                           ;LCD_Libreria.c: 86:     LATDbits.LATD3 = 1;
   776  000244  868C               	bsf	140,3,c	;volatile
   777  000246                     
   778                           ;LCD_Libreria.c: 87:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   779  000246  0E07               	movlw	7
   780  000248  6E03               	movwf	??_LCD_Caracter^0,c
   781  00024A  0E7D               	movlw	125
   782  00024C                     u237:
   783  00024C  2EE8               	decfsz	wreg,f,c
   784  00024E  D7FE               	bra	u237
   785  000250  2E03               	decfsz	??_LCD_Caracter^0,f,c
   786  000252  D7FC               	bra	u237
   787  000254  F000               	nop	
   788  000256                     
   789                           ;LCD_Libreria.c: 88:     LATDbits.LATD3 = 0;
   790  000256  968C               	bcf	140,3,c	;volatile
   791  000258  0012               	return		;funcret
   792  00025A                     __end_of_LCD_Caracter:
   793                           	callstack 0
   794                           
   795 ;; *************** function _Int_Init *****************
   796 ;; Defined at:
   797 ;;		line 8 in file "Interrupcion.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		None
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   811 ;;      Params:         0       0       0       0       0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0       0       0
   814 ;;      Totals:         0       0       0       0       0       0       0       0       0
   815 ;;Total ram usage:        0 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    2
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_main
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	text6
   826  000316                     __ptext6:
   827                           	callstack 0
   828  000316                     _Int_Init:
   829                           	callstack 28
   830  000316                     
   831                           ;Interrupcion.c: 17:     RCONbits.IPEN = 1;
   832  000316  8ED0               	bsf	208,7,c	;volatile
   833                           
   834                           ;Interrupcion.c: 18:     INTCON3bits.INT1P = 0;
   835  000318  9CF0               	bcf	240,6,c	;volatile
   836                           
   837                           ;Interrupcion.c: 19:     INTCONbits.GIEL = 1;
   838  00031A  8CF2               	bsf	242,6,c	;volatile
   839                           
   840                           ;Interrupcion.c: 20:     INTCONbits.GIEH = 1;
   841  00031C  8EF2               	bsf	242,7,c	;volatile
   842  00031E  0012               	return		;funcret
   843  000320                     __end_of_Int_Init:
   844                           	callstack 0
   845                           
   846 ;; *************** function _INT1_ISR *****************
   847 ;; Defined at:
   848 ;;		line 56 in file "Interrupcion.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		None
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   862 ;;      Params:         0       0       0       0       0       0       0       0       0
   863 ;;      Locals:         0       0       0       0       0       0       0       0       0
   864 ;;      Temps:          1       0       0       0       0       0       0       0       0
   865 ;;      Totals:         1       0       0       0       0       0       0       0       0
   866 ;;Total ram usage:        1 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    1
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		Interrupt level 1
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	intcodelo
   877  000018                     __pintcodelo:
   878                           	callstack 0
   879  000018                     _INT1_ISR:
   880                           	callstack 27
   881                           
   882                           ;incstack = 0
   883  000018  8011               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   884  00001A  CFE0 F002          	movff	bsr,??_INT1_ISR
   885  00001E  C002  FFE0         	movff	??_INT1_ISR,bsr
   886  000022  9011               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   887  000024  0010               	retfie	
   888  000026                     __end_of_INT1_ISR:
   889                           	callstack 0
   890                           
   891 ;; *************** function _TMR1_ISR *****************
   892 ;; Defined at:
   893 ;;		line 24 in file "Interrupcion.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, status,2, status,0
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   907 ;;      Params:         0       0       0       0       0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0       0       0       0       0
   909 ;;      Temps:          1       0       0       0       0       0       0       0       0
   910 ;;      Totals:         1       0       0       0       0       0       0       0       0
   911 ;;Total ram usage:        1 bytes
   912 ;; Hardware stack levels used:    1
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		Interrupt level 2
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	intcode
   921  000008                     __pintcode:
   922                           	callstack 0
   923  000008                     _TMR1_ISR:
   924                           	callstack 27
   925                           
   926                           ;incstack = 0
   927  000008  8211               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   928  00000A  ED15  F000         	call	int_func,f	;refresh shadow registers
   929                           
   930                           	psect	intcode_body
   931  00002A                     __pintcode_body:
   932                           	callstack 27
   933  00002A                     int_func:
   934                           	callstack 27
   935  00002A  0006               	pop		; remove dummy address from shadow register refresh
   936  00002C                     
   937                           ;Interrupcion.c: 25:     TMR1H = 0x80;
   938  00002C  0E80               	movlw	128
   939  00002E  6ECF               	movwf	207,c	;volatile
   940                           
   941                           ;Interrupcion.c: 26:     TMR1L = 0x00;
   942  000030  0E00               	movlw	0
   943  000032  6ECE               	movwf	206,c	;volatile
   944  000034                     
   945                           ;Interrupcion.c: 27:     sec++;
   946  000034  2A10               	incf	_sec^0,f,c
   947  000036                     
   948                           ;Interrupcion.c: 28:     if(sec >9){
   949  000036  0E09               	movlw	9
   950  000038  6410               	cpfsgt	_sec^0,c
   951  00003A  EF21  F000         	goto	i2u2_41
   952  00003E  EF23  F000         	goto	i2u2_40
   953  000042                     i2u2_41:
   954  000042  EF26  F000         	goto	i2l903
   955  000046                     i2u2_40:
   956  000046                     
   957                           ;Interrupcion.c: 29:         sec_d++;
   958  000046  2A0F               	incf	_sec_d^0,f,c
   959  000048                     
   960                           ;Interrupcion.c: 30:         sec =0;
   961  000048  0E00               	movlw	0
   962  00004A  6E10               	movwf	_sec^0,c
   963  00004C                     i2l903:
   964                           
   965                           ;Interrupcion.c: 32:     if(sec_d > 5){
   966  00004C  0E05               	movlw	5
   967  00004E  640F               	cpfsgt	_sec_d^0,c
   968  000050  EF2C  F000         	goto	i2u3_41
   969  000054  EF2E  F000         	goto	i2u3_40
   970  000058                     i2u3_41:
   971  000058  EF31  F000         	goto	i2l909
   972  00005C                     i2u3_40:
   973  00005C                     
   974                           ;Interrupcion.c: 33:         sec_d = 0;
   975  00005C  0E00               	movlw	0
   976  00005E  6E0F               	movwf	_sec_d^0,c
   977  000060                     
   978                           ;Interrupcion.c: 34:         min++;
   979  000060  2A0E               	incf	_min^0,f,c
   980  000062                     i2l909:
   981                           
   982                           ;Interrupcion.c: 36:     if(min > 9){
   983  000062  0E09               	movlw	9
   984  000064  640E               	cpfsgt	_min^0,c
   985  000066  EF37  F000         	goto	i2u4_41
   986  00006A  EF39  F000         	goto	i2u4_40
   987  00006E                     i2u4_41:
   988  00006E  EF3C  F000         	goto	i2l915
   989  000072                     i2u4_40:
   990  000072                     
   991                           ;Interrupcion.c: 37:         min = 0;
   992  000072  0E00               	movlw	0
   993  000074  6E0E               	movwf	_min^0,c
   994  000076                     
   995                           ;Interrupcion.c: 38:         min_d++;
   996  000076  2A0D               	incf	_min_d^0,f,c
   997  000078                     i2l915:
   998                           
   999                           ;Interrupcion.c: 40:     if(min_d > 5){
  1000  000078  0E05               	movlw	5
  1001  00007A  640D               	cpfsgt	_min_d^0,c
  1002  00007C  EF42  F000         	goto	i2u5_41
  1003  000080  EF44  F000         	goto	i2u5_40
  1004  000084                     i2u5_41:
  1005  000084  EF47  F000         	goto	i2l921
  1006  000088                     i2u5_40:
  1007  000088                     
  1008                           ;Interrupcion.c: 41:         min_d = 0;
  1009  000088  0E00               	movlw	0
  1010  00008A  6E0D               	movwf	_min_d^0,c
  1011  00008C                     
  1012                           ;Interrupcion.c: 42:         hor++;
  1013  00008C  2A0C               	incf	_hor^0,f,c
  1014  00008E                     i2l921:
  1015                           
  1016                           ;Interrupcion.c: 44:     if(hor > 9){
  1017  00008E  0E09               	movlw	9
  1018  000090  640C               	cpfsgt	_hor^0,c
  1019  000092  EF4D  F000         	goto	i2u6_41
  1020  000096  EF4F  F000         	goto	i2u6_40
  1021  00009A                     i2u6_41:
  1022  00009A  EF52  F000         	goto	i2l927
  1023  00009E                     i2u6_40:
  1024  00009E                     
  1025                           ;Interrupcion.c: 45:         hor = 0;
  1026  00009E  0E00               	movlw	0
  1027  0000A0  6E0C               	movwf	_hor^0,c
  1028  0000A2                     
  1029                           ;Interrupcion.c: 46:         hor_d++;
  1030  0000A2  2A0B               	incf	_hor_d^0,f,c
  1031  0000A4                     i2l927:
  1032                           
  1033                           ;Interrupcion.c: 48:     if(hor_d == 2 & hor == 4){
  1034  0000A4  0E02               	movlw	2
  1035  0000A6  180B               	xorwf	_hor_d^0,w,c
  1036  0000A8  A4D8               	btfss	status,2,c
  1037  0000AA  EF59  F000         	goto	i2u7_41
  1038  0000AE  EF5B  F000         	goto	i2u7_40
  1039  0000B2                     i2u7_41:
  1040  0000B2  EF68  F000         	goto	i2l933
  1041  0000B6                     i2u7_40:
  1042  0000B6  0E04               	movlw	4
  1043  0000B8  180C               	xorwf	_hor^0,w,c
  1044  0000BA  A4D8               	btfss	status,2,c
  1045  0000BC  EF62  F000         	goto	i2u8_41
  1046  0000C0  EF64  F000         	goto	i2u8_40
  1047  0000C4                     i2u8_41:
  1048  0000C4  EF68  F000         	goto	i2l933
  1049  0000C8                     i2u8_40:
  1050  0000C8                     
  1051                           ;Interrupcion.c: 49:         hor_d = 0;
  1052  0000C8  0E00               	movlw	0
  1053  0000CA  6E0B               	movwf	_hor_d^0,c
  1054                           
  1055                           ;Interrupcion.c: 50:         hor =0;
  1056  0000CC  0E00               	movlw	0
  1057  0000CE  6E0C               	movwf	_hor^0,c
  1058  0000D0                     i2l933:
  1059                           
  1060                           ;Interrupcion.c: 52:     LATDbits.LATD0 = ~LATDbits.LATD0;
  1061  0000D0  B08C               	btfsc	140,0,c	;volatile
  1062  0000D2  EF6D  F000         	goto	i2u9_41
  1063  0000D6  EF70  F000         	goto	i2u9_40
  1064  0000DA                     i2u9_41:
  1065  0000DA  0E01               	movlw	1
  1066  0000DC  EF71  F000         	goto	i2u9_46
  1067  0000E0                     i2u9_40:
  1068  0000E0  0E00               	movlw	0
  1069  0000E2                     i2u9_46:
  1070  0000E2  0AFF               	xorlw	255
  1071  0000E4  6E01               	movwf	??_TMR1_ISR^0,c
  1072  0000E6  508C               	movf	140,w,c	;volatile
  1073  0000E8  1801               	xorwf	??_TMR1_ISR^0,w,c
  1074  0000EA  0BFE               	andlw	-2
  1075  0000EC  1801               	xorwf	??_TMR1_ISR^0,w,c
  1076  0000EE  6E8C               	movwf	140,c	;volatile
  1077  0000F0                     
  1078                           ;Interrupcion.c: 53:     PIR1bits.TMR1IF = 0;
  1079  0000F0  909E               	bcf	158,0,c	;volatile
  1080  0000F2  9211               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1081  0000F4  0011               	retfie		f
  1082  0000F6                     __end_of_TMR1_ISR:
  1083                           	callstack 0
  1084  0000                     
  1085                           	psect	rparam
  1086  0000                     
  1087                           	psect	temp
  1088  000011                     btemp:
  1089                           	callstack 0
  1090  000011                     	ds	1
  1091  0000                     int$flags	set	btemp
  1092  0000                     wtemp8	set	btemp+1
  1093  0000                     ttemp5	set	btemp+1
  1094  0000                     ttemp6	set	btemp+4
  1095  0000                     ttemp7	set	btemp+8
  1096                           
  1097                           	psect	idloc
  1098                           
  1099                           ;Config register IDLOC0 @ 0x200000
  1100                           ;	unspecified, using default values
  1101  200000                     	org	2097152
  1102  200000  FF                 	db	255
  1103                           
  1104                           ;Config register IDLOC1 @ 0x200001
  1105                           ;	unspecified, using default values
  1106  200001                     	org	2097153
  1107  200001  FF                 	db	255
  1108                           
  1109                           ;Config register IDLOC2 @ 0x200002
  1110                           ;	unspecified, using default values
  1111  200002                     	org	2097154
  1112  200002  FF                 	db	255
  1113                           
  1114                           ;Config register IDLOC3 @ 0x200003
  1115                           ;	unspecified, using default values
  1116  200003                     	org	2097155
  1117  200003  FF                 	db	255
  1118                           
  1119                           ;Config register IDLOC4 @ 0x200004
  1120                           ;	unspecified, using default values
  1121  200004                     	org	2097156
  1122  200004  FF                 	db	255
  1123                           
  1124                           ;Config register IDLOC5 @ 0x200005
  1125                           ;	unspecified, using default values
  1126  200005                     	org	2097157
  1127  200005  FF                 	db	255
  1128                           
  1129                           ;Config register IDLOC6 @ 0x200006
  1130                           ;	unspecified, using default values
  1131  200006                     	org	2097158
  1132  200006  FF                 	db	255
  1133                           
  1134                           ;Config register IDLOC7 @ 0x200007
  1135                           ;	unspecified, using default values
  1136  200007                     	org	2097159
  1137  200007  FF                 	db	255
  1138                           
  1139                           	psect	config
  1140                           
  1141                           ;Config register CONFIG1L @ 0x300000
  1142                           ;	PLL Prescaler Selection bits
  1143                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1144                           ;	System Clock Postscaler Selection bits
  1145                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1146                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1147                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1148  300000                     	org	3145728
  1149  300000  00                 	db	0
  1150                           
  1151                           ;Config register CONFIG1H @ 0x300001
  1152                           ;	Oscillator Selection bits
  1153                           ;	FOSC = HS, HS oscillator (HS)
  1154                           ;	Fail-Safe Clock Monitor Enable bit
  1155                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1156                           ;	Internal/External Oscillator Switchover bit
  1157                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1158  300001                     	org	3145729
  1159  300001  0C                 	db	12
  1160                           
  1161                           ;Config register CONFIG2L @ 0x300002
  1162                           ;	Power-up Timer Enable bit
  1163                           ;	PWRT = ON, PWRT enabled
  1164                           ;	Brown-out Reset Enable bits
  1165                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1166                           ;	Brown-out Reset Voltage bits
  1167                           ;	BORV = 3, Minimum setting 2.05V
  1168                           ;	USB Voltage Regulator Enable bit
  1169                           ;	VREGEN = OFF, USB voltage regulator disabled
  1170  300002                     	org	3145730
  1171  300002  18                 	db	24
  1172                           
  1173                           ;Config register CONFIG2H @ 0x300003
  1174                           ;	Watchdog Timer Enable bit
  1175                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1176                           ;	Watchdog Timer Postscale Select bits
  1177                           ;	WDTPS = 32768, 1:32768
  1178  300003                     	org	3145731
  1179  300003  1E                 	db	30
  1180                           
  1181                           ; Padding undefined space
  1182  300004                     	org	3145732
  1183  300004  FF                 	db	255
  1184                           
  1185                           ;Config register CONFIG3H @ 0x300005
  1186                           ;	CCP2 MUX bit
  1187                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1188                           ;	PORTB A/D Enable bit
  1189                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1190                           ;	Low-Power Timer 1 Oscillator Enable bit
  1191                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1192                           ;	MCLR Pin Enable bit
  1193                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1194  300005                     	org	3145733
  1195  300005  81                 	db	129
  1196                           
  1197                           ;Config register CONFIG4L @ 0x300006
  1198                           ;	Stack Full/Underflow Reset Enable bit
  1199                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1200                           ;	Single-Supply ICSP Enable bit
  1201                           ;	LVP = ON, Single-Supply ICSP enabled
  1202                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1203                           ;	ICPRT = OFF, ICPORT disabled
  1204                           ;	Extended Instruction Set Enable bit
  1205                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1206                           ;	Background Debugger Enable bit
  1207                           ;	DEBUG = 0x1, unprogrammed default
  1208  300006                     	org	3145734
  1209  300006  84                 	db	132
  1210                           
  1211                           ; Padding undefined space
  1212  300007                     	org	3145735
  1213  300007  FF                 	db	255
  1214                           
  1215                           ;Config register CONFIG5L @ 0x300008
  1216                           ;	Code Protection bit
  1217                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1218                           ;	Code Protection bit
  1219                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1220                           ;	Code Protection bit
  1221                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1222                           ;	Code Protection bit
  1223                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1224  300008                     	org	3145736
  1225  300008  0F                 	db	15
  1226                           
  1227                           ;Config register CONFIG5H @ 0x300009
  1228                           ;	Boot Block Code Protection bit
  1229                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1230                           ;	Data EEPROM Code Protection bit
  1231                           ;	CPD = OFF, Data EEPROM is not code-protected
  1232  300009                     	org	3145737
  1233  300009  C0                 	db	192
  1234                           
  1235                           ;Config register CONFIG6L @ 0x30000A
  1236                           ;	Write Protection bit
  1237                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1238                           ;	Write Protection bit
  1239                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1240                           ;	Write Protection bit
  1241                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1242                           ;	Write Protection bit
  1243                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1244  30000A                     	org	3145738
  1245  30000A  0F                 	db	15
  1246                           
  1247                           ;Config register CONFIG6H @ 0x30000B
  1248                           ;	Configuration Register Write Protection bit
  1249                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1250                           ;	Boot Block Write Protection bit
  1251                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1252                           ;	Data EEPROM Write Protection bit
  1253                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1254  30000B                     	org	3145739
  1255  30000B  E0                 	db	224
  1256                           
  1257                           ;Config register CONFIG7L @ 0x30000C
  1258                           ;	Table Read Protection bit
  1259                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1260                           ;	Table Read Protection bit
  1261                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1262                           ;	Table Read Protection bit
  1263                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1264                           ;	Table Read Protection bit
  1265                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1266  30000C                     	org	3145740
  1267  30000C  0F                 	db	15
  1268                           
  1269                           ;Config register CONFIG7H @ 0x30000D
  1270                           ;	Boot Block Table Read Protection bit
  1271                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1272  30000D                     	org	3145741
  1273  30000D  40                 	db	64
  1274                           tosu	equ	0xFFF
  1275                           tosh	equ	0xFFE
  1276                           tosl	equ	0xFFD
  1277                           stkptr	equ	0xFFC
  1278                           pclatu	equ	0xFFB
  1279                           pclath	equ	0xFFA
  1280                           pcl	equ	0xFF9
  1281                           tblptru	equ	0xFF8
  1282                           tblptrh	equ	0xFF7
  1283                           tblptrl	equ	0xFF6
  1284                           tablat	equ	0xFF5
  1285                           prodh	equ	0xFF4
  1286                           prodl	equ	0xFF3
  1287                           indf0	equ	0xFEF
  1288                           postinc0	equ	0xFEE
  1289                           postdec0	equ	0xFED
  1290                           preinc0	equ	0xFEC
  1291                           plusw0	equ	0xFEB
  1292                           fsr0h	equ	0xFEA
  1293                           fsr0l	equ	0xFE9
  1294                           wreg	equ	0xFE8
  1295                           indf1	equ	0xFE7
  1296                           postinc1	equ	0xFE6
  1297                           postdec1	equ	0xFE5
  1298                           preinc1	equ	0xFE4
  1299                           plusw1	equ	0xFE3
  1300                           fsr1h	equ	0xFE2
  1301                           fsr1l	equ	0xFE1
  1302                           bsr	equ	0xFE0
  1303                           indf2	equ	0xFDF
  1304                           postinc2	equ	0xFDE
  1305                           postdec2	equ	0xFDD
  1306                           preinc2	equ	0xFDC
  1307                           plusw2	equ	0xFDB
  1308                           fsr2h	equ	0xFDA
  1309                           fsr2l	equ	0xFD9
  1310                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LCD_XY
    _LCD_XY->_LCD_Comando
    _LCD_Init->_LCD_Comando

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR1_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR1_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR1_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR1_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR1_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR1_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR1_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     308
                                              8 COMRAM     2     2      0
                           _Int_Init
                       _LCD_Caracter
                           _LCD_Init
                             _LCD_XY
                        _Timer1_Init
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_XY                                               4     0      4     248
                                              4 COMRAM     4     0      4
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      30
                                              4 COMRAM     1     1      0
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (2) _LCD_Comando                                          2     2      0      30
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Caracter                                         2     2      0      30
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Int_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT1_ISR                                             1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TMR1_ISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Int_Init
   _LCD_Caracter
   _LCD_Init
     _LCD_Comando
   _LCD_XY
     _LCD_Comando
   _Timer1_Init

 _INT1_ISR (ROOT)

 _TMR1_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      A      10       1       17.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10      20        0.0%
DATA                 0      0      10       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Feb 08 21:38:02 2021

          ?_LCD_Caracter 0001             ?_LCD_Comando 0001                       l29 031E  
                     l61 01E6                       l58 02AE                       l66 0300  
                     l69 0258                       bsr 000FE0                      l106 0106  
                    l135 0314                      l811 0178                      l821 01AC  
                    l813 0188                      l831 01E4                      l823 01C0  
                    l815 018A                      l833 0316                      l825 01C2  
                    l817 019A                      l841 0272                      l827 01D2  
                    l819 019C                      l851 029C                      l843 0282  
                    l835 025A                      l829 01D4                      l853 02A2  
                    l845 0288                      l837 0268                      l871 020E  
                    l863 01EA                      l855 02A8                      l847 0290  
                    l839 026C                      l881 0246                      l873 021E  
                    l865 01FA                      l849 0296                      l883 0256  
                    l875 0232                      l867 01FC                      l971 02EC  
                    l891 0312                      l877 0234                      l869 020C  
                    l973 02F8                      l885 0302                      l981 0102  
                    l879 0244                      l887 030E                      l983 0156  
                    l975 00F6                      l969 02DA                      l889 0310  
                    l977 00FA                      l979 00FE                      u110 02EC  
                    u111 02E8                      u207 0202                      u127 0160  
                    u217 0214                      u137 0260                      u227 023A  
                    u147 0278                      u237 024C                      u157 028A  
                    u167 0190                      u177 01A2                      u187 01C8  
                    u197 01DA                      _hor 000C                      _min 000E  
                    _sec 0010                      wreg 000FE8                     _LATD 000F8C  
                   i1l45 001E                     i2l40 00F2                     _TMR0 000FD6  
                   _main 00F6                     fsr1l 000FE1                     btemp 0011  
                   start 0026             ___param_bank 000000           ??_LCD_Caracter 0003  
       __end_of_LCD_Init 02B0         __end_of_INT1_ISR 0026                    ?_main 0001  
                  _T1CON 000FCD                    i2l901 0048                    i2l911 0072  
                  i2l903 004C                    i2l921 008E                    i2l913 0076  
                  i2l905 005C                    i2l931 00C8                    i2l923 009E  
                  i2l915 0078                    i2l907 0060                    i2l933 00D0  
                  i2l925 00A2                    i2l917 0088                    i2l909 0062  
                  i2l935 00F0                    i2l927 00A4                    i2l919 008C  
                  i2l929 00B6                    i2l893 002C                    i2l895 0034  
                  i2l897 0036                    i2l899 0046                    _TMR1H 000FCF  
                  _TMR1L 000FCE                    _TRISD 000F95         __end_of_TMR1_ISR 00F6  
                  _hor_d 000B                    _min_d 000D                    _sec_d 000F  
                  tablat 000FF5                    ttemp5 0012                    ttemp6 0015  
                  ttemp7 0019                    status 000FD8                    wtemp8 0012  
        __initialization 02B0             __end_of_main 0176         __end_of_Int_Init 0320  
                 ??_main 0009            __activetblptr 000000                   _LCD_XY 02DA  
                 i2u2_40 0046                   i2u2_41 0042                   i2u3_40 005C  
                 i2u3_41 0058                   i2u4_40 0072                   i2u4_41 006E  
                 i2u5_40 0088                   i2u5_41 0084                   i2u6_40 009E  
                 i2u6_41 009A                   i2u7_40 00B6                   i2u7_41 00B2  
                 i2u8_40 00C8                   i2u8_41 00C4                   i2u9_40 00E0  
                 i2u9_41 00DA                   i2u9_46 00E2            ??_Timer1_Init 0003  
   __size_of_LCD_Comando 0072             __pdataCOMRAM 000B                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8     __end_of_LCD_Caracter 025A  
             __accesstop 0060  __end_of__initialization 02D0                ?_LCD_Init 0001  
              ?_INT1_ISR 0001            ___rparam_used 000001           __pcstackCOMRAM 0001  
              ?_TMR1_ISR 0001      __end_of_Timer1_Init 0316                  ?_LCD_XY 0005  
                LCD_XY@x 0005                  LCD_XY@y 0007                ?_Int_Init 0001  
             ??_LCD_Init 0005               ??_INT1_ISR 0002               ??_TMR1_ISR 0001  
       LCD_Caracter@data 0004          __size_of_LCD_XY 0028               ??_Int_Init 0003  
                __Hparam 0000              _Timer1_Init 0302                  __Lparam 0000  
                __pcinit 02B0                  __ramtop 0800                  __ptext0 00F6  
                __ptext1 0302                  __ptext2 02DA                  __ptext3 025A  
                __ptext4 0176                  __ptext5 01E8                  __ptext6 0316  
              _T0CONbits 000FD5    __size_of_LCD_Caracter 0072           LCD_Comando@cmd 0004  
         __pintcode_body 002A     end_of_initialization 02D0                  int_func 002A  
                postdec1 000FE5                  postinc0 000FEE             _LCD_Caracter 01E8  
         __end_of_LCD_XY 0302        __size_of_LCD_Init 0056        __size_of_INT1_ISR 000E  
          ??_LCD_Comando 0003            __pidataCOMRAM 0320        __size_of_TMR1_ISR 00EE  
    start_initialization 02B0                 ??_LCD_XY 0009        __size_of_Int_Init 000A  
    __end_of_LCD_Comando 01E8             ?_Timer1_Init 0001                __pintcode 0008  
            __pintcodelo 0018                 _LCD_Init 025A                 _INT1_ISR 0018  
               _LATDbits 000F8C                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
               _PIR1bits 000F9E                 _RCONbits 000FD0                 _TMR1_ISR 0008  
            _LCD_Comando 0176              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
              copy_data0 02C4                 _Int_Init 0316                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0080     __size_of_Timer1_Init 0014  
               int$flags 0011               _INTCONbits 000FF2                 intlevel1 0000  
               intlevel2 0000  
