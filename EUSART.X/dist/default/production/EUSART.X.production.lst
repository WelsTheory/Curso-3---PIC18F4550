

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Feb 16 21:08:00 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61  0000                     
    62                           ; Version 2.20
    63                           ; Generated 12/02/2020 GMT
    64                           ; 
    65                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F4550 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     _ADRES	set	4035
    97  0000                     _ADCON2bits	set	4032
    98  0000                     _ADCON0bits	set	4034
    99  0000                     _ADCON1bits	set	4033
   100  0000                     _LATDbits	set	3980
   101  0000                     _LATD	set	3980
   102  0000                     _INTCONbits	set	4082
   103  0000                     _RCONbits	set	4048
   104  0000                     _RCREG	set	4014
   105  0000                     _TXREG	set	4013
   106  0000                     _IPR1bits	set	3999
   107  0000                     _PIE1bits	set	3997
   108  0000                     _PIR1bits	set	3998
   109  0000                     _RCSTAbits	set	4011
   110  0000                     _TXSTAbits	set	4012
   111  0000                     _BAUDCONbits	set	4024
   112  0000                     _SPBRG	set	4015
   113  0000                     _TRISD	set	3989
   114                           
   115                           	psect	smallconst
   116  000800                     __psmallconst:
   117                           	callstack 0
   118  000800  00                 	db	0
   119  000801                     STR_2:
   120  000801  56                 	db	86	;'V'
   121  000802  6F                 	db	111	;'o'
   122  000803  6C                 	db	108	;'l'
   123  000804  74                 	db	116	;'t'
   124  000805  61                 	db	97	;'a'
   125  000806  6A                 	db	106	;'j'
   126  000807  65                 	db	101	;'e'
   127  000808  3A                 	db	58	;':'
   128  000809  20                 	db	32
   129  00080A  25                 	db	37
   130  00080B  30                 	db	48	;'0'
   131  00080C  2E                 	db	46
   132  00080D  32                 	db	50	;'2'
   133  00080E  66                 	db	102	;'f'
   134  00080F  56                 	db	86	;'V'
   135  000810  20                 	db	32
   136  000811  0A                 	db	10
   137  000812  00                 	db	0
   138  000813                     STR_1:
   139  000813  42                 	db	66	;'B'
   140  000814  69                 	db	105	;'i'
   141  000815  65                 	db	101	;'e'
   142  000816  6E                 	db	110	;'n'
   143  000817  76                 	db	118	;'v'
   144  000818  65                 	db	101	;'e'
   145  000819  6E                 	db	110	;'n'
   146  00081A  69                 	db	105	;'i'
   147  00081B  64                 	db	100	;'d'
   148  00081C  6F                 	db	111	;'o'
   149  00081D  20                 	db	32
   150  00081E  3A                 	db	58	;':'
   151  00081F  44                 	db	68	;'D'
   152  000820  00                 	db	0
   153  000821                     STR_3:
   154  000821  49                 	db	73	;'I'
   155  000822  4E                 	db	78	;'N'
   156  000823  46                 	db	70	;'F'
   157  000824  00                 	db	0
   158  000825                     STR_7:
   159  000825  4E                 	db	78	;'N'
   160  000826  41                 	db	65	;'A'
   161  000827  4E                 	db	78	;'N'
   162  000828  00                 	db	0
   163  000829                     STR_4:
   164  000829  69                 	db	105	;'i'
   165  00082A  6E                 	db	110	;'n'
   166  00082B  66                 	db	102	;'f'
   167  00082C  00                 	db	0
   168  00082D                     STR_8:
   169  00082D  6E                 	db	110	;'n'
   170  00082E  61                 	db	97	;'a'
   171  00082F  6E                 	db	110	;'n'
   172  000830  00                 	db	0
   173  000831                     STR_11:
   174  000831  6C                 	db	108	;'l'
   175  000832  66                 	db	102	;'f'
   176  000833  00                 	db	0
   177  000834  00                 	db	0	; dummy byte at the end
   178  0000                     
   179                           ; #config settings
   180                           
   181                           	psect	cinit
   182  0038B2                     __pcinit:
   183                           	callstack 0
   184  0038B2                     start_initialization:
   185                           	callstack 0
   186  0038B2                     __initialization:
   187                           	callstack 0
   188                           
   189                           ; Clear objects allocated to BANK1 (80 bytes)
   190  0038B2  EE01  F000         	lfsr	0,__pbssBANK1
   191  0038B6  0E50               	movlw	80
   192  0038B8                     clear_0:
   193  0038B8  6AEE               	clrf	postinc0,c
   194  0038BA  06E8               	decf	wreg,f,c
   195  0038BC  E1FD               	bnz	clear_0
   196                           
   197                           ; Clear objects allocated to BANK0 (50 bytes)
   198  0038BE  EE00  F0BC         	lfsr	0,__pbssBANK0
   199  0038C2  0E32               	movlw	50
   200  0038C4                     clear_1:
   201  0038C4  6AEE               	clrf	postinc0,c
   202  0038C6  06E8               	decf	wreg,f,c
   203  0038C8  E1FD               	bnz	clear_1
   204                           
   205                           ; Clear objects allocated to COMRAM (6 bytes)
   206  0038CA  6A59               	clrf	(__pbssCOMRAM+5)& (0+255),c
   207  0038CC  6A58               	clrf	(__pbssCOMRAM+4)& (0+255),c
   208  0038CE  6A57               	clrf	(__pbssCOMRAM+3)& (0+255),c
   209  0038D0  6A56               	clrf	(__pbssCOMRAM+2)& (0+255),c
   210  0038D2  6A55               	clrf	(__pbssCOMRAM+1)& (0+255),c
   211  0038D4  6A54               	clrf	__pbssCOMRAM& (0+255),c
   212  0038D6                     end_of_initialization:
   213                           	callstack 0
   214  0038D6                     __end_of__initialization:
   215                           	callstack 0
   216  0038D6  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   217  0038D8  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   218  0038DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   219  0038DC  6EF8               	movwf	tblptru,c
   220  0038DE  0100               	movlb	0
   221  0038E0  EFF7  F016         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMRAM
   224  000054                     __pbssCOMRAM:
   225                           	callstack 0
   226  000054                     _prec:
   227                           	callstack 0
   228  000054                     	ds	2
   229  000056                     _flags:
   230                           	callstack 0
   231  000056                     	ds	2
   232  000058                     _x:
   233                           	callstack 0
   234  000058                     	ds	1
   235  000059                     _valor:
   236                           	callstack 0
   237  000059                     	ds	1
   238                           
   239                           	psect	bssBANK0
   240  0000BC                     __pbssBANK0:
   241                           	callstack 0
   242  0000BC                     _datos:
   243                           	callstack 0
   244  0000BC                     	ds	16
   245  0000CC                     floorf@F524:
   246                           	callstack 0
   247  0000CC                     	ds	4
   248  0000D0                     ___fpclassifyf@F463:
   249                           	callstack 0
   250  0000D0                     	ds	4
   251  0000D4                     _vin:
   252                           	callstack 0
   253  0000D4                     	ds	4
   254  0000D8                     _nout:
   255                           	callstack 0
   256  0000D8                     	ds	2
   257  0000DA                     _width:
   258                           	callstack 0
   259  0000DA                     	ds	2
   260  0000DC                     _datos_adc:
   261                           	callstack 0
   262  0000DC                     	ds	16
   263  0000EC                     _valor_adc:
   264                           	callstack 0
   265  0000EC                     	ds	2
   266                           
   267                           	psect	bssBANK1
   268  000100                     __pbssBANK1:
   269                           	callstack 0
   270  000100                     _dbuf:
   271                           	callstack 0
   272  000100                     	ds	80
   273                           
   274                           	psect	cstackBANK0
   275  000060                     __pcstackBANK0:
   276                           	callstack 0
   277  000060                     efgtoa@ou:
   278                           	callstack 0
   279                           
   280                           ; 4 bytes @ 0x0
   281  000060                     	ds	4
   282  000064                     _efgtoa$1345:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x4
   286  000064                     	ds	2
   287  000066                     _efgtoa$1346:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x6
   291  000066                     	ds	2
   292  000068                     _efgtoa$1351:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x8
   296  000068                     	ds	2
   297  00006A                     _efgtoa$1355:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0xA
   301  00006A                     	ds	2
   302  00006C                     _efgtoa$1356:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0xC
   306  00006C                     	ds	2
   307  00006E                     _efgtoa$1357:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0xE
   311  00006E                     	ds	2
   312  000070                     efgtoa@t:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x10
   316  000070                     	ds	2
   317  000072                     efgtoa@pp:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x12
   321  000072                     	ds	2
   322  000074                     efgtoa@m:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x14
   326  000074                     	ds	2
   327  000076                     efgtoa@ne:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x16
   331  000076                     	ds	2
   332  000078                     efgtoa@d:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x18
   336  000078                     	ds	2
   337  00007A                     efgtoa@sign:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x1A
   341  00007A                     	ds	2
   342  00007C                     efgtoa@p:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x1C
   346  00007C                     	ds	2
   347  00007E                     efgtoa@nmode:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x1E
   351  00007E                     	ds	1
   352  00007F                     efgtoa@w:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x1F
   356  00007F                     	ds	2
   357  000081                     efgtoa@mode:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x21
   361  000081                     	ds	1
   362  000082                     efgtoa@h:
   363                           	callstack 0
   364                           
   365                           ; 4 bytes @ 0x22
   366  000082                     	ds	4
   367  000086                     efgtoa@l:
   368                           	callstack 0
   369                           
   370                           ; 4 bytes @ 0x26
   371  000086                     	ds	4
   372  00008A                     efgtoa@i:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x2A
   376  00008A                     	ds	2
   377  00008C                     efgtoa@g:
   378                           	callstack 0
   379                           
   380                           ; 4 bytes @ 0x2C
   381  00008C                     	ds	4
   382  000090                     efgtoa@e:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x30
   386  000090                     	ds	2
   387  000092                     efgtoa@n:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x32
   391  000092                     	ds	2
   392  000094                     efgtoa@u:
   393                           	callstack 0
   394                           
   395                           ; 4 bytes @ 0x34
   396  000094                     	ds	4
   397  000098                     vfpfcnvrt@done:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x38
   401  000098                     	ds	2
   402  00009A                     _vfpfcnvrt$1371:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x3A
   406  00009A                     	ds	2
   407  00009C                     _vfpfcnvrt$1375:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x3C
   411  00009C                     	ds	2
   412  00009E                     vfpfcnvrt@f:
   413                           	callstack 0
   414                           
   415                           ; 4 bytes @ 0x3E
   416  00009E                     	ds	4
   417  0000A2                     vfpfcnvrt@ct:
   418                           	callstack 0
   419                           
   420                           ; 3 bytes @ 0x42
   421  0000A2                     	ds	3
   422  0000A5                     vfpfcnvrt@c:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x45
   426  0000A5                     	ds	1
   427  0000A6                     vfprintf@cfmt:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x46
   431  0000A6                     	ds	2
   432  0000A8                     ?_sprintf:
   433                           	callstack 0
   434  0000A8                     sprintf@s:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x48
   438  0000A8                     	ds	2
   439  0000AA                     sprintf@fmt:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x4A
   443  0000AA                     	ds	8
   444  0000B2                     sprintf@ap:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x52
   448  0000B2                     	ds	2
   449  0000B4                     sprintf@f:
   450                           	callstack 0
   451                           
   452                           ; 6 bytes @ 0x54
   453  0000B4                     	ds	6
   454  0000BA                     ??_main:
   455                           
   456                           ; 1 bytes @ 0x5A
   457  0000BA                     	ds	2
   458                           
   459                           	psect	cstackCOMRAM
   460  000001                     __pcstackCOMRAM:
   461                           	callstack 0
   462  000001                     ??_RX_ISR:
   463  000001                     
   464                           ; 1 bytes @ 0x0
   465  000001                     	ds	3
   466  000004                     ??_INT1_ISR:
   467                           
   468                           ; 1 bytes @ 0x3
   469  000004                     	ds	1
   470  000005                     ??_LCD_Comando:
   471  000005                     ??_LCD_Caracter:
   472  000005                     ?_ADC_Read:
   473                           	callstack 0
   474  000005                     ?_strlen:
   475                           	callstack 0
   476  000005                     ?___fpclassifyf:
   477                           	callstack 0
   478  000005                     ?_isupper:
   479                           	callstack 0
   480  000005                     ?_isdigit:
   481                           	callstack 0
   482  000005                     ?_strncmp:
   483                           	callstack 0
   484  000005                     ?_isspace:
   485                           	callstack 0
   486  000005                     ?___wmul:
   487                           	callstack 0
   488  000005                     ?___awdiv:
   489                           	callstack 0
   490  000005                     ?___awmod:
   491                           	callstack 0
   492  000005                     ?___fladd:
   493                           	callstack 0
   494  000005                     ?___fldiv:
   495                           	callstack 0
   496  000005                     ?___flneg:
   497                           	callstack 0
   498  000005                     ?___fltol:
   499                           	callstack 0
   500  000005                     ?___xxtofl:
   501                           	callstack 0
   502  000005                     EUSART_Init@baud:
   503                           	callstack 0
   504  000005                     EUSART_Tx@data:
   505                           	callstack 0
   506  000005                     ___wmul@multiplier:
   507                           	callstack 0
   508  000005                     ___awdiv@dividend:
   509                           	callstack 0
   510  000005                     ___awmod@dividend:
   511                           	callstack 0
   512  000005                     isdigit@c:
   513                           	callstack 0
   514  000005                     isspace@c:
   515                           	callstack 0
   516  000005                     isupper@c:
   517                           	callstack 0
   518  000005                     fputc@c:
   519                           	callstack 0
   520  000005                     strcpy@dest:
   521                           	callstack 0
   522  000005                     strlen@s:
   523                           	callstack 0
   524  000005                     strncmp@_l:
   525                           	callstack 0
   526  000005                     ___fleq@ff1:
   527                           	callstack 0
   528  000005                     ___flneg@f1:
   529                           	callstack 0
   530  000005                     ___fltol@f1:
   531                           	callstack 0
   532  000005                     ___fladd@b:
   533                           	callstack 0
   534  000005                     ___fldiv@b:
   535                           	callstack 0
   536  000005                     ___xxtofl@val:
   537                           	callstack 0
   538  000005                     ___fpclassifyf@x:
   539                           	callstack 0
   540                           
   541                           ; 4 bytes @ 0x4
   542  000005                     	ds	1
   543  000006                     LCD_Comando@cmd:
   544                           	callstack 0
   545  000006                     LCD_Caracter@data:
   546                           	callstack 0
   547  000006                     EUSART_Cadena@dat:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x5
   551  000006                     	ds	1
   552  000007                     ??_LCD_Init:
   553  000007                     ??_ADC_Read:
   554  000007                     ??_isupper:
   555  000007                     ??_isdigit:
   556  000007                     ??_isspace:
   557  000007                     LCD_Cadena@dat:
   558                           	callstack 0
   559  000007                     ___wmul@multiplicand:
   560                           	callstack 0
   561  000007                     ___awdiv@divisor:
   562                           	callstack 0
   563  000007                     ___awmod@divisor:
   564                           	callstack 0
   565  000007                     fputc@fp:
   566                           	callstack 0
   567  000007                     strcpy@src:
   568                           	callstack 0
   569  000007                     strlen@a:
   570                           	callstack 0
   571  000007                     strncmp@_r:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x6
   575  000007                     	ds	1
   576  000008                     ADC_Read@ch:
   577                           	callstack 0
   578                           
   579                           ; 1 bytes @ 0x7
   580  000008                     	ds	1
   581  000009                     ??_fputc:
   582  000009                     ??___fpclassifyf:
   583  000009                     ??_strcpy:
   584  000009                     ??___fltol:
   585  000009                     ??___xxtofl:
   586  000009                     ___awdiv@counter:
   587                           	callstack 0
   588  000009                     ___awmod@counter:
   589                           	callstack 0
   590  000009                     ___wmul@product:
   591                           	callstack 0
   592  000009                     strncmp@n:
   593                           	callstack 0
   594  000009                     ___fleq@ff2:
   595                           	callstack 0
   596  000009                     ___fladd@a:
   597                           	callstack 0
   598  000009                     ___fldiv@a:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0x8
   602  000009                     	ds	1
   603  00000A                     ___awdiv@sign:
   604                           	callstack 0
   605  00000A                     ___awmod@sign:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x9
   609  00000A                     	ds	1
   610  00000B                     ??_strncmp:
   611  00000B                     ?_tolower:
   612                           	callstack 0
   613  00000B                     _isspace$1440:
   614                           	callstack 0
   615  00000B                     ___awdiv@quotient:
   616                           	callstack 0
   617  00000B                     strcpy@s:
   618                           	callstack 0
   619  00000B                     tolower@c:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0xA
   623  00000B                     	ds	1
   624  00000C                     ?_atoi:
   625                           	callstack 0
   626  00000C                     atoi@s:
   627                           	callstack 0
   628  00000C                     strncmp@l:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0xB
   632  00000C                     	ds	1
   633  00000D                     ??___fladd:
   634  00000D                     ??___fldiv:
   635  00000D                     ??_tolower:
   636  00000D                     ??___fleq:
   637  00000D                     ___fltol@sign1:
   638                           	callstack 0
   639  00000D                     ___xxtofl@sign:
   640                           	callstack 0
   641  00000D                     ___fpclassifyf@e:
   642                           	callstack 0
   643  00000D                     strcpy@d:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0xC
   647  00000D                     	ds	1
   648  00000E                     ??_atoi:
   649  00000E                     ___fltol@exp1:
   650                           	callstack 0
   651  00000E                     ___xxtofl@exp:
   652                           	callstack 0
   653  00000E                     fputs@s:
   654                           	callstack 0
   655  00000E                     strncmp@r:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0xD
   659  00000E                     	ds	1
   660  00000F                     ___xxtofl@arg:
   661                           	callstack 0
   662  00000F                     ___fpclassifyf@u:
   663                           	callstack 0
   664                           
   665                           ; 4 bytes @ 0xE
   666  00000F                     	ds	1
   667  000010                     fputs@fp:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0xF
   671  000010                     	ds	1
   672  000011                     ___fladd@signs:
   673                           	callstack 0
   674  000011                     _tolower$1504:
   675                           	callstack 0
   676  000011                     ___fldiv@rem:
   677                           	callstack 0
   678                           
   679                           ; 4 bytes @ 0x10
   680  000011                     	ds	1
   681  000012                     ___fladd@aexp:
   682                           	callstack 0
   683  000012                     fputs@c:
   684                           	callstack 0
   685  000012                     atoi@neg:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x11
   689  000012                     	ds	1
   690  000013                     ?___flmul:
   691                           	callstack 0
   692  000013                     ___fladd@bexp:
   693                           	callstack 0
   694  000013                     fputs@i:
   695                           	callstack 0
   696  000013                     ___flmul@b:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x12
   700  000013                     	ds	1
   701  000014                     ___fladd@grs:
   702                           	callstack 0
   703  000014                     _atoi$1409:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x13
   707  000014                     	ds	1
   708  000015                     ?_pad:
   709                           	callstack 0
   710  000015                     ___fldiv@sign:
   711                           	callstack 0
   712  000015                     pad@fp:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x14
   716  000015                     	ds	1
   717  000016                     ___fldiv@new_exp:
   718                           	callstack 0
   719  000016                     _atoi$1411:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x15
   723  000016                     	ds	1
   724  000017                     pad@buf:
   725                           	callstack 0
   726  000017                     ___flmul@a:
   727                           	callstack 0
   728                           
   729                           ; 4 bytes @ 0x16
   730  000017                     	ds	1
   731  000018                     _atoi$1410:
   732                           	callstack 0
   733  000018                     ___fldiv@grs:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x17
   737  000018                     	ds	1
   738  000019                     pad@p:
   739                           	callstack 0
   740  000019                     atoi@n:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x18
   744  000019                     	ds	2
   745  00001B                     ??___flmul:
   746  00001B                     ??_pad:
   747                           
   748                           ; 1 bytes @ 0x1A
   749  00001B                     	ds	1
   750  00001C                     ___fldiv@bexp:
   751                           	callstack 0
   752  00001C                     pad@i:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x1B
   756  00001C                     	ds	1
   757  00001D                     ___fldiv@aexp:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x1C
   761  00001D                     	ds	1
   762  00001E                     ?_floorf:
   763                           	callstack 0
   764  00001E                     pad@w:
   765                           	callstack 0
   766  00001E                     floorf@x:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x1D
   770  00001E                     	ds	1
   771  00001F                     ___flmul@sign:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x1E
   775  00001F                     	ds	1
   776  000020                     ___flmul@aexp:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0x1F
   780  000020                     	ds	1
   781  000021                     ___flmul@grs:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x20
   785  000021                     	ds	1
   786  000022                     ??_floorf:
   787                           
   788                           ; 1 bytes @ 0x21
   789  000022                     	ds	3
   790  000025                     ___flmul@bexp:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x24
   794  000025                     	ds	1
   795  000026                     ___flmul@prod:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x25
   799  000026                     	ds	2
   800  000028                     floorf@m:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0x27
   804  000028                     	ds	2
   805  00002A                     ___flmul@temp:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x29
   809  00002A                     	ds	2
   810  00002C                     ?___flsub:
   811                           	callstack 0
   812  00002C                     floorf@e:
   813                           	callstack 0
   814  00002C                     ___flge@ff1:
   815                           	callstack 0
   816  00002C                     ___flsub@b:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x2B
   820  00002C                     	ds	2
   821  00002E                     floorf@u:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x2D
   825  00002E                     	ds	2
   826  000030                     ___flge@ff2:
   827                           	callstack 0
   828  000030                     ___flsub@a:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0x2F
   832  000030                     	ds	4
   833  000034                     ??___flge:
   834                           
   835                           ; 1 bytes @ 0x33
   836  000034                     	ds	4
   837  000038                     ?_efgtoa:
   838                           	callstack 0
   839  000038                     efgtoa@fp:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x37
   843  000038                     	ds	2
   844  00003A                     efgtoa@f:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x39
   848  00003A                     	ds	4
   849  00003E                     efgtoa@c:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0x3D
   853  00003E                     	ds	1
   854  00003F                     ??_efgtoa:
   855                           
   856                           ; 1 bytes @ 0x3E
   857  00003F                     	ds	5
   858  000044                     ?_vfpfcnvrt:
   859                           	callstack 0
   860  000044                     vfpfcnvrt@fp:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x43
   864  000044                     	ds	2
   865  000046                     vfpfcnvrt@fmt:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x45
   869  000046                     	ds	2
   870  000048                     vfpfcnvrt@ap:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x47
   874  000048                     	ds	2
   875  00004A                     ??_vfpfcnvrt:
   876                           
   877                           ; 1 bytes @ 0x49
   878  00004A                     	ds	4
   879  00004E                     ?_vfprintf:
   880                           	callstack 0
   881  00004E                     vfprintf@fp:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x4D
   885  00004E                     	ds	2
   886  000050                     vfprintf@fmt:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x4F
   890  000050                     	ds	2
   891  000052                     vfprintf@ap:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x51
   895  000052                     	ds	2
   896  000054                     
   897                           ; 1 bytes @ 0x53
   898 ;;
   899 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   900 ;;
   901 ;; *************** function _main *****************
   902 ;; Defined at:
   903 ;;		line 24 in file "Programa_principal.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;		None
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   917 ;;      Params:         0       0       0       0       0       0       0       0       0
   918 ;;      Locals:         0       0       0       0       0       0       0       0       0
   919 ;;      Temps:          0       2       0       0       0       0       0       0       0
   920 ;;      Totals:         0       2       0       0       0       0       0       0       0
   921 ;;Total ram usage:        2 bytes
   922 ;; Hardware stack levels required when called:   10
   923 ;; This function calls:
   924 ;;		_ADC_Init
   925 ;;		_ADC_Read
   926 ;;		_EUSART_Cadena
   927 ;;		_EUSART_Init
   928 ;;		_Int_Init
   929 ;;		_LCD_Cadena
   930 ;;		_LCD_Init
   931 ;;		___flmul
   932 ;;		___xxtofl
   933 ;;		_sprintf
   934 ;; This function is called by:
   935 ;;		Startup code after reset
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text0
   940  002DEE                     __ptext0:
   941                           	callstack 0
   942  002DEE                     _main:
   943                           	callstack 21
   944  002DEE                     
   945                           ;Programa_principal.c: 25:     TRISD = 0x00;
   946  002DEE  0E00               	movlw	0
   947  002DF0  6E95               	movwf	149,c	;volatile
   948  002DF2                     
   949                           ;Programa_principal.c: 26:     EUSART_Init(31);
   950  002DF2  0E1F               	movlw	31
   951  002DF4  ECB0  F01C         	call	_EUSART_Init
   952  002DF8                     
   953                           ;Programa_principal.c: 27:     Int_Init();
   954  002DF8  ECCA  F01C         	call	_Int_Init	;wreg free
   955  002DFC                     
   956                           ;Programa_principal.c: 28:     LCD_Init();
   957  002DFC  ECEC  F01A         	call	_LCD_Init	;wreg free
   958  002E00                     
   959                           ;Programa_principal.c: 29:     ADC_Init();
   960  002E00  EC9D  F01C         	call	_ADC_Init	;wreg free
   961  002E04                     
   962                           ;Programa_principal.c: 30:     LCD_Cadena("Bienvenido :D");
   963  002E04  0E13               	movlw	low STR_1
   964  002E06  6E07               	movwf	LCD_Cadena@dat^0,c
   965  002E08  0E08               	movlw	high STR_1
   966  002E0A  6E08               	movwf	(LCD_Cadena@dat+1)^0,c
   967  002E0C  EC3E  F01C         	call	_LCD_Cadena	;wreg free
   968  002E10                     
   969                           ;Programa_principal.c: 31:     _delay((unsigned long)((1000)*(20000000UL/4000.0)));
   970  002E10  0E1A               	movlw	26
   971  002E12  0100               	movlb	0	; () banked
   972  002E14  6FBB               	movwf	(??_main+1)& (0+255),b
   973  002E16  0E5E               	movlw	94
   974  002E18  6FBA               	movwf	??_main& (0+255),b
   975  002E1A  0E6E               	movlw	110
   976  002E1C                     u7257:
   977  002E1C  2EE8               	decfsz	wreg,f,c
   978  002E1E  D7FE               	bra	u7257
   979  002E20  2FBA               	decfsz	??_main& (0+255),f,b
   980  002E22  D7FC               	bra	u7257
   981  002E24  2FBB               	decfsz	(??_main+1)& (0+255),f,b
   982  002E26  D7FA               	bra	u7257
   983  002E28  F000               	nop	
   984  002E2A                     l5607:
   985                           
   986                           ;Programa_principal.c: 39:         valor_adc = ADC_Read(0);
   987  002E2A  0E00               	movlw	0
   988  002E2C  ECAE  F01B         	call	_ADC_Read
   989  002E30  C005  F0EC         	movff	?_ADC_Read,_valor_adc
   990  002E34  C006  F0ED         	movff	?_ADC_Read+1,_valor_adc+1
   991  002E38                     
   992                           ;Programa_principal.c: 40:         vin = (5.0/1023)*valor_adc;
   993  002E38  C0EC  F005         	movff	_valor_adc,___xxtofl@val
   994  002E3C  C0ED  F006         	movff	_valor_adc+1,___xxtofl@val+1
   995  002E40  6A07               	clrf	(___xxtofl@val+2)^0,c
   996  002E42  6A08               	clrf	(___xxtofl@val+3)^0,c
   997  002E44  0E00               	movlw	0
   998  002E46  ECD1  F013         	call	___xxtofl
   999  002E4A  C005  F013         	movff	?___xxtofl,___flmul@b
  1000  002E4E  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1001  002E52  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1002  002E56  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1003  002E5A  0E0A               	movlw	10
  1004  002E5C  6E17               	movwf	___flmul@a^0,c
  1005  002E5E  0E28               	movlw	40
  1006  002E60  6E18               	movwf	(___flmul@a+1)^0,c
  1007  002E62  0EA0               	movlw	160
  1008  002E64  6E19               	movwf	(___flmul@a+2)^0,c
  1009  002E66  0E3B               	movlw	59
  1010  002E68  6E1A               	movwf	(___flmul@a+3)^0,c
  1011  002E6A  ECE6  F00E         	call	___flmul	;wreg free
  1012  002E6E  C013  F0D4         	movff	?___flmul,_vin
  1013  002E72  C014  F0D5         	movff	?___flmul+1,_vin+1
  1014  002E76  C015  F0D6         	movff	?___flmul+2,_vin+2
  1015  002E7A  C016  F0D7         	movff	?___flmul+3,_vin+3
  1016  002E7E                     
  1017                           ;Programa_principal.c: 41:         sprintf(datos_adc,"Voltaje: %0.2fV \n",vin);
  1018  002E7E  0EDC               	movlw	low _datos_adc
  1019  002E80  0100               	movlb	0	; () banked
  1020  002E82  6FA8               	movwf	sprintf@s& (0+255),b
  1021  002E84  0E00               	movlw	high _datos_adc
  1022  002E86  6FA9               	movwf	(sprintf@s+1)& (0+255),b
  1023  002E88  0E01               	movlw	low STR_2
  1024  002E8A  6FAA               	movwf	sprintf@fmt& (0+255),b
  1025  002E8C  0E08               	movlw	high STR_2
  1026  002E8E  6FAB               	movwf	(sprintf@fmt+1)& (0+255),b
  1027  002E90  C0D4  F0AC         	movff	_vin,?_sprintf+4
  1028  002E94  C0D5  F0AD         	movff	_vin+1,?_sprintf+5
  1029  002E98  C0D6  F0AE         	movff	_vin+2,?_sprintf+6
  1030  002E9C  C0D7  F0AF         	movff	_vin+3,?_sprintf+7
  1031  002EA0  EC17  F01B         	call	_sprintf	;wreg free
  1032  002EA4                     
  1033                           ;Programa_principal.c: 42:         EUSART_Cadena(datos_adc);
  1034  002EA4  0EDC               	movlw	low _datos_adc
  1035  002EA6  6E06               	movwf	EUSART_Cadena@dat^0,c
  1036  002EA8  0E00               	movlw	high _datos_adc
  1037  002EAA  6E07               	movwf	(EUSART_Cadena@dat+1)^0,c
  1038  002EAC  EC72  F01C         	call	_EUSART_Cadena	;wreg free
  1039  002EB0                     
  1040                           ;Programa_principal.c: 51:         _delay((unsigned long)((500)*(20000000UL/4000.0)));
  1041  002EB0  0E0D               	movlw	13
  1042  002EB2  0100               	movlb	0	; () banked
  1043  002EB4  6FBB               	movwf	(??_main+1)& (0+255),b
  1044  002EB6  0EAF               	movlw	175
  1045  002EB8  6FBA               	movwf	??_main& (0+255),b
  1046  002EBA  0EB6               	movlw	182
  1047  002EBC                     u7267:
  1048  002EBC  2EE8               	decfsz	wreg,f,c
  1049  002EBE  D7FE               	bra	u7267
  1050  002EC0  2FBA               	decfsz	??_main& (0+255),f,b
  1051  002EC2  D7FC               	bra	u7267
  1052  002EC4  2FBB               	decfsz	(??_main+1)& (0+255),f,b
  1053  002EC6  D7FA               	bra	u7267
  1054  002EC8  F000               	nop	
  1055  002ECA  EF15  F017         	goto	l5607
  1056  002ECE  EF13  F000         	goto	start
  1057  002ED2                     __end_of_main:
  1058                           	callstack 0
  1059                           
  1060 ;; *************** function _sprintf *****************
  1061 ;; Defined at:
  1062 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  s               2   72[BANK0 ] PTR unsigned char 
  1065 ;;		 -> datos_adc(16), 
  1066 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  1067 ;;		 -> STR_2(18), 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  f               6   84[BANK0 ] struct _IO_FILE
  1070 ;;  ap              2   82[BANK0 ] PTR void [1]
  1071 ;;		 -> ?_sprintf(2), 
  1072 ;;  ret             2    0        int 
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  2   72[BANK0 ] int 
  1075 ;; Registers used:
  1076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1082 ;;      Params:         0       8       0       0       0       0       0       0       0
  1083 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1084 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1085 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1086 ;;Total ram usage:       18 bytes
  1087 ;; Hardware stack levels used:    1
  1088 ;; Hardware stack levels required when called:    9
  1089 ;; This function calls:
  1090 ;;		_vfprintf
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text1
  1097  00362E                     __ptext1:
  1098                           	callstack 0
  1099  00362E                     _sprintf:
  1100                           	callstack 21
  1101  00362E  0EAC               	movlw	low (?_sprintf+4)
  1102  003630  0100               	movlb	0	; () banked
  1103  003632  6FB2               	movwf	sprintf@ap& (0+255),b
  1104  003634  0E00               	movlw	high (?_sprintf+4)
  1105  003636  6FB3               	movwf	(sprintf@ap+1)& (0+255),b
  1106  003638  C0A8  F0B4         	movff	sprintf@s,sprintf@f
  1107  00363C  C0A9  F0B5         	movff	sprintf@s+1,sprintf@f+1
  1108  003640                     
  1109                           ; BSR set to: 0
  1110  003640  0E00               	movlw	0
  1111  003642  6FB7               	movwf	(sprintf@f+3)& (0+255),b
  1112  003644  0E00               	movlw	0
  1113  003646  6FB6               	movwf	(sprintf@f+2)& (0+255),b
  1114  003648                     
  1115                           ; BSR set to: 0
  1116  003648  0E00               	movlw	0
  1117  00364A  6FB9               	movwf	(sprintf@f+5)& (0+255),b
  1118  00364C  0E00               	movlw	0
  1119  00364E  6FB8               	movwf	(sprintf@f+4)& (0+255),b
  1120  003650                     
  1121                           ; BSR set to: 0
  1122  003650  0EB4               	movlw	low sprintf@f
  1123  003652  6E4E               	movwf	vfprintf@fp^0,c
  1124  003654  0E00               	movlw	high sprintf@f
  1125  003656  6E4F               	movwf	(vfprintf@fp+1)^0,c
  1126  003658  C0AA  F050         	movff	sprintf@fmt,vfprintf@fmt
  1127  00365C  C0AB  F051         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1128  003660  0EB2               	movlw	low sprintf@ap
  1129  003662  6E52               	movwf	vfprintf@ap^0,c
  1130  003664  0E00               	movlw	high sprintf@ap
  1131  003666  6E53               	movwf	(vfprintf@ap+1)^0,c
  1132  003668  EC5D  F01A         	call	_vfprintf	;wreg free
  1133  00366C  0100               	movlb	0	; () banked
  1134  00366E  51B6               	movf	(sprintf@f+2)& (0+255),w,b
  1135  003670  25A8               	addwf	sprintf@s& (0+255),w,b
  1136  003672  6ED9               	movwf	fsr2l,c
  1137  003674  51B7               	movf	(sprintf@f+3)& (0+255),w,b
  1138  003676  21A9               	addwfc	(sprintf@s+1)& (0+255),w,b
  1139  003678  6EDA               	movwf	fsr2h,c
  1140  00367A  0E00               	movlw	0
  1141  00367C  6EDF               	movwf	indf2,c
  1142  00367E                     
  1143                           ; BSR set to: 0
  1144  00367E  0012               	return		;funcret
  1145  003680                     __end_of_sprintf:
  1146                           	callstack 0
  1147                           
  1148 ;; *************** function _vfprintf *****************
  1149 ;; Defined at:
  1150 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
  1153 ;;		 -> sprintf@f(6), 
  1154 ;;  fmt             2   79[COMRAM] PTR const unsigned char 
  1155 ;;		 -> STR_2(18), 
  1156 ;;  ap              2   81[COMRAM] PTR PTR void 
  1157 ;;		 -> sprintf@ap(2), 
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;  cfmt            2   70[BANK0 ] PTR unsigned char 
  1160 ;;		 -> STR_2(18), 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  2   77[COMRAM] int 
  1163 ;; Registers used:
  1164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1170 ;;      Params:         6       0       0       0       0       0       0       0       0
  1171 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1173 ;;      Totals:         6       2       0       0       0       0       0       0       0
  1174 ;;Total ram usage:        8 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; Hardware stack levels required when called:    8
  1177 ;; This function calls:
  1178 ;;		_vfpfcnvrt
  1179 ;; This function is called by:
  1180 ;;		_sprintf
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text2
  1185  0034BA                     __ptext2:
  1186                           	callstack 0
  1187  0034BA                     _vfprintf:
  1188                           	callstack 21
  1189  0034BA                     
  1190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1191  0034BA  C050  F0A6         	movff	vfprintf@fmt,vfprintf@cfmt
  1192  0034BE  C051  F0A7         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1193  0034C2                     
  1194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1195  0034C2  0E00               	movlw	0
  1196  0034C4  0100               	movlb	0	; () banked
  1197  0034C6  6FD9               	movwf	(_nout+1)& (0+255),b
  1198  0034C8  0E00               	movlw	0
  1199  0034CA  6FD8               	movwf	_nout& (0+255),b
  1200                           
  1201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1202  0034CC  EF7B  F01A         	goto	l5579
  1203  0034D0                     l5577:
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1207  0034D0  C04E  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1208  0034D4  C04F  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1209  0034D8  0EA6               	movlw	low vfprintf@cfmt
  1210  0034DA  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1211  0034DC  0E00               	movlw	high vfprintf@cfmt
  1212  0034DE  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1213  0034E0  C052  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1214  0034E4  C053  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1215  0034E8  ECF4  F009         	call	_vfpfcnvrt	;wreg free
  1216  0034EC  5044               	movf	?_vfpfcnvrt^0,w,c
  1217  0034EE  0100               	movlb	0	; () banked
  1218  0034F0  27D8               	addwf	_nout& (0+255),f,b
  1219  0034F2  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  1220  0034F4  23D9               	addwfc	(_nout+1)& (0+255),f,b
  1221  0034F6                     l5579:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1225  0034F6  C0A6  FFF6         	movff	vfprintf@cfmt,tblptrl
  1226  0034FA  C0A7  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1227  0034FE                     	if	0	;tblptru may be non-zero
  1228  0034FE                     	endif
  1229  0034FE                     	if	0	;tblptru may be non-zero
  1230  0034FE                     	endif
  1231  0034FE  0008               	tblrd		*
  1232  003500  50F5               	movf	tablat,w,c
  1233  003502  0900               	iorlw	0
  1234  003504  A4D8               	btfss	status,2,c
  1235  003506  EF87  F01A         	goto	u7241
  1236  00350A  EF89  F01A         	goto	u7240
  1237  00350E                     u7241:
  1238  00350E  EF68  F01A         	goto	l5577
  1239  003512                     u7240:
  1240  003512                     
  1241                           ; BSR set to: 0
  1242                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1243  003512  C0D8  F04E         	movff	_nout,?_vfprintf
  1244  003516  C0D9  F04F         	movff	_nout+1,?_vfprintf+1
  1245  00351A                     
  1246                           ; BSR set to: 0
  1247  00351A  0012               	return		;funcret
  1248  00351C                     __end_of_vfprintf:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function _vfpfcnvrt *****************
  1252 ;; Defined at:
  1253 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1256 ;;		 -> sprintf@f(6), 
  1257 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1258 ;;		 -> vfprintf@cfmt(2), 
  1259 ;;  ap              2   71[COMRAM] PTR PTR void 
  1260 ;;		 -> sprintf@ap(2), 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;  llu             8    0        unsigned long long 
  1263 ;;  ll              8    0        long long 
  1264 ;;  f               4   62[BANK0 ] long long 
  1265 ;;  ct              3   66[BANK0 ] unsigned char [3]
  1266 ;;  vp              3    0        PTR void 
  1267 ;;  cp              3    0        PTR unsigned char 
  1268 ;;  done            2   56[BANK0 ] int 
  1269 ;;  i               2    0        int 
  1270 ;;  c               1   69[BANK0 ] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  2   67[COMRAM] int 
  1273 ;; Registers used:
  1274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1280 ;;      Params:         6       0       0       0       0       0       0       0       0
  1281 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1282 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1283 ;;      Totals:        10      14       0       0       0       0       0       0       0
  1284 ;;Total ram usage:       24 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    7
  1287 ;; This function calls:
  1288 ;;		_atoi
  1289 ;;		_efgtoa
  1290 ;;		_fputc
  1291 ;;		_isdigit
  1292 ;;		_isupper
  1293 ;;		_strncmp
  1294 ;;		_tolower
  1295 ;; This function is called by:
  1296 ;;		_vfprintf
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text3
  1301  0013E8                     __ptext3:
  1302                           	callstack 0
  1303  0013E8                     _vfpfcnvrt:
  1304                           	callstack 21
  1305  0013E8                     
  1306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1307  0013E8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1308  0013EC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1309  0013F0  CFDE FFF6          	movff	postinc2,tblptrl
  1310  0013F4  CFDD FFF7          	movff	postdec2,tblptrh
  1311  0013F8                     	if	0	;tblptru may be non-zero
  1312  0013F8                     	endif
  1313  0013F8                     	if	0	;tblptru may be non-zero
  1314  0013F8                     	endif
  1315  0013F8  0008               	tblrd		*
  1316  0013FA  50F5               	movf	tablat,w,c
  1317  0013FC  0A25               	xorlw	37
  1318  0013FE  A4D8               	btfss	status,2,c
  1319  001400  EF04  F00A         	goto	u7081
  1320  001404  EF06  F00A         	goto	u7080
  1321  001408                     u7081:
  1322  001408  EF6A  F00C         	goto	l5555
  1323  00140C                     u7080:
  1324  00140C                     
  1325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1326  00140C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1327  001410  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1328  001414  2ADE               	incf	postinc2,f,c
  1329  001416  0E00               	movlw	0
  1330  001418  22DD               	addwfc	postdec2,f,c
  1331  00141A                     
  1332                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1333  00141A  0E00               	movlw	0
  1334  00141C  0100               	movlb	0	; () banked
  1335  00141E  6FDB               	movwf	(_width+1)& (0+255),b
  1336  001420  0E00               	movlw	0
  1337  001422  6FDA               	movwf	_width& (0+255),b
  1338  001424  C0DA  F056         	movff	_width,_flags
  1339  001428  C0DB  F057         	movff	_width+1,_flags+1
  1340  00142C                     
  1341                           ; BSR set to: 0
  1342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1343  00142C  6854               	setf	_prec^0,c
  1344  00142E  6855               	setf	(_prec+1)^0,c
  1345  001430                     
  1346                           ; BSR set to: 0
  1347                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  1348  001430  0E00               	movlw	0
  1349  001432  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1350  001434  0E00               	movlw	0
  1351  001436  6F98               	movwf	vfpfcnvrt@done& (0+255),b
  1352                           
  1353                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1354  001438  EF64  F00A         	goto	l5477
  1355  00143C                     l5451:
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  1359  00143C  8056               	bsf	_flags^0,0,c
  1360  00143E                     l5453:
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  1364  00143E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1365  001442  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1366  001446  2ADE               	incf	postinc2,f,c
  1367  001448  0E00               	movlw	0
  1368  00144A  22DD               	addwfc	postdec2,f,c
  1369                           
  1370                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  1371  00144C  EF64  F00A         	goto	l5477
  1372  001450                     l5455:
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  1376  001450  8256               	bsf	_flags^0,1,c
  1377  001452  EF1F  F00A         	goto	l5453
  1378  001456                     l5459:
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  1382  001456  8456               	bsf	_flags^0,2,c
  1383  001458  EF1F  F00A         	goto	l5453
  1384  00145C                     l5463:
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  1388  00145C  8656               	bsf	_flags^0,3,c
  1389  00145E  EF1F  F00A         	goto	l5453
  1390  001462                     l5467:
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  1394  001462  8856               	bsf	_flags^0,4,c
  1395  001464  EF1F  F00A         	goto	l5453
  1396  001468                     l5471:
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  1400  001468  0E00               	movlw	0
  1401  00146A  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1402  00146C  0E01               	movlw	1
  1403  00146E  6F98               	movwf	vfpfcnvrt@done& (0+255),b
  1404                           
  1405                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  1406  001470  EF64  F00A         	goto	l5477
  1407  001474                     l5475:
  1408                           
  1409                           ; BSR set to: 0
  1410  001474  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1411  001478  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1412  00147C  CFDE FFF6          	movff	postinc2,tblptrl
  1413  001480  CFDD FFF7          	movff	postdec2,tblptrh
  1414  001484                     	if	0	;tblptru may be non-zero
  1415  001484                     	endif
  1416  001484                     	if	0	;tblptru may be non-zero
  1417  001484                     	endif
  1418  001484  0008               	tblrd		*
  1419  001486  50F5               	movf	tablat,w,c
  1420  001488  6E4A               	movwf	??_vfpfcnvrt^0,c
  1421  00148A  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
  1422                           
  1423                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1424                           ; Switch size 1, requested type "simple"
  1425                           ; Number of cases is 1, Range of values is 0 to 0
  1426                           ; switch strategies available:
  1427                           ; Name         Instructions Cycles
  1428                           ; simple_byte            4     3 (average)
  1429                           ;	Chosen strategy is simple_byte
  1430  00148C  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1431  00148E  0A00               	xorlw	0	; case 0
  1432  001490  B4D8               	btfsc	status,2,c
  1433  001492  EF4D  F00A         	goto	l5687
  1434  001496  EF34  F00A         	goto	l5471
  1435  00149A                     l5687:
  1436                           
  1437                           ; BSR set to: 0
  1438                           ; Switch size 1, requested type "simple"
  1439                           ; Number of cases is 5, Range of values is 32 to 48
  1440                           ; switch strategies available:
  1441                           ; Name         Instructions Cycles
  1442                           ; simple_byte           16     9 (average)
  1443                           ;	Chosen strategy is simple_byte
  1444  00149A  504A               	movf	??_vfpfcnvrt^0,w,c
  1445  00149C  0A20               	xorlw	32	; case 32
  1446  00149E  B4D8               	btfsc	status,2,c
  1447  0014A0  EF2E  F00A         	goto	l5463
  1448  0014A4  0A03               	xorlw	3	; case 35
  1449  0014A6  B4D8               	btfsc	status,2,c
  1450  0014A8  EF31  F00A         	goto	l5467
  1451  0014AC  0A08               	xorlw	8	; case 43
  1452  0014AE  B4D8               	btfsc	status,2,c
  1453  0014B0  EF2B  F00A         	goto	l5459
  1454  0014B4  0A06               	xorlw	6	; case 45
  1455  0014B6  B4D8               	btfsc	status,2,c
  1456  0014B8  EF1E  F00A         	goto	l5451
  1457  0014BC  0A1D               	xorlw	29	; case 48
  1458  0014BE  B4D8               	btfsc	status,2,c
  1459  0014C0  EF28  F00A         	goto	l5455
  1460  0014C4  EF34  F00A         	goto	l5471
  1461  0014C8                     l5477:
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1465  0014C8  5198               	movf	vfpfcnvrt@done& (0+255),w,b
  1466  0014CA  1199               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1467  0014CC  B4D8               	btfsc	status,2,c
  1468  0014CE  EF6B  F00A         	goto	u7091
  1469  0014D2  EF6D  F00A         	goto	u7090
  1470  0014D6                     u7091:
  1471  0014D6  EF3A  F00A         	goto	l5475
  1472  0014DA                     u7090:
  1473  0014DA                     
  1474                           ; BSR set to: 0
  1475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  1476  0014DA  A056               	btfss	_flags^0,0,c
  1477  0014DC  EF72  F00A         	goto	u7101
  1478  0014E0  EF74  F00A         	goto	u7100
  1479  0014E4                     u7101:
  1480  0014E4  EF75  F00A         	goto	l5481
  1481  0014E8                     u7100:
  1482  0014E8                     
  1483                           ; BSR set to: 0
  1484                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  1485  0014E8  9256               	bcf	_flags^0,1,c
  1486  0014EA                     l5481:
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  1490  0014EA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1491  0014EE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1492  0014F2  CFDE FFF6          	movff	postinc2,tblptrl
  1493  0014F6  CFDD FFF7          	movff	postdec2,tblptrh
  1494  0014FA                     	if	0	;tblptru may be non-zero
  1495  0014FA                     	endif
  1496  0014FA                     	if	0	;tblptru may be non-zero
  1497  0014FA                     	endif
  1498  0014FA  0008               	tblrd		*
  1499  0014FC  50F5               	movf	tablat,w,c
  1500  0014FE  0A2E               	xorlw	46
  1501  001500  A4D8               	btfss	status,2,c
  1502  001502  EF85  F00A         	goto	u7111
  1503  001506  EF87  F00A         	goto	u7110
  1504  00150A                     u7111:
  1505  00150A  EF05  F00B         	goto	l5501
  1506  00150E                     u7110:
  1507  00150E                     
  1508                           ; BSR set to: 0
  1509                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  1510  00150E  0E00               	movlw	0
  1511  001510  6E55               	movwf	(_prec+1)^0,c
  1512  001512  0E00               	movlw	0
  1513  001514  6E54               	movwf	_prec^0,c
  1514  001516                     
  1515                           ; BSR set to: 0
  1516                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  1517  001516  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1518  00151A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1519  00151E  2ADE               	incf	postinc2,f,c
  1520  001520  0E00               	movlw	0
  1521  001522  22DD               	addwfc	postdec2,f,c
  1522  001524                     
  1523                           ; BSR set to: 0
  1524                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  1525  001524  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1526  001528  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1527  00152C  CFDE FFF6          	movff	postinc2,tblptrl
  1528  001530  CFDD FFF7          	movff	postdec2,tblptrh
  1529  001534                     	if	0	;tblptru may be non-zero
  1530  001534                     	endif
  1531  001534                     	if	0	;tblptru may be non-zero
  1532  001534                     	endif
  1533  001534  0008               	tblrd		*
  1534  001536  50F5               	movf	tablat,w,c
  1535  001538  0A2A               	xorlw	42
  1536  00153A  A4D8               	btfss	status,2,c
  1537  00153C  EFA2  F00A         	goto	u7121
  1538  001540  EFA4  F00A         	goto	u7120
  1539  001544                     u7121:
  1540  001544  EFC1  F00A         	goto	l5491
  1541  001548                     u7120:
  1542  001548                     
  1543                           ; BSR set to: 0
  1544                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  1545  001548  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1546  00154C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1547  001550  2ADE               	incf	postinc2,f,c
  1548  001552  0E00               	movlw	0
  1549  001554  22DD               	addwfc	postdec2,f,c
  1550                           
  1551                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1552  001556  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1553  00155A  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1554  00155E  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1555  001562  0E02               	movlw	2
  1556  001564  26DE               	addwf	postinc2,f,c
  1557  001566  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1558  00156A  0E00               	movlw	0
  1559  00156C  22DD               	addwfc	postdec2,f,c
  1560  00156E  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1561  001572  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1562  001576  CFDE F054          	movff	postinc2,_prec
  1563  00157A  CFDD F055          	movff	postdec2,_prec+1
  1564                           
  1565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  1566  00157E  EF05  F00B         	goto	l5501
  1567  001582                     l5491:
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  1571  001582  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1572  001586  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1573  00158A  CFDE F00C          	movff	postinc2,atoi@s
  1574  00158E  CFDD F00D          	movff	postdec2,atoi@s+1
  1575  001592  ECAB  F014         	call	_atoi	;wreg free
  1576  001596  C00C  F054         	movff	?_atoi,_prec
  1577  00159A  C00D  F055         	movff	?_atoi+1,_prec+1
  1578                           
  1579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1580  00159E  EFD8  F00A         	goto	l5495
  1581  0015A2                     l5493:
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  1585  0015A2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1586  0015A6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1587  0015AA  2ADE               	incf	postinc2,f,c
  1588  0015AC  0E00               	movlw	0
  1589  0015AE  22DD               	addwfc	postdec2,f,c
  1590  0015B0                     l5495:
  1591  0015B0  0ED0               	movlw	208
  1592  0015B2  6E4A               	movwf	??_vfpfcnvrt^0,c
  1593  0015B4  0EFF               	movlw	255
  1594  0015B6  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  1595  0015B8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1596  0015BC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1597  0015C0  CFDE FFF6          	movff	postinc2,tblptrl
  1598  0015C4  CFDD FFF7          	movff	postdec2,tblptrh
  1599  0015C8                     	if	0	;tblptru may be non-zero
  1600  0015C8                     	endif
  1601  0015C8                     	if	0	;tblptru may be non-zero
  1602  0015C8                     	endif
  1603  0015C8  0008               	tblrd		*
  1604  0015CA  50F5               	movf	tablat,w,c
  1605  0015CC  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  1606  0015CE  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  1607  0015D0  504A               	movf	??_vfpfcnvrt^0,w,c
  1608  0015D2  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1609  0015D4  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1610  0015D6  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1611  0015D8  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  1612  0015DA  E10A               	bnz	u7130
  1613  0015DC  0E0A               	movlw	10
  1614  0015DE  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1615  0015E0  A0D8               	btfss	status,0,c
  1616  0015E2  EFF5  F00A         	goto	u7131
  1617  0015E6  EFF8  F00A         	goto	u7130
  1618  0015EA                     u7131:
  1619  0015EA  0E01               	movlw	1
  1620  0015EC  EFF9  F00A         	goto	u7140
  1621  0015F0                     u7130:
  1622  0015F0  0E00               	movlw	0
  1623  0015F2                     u7140:
  1624  0015F2  0100               	movlb	0	; () banked
  1625  0015F4  6F9A               	movwf	_vfpfcnvrt$1371& (0+255),b
  1626  0015F6  6B9B               	clrf	(_vfpfcnvrt$1371+1)& (0+255),b
  1627  0015F8                     
  1628                           ; BSR set to: 0
  1629  0015F8  519A               	movf	_vfpfcnvrt$1371& (0+255),w,b
  1630  0015FA  119B               	iorwf	(_vfpfcnvrt$1371+1)& (0+255),w,b
  1631  0015FC  A4D8               	btfss	status,2,c
  1632  0015FE  EF03  F00B         	goto	u7151
  1633  001602  EF05  F00B         	goto	u7150
  1634  001606                     u7151:
  1635  001606  EFD1  F00A         	goto	l5493
  1636  00160A                     u7150:
  1637  00160A                     l5501:
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  1641  00160A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1642  00160E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1643  001612  CFDE FFF6          	movff	postinc2,tblptrl
  1644  001616  CFDD FFF7          	movff	postdec2,tblptrh
  1645  00161A                     	if	0	;tblptru may be non-zero
  1646  00161A                     	endif
  1647  00161A                     	if	0	;tblptru may be non-zero
  1648  00161A                     	endif
  1649  00161A  0008               	tblrd		*
  1650  00161C  50F5               	movf	tablat,w,c
  1651  00161E  6E0B               	movwf	tolower@c^0,c
  1652  001620  6A0C               	clrf	(tolower@c+1)^0,c
  1653  001622  EC8E  F01A         	call	_tolower	;wreg free
  1654  001626  500B               	movf	?_tolower^0,w,c
  1655  001628  0100               	movlb	0	; () banked
  1656  00162A  6FA2               	movwf	vfpfcnvrt@ct& (0+255),b
  1657  00162C                     
  1658                           ; BSR set to: 0
  1659                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  1660  00162C  51A2               	movf	vfpfcnvrt@ct& (0+255),w,b
  1661  00162E  B4D8               	btfsc	status,2,c
  1662  001630  EF1C  F00B         	goto	u7161
  1663  001634  EF1E  F00B         	goto	u7160
  1664  001638                     u7161:
  1665  001638  EF58  F00B         	goto	l5511
  1666  00163C                     u7160:
  1667  00163C                     
  1668                           ; BSR set to: 0
  1669                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  1670  00163C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1671  001640  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1672  001644  CFDE F04A          	movff	postinc2,??_vfpfcnvrt
  1673  001648  CFDD F04B          	movff	postdec2,??_vfpfcnvrt+1
  1674  00164C  0E01               	movlw	1
  1675  00164E  264A               	addwf	??_vfpfcnvrt^0,f,c
  1676  001650  0E00               	movlw	0
  1677  001652  224B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1678  001654  C04A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1679  001658  C04B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1680  00165C                     	if	0	;tblptru may be non-zero
  1681  00165C                     	endif
  1682  00165C                     	if	0	;tblptru may be non-zero
  1683  00165C                     	endif
  1684  00165C  0008               	tblrd		*
  1685  00165E  50F5               	movf	tablat,w,c
  1686  001660  6E0B               	movwf	tolower@c^0,c
  1687  001662  6A0C               	clrf	(tolower@c+1)^0,c
  1688  001664  EC8E  F01A         	call	_tolower	;wreg free
  1689  001668  500B               	movf	?_tolower^0,w,c
  1690  00166A  0100               	movlb	0	; () banked
  1691  00166C  6FA3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1692  00166E                     
  1693                           ; BSR set to: 0
  1694                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  1695  00166E  51A3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1696  001670  B4D8               	btfsc	status,2,c
  1697  001672  EF3D  F00B         	goto	u7171
  1698  001676  EF3F  F00B         	goto	u7170
  1699  00167A                     u7171:
  1700  00167A  EF58  F00B         	goto	l5511
  1701  00167E                     u7170:
  1702  00167E                     
  1703                           ; BSR set to: 0
  1704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  1705  00167E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1706  001682  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1707  001686  CFDE F04A          	movff	postinc2,??_vfpfcnvrt
  1708  00168A  CFDD F04B          	movff	postdec2,??_vfpfcnvrt+1
  1709  00168E  0E02               	movlw	2
  1710  001690  264A               	addwf	??_vfpfcnvrt^0,f,c
  1711  001692  0E00               	movlw	0
  1712  001694  224B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1713  001696  C04A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1714  00169A  C04B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1715  00169E                     	if	0	;tblptru may be non-zero
  1716  00169E                     	endif
  1717  00169E                     	if	0	;tblptru may be non-zero
  1718  00169E                     	endif
  1719  00169E  0008               	tblrd		*
  1720  0016A0  50F5               	movf	tablat,w,c
  1721  0016A2  6E0B               	movwf	tolower@c^0,c
  1722  0016A4  6A0C               	clrf	(tolower@c+1)^0,c
  1723  0016A6  EC8E  F01A         	call	_tolower	;wreg free
  1724  0016AA  500B               	movf	?_tolower^0,w,c
  1725  0016AC  0100               	movlb	0	; () banked
  1726  0016AE  6FA4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1727  0016B0                     l5511:
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  1731  0016B0  0E66               	movlw	102
  1732  0016B2  19A2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1733  0016B4  A4D8               	btfss	status,2,c
  1734  0016B6  EF5F  F00B         	goto	u7181
  1735  0016BA  EF61  F00B         	goto	u7180
  1736  0016BE                     u7181:
  1737  0016BE  EFA1  F00B         	goto	l5523
  1738  0016C2                     u7180:
  1739  0016C2                     
  1740                           ; BSR set to: 0
  1741                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  1742  0016C2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1743  0016C6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1744  0016CA  CFDE FFF6          	movff	postinc2,tblptrl
  1745  0016CE  CFDD FFF7          	movff	postdec2,tblptrh
  1746  0016D2                     	if	0	;tblptru may be non-zero
  1747  0016D2                     	endif
  1748  0016D2                     	if	0	;tblptru may be non-zero
  1749  0016D2                     	endif
  1750  0016D2  0008               	tblrd		*
  1751  0016D4  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  1752  0016D8                     
  1753                           ; BSR set to: 0
  1754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  1755  0016D8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1756  0016DC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1757  0016E0  2ADE               	incf	postinc2,f,c
  1758  0016E2  0E00               	movlw	0
  1759  0016E4  22DD               	addwfc	postdec2,f,c
  1760  0016E6                     
  1761                           ; BSR set to: 0
  1762                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1763  0016E6  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1764  0016EA  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1765  0016EE  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1766  0016F2  0E04               	movlw	4
  1767  0016F4  26DE               	addwf	postinc2,f,c
  1768  0016F6  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1769  0016FA  0E00               	movlw	0
  1770  0016FC  22DD               	addwfc	postdec2,f,c
  1771  0016FE  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1772  001702  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1773  001706  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  1774  00170A  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  1775  00170E  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  1776  001712  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  1777  001716                     l5519:
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  1781  001716  C044  F038         	movff	vfpfcnvrt@fp,efgtoa@fp
  1782  00171A  C045  F039         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1783  00171E  C09E  F03A         	movff	vfpfcnvrt@f,efgtoa@f
  1784  001722  C09F  F03B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1785  001726  C0A0  F03C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1786  00172A  C0A1  F03D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1787  00172E  C0A5  F03E         	movff	vfpfcnvrt@c,efgtoa@c
  1788  001732  EC1B  F004         	call	_efgtoa	;wreg free
  1789  001736  C038  F044         	movff	?_efgtoa,?_vfpfcnvrt
  1790  00173A  C039  F045         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1791  00173E  EF85  F00C         	goto	l999
  1792  001742                     l5523:
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1796  001742  0EA2               	movlw	low vfpfcnvrt@ct
  1797  001744  6E05               	movwf	strncmp@_l^0,c
  1798  001746  0E00               	movlw	high vfpfcnvrt@ct
  1799  001748  6E06               	movwf	(strncmp@_l+1)^0,c
  1800  00174A  0E31               	movlw	low STR_11
  1801  00174C  6E07               	movwf	strncmp@_r^0,c
  1802  00174E  0E08               	movlw	high STR_11
  1803  001750  6E08               	movwf	(strncmp@_r+1)^0,c
  1804  001752  0E00               	movlw	0
  1805  001754  6E0A               	movwf	(strncmp@n+1)^0,c
  1806  001756  0E02               	movlw	2
  1807  001758  6E09               	movwf	strncmp@n^0,c
  1808  00175A  EC69  F017         	call	_strncmp	;wreg free
  1809  00175E  5005               	movf	?_strncmp^0,w,c
  1810  001760  1006               	iorwf	(?_strncmp+1)^0,w,c
  1811  001762  A4D8               	btfss	status,2,c
  1812  001764  EFB6  F00B         	goto	u7191
  1813  001768  EFB8  F00B         	goto	u7190
  1814  00176C                     u7191:
  1815  00176C  EF34  F00C         	goto	l5539
  1816  001770                     u7190:
  1817  001770                     
  1818                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1819  001770  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1820  001774  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1821  001778  CFDE F04A          	movff	postinc2,??_vfpfcnvrt
  1822  00177C  CFDD F04B          	movff	postdec2,??_vfpfcnvrt+1
  1823  001780  0E01               	movlw	1
  1824  001782  264A               	addwf	??_vfpfcnvrt^0,f,c
  1825  001784  0E00               	movlw	0
  1826  001786  224B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1827  001788  C04A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1828  00178C  C04B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1829  001790                     	if	0	;tblptru may be non-zero
  1830  001790                     	endif
  1831  001790                     	if	0	;tblptru may be non-zero
  1832  001790                     	endif
  1833  001790  0008               	tblrd		*
  1834  001792  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  1835  001796  0EBF               	movlw	191
  1836  001798  6E4A               	movwf	??_vfpfcnvrt^0,c
  1837  00179A  0EFF               	movlw	255
  1838  00179C  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  1839  00179E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1840  0017A2  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1841  0017A6  CFDE FFF6          	movff	postinc2,tblptrl
  1842  0017AA  CFDD FFF7          	movff	postdec2,tblptrh
  1843  0017AE                     	if	0	;tblptru may be non-zero
  1844  0017AE                     	endif
  1845  0017AE                     	if	0	;tblptru may be non-zero
  1846  0017AE                     	endif
  1847  0017AE  0008               	tblrd		*
  1848  0017B0  50F5               	movf	tablat,w,c
  1849  0017B2  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  1850  0017B4  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  1851  0017B6  504A               	movf	??_vfpfcnvrt^0,w,c
  1852  0017B8  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1853  0017BA  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1854  0017BC  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1855  0017BE  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  1856  0017C0  E10A               	bnz	u7200
  1857  0017C2  0E1A               	movlw	26
  1858  0017C4  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1859  0017C6  A0D8               	btfss	status,0,c
  1860  0017C8  EFE8  F00B         	goto	u7201
  1861  0017CC  EFEB  F00B         	goto	u7200
  1862  0017D0                     u7201:
  1863  0017D0  0E01               	movlw	1
  1864  0017D2  EFEC  F00B         	goto	u7210
  1865  0017D6                     u7200:
  1866  0017D6  0E00               	movlw	0
  1867  0017D8                     u7210:
  1868  0017D8  0100               	movlb	0	; () banked
  1869  0017DA  6F9C               	movwf	_vfpfcnvrt$1375& (0+255),b
  1870  0017DC  6B9D               	clrf	(_vfpfcnvrt$1375+1)& (0+255),b
  1871  0017DE                     
  1872                           ; BSR set to: 0
  1873  0017DE  519C               	movf	_vfpfcnvrt$1375& (0+255),w,b
  1874  0017E0  119D               	iorwf	(_vfpfcnvrt$1375+1)& (0+255),w,b
  1875  0017E2  B4D8               	btfsc	status,2,c
  1876  0017E4  EFF6  F00B         	goto	u7221
  1877  0017E8  EFF8  F00B         	goto	u7220
  1878  0017EC                     u7221:
  1879  0017EC  EF12  F00C         	goto	l5533
  1880  0017F0                     u7220:
  1881  0017F0                     
  1882                           ; BSR set to: 0
  1883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1884  0017F0  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1885  0017F4  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1886  0017F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1887  0017FC  0E04               	movlw	4
  1888  0017FE  26DE               	addwf	postinc2,f,c
  1889  001800  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1890  001804  0E00               	movlw	0
  1891  001806  22DD               	addwfc	postdec2,f,c
  1892  001808  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1893  00180C  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1894  001810  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  1895  001814  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  1896  001818  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  1897  00181C  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  1898                           
  1899                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  1900  001820  EF2A  F00C         	goto	l1006
  1901  001824                     l5533:
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1905  001824  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1906  001828  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1907  00182C  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1908  001830  0E04               	movlw	4
  1909  001832  26DE               	addwf	postinc2,f,c
  1910  001834  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1911  001838  0E00               	movlw	0
  1912  00183A  22DD               	addwfc	postdec2,f,c
  1913  00183C  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1914  001840  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1915  001844  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  1916  001848  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  1917  00184C  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  1918  001850  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  1919  001854                     l1006:
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1923  001854  0E02               	movlw	2
  1924  001856  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1925  00185A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1926  00185E  26DE               	addwf	postinc2,f,c
  1927  001860  0E00               	movlw	0
  1928  001862  22DD               	addwfc	postdec2,f,c
  1929  001864  EF8B  F00B         	goto	l5519
  1930  001868                     l5539:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  1933  001868  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1934  00186C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1935  001870  CFDE FFF6          	movff	postinc2,tblptrl
  1936  001874  CFDD FFF7          	movff	postdec2,tblptrh
  1937  001878                     	if	0	;tblptru may be non-zero
  1938  001878                     	endif
  1939  001878                     	if	0	;tblptru may be non-zero
  1940  001878                     	endif
  1941  001878  0008               	tblrd		*
  1942  00187A  50F5               	movf	tablat,w,c
  1943  00187C  0A25               	xorlw	37
  1944  00187E  A4D8               	btfss	status,2,c
  1945  001880  EF44  F00C         	goto	u7231
  1946  001884  EF46  F00C         	goto	u7230
  1947  001888                     u7231:
  1948  001888  EF5D  F00C         	goto	l5549
  1949  00188C                     u7230:
  1950  00188C                     
  1951                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  1952  00188C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1953  001890  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1954  001894  2ADE               	incf	postinc2,f,c
  1955  001896  0E00               	movlw	0
  1956  001898  22DD               	addwfc	postdec2,f,c
  1957  00189A                     
  1958                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  1959  00189A  0E00               	movlw	0
  1960  00189C  6E06               	movwf	(fputc@c+1)^0,c
  1961  00189E  0E25               	movlw	37
  1962  0018A0  6E05               	movwf	fputc@c^0,c
  1963  0018A2  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1964  0018A6  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1965  0018AA  ECD4  F017         	call	_fputc	;wreg free
  1966  0018AE                     l5545:
  1967                           
  1968                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  1969  0018AE  0E00               	movlw	0
  1970  0018B0  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1971  0018B2  0E01               	movlw	1
  1972  0018B4  6E44               	movwf	?_vfpfcnvrt^0,c
  1973  0018B6  EF85  F00C         	goto	l999
  1974  0018BA                     l5549:
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  1977  0018BA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1978  0018BE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1979  0018C2  2ADE               	incf	postinc2,f,c
  1980  0018C4  0E00               	movlw	0
  1981  0018C6  22DD               	addwfc	postdec2,f,c
  1982  0018C8                     
  1983                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  1984  0018C8  0E00               	movlw	0
  1985  0018CA  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1986  0018CC  0E00               	movlw	0
  1987  0018CE  6E44               	movwf	?_vfpfcnvrt^0,c
  1988  0018D0  EF85  F00C         	goto	l999
  1989  0018D4                     l5555:
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  1992  0018D4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1993  0018D8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1994  0018DC  CFDE FFF6          	movff	postinc2,tblptrl
  1995  0018E0  CFDD FFF7          	movff	postdec2,tblptrh
  1996  0018E4                     	if	0	;tblptru may be non-zero
  1997  0018E4                     	endif
  1998  0018E4                     	if	0	;tblptru may be non-zero
  1999  0018E4                     	endif
  2000  0018E4  0008               	tblrd		*
  2001  0018E6  50F5               	movf	tablat,w,c
  2002  0018E8  6E05               	movwf	fputc@c^0,c
  2003  0018EA  6A06               	clrf	(fputc@c+1)^0,c
  2004  0018EC  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2005  0018F0  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2006  0018F4  ECD4  F017         	call	_fputc	;wreg free
  2007  0018F8                     
  2008                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2009  0018F8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2010  0018FC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2011  001900  2ADE               	incf	postinc2,f,c
  2012  001902  0E00               	movlw	0
  2013  001904  22DD               	addwfc	postdec2,f,c
  2014  001906  EF57  F00C         	goto	l5545
  2015  00190A                     l999:
  2016  00190A  0012               	return		;funcret
  2017  00190C                     __end_of_vfpfcnvrt:
  2018                           	callstack 0
  2019                           
  2020 ;; *************** function _strncmp *****************
  2021 ;; Defined at:
  2022 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  _l              2    4[COMRAM] PTR const unsigned char 
  2025 ;;		 -> vfpfcnvrt@ct(3), 
  2026 ;;  _r              2    6[COMRAM] PTR const unsigned char 
  2027 ;;		 -> STR_13(3), 
  2028 ;;  n               2    8[COMRAM] unsigned int 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  r               2   13[COMRAM] PTR const unsigned char 
  2031 ;;		 -> STR_13(3), 
  2032 ;;  l               2   11[COMRAM] PTR const unsigned char 
  2033 ;;		 -> vfpfcnvrt@ct(3), 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  2    4[COMRAM] int 
  2036 ;; Registers used:
  2037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2043 ;;      Params:         6       0       0       0       0       0       0       0       0
  2044 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2045 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2046 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2047 ;;Total ram usage:       11 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    2
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_vfpfcnvrt
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text4
  2058  002ED2                     __ptext4:
  2059                           	callstack 0
  2060  002ED2                     _strncmp:
  2061                           	callstack 25
  2062  002ED2  C005  F00C         	movff	strncmp@_l,strncmp@l
  2063  002ED6  C006  F00D         	movff	strncmp@_l+1,strncmp@l+1
  2064  002EDA  C007  F00E         	movff	strncmp@_r,strncmp@r
  2065  002EDE  C008  F00F         	movff	strncmp@_r+1,strncmp@r+1
  2066  002EE2  0609               	decf	strncmp@n^0,f,c
  2067  002EE4  A0D8               	btfss	status,0,c
  2068  002EE6  060A               	decf	(strncmp@n+1)^0,f,c
  2069  002EE8  2809               	incf	strncmp@n^0,w,c
  2070  002EEA  E106               	bnz	u7031
  2071  002EEC  280A               	incf	(strncmp@n+1)^0,w,c
  2072  002EEE  A4D8               	btfss	status,2,c
  2073  002EF0  EF7C  F017         	goto	u7031
  2074  002EF4  EF7E  F017         	goto	u7030
  2075  002EF8                     u7031:
  2076  002EF8  EF8B  F017         	goto	l5429
  2077  002EFC                     u7030:
  2078  002EFC  0E00               	movlw	0
  2079  002EFE  6E06               	movwf	(?_strncmp+1)^0,c
  2080  002F00  0E00               	movlw	0
  2081  002F02  6E05               	movwf	?_strncmp^0,c
  2082  002F04  EFD3  F017         	goto	l1127
  2083  002F08                     l5427:
  2084  002F08  4A0C               	infsnz	strncmp@l^0,f,c
  2085  002F0A  2A0D               	incf	(strncmp@l+1)^0,f,c
  2086  002F0C  4A0E               	infsnz	strncmp@r^0,f,c
  2087  002F0E  2A0F               	incf	(strncmp@r+1)^0,f,c
  2088  002F10  0609               	decf	strncmp@n^0,f,c
  2089  002F12  A0D8               	btfss	status,0,c
  2090  002F14  060A               	decf	(strncmp@n+1)^0,f,c
  2091  002F16                     l5429:
  2092  002F16  C00C  FFD9         	movff	strncmp@l,fsr2l
  2093  002F1A  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2094  002F1E  50DF               	movf	indf2,w,c
  2095  002F20  B4D8               	btfsc	status,2,c
  2096  002F22  EF95  F017         	goto	u7041
  2097  002F26  EF97  F017         	goto	u7040
  2098  002F2A                     u7041:
  2099  002F2A  EFC2  F017         	goto	l5437
  2100  002F2E                     u7040:
  2101  002F2E  C00E  FFF6         	movff	strncmp@r,tblptrl
  2102  002F32  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2103  002F36                     	if	0	;tblptru may be non-zero
  2104  002F36                     	endif
  2105  002F36                     	if	0	;tblptru may be non-zero
  2106  002F36                     	endif
  2107  002F36  0008               	tblrd		*
  2108  002F38  50F5               	movf	tablat,w,c
  2109  002F3A  0900               	iorlw	0
  2110  002F3C  B4D8               	btfsc	status,2,c
  2111  002F3E  EFA3  F017         	goto	u7051
  2112  002F42  EFA5  F017         	goto	u7050
  2113  002F46                     u7051:
  2114  002F46  EFC2  F017         	goto	l5437
  2115  002F4A                     u7050:
  2116  002F4A  5009               	movf	strncmp@n^0,w,c
  2117  002F4C  100A               	iorwf	(strncmp@n+1)^0,w,c
  2118  002F4E  B4D8               	btfsc	status,2,c
  2119  002F50  EFAC  F017         	goto	u7061
  2120  002F54  EFAE  F017         	goto	u7060
  2121  002F58                     u7061:
  2122  002F58  EFC2  F017         	goto	l5437
  2123  002F5C                     u7060:
  2124  002F5C  C00C  FFD9         	movff	strncmp@l,fsr2l
  2125  002F60  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2126  002F64  50DF               	movf	indf2,w,c
  2127  002F66  6E0B               	movwf	??_strncmp^0,c
  2128  002F68  C00E  FFF6         	movff	strncmp@r,tblptrl
  2129  002F6C  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2130  002F70                     	if	0	;tblptru may be non-zero
  2131  002F70                     	endif
  2132  002F70                     	if	0	;tblptru may be non-zero
  2133  002F70                     	endif
  2134  002F70  0008               	tblrd		*
  2135  002F72  50F5               	movf	tablat,w,c
  2136  002F74  180B               	xorwf	??_strncmp^0,w,c
  2137  002F76  B4D8               	btfsc	status,2,c
  2138  002F78  EFC0  F017         	goto	u7071
  2139  002F7C  EFC2  F017         	goto	u7070
  2140  002F80                     u7071:
  2141  002F80  EF84  F017         	goto	l5427
  2142  002F84                     u7070:
  2143  002F84                     l5437:
  2144  002F84  C00C  FFD9         	movff	strncmp@l,fsr2l
  2145  002F88  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2146  002F8C  50DF               	movf	indf2,w,c
  2147  002F8E  6E0B               	movwf	??_strncmp^0,c
  2148  002F90  C00E  FFF6         	movff	strncmp@r,tblptrl
  2149  002F94  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2150  002F98                     	if	0	;tblptru may be non-zero
  2151  002F98                     	endif
  2152  002F98                     	if	0	;tblptru may be non-zero
  2153  002F98                     	endif
  2154  002F98  0008               	tblrd		*
  2155  002F9A  50F5               	movf	tablat,w,c
  2156  002F9C  5C0B               	subwf	??_strncmp^0,w,c
  2157  002F9E  6E05               	movwf	?_strncmp^0,c
  2158  002FA0  6A06               	clrf	(?_strncmp+1)^0,c
  2159  002FA2  A0D8               	btfss	status,0,c
  2160  002FA4  0606               	decf	(?_strncmp+1)^0,f,c
  2161  002FA6                     l1127:
  2162  002FA6  0012               	return		;funcret
  2163  002FA8                     __end_of_strncmp:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _efgtoa *****************
  2167 ;; Defined at:
  2168 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  fp              2   55[COMRAM] PTR struct _IO_FILE
  2171 ;;		 -> sprintf@f(6), 
  2172 ;;  f               4   57[COMRAM] PTR struct _IO_FILE
  2173 ;;  c               1   61[COMRAM] unsigned char 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  u               4   52[BANK0 ] unsigned char 
  2176 ;;  g               4   44[BANK0 ] unsigned char 
  2177 ;;  l               4   38[BANK0 ] unsigned char 
  2178 ;;  h               4   34[BANK0 ] unsigned char 
  2179 ;;  ou              4    0[BANK0 ] unsigned char 
  2180 ;;  n               2   50[BANK0 ] int 
  2181 ;;  e               2   48[BANK0 ] int 
  2182 ;;  i               2   42[BANK0 ] int 
  2183 ;;  w               2   31[BANK0 ] int 
  2184 ;;  p               2   28[BANK0 ] int 
  2185 ;;  sign            2   26[BANK0 ] int 
  2186 ;;  d               2   24[BANK0 ] int 
  2187 ;;  ne              2   22[BANK0 ] int 
  2188 ;;  m               2   20[BANK0 ] int 
  2189 ;;  pp              2   18[BANK0 ] int 
  2190 ;;  t               2   16[BANK0 ] int 
  2191 ;;  mode            1   33[BANK0 ] unsigned char 
  2192 ;;  nmode           1   30[BANK0 ] unsigned char 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  2   55[COMRAM] int 
  2195 ;; Registers used:
  2196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2202 ;;      Params:         7       0       0       0       0       0       0       0       0
  2203 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2204 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2205 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2206 ;;Total ram usage:       68 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    6
  2209 ;; This function calls:
  2210 ;;		___awdiv
  2211 ;;		___awmod
  2212 ;;		___fladd
  2213 ;;		___fldiv
  2214 ;;		___fleq
  2215 ;;		___flge
  2216 ;;		___flmul
  2217 ;;		___flneg
  2218 ;;		___flsub
  2219 ;;		___fltol
  2220 ;;		___fpclassifyf
  2221 ;;		_floorf
  2222 ;;		_isupper
  2223 ;;		_pad
  2224 ;;		_strcpy
  2225 ;;		_tolower
  2226 ;; This function is called by:
  2227 ;;		_vfpfcnvrt
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text5
  2232  000836                     __ptext5:
  2233                           	callstack 0
  2234  000836                     _efgtoa:
  2235                           	callstack 21
  2236  000836                     
  2237                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  2238  000836  0E00               	movlw	0
  2239  000838  0100               	movlb	0	; () banked
  2240  00083A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2241  00083C  0E00               	movlw	0
  2242  00083E  6F7A               	movwf	efgtoa@sign& (0+255),b
  2243  000840                     
  2244                           ; BSR set to: 0
  2245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  2246  000840  C03A  F08C         	movff	efgtoa@f,efgtoa@g
  2247  000844  C03B  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2248  000848  C03C  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2249  00084C  C03D  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2250  000850                     
  2251                           ; BSR set to: 0
  2252                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  2253  000850  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2254  000852  EF2F  F004         	goto	u6440
  2255  000856  EF2D  F004         	goto	u6441
  2256  00085A                     u6441:
  2257  00085A  EF45  F004         	goto	l5091
  2258  00085E                     u6440:
  2259  00085E                     
  2260                           ; BSR set to: 0
  2261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  2262  00085E  0E00               	movlw	0
  2263  000860  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2264  000862  0E01               	movlw	1
  2265  000864  6F7A               	movwf	efgtoa@sign& (0+255),b
  2266  000866                     
  2267                           ; BSR set to: 0
  2268                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  2269  000866  C08C  F005         	movff	efgtoa@g,___flneg@f1
  2270  00086A  C08D  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2271  00086E  C08E  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2272  000872  C08F  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2273  000876  ECEB  F01B         	call	___flneg	;wreg free
  2274  00087A  C005  F08C         	movff	?___flneg,efgtoa@g
  2275  00087E  C006  F08D         	movff	?___flneg+1,efgtoa@g+1
  2276  000882  C007  F08E         	movff	?___flneg+2,efgtoa@g+2
  2277  000886  C008  F08F         	movff	?___flneg+3,efgtoa@g+3
  2278  00088A                     l5091:
  2279                           
  2280                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  2281  00088A  0E00               	movlw	0
  2282  00088C  0100               	movlb	0	; () banked
  2283  00088E  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2284  000890  0E00               	movlw	0
  2285  000892  6F92               	movwf	efgtoa@n& (0+255),b
  2286  000894                     
  2287                           ; BSR set to: 0
  2288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  2289  000894  C0DA  F07F         	movff	_width,efgtoa@w
  2290  000898  C0DB  F080         	movff	_width+1,efgtoa@w+1
  2291  00089C                     
  2292                           ; BSR set to: 0
  2293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  2294  00089C  517A               	movf	efgtoa@sign& (0+255),w,b
  2295  00089E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2296  0008A0  A4D8               	btfss	status,2,c
  2297  0008A2  EF55  F004         	goto	u6451
  2298  0008A6  EF57  F004         	goto	u6450
  2299  0008AA                     u6451:
  2300  0008AA  EF5E  F004         	goto	l5099
  2301  0008AE                     u6450:
  2302  0008AE                     
  2303                           ; BSR set to: 0
  2304  0008AE  A456               	btfss	_flags^0,2,c
  2305  0008B0  EF5C  F004         	goto	u6461
  2306  0008B4  EF5E  F004         	goto	u6460
  2307  0008B8                     u6461:
  2308  0008B8  EF78  F004         	goto	l5111
  2309  0008BC                     u6460:
  2310  0008BC                     l5099:
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  2314  0008BC  517A               	movf	efgtoa@sign& (0+255),w,b
  2315  0008BE  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2316  0008C0  A4D8               	btfss	status,2,c
  2317  0008C2  EF65  F004         	goto	u6471
  2318  0008C6  EF67  F004         	goto	u6470
  2319  0008CA                     u6471:
  2320  0008CA  EF6D  F004         	goto	l5103
  2321  0008CE                     u6470:
  2322  0008CE                     
  2323                           ; BSR set to: 0
  2324  0008CE  0E00               	movlw	0
  2325  0008D0  6F65               	movwf	(_efgtoa$1345+1)& (0+255),b
  2326  0008D2  0E2B               	movlw	43
  2327  0008D4  6F64               	movwf	_efgtoa$1345& (0+255),b
  2328  0008D6  EF71  F004         	goto	l5105
  2329  0008DA                     l5103:
  2330                           
  2331                           ; BSR set to: 0
  2332  0008DA  0E00               	movlw	0
  2333  0008DC  6F65               	movwf	(_efgtoa$1345+1)& (0+255),b
  2334  0008DE  0E2D               	movlw	45
  2335  0008E0  6F64               	movwf	_efgtoa$1345& (0+255),b
  2336  0008E2                     l5105:
  2337                           
  2338                           ; BSR set to: 0
  2339  0008E2  C064  F100         	movff	_efgtoa$1345,_dbuf
  2340  0008E6                     
  2341                           ; BSR set to: 0
  2342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  2343  0008E6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2344  0008E8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2345  0008EA                     
  2346                           ; BSR set to: 0
  2347                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  2348  0008EA  077F               	decf	efgtoa@w& (0+255),f,b
  2349  0008EC  A0D8               	btfss	status,0,c
  2350  0008EE  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2351  0008F0                     l5111:
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2355  0008F0  C08C  F005         	movff	efgtoa@g,___fpclassifyf@x
  2356  0008F4  C08D  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2357  0008F8  C08E  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2358  0008FC  C08F  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2359  000900  EC78  F016         	call	___fpclassifyf	;wreg free
  2360  000904  0405               	decf	?___fpclassifyf^0,w,c
  2361  000906  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2362  000908  A4D8               	btfss	status,2,c
  2363  00090A  EF89  F004         	goto	u6481
  2364  00090E  EF8B  F004         	goto	u6480
  2365  000912                     u6481:
  2366  000912  EFE2  F004         	goto	l5129
  2367  000916                     u6480:
  2368  000916  0EBF               	movlw	191
  2369  000918  6E3F               	movwf	??_efgtoa^0,c
  2370  00091A  0EFF               	movlw	255
  2371  00091C  6E40               	movwf	(??_efgtoa+1)^0,c
  2372  00091E  503E               	movf	efgtoa@c^0,w,c
  2373  000920  6E41               	movwf	(??_efgtoa+2)^0,c
  2374  000922  6A42               	clrf	(??_efgtoa+3)^0,c
  2375  000924  503F               	movf	??_efgtoa^0,w,c
  2376  000926  2641               	addwf	(??_efgtoa+2)^0,f,c
  2377  000928  5040               	movf	(??_efgtoa+1)^0,w,c
  2378  00092A  2242               	addwfc	(??_efgtoa+3)^0,f,c
  2379  00092C  5042               	movf	(??_efgtoa+3)^0,w,c
  2380  00092E  E10A               	bnz	u6490
  2381  000930  0E1A               	movlw	26
  2382  000932  5C41               	subwf	(??_efgtoa+2)^0,w,c
  2383  000934  A0D8               	btfss	status,0,c
  2384  000936  EF9F  F004         	goto	u6491
  2385  00093A  EFA2  F004         	goto	u6490
  2386  00093E                     u6491:
  2387  00093E  0E01               	movlw	1
  2388  000940  EFA3  F004         	goto	u6500
  2389  000944                     u6490:
  2390  000944  0E00               	movlw	0
  2391  000946                     u6500:
  2392  000946  0100               	movlb	0	; () banked
  2393  000948  6F66               	movwf	_efgtoa$1346& (0+255),b
  2394  00094A  6B67               	clrf	(_efgtoa$1346+1)& (0+255),b
  2395  00094C                     
  2396                           ; BSR set to: 0
  2397  00094C  5166               	movf	_efgtoa$1346& (0+255),w,b
  2398  00094E  1167               	iorwf	(_efgtoa$1346+1)& (0+255),w,b
  2399  000950  B4D8               	btfsc	status,2,c
  2400  000952  EFAD  F004         	goto	u6511
  2401  000956  EFAF  F004         	goto	u6510
  2402  00095A                     u6511:
  2403  00095A  EFBD  F004         	goto	l5121
  2404  00095E                     u6510:
  2405  00095E                     
  2406                           ; BSR set to: 0
  2407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  2408  00095E  0E00               	movlw	low _dbuf
  2409  000960  2592               	addwf	efgtoa@n& (0+255),w,b
  2410  000962  6E05               	movwf	strcpy@dest^0,c
  2411  000964  0E01               	movlw	high _dbuf
  2412  000966  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2413  000968  6E06               	movwf	(strcpy@dest+1)^0,c
  2414  00096A  0E21               	movlw	low STR_3
  2415  00096C  6E07               	movwf	strcpy@src^0,c
  2416  00096E  0E08               	movlw	high STR_3
  2417  000970  6E08               	movwf	(strcpy@src+1)^0,c
  2418  000972  ECBE  F01A         	call	_strcpy	;wreg free
  2419                           
  2420                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  2421  000976  EFC9  F004         	goto	l5123
  2422  00097A                     l5121:
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  2426  00097A  0E00               	movlw	low _dbuf
  2427  00097C  2592               	addwf	efgtoa@n& (0+255),w,b
  2428  00097E  6E05               	movwf	strcpy@dest^0,c
  2429  000980  0E01               	movlw	high _dbuf
  2430  000982  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2431  000984  6E06               	movwf	(strcpy@dest+1)^0,c
  2432  000986  0E29               	movlw	low STR_4
  2433  000988  6E07               	movwf	strcpy@src^0,c
  2434  00098A  0E08               	movlw	high STR_4
  2435  00098C  6E08               	movwf	(strcpy@src+1)^0,c
  2436  00098E  ECBE  F01A         	call	_strcpy	;wreg free
  2437  000992                     l5123:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2440  000992  0100               	movlb	0	; () banked
  2441  000994  0EFD               	movlw	253
  2442  000996  277F               	addwf	efgtoa@w& (0+255),f,b
  2443  000998  0EFF               	movlw	255
  2444  00099A  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2445  00099C                     l5125:
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2448  00099C  C038  F015         	movff	efgtoa@fp,pad@fp
  2449  0009A0  C039  F016         	movff	efgtoa@fp+1,pad@fp+1
  2450  0009A4  0E00               	movlw	low _dbuf
  2451  0009A6  6E17               	movwf	pad@buf^0,c
  2452  0009A8  0E01               	movlw	high _dbuf
  2453  0009AA  6E18               	movwf	(pad@buf+1)^0,c
  2454  0009AC  C07F  F019         	movff	efgtoa@w,pad@p
  2455  0009B0  C080  F01A         	movff	efgtoa@w+1,pad@p+1
  2456  0009B4  EC9B  F018         	call	_pad	;wreg free
  2457  0009B8  C015  F038         	movff	?_pad,?_efgtoa
  2458  0009BC  C016  F039         	movff	?_pad+1,?_efgtoa+1
  2459  0009C0  EFF3  F009         	goto	l897
  2460  0009C4                     l5129:
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2463  0009C4  C08C  F005         	movff	efgtoa@g,___fpclassifyf@x
  2464  0009C8  C08D  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2465  0009CC  C08E  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2466  0009D0  C08F  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2467  0009D4  EC78  F016         	call	___fpclassifyf	;wreg free
  2468  0009D8  5005               	movf	?___fpclassifyf^0,w,c
  2469  0009DA  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2470  0009DC  A4D8               	btfss	status,2,c
  2471  0009DE  EFF3  F004         	goto	u6521
  2472  0009E2  EFF5  F004         	goto	u6520
  2473  0009E6                     u6521:
  2474  0009E6  EF35  F005         	goto	l5147
  2475  0009EA                     u6520:
  2476  0009EA  0EBF               	movlw	191
  2477  0009EC  6E3F               	movwf	??_efgtoa^0,c
  2478  0009EE  0EFF               	movlw	255
  2479  0009F0  6E40               	movwf	(??_efgtoa+1)^0,c
  2480  0009F2  503E               	movf	efgtoa@c^0,w,c
  2481  0009F4  6E41               	movwf	(??_efgtoa+2)^0,c
  2482  0009F6  6A42               	clrf	(??_efgtoa+3)^0,c
  2483  0009F8  503F               	movf	??_efgtoa^0,w,c
  2484  0009FA  2641               	addwf	(??_efgtoa+2)^0,f,c
  2485  0009FC  5040               	movf	(??_efgtoa+1)^0,w,c
  2486  0009FE  2242               	addwfc	(??_efgtoa+3)^0,f,c
  2487  000A00  5042               	movf	(??_efgtoa+3)^0,w,c
  2488  000A02  E10A               	bnz	u6530
  2489  000A04  0E1A               	movlw	26
  2490  000A06  5C41               	subwf	(??_efgtoa+2)^0,w,c
  2491  000A08  A0D8               	btfss	status,0,c
  2492  000A0A  EF09  F005         	goto	u6531
  2493  000A0E  EF0C  F005         	goto	u6530
  2494  000A12                     u6531:
  2495  000A12  0E01               	movlw	1
  2496  000A14  EF0D  F005         	goto	u6540
  2497  000A18                     u6530:
  2498  000A18  0E00               	movlw	0
  2499  000A1A                     u6540:
  2500  000A1A  0100               	movlb	0	; () banked
  2501  000A1C  6F68               	movwf	_efgtoa$1351& (0+255),b
  2502  000A1E  6B69               	clrf	(_efgtoa$1351+1)& (0+255),b
  2503  000A20                     
  2504                           ; BSR set to: 0
  2505  000A20  5168               	movf	_efgtoa$1351& (0+255),w,b
  2506  000A22  1169               	iorwf	(_efgtoa$1351+1)& (0+255),w,b
  2507  000A24  B4D8               	btfsc	status,2,c
  2508  000A26  EF17  F005         	goto	u6551
  2509  000A2A  EF19  F005         	goto	u6550
  2510  000A2E                     u6551:
  2511  000A2E  EF27  F005         	goto	l5139
  2512  000A32                     u6550:
  2513  000A32                     
  2514                           ; BSR set to: 0
  2515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  2516  000A32  0E00               	movlw	low _dbuf
  2517  000A34  2592               	addwf	efgtoa@n& (0+255),w,b
  2518  000A36  6E05               	movwf	strcpy@dest^0,c
  2519  000A38  0E01               	movlw	high _dbuf
  2520  000A3A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2521  000A3C  6E06               	movwf	(strcpy@dest+1)^0,c
  2522  000A3E  0E25               	movlw	low STR_7
  2523  000A40  6E07               	movwf	strcpy@src^0,c
  2524  000A42  0E08               	movlw	high STR_7
  2525  000A44  6E08               	movwf	(strcpy@src+1)^0,c
  2526  000A46  ECBE  F01A         	call	_strcpy	;wreg free
  2527                           
  2528                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  2529  000A4A  EFC9  F004         	goto	l5123
  2530  000A4E                     l5139:
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  2534  000A4E  0E00               	movlw	low _dbuf
  2535  000A50  2592               	addwf	efgtoa@n& (0+255),w,b
  2536  000A52  6E05               	movwf	strcpy@dest^0,c
  2537  000A54  0E01               	movlw	high _dbuf
  2538  000A56  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2539  000A58  6E06               	movwf	(strcpy@dest+1)^0,c
  2540  000A5A  0E2D               	movlw	low STR_8
  2541  000A5C  6E07               	movwf	strcpy@src^0,c
  2542  000A5E  0E08               	movlw	high STR_8
  2543  000A60  6E08               	movwf	(strcpy@src+1)^0,c
  2544  000A62  ECBE  F01A         	call	_strcpy	;wreg free
  2545  000A66  EFC9  F004         	goto	l5123
  2546  000A6A                     l5147:
  2547                           
  2548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  2549  000A6A  0E00               	movlw	0
  2550  000A6C  0100               	movlb	0	; () banked
  2551  000A6E  6F94               	movwf	efgtoa@u& (0+255),b
  2552  000A70  0E00               	movlw	0
  2553  000A72  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2554  000A74  0E80               	movlw	128
  2555  000A76  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2556  000A78  0E3F               	movlw	63
  2557  000A7A  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  2560  000A7C  0E00               	movlw	0
  2561  000A7E  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2562  000A80  0E00               	movlw	0
  2563  000A82  6F90               	movwf	efgtoa@e& (0+255),b
  2564  000A84                     
  2565                           ; BSR set to: 0
  2566                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  2567  000A84  C08C  F005         	movff	efgtoa@g,___fleq@ff1
  2568  000A88  C08D  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2569  000A8C  C08E  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2570  000A90  C08F  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2571  000A94  0E00               	movlw	0
  2572  000A96  6E09               	movwf	___fleq@ff2^0,c
  2573  000A98  0E00               	movlw	0
  2574  000A9A  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2575  000A9C  0E00               	movlw	0
  2576  000A9E  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2577  000AA0  0E00               	movlw	0
  2578  000AA2  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2579  000AA4  EC54  F019         	call	___fleq	;wreg free
  2580  000AA8  B0D8               	btfsc	status,0,c
  2581  000AAA  EF59  F005         	goto	u6561
  2582  000AAE  EF5B  F005         	goto	u6560
  2583  000AB2                     u6561:
  2584  000AB2  EFDE  F005         	goto	l5165
  2585  000AB6                     u6560:
  2586  000AB6  EF7A  F005         	goto	l5157
  2587  000ABA                     l5153:
  2588                           
  2589                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  2590  000ABA  C094  F013         	movff	efgtoa@u,___flmul@b
  2591  000ABE  C095  F014         	movff	efgtoa@u+1,___flmul@b+1
  2592  000AC2  C096  F015         	movff	efgtoa@u+2,___flmul@b+2
  2593  000AC6  C097  F016         	movff	efgtoa@u+3,___flmul@b+3
  2594  000ACA  0E00               	movlw	0
  2595  000ACC  6E17               	movwf	___flmul@a^0,c
  2596  000ACE  0E00               	movlw	0
  2597  000AD0  6E18               	movwf	(___flmul@a+1)^0,c
  2598  000AD2  0E20               	movlw	32
  2599  000AD4  6E19               	movwf	(___flmul@a+2)^0,c
  2600  000AD6  0E41               	movlw	65
  2601  000AD8  6E1A               	movwf	(___flmul@a+3)^0,c
  2602  000ADA  ECE6  F00E         	call	___flmul	;wreg free
  2603  000ADE  C013  F094         	movff	?___flmul,efgtoa@u
  2604  000AE2  C014  F095         	movff	?___flmul+1,efgtoa@u+1
  2605  000AE6  C015  F096         	movff	?___flmul+2,efgtoa@u+2
  2606  000AEA  C016  F097         	movff	?___flmul+3,efgtoa@u+3
  2607  000AEE                     
  2608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  2609  000AEE  0100               	movlb	0	; () banked
  2610  000AF0  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2611  000AF2  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2612  000AF4                     l5157:
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  2615  000AF4  C08C  F02C         	movff	efgtoa@g,___flge@ff1
  2616  000AF8  C08D  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  2617  000AFC  C08E  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  2618  000B00  C08F  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  2619  000B04  0E00               	movlw	0
  2620  000B06  6E17               	movwf	___flmul@a^0,c
  2621  000B08  0E00               	movlw	0
  2622  000B0A  6E18               	movwf	(___flmul@a+1)^0,c
  2623  000B0C  0E20               	movlw	32
  2624  000B0E  6E19               	movwf	(___flmul@a+2)^0,c
  2625  000B10  0E41               	movlw	65
  2626  000B12  6E1A               	movwf	(___flmul@a+3)^0,c
  2627  000B14  C094  F013         	movff	efgtoa@u,___flmul@b
  2628  000B18  C095  F014         	movff	efgtoa@u+1,___flmul@b+1
  2629  000B1C  C096  F015         	movff	efgtoa@u+2,___flmul@b+2
  2630  000B20  C097  F016         	movff	efgtoa@u+3,___flmul@b+3
  2631  000B24  ECE6  F00E         	call	___flmul	;wreg free
  2632  000B28  C013  F030         	movff	?___flmul,___flge@ff2
  2633  000B2C  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  2634  000B30  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  2635  000B34  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  2636  000B38  ECF6  F015         	call	___flge	;wreg free
  2637  000B3C  B0D8               	btfsc	status,0,c
  2638  000B3E  EFA3  F005         	goto	u6571
  2639  000B42  EFA5  F005         	goto	u6570
  2640  000B46                     u6571:
  2641  000B46  EF5D  F005         	goto	l5153
  2642  000B4A                     u6570:
  2643  000B4A  EFC5  F005         	goto	l5163
  2644  000B4E                     l5159:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  2647  000B4E  C094  F005         	movff	efgtoa@u,___fldiv@b
  2648  000B52  C095  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2649  000B56  C096  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2650  000B5A  C097  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2651  000B5E  0E00               	movlw	0
  2652  000B60  6E09               	movwf	___fldiv@a^0,c
  2653  000B62  0E00               	movlw	0
  2654  000B64  6E0A               	movwf	(___fldiv@a+1)^0,c
  2655  000B66  0E20               	movlw	32
  2656  000B68  6E0B               	movwf	(___fldiv@a+2)^0,c
  2657  000B6A  0E41               	movlw	65
  2658  000B6C  6E0C               	movwf	(___fldiv@a+3)^0,c
  2659  000B6E  ECFB  F010         	call	___fldiv	;wreg free
  2660  000B72  C005  F094         	movff	?___fldiv,efgtoa@u
  2661  000B76  C006  F095         	movff	?___fldiv+1,efgtoa@u+1
  2662  000B7A  C007  F096         	movff	?___fldiv+2,efgtoa@u+2
  2663  000B7E  C008  F097         	movff	?___fldiv+3,efgtoa@u+3
  2664  000B82                     
  2665                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  2666  000B82  0100               	movlb	0	; () banked
  2667  000B84  0790               	decf	efgtoa@e& (0+255),f,b
  2668  000B86  A0D8               	btfss	status,0,c
  2669  000B88  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2670  000B8A                     l5163:
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  2673  000B8A  C08C  F02C         	movff	efgtoa@g,___flge@ff1
  2674  000B8E  C08D  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  2675  000B92  C08E  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  2676  000B96  C08F  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  2677  000B9A  C094  F030         	movff	efgtoa@u,___flge@ff2
  2678  000B9E  C095  F031         	movff	efgtoa@u+1,___flge@ff2+1
  2679  000BA2  C096  F032         	movff	efgtoa@u+2,___flge@ff2+2
  2680  000BA6  C097  F033         	movff	efgtoa@u+3,___flge@ff2+3
  2681  000BAA  ECF6  F015         	call	___flge	;wreg free
  2682  000BAE  A0D8               	btfss	status,0,c
  2683  000BB0  EFDC  F005         	goto	u6581
  2684  000BB4  EFDE  F005         	goto	u6580
  2685  000BB8                     u6581:
  2686  000BB8  EFA7  F005         	goto	l5159
  2687  000BBC                     u6580:
  2688  000BBC                     l5165:
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  2691  000BBC  C03E  F00B         	movff	efgtoa@c,tolower@c
  2692  000BC0  6A0C               	clrf	(tolower@c+1)^0,c
  2693  000BC2  EC8E  F01A         	call	_tolower	;wreg free
  2694  000BC6  500B               	movf	?_tolower^0,w,c
  2695  000BC8  0100               	movlb	0	; () banked
  2696  000BCA  6F81               	movwf	efgtoa@mode& (0+255),b
  2697  000BCC                     
  2698                           ; BSR set to: 0
  2699                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  2700  000BCC  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  2701  000BD0                     
  2702                           ; BSR set to: 0
  2703                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  2704  000BD0  0E67               	movlw	103
  2705  000BD2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2706  000BD4  A4D8               	btfss	status,2,c
  2707  000BD6  EFEF  F005         	goto	u6591
  2708  000BDA  EFF1  F005         	goto	u6590
  2709  000BDE                     u6591:
  2710  000BDE  EF17  F006         	goto	l5179
  2711  000BE2                     u6590:
  2712  000BE2                     
  2713                           ; BSR set to: 0
  2714                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  2715  000BE2  5054               	movf	_prec^0,w,c
  2716  000BE4  1055               	iorwf	(_prec+1)^0,w,c
  2717  000BE6  A4D8               	btfss	status,2,c
  2718  000BE8  EFF8  F005         	goto	u6601
  2719  000BEC  EFFA  F005         	goto	u6600
  2720  000BF0                     u6601:
  2721  000BF0  EFFE  F005         	goto	l5175
  2722  000BF4                     u6600:
  2723  000BF4                     
  2724                           ; BSR set to: 0
  2725                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  2726  000BF4  0E00               	movlw	0
  2727  000BF6  6E55               	movwf	(_prec+1)^0,c
  2728  000BF8  0E01               	movlw	1
  2729  000BFA  6E54               	movwf	_prec^0,c
  2730  000BFC                     l5175:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  2734  000BFC  BE55               	btfsc	(_prec+1)^0,7,c
  2735  000BFE  EF0B  F006         	goto	u6610
  2736  000C02  5055               	movf	(_prec+1)^0,w,c
  2737  000C04  E106               	bnz	u6611
  2738  000C06  0454               	decf	_prec^0,w,c
  2739  000C08  B0D8               	btfsc	status,0,c
  2740  000C0A  EF09  F006         	goto	u6611
  2741  000C0E  EF0B  F006         	goto	u6610
  2742  000C12                     u6611:
  2743  000C12  EF11  F006         	goto	l915
  2744  000C16                     u6610:
  2745  000C16                     l5177:
  2746                           
  2747                           ; BSR set to: 0
  2748  000C16  0E00               	movlw	0
  2749  000C18  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2750  000C1A  0E06               	movlw	6
  2751  000C1C  6F7C               	movwf	efgtoa@p& (0+255),b
  2752  000C1E  EF20  F006         	goto	l5185
  2753  000C22                     l915:
  2754                           
  2755                           ; BSR set to: 0
  2756  000C22  C054  F07C         	movff	_prec,efgtoa@p
  2757  000C26  C055  F07D         	movff	_prec+1,efgtoa@p+1
  2758  000C2A  EF20  F006         	goto	l5185
  2759  000C2E                     l5179:
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  2763  000C2E  BE55               	btfsc	(_prec+1)^0,7,c
  2764  000C30  EF1C  F006         	goto	u6621
  2765  000C34  EF1E  F006         	goto	u6620
  2766  000C38                     u6621:
  2767  000C38  EF0B  F006         	goto	l5177
  2768  000C3C                     u6620:
  2769  000C3C  EF11  F006         	goto	l915
  2770  000C40                     l5185:
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  2774  000C40  0E67               	movlw	103
  2775  000C42  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2776  000C44  A4D8               	btfss	status,2,c
  2777  000C46  EF27  F006         	goto	u6631
  2778  000C4A  EF29  F006         	goto	u6630
  2779  000C4E                     u6631:
  2780  000C4E  EF58  F006         	goto	l5195
  2781  000C52                     u6630:
  2782  000C52                     
  2783                           ; BSR set to: 0
  2784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2785  000C52  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2786  000C54  EF37  F006         	goto	u6640
  2787  000C58  0EFC               	movlw	252
  2788  000C5A  5D90               	subwf	efgtoa@e& (0+255),w,b
  2789  000C5C  0EFF               	movlw	255
  2790  000C5E  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2791  000C60  A0D8               	btfss	status,0,c
  2792  000C62  EF35  F006         	goto	u6641
  2793  000C66  EF37  F006         	goto	u6640
  2794  000C6A                     u6641:
  2795  000C6A  EF56  F006         	goto	l5193
  2796  000C6E                     u6640:
  2797  000C6E                     
  2798                           ; BSR set to: 0
  2799  000C6E  0EFF               	movlw	255
  2800  000C70  6E3F               	movwf	??_efgtoa^0,c
  2801  000C72  0EFF               	movlw	255
  2802  000C74  6E40               	movwf	(??_efgtoa+1)^0,c
  2803  000C76  C07C  F041         	movff	efgtoa@p,??_efgtoa+2
  2804  000C7A  C07D  F042         	movff	efgtoa@p+1,??_efgtoa+3
  2805  000C7E  503F               	movf	??_efgtoa^0,w,c
  2806  000C80  2641               	addwf	(??_efgtoa+2)^0,f,c
  2807  000C82  5040               	movf	(??_efgtoa+1)^0,w,c
  2808  000C84  2242               	addwfc	(??_efgtoa+3)^0,f,c
  2809  000C86  5190               	movf	efgtoa@e& (0+255),w,b
  2810  000C88  5C41               	subwf	(??_efgtoa+2)^0,w,c
  2811  000C8A  5042               	movf	(??_efgtoa+3)^0,w,c
  2812  000C8C  0A80               	xorlw	128
  2813  000C8E  6E43               	movwf	(??_efgtoa+4)^0,c
  2814  000C90  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2815  000C92  0A80               	xorlw	128
  2816  000C94  5843               	subwfb	(??_efgtoa+4)^0,w,c
  2817  000C96  A0D8               	btfss	status,0,c
  2818  000C98  EF50  F006         	goto	u6651
  2819  000C9C  EF52  F006         	goto	u6650
  2820  000CA0                     u6651:
  2821  000CA0  EF56  F006         	goto	l5193
  2822  000CA4                     u6650:
  2823  000CA4                     
  2824                           ; BSR set to: 0
  2825                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  2826  000CA4  0E66               	movlw	102
  2827  000CA6  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  2830  000CA8  EF58  F006         	goto	l5195
  2831  000CAC                     l5193:
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  2835  000CAC  0E65               	movlw	101
  2836  000CAE  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2837  000CB0                     l5195:
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  2841  000CB0  C07C  F074         	movff	efgtoa@p,efgtoa@m
  2842  000CB4  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  2843  000CB8                     
  2844                           ; BSR set to: 0
  2845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2846  000CB8  0E67               	movlw	103
  2847  000CBA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2848  000CBC  A4D8               	btfss	status,2,c
  2849  000CBE  EF63  F006         	goto	u6661
  2850  000CC2  EF65  F006         	goto	u6660
  2851  000CC6                     u6661:
  2852  000CC6  EF75  F006         	goto	l5203
  2853  000CCA                     u6660:
  2854  000CCA                     
  2855                           ; BSR set to: 0
  2856  000CCA  0E66               	movlw	102
  2857  000CCC  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2858  000CCE  A4D8               	btfss	status,2,c
  2859  000CD0  EF6C  F006         	goto	u6671
  2860  000CD4  EF6E  F006         	goto	u6670
  2861  000CD8                     u6671:
  2862  000CD8  EF77  F006         	goto	l5205
  2863  000CDC                     u6670:
  2864  000CDC                     
  2865                           ; BSR set to: 0
  2866  000CDC  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2867  000CDE  EF75  F006         	goto	u6680
  2868  000CE2  EF73  F006         	goto	u6681
  2869  000CE6                     u6681:
  2870  000CE6  EF77  F006         	goto	l5205
  2871  000CEA                     u6680:
  2872  000CEA                     l5203:
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  2876  000CEA  4B74               	infsnz	efgtoa@m& (0+255),f,b
  2877  000CEC  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  2878  000CEE                     l5205:
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  2882  000CEE  0E66               	movlw	102
  2883  000CF0  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2884  000CF2  A4D8               	btfss	status,2,c
  2885  000CF4  EF7E  F006         	goto	u6691
  2886  000CF8  EF80  F006         	goto	u6690
  2887  000CFC                     u6691:
  2888  000CFC  EFA0  F006         	goto	l5215
  2889  000D00                     u6690:
  2890  000D00                     
  2891                           ; BSR set to: 0
  2892                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  2893  000D00  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2894  000D02  EF87  F006         	goto	u6700
  2895  000D06  EF85  F006         	goto	u6701
  2896  000D0A                     u6701:
  2897  000D0A  EF93  F006         	goto	l5211
  2898  000D0E                     u6700:
  2899  000D0E                     
  2900                           ; BSR set to: 0
  2901                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  2902  000D0E  0E00               	movlw	0
  2903  000D10  6F94               	movwf	efgtoa@u& (0+255),b
  2904  000D12  0E00               	movlw	0
  2905  000D14  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2906  000D16  0E80               	movlw	128
  2907  000D18  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2908  000D1A  0E3F               	movlw	63
  2909  000D1C  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2910                           
  2911                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  2912  000D1E  0E00               	movlw	0
  2913  000D20  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2914  000D22  0E00               	movlw	0
  2915  000D24  6F90               	movwf	efgtoa@e& (0+255),b
  2916  000D26                     l5211:
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  2920  000D26  0E67               	movlw	103
  2921  000D28  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2922  000D2A  B4D8               	btfsc	status,2,c
  2923  000D2C  EF9A  F006         	goto	u6711
  2924  000D30  EF9C  F006         	goto	u6710
  2925  000D34                     u6711:
  2926  000D34  EFA0  F006         	goto	l5215
  2927  000D38                     u6710:
  2928  000D38                     
  2929                           ; BSR set to: 0
  2930                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  2931  000D38  5190               	movf	efgtoa@e& (0+255),w,b
  2932  000D3A  2774               	addwf	efgtoa@m& (0+255),f,b
  2933  000D3C  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2934  000D3E  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2935  000D40                     l5215:
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  2939  000D40  0E00               	movlw	0
  2940  000D42  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2941  000D44  0E00               	movlw	0
  2942  000D46  6F8A               	movwf	efgtoa@i& (0+255),b
  2943  000D48                     
  2944                           ; BSR set to: 0
  2945                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  2946  000D48  C08C  F082         	movff	efgtoa@g,efgtoa@h
  2947  000D4C  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  2948  000D50  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  2949  000D54  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  2950  000D58                     
  2951                           ; BSR set to: 0
  2952                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  2953  000D58  C094  F060         	movff	efgtoa@u,efgtoa@ou
  2954  000D5C  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  2955  000D60  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  2956  000D64  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  2959  000D68  EF31  F007         	goto	l5229
  2960  000D6C                     l5221:
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  2964  000D6C  C082  F005         	movff	efgtoa@h,___fldiv@b
  2965  000D70  C083  F006         	movff	efgtoa@h+1,___fldiv@b+1
  2966  000D74  C084  F007         	movff	efgtoa@h+2,___fldiv@b+2
  2967  000D78  C085  F008         	movff	efgtoa@h+3,___fldiv@b+3
  2968  000D7C  C094  F009         	movff	efgtoa@u,___fldiv@a
  2969  000D80  C095  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  2970  000D84  C096  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  2971  000D88  C097  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  2972  000D8C  ECFB  F010         	call	___fldiv	;wreg free
  2973  000D90  C005  F01E         	movff	?___fldiv,floorf@x
  2974  000D94  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  2975  000D98  C007  F020         	movff	?___fldiv+2,floorf@x+2
  2976  000D9C  C008  F021         	movff	?___fldiv+3,floorf@x+3
  2977  000DA0  ECC8  F012         	call	_floorf	;wreg free
  2978  000DA4  C01E  F086         	movff	?_floorf,efgtoa@l
  2979  000DA8  C01F  F087         	movff	?_floorf+1,efgtoa@l+1
  2980  000DAC  C020  F088         	movff	?_floorf+2,efgtoa@l+2
  2981  000DB0  C021  F089         	movff	?_floorf+3,efgtoa@l+3
  2982                           
  2983                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  2984  000DB4  C086  F005         	movff	efgtoa@l,___fltol@f1
  2985  000DB8  C087  F006         	movff	efgtoa@l+1,___fltol@f1+1
  2986  000DBC  C088  F007         	movff	efgtoa@l+2,___fltol@f1+2
  2987  000DC0  C089  F008         	movff	efgtoa@l+3,___fltol@f1+3
  2988  000DC4  EC73  F015         	call	___fltol	;wreg free
  2989  000DC8  C005  F078         	movff	?___fltol,efgtoa@d
  2990  000DCC  C006  F079         	movff	?___fltol+1,efgtoa@d+1
  2991  000DD0                     
  2992                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  2993  000DD0  C082  F02C         	movff	efgtoa@h,___flsub@b
  2994  000DD4  C083  F02D         	movff	efgtoa@h+1,___flsub@b+1
  2995  000DD8  C084  F02E         	movff	efgtoa@h+2,___flsub@b+2
  2996  000DDC  C085  F02F         	movff	efgtoa@h+3,___flsub@b+3
  2997  000DE0  C094  F017         	movff	efgtoa@u,___flmul@a
  2998  000DE4  C095  F018         	movff	efgtoa@u+1,___flmul@a+1
  2999  000DE8  C096  F019         	movff	efgtoa@u+2,___flmul@a+2
  3000  000DEC  C097  F01A         	movff	efgtoa@u+3,___flmul@a+3
  3001  000DF0  C086  F013         	movff	efgtoa@l,___flmul@b
  3002  000DF4  C087  F014         	movff	efgtoa@l+1,___flmul@b+1
  3003  000DF8  C088  F015         	movff	efgtoa@l+2,___flmul@b+2
  3004  000DFC  C089  F016         	movff	efgtoa@l+3,___flmul@b+3
  3005  000E00  ECE6  F00E         	call	___flmul	;wreg free
  3006  000E04  C013  F030         	movff	?___flmul,___flsub@a
  3007  000E08  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3008  000E0C  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3009  000E10  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3010  000E14  EC69  F01B         	call	___flsub	;wreg free
  3011  000E18  C02C  F082         	movff	?___flsub,efgtoa@h
  3012  000E1C  C02D  F083         	movff	?___flsub+1,efgtoa@h+1
  3013  000E20  C02E  F084         	movff	?___flsub+2,efgtoa@h+2
  3014  000E24  C02F  F085         	movff	?___flsub+3,efgtoa@h+3
  3015  000E28                     
  3016                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  3017  000E28  C094  F005         	movff	efgtoa@u,___fldiv@b
  3018  000E2C  C095  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3019  000E30  C096  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3020  000E34  C097  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3021  000E38  0E00               	movlw	0
  3022  000E3A  6E09               	movwf	___fldiv@a^0,c
  3023  000E3C  0E00               	movlw	0
  3024  000E3E  6E0A               	movwf	(___fldiv@a+1)^0,c
  3025  000E40  0E20               	movlw	32
  3026  000E42  6E0B               	movwf	(___fldiv@a+2)^0,c
  3027  000E44  0E41               	movlw	65
  3028  000E46  6E0C               	movwf	(___fldiv@a+3)^0,c
  3029  000E48  ECFB  F010         	call	___fldiv	;wreg free
  3030  000E4C  C005  F094         	movff	?___fldiv,efgtoa@u
  3031  000E50  C006  F095         	movff	?___fldiv+1,efgtoa@u+1
  3032  000E54  C007  F096         	movff	?___fldiv+2,efgtoa@u+2
  3033  000E58  C008  F097         	movff	?___fldiv+3,efgtoa@u+3
  3034  000E5C                     
  3035                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  3036  000E5C  0100               	movlb	0	; () banked
  3037  000E5E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3038  000E60  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3039  000E62                     l5229:
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3043  000E62  5174               	movf	efgtoa@m& (0+255),w,b
  3044  000E64  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3045  000E66  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3046  000E68  0A80               	xorlw	128
  3047  000E6A  6E3F               	movwf	??_efgtoa^0,c
  3048  000E6C  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3049  000E6E  0A80               	xorlw	128
  3050  000E70  583F               	subwfb	??_efgtoa^0,w,c
  3051  000E72  A0D8               	btfss	status,0,c
  3052  000E74  EF3E  F007         	goto	u6721
  3053  000E78  EF40  F007         	goto	u6720
  3054  000E7C                     u6721:
  3055  000E7C  EFB6  F006         	goto	l5221
  3056  000E80                     u6720:
  3057  000E80                     
  3058                           ; BSR set to: 0
  3059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  3060  000E80  C094  F013         	movff	efgtoa@u,___flmul@b
  3061  000E84  C095  F014         	movff	efgtoa@u+1,___flmul@b+1
  3062  000E88  C096  F015         	movff	efgtoa@u+2,___flmul@b+2
  3063  000E8C  C097  F016         	movff	efgtoa@u+3,___flmul@b+3
  3064  000E90  0E00               	movlw	0
  3065  000E92  6E17               	movwf	___flmul@a^0,c
  3066  000E94  0E00               	movlw	0
  3067  000E96  6E18               	movwf	(___flmul@a+1)^0,c
  3068  000E98  0EA0               	movlw	160
  3069  000E9A  6E19               	movwf	(___flmul@a+2)^0,c
  3070  000E9C  0E40               	movlw	64
  3071  000E9E  6E1A               	movwf	(___flmul@a+3)^0,c
  3072  000EA0  ECE6  F00E         	call	___flmul	;wreg free
  3073  000EA4  C013  F086         	movff	?___flmul,efgtoa@l
  3074  000EA8  C014  F087         	movff	?___flmul+1,efgtoa@l+1
  3075  000EAC  C015  F088         	movff	?___flmul+2,efgtoa@l+2
  3076  000EB0  C016  F089         	movff	?___flmul+3,efgtoa@l+3
  3077  000EB4                     
  3078                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  3079  000EB4  C082  F02C         	movff	efgtoa@h,___flge@ff1
  3080  000EB8  C083  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3081  000EBC  C084  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3082  000EC0  C085  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3083  000EC4  C086  F030         	movff	efgtoa@l,___flge@ff2
  3084  000EC8  C087  F031         	movff	efgtoa@l+1,___flge@ff2+1
  3085  000ECC  C088  F032         	movff	efgtoa@l+2,___flge@ff2+2
  3086  000ED0  C089  F033         	movff	efgtoa@l+3,___flge@ff2+3
  3087  000ED4  ECF6  F015         	call	___flge	;wreg free
  3088  000ED8  B0D8               	btfsc	status,0,c
  3089  000EDA  EF71  F007         	goto	u6731
  3090  000EDE  EF73  F007         	goto	u6730
  3091  000EE2                     u6731:
  3092  000EE2  EF7E  F007         	goto	l5237
  3093  000EE6                     u6730:
  3094  000EE6                     
  3095                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  3096  000EE6  0E00               	movlw	0
  3097  000EE8  0100               	movlb	0	; () banked
  3098  000EEA  6F86               	movwf	efgtoa@l& (0+255),b
  3099  000EEC  0E00               	movlw	0
  3100  000EEE  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3101  000EF0  0E00               	movlw	0
  3102  000EF2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3103  000EF4  0E00               	movlw	0
  3104  000EF6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3105                           
  3106                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  3107  000EF8  EFA7  F007         	goto	l5243
  3108  000EFC                     l5237:
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  3111  000EFC  C082  F005         	movff	efgtoa@h,___fleq@ff1
  3112  000F00  C083  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3113  000F04  C084  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3114  000F08  C085  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3115  000F0C  C086  F009         	movff	efgtoa@l,___fleq@ff2
  3116  000F10  C087  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3117  000F14  C088  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3118  000F18  C089  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3119  000F1C  EC54  F019         	call	___fleq	;wreg free
  3120  000F20  A0D8               	btfss	status,0,c
  3121  000F22  EF95  F007         	goto	u6741
  3122  000F26  EF97  F007         	goto	u6740
  3123  000F2A                     u6741:
  3124  000F2A  EFA7  F007         	goto	l5243
  3125  000F2E                     u6740:
  3126  000F2E  0100               	movlb	0	; () banked
  3127  000F30  B178               	btfsc	efgtoa@d& (0+255),0,b
  3128  000F32  EF9D  F007         	goto	u6751
  3129  000F36  EF9F  F007         	goto	u6750
  3130  000F3A                     u6751:
  3131  000F3A  EFA7  F007         	goto	l5243
  3132  000F3E                     u6750:
  3133  000F3E                     
  3134                           ; BSR set to: 0
  3135                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  3136  000F3E  0E00               	movlw	0
  3137  000F40  6F86               	movwf	efgtoa@l& (0+255),b
  3138  000F42  0E00               	movlw	0
  3139  000F44  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3140  000F46  0E00               	movlw	0
  3141  000F48  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3142  000F4A  0E00               	movlw	0
  3143  000F4C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3144  000F4E                     l5243:
  3145                           
  3146                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  3147  000F4E  C08C  F005         	movff	efgtoa@g,___fladd@b
  3148  000F52  C08D  F006         	movff	efgtoa@g+1,___fladd@b+1
  3149  000F56  C08E  F007         	movff	efgtoa@g+2,___fladd@b+2
  3150  000F5A  C08F  F008         	movff	efgtoa@g+3,___fladd@b+3
  3151  000F5E  C086  F009         	movff	efgtoa@l,___fladd@a
  3152  000F62  C087  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3153  000F66  C088  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3154  000F6A  C089  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3155  000F6E  EC86  F00C         	call	___fladd	;wreg free
  3156  000F72  C005  F082         	movff	?___fladd,efgtoa@h
  3157  000F76  C006  F083         	movff	?___fladd+1,efgtoa@h+1
  3158  000F7A  C007  F084         	movff	?___fladd+2,efgtoa@h+2
  3159  000F7E  C008  F085         	movff	?___fladd+3,efgtoa@h+3
  3160  000F82                     
  3161                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  3162  000F82  C060  F094         	movff	efgtoa@ou,efgtoa@u
  3163  000F86  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3164  000F8A  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3165  000F8E  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3166  000F92                     
  3167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3168  000F92  0E65               	movlw	101
  3169  000F94  0100               	movlb	0	; () banked
  3170  000F96  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3171  000F98  B4D8               	btfsc	status,2,c
  3172  000F9A  EFD1  F007         	goto	u6761
  3173  000F9E  EFD3  F007         	goto	u6760
  3174  000FA2                     u6761:
  3175  000FA2  EFD9  F007         	goto	l5251
  3176  000FA6                     u6760:
  3177  000FA6                     
  3178                           ; BSR set to: 0
  3179  000FA6  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3180  000FAA  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3181  000FAE  EFDD  F007         	goto	l941
  3182  000FB2                     l5251:
  3183                           
  3184                           ; BSR set to: 0
  3185  000FB2  0E00               	movlw	0
  3186  000FB4  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3187  000FB6  0E00               	movlw	0
  3188  000FB8  6F76               	movwf	efgtoa@ne& (0+255),b
  3189  000FBA                     l941:
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  3193  000FBA  0E00               	movlw	0
  3194  000FBC  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3195  000FBE  0E00               	movlw	0
  3196  000FC0  6F72               	movwf	efgtoa@pp& (0+255),b
  3197                           
  3198                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  3199  000FC2  0E00               	movlw	0
  3200  000FC4  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3201  000FC6  0E00               	movlw	0
  3202  000FC8  6F70               	movwf	efgtoa@t& (0+255),b
  3203                           
  3204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  3205  000FCA  0E00               	movlw	0
  3206  000FCC  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3207  000FCE  0E00               	movlw	0
  3208  000FD0  6F8A               	movwf	efgtoa@i& (0+255),b
  3209                           
  3210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3211  000FD2  EFD9  F008         	goto	l5301
  3212  000FD6                     l5253:
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  3216  000FD6  C082  F005         	movff	efgtoa@h,___fldiv@b
  3217  000FDA  C083  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3218  000FDE  C084  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3219  000FE2  C085  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3220  000FE6  C094  F009         	movff	efgtoa@u,___fldiv@a
  3221  000FEA  C095  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3222  000FEE  C096  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3223  000FF2  C097  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3224  000FF6  ECFB  F010         	call	___fldiv	;wreg free
  3225  000FFA  C005  F01E         	movff	?___fldiv,floorf@x
  3226  000FFE  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3227  001002  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3228  001006  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3229  00100A  ECC8  F012         	call	_floorf	;wreg free
  3230  00100E  C01E  F086         	movff	?_floorf,efgtoa@l
  3231  001012  C01F  F087         	movff	?_floorf+1,efgtoa@l+1
  3232  001016  C020  F088         	movff	?_floorf+2,efgtoa@l+2
  3233  00101A  C021  F089         	movff	?_floorf+3,efgtoa@l+3
  3234                           
  3235                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  3236  00101E  C086  F005         	movff	efgtoa@l,___fltol@f1
  3237  001022  C087  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3238  001026  C088  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3239  00102A  C089  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3240  00102E  EC73  F015         	call	___fltol	;wreg free
  3241  001032  C005  F078         	movff	?___fltol,efgtoa@d
  3242  001036  C006  F079         	movff	?___fltol+1,efgtoa@d+1
  3243  00103A                     
  3244                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3245  00103A  B856               	btfsc	_flags^0,4,c
  3246  00103C  EF22  F008         	goto	u6771
  3247  001040  EF24  F008         	goto	u6770
  3248  001044                     u6771:
  3249  001044  EF42  F008         	goto	l5265
  3250  001048                     u6770:
  3251  001048  0100               	movlb	0	; () banked
  3252  00104A  5178               	movf	efgtoa@d& (0+255),w,b
  3253  00104C  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3254  00104E  A4D8               	btfss	status,2,c
  3255  001050  EF2C  F008         	goto	u6781
  3256  001054  EF2E  F008         	goto	u6780
  3257  001058                     u6781:
  3258  001058  EF42  F008         	goto	l5265
  3259  00105C                     u6780:
  3260  00105C                     
  3261                           ; BSR set to: 0
  3262  00105C  0E67               	movlw	103
  3263  00105E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3264  001060  A4D8               	btfss	status,2,c
  3265  001062  EF35  F008         	goto	u6791
  3266  001066  EF37  F008         	goto	u6790
  3267  00106A                     u6791:
  3268  00106A  EF42  F008         	goto	l5265
  3269  00106E                     u6790:
  3270  00106E                     
  3271                           ; BSR set to: 0
  3272  00106E  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3273  001070  EF3E  F008         	goto	u6800
  3274  001074  EF3C  F008         	goto	u6801
  3275  001078                     u6801:
  3276  001078  EF42  F008         	goto	l5265
  3277  00107C                     u6800:
  3278  00107C                     
  3279                           ; BSR set to: 0
  3280                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  3281  00107C  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3282  00107E  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3283                           
  3284                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  3285  001080  EF8D  F008         	goto	l5293
  3286  001084                     l5265:
  3287                           
  3288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  3289  001084  0100               	movlb	0	; () banked
  3290  001086  5172               	movf	efgtoa@pp& (0+255),w,b
  3291  001088  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3292  00108A  A4D8               	btfss	status,2,c
  3293  00108C  EF4A  F008         	goto	u6811
  3294  001090  EF4C  F008         	goto	u6810
  3295  001094                     u6811:
  3296  001094  EF76  F008         	goto	l5285
  3297  001098                     u6810:
  3298  001098                     
  3299                           ; BSR set to: 0
  3300  001098  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3301  00109A  EF53  F008         	goto	u6820
  3302  00109E  EF51  F008         	goto	u6821
  3303  0010A2                     u6821:
  3304  0010A2  EF76  F008         	goto	l5285
  3305  0010A6                     u6820:
  3306  0010A6                     
  3307                           ; BSR set to: 0
  3308                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  3309  0010A6  0E00               	movlw	low _dbuf
  3310  0010A8  2592               	addwf	efgtoa@n& (0+255),w,b
  3311  0010AA  6ED9               	movwf	fsr2l,c
  3312  0010AC  0E01               	movlw	high _dbuf
  3313  0010AE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3314  0010B0  6EDA               	movwf	fsr2h,c
  3315  0010B2  0E2E               	movlw	46
  3316  0010B4  6EDF               	movwf	indf2,c
  3317  0010B6                     
  3318                           ; BSR set to: 0
  3319  0010B6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3320  0010B8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3321  0010BA                     
  3322                           ; BSR set to: 0
  3323                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  3324  0010BA  077F               	decf	efgtoa@w& (0+255),f,b
  3325  0010BC  A0D8               	btfss	status,0,c
  3326  0010BE  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3327  0010C0                     
  3328                           ; BSR set to: 0
  3329                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  3330  0010C0  0E00               	movlw	0
  3331  0010C2  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3332  0010C4  0E01               	movlw	1
  3333  0010C6  6F72               	movwf	efgtoa@pp& (0+255),b
  3334  0010C8  EF76  F008         	goto	l5285
  3335  0010CC                     l5277:
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  3339  0010CC  0E00               	movlw	low _dbuf
  3340  0010CE  2592               	addwf	efgtoa@n& (0+255),w,b
  3341  0010D0  6ED9               	movwf	fsr2l,c
  3342  0010D2  0E01               	movlw	high _dbuf
  3343  0010D4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3344  0010D6  6EDA               	movwf	fsr2h,c
  3345  0010D8  0E30               	movlw	48
  3346  0010DA  6EDF               	movwf	indf2,c
  3347  0010DC                     
  3348                           ; BSR set to: 0
  3349  0010DC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3350  0010DE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3351  0010E0                     
  3352                           ; BSR set to: 0
  3353                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  3354  0010E0  077F               	decf	efgtoa@w& (0+255),f,b
  3355  0010E2  A0D8               	btfss	status,0,c
  3356  0010E4  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3357  0010E6                     
  3358                           ; BSR set to: 0
  3359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  3360  0010E6  0770               	decf	efgtoa@t& (0+255),f,b
  3361  0010E8  A0D8               	btfss	status,0,c
  3362  0010EA  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3363  0010EC                     l5285:
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  3367  0010EC  5170               	movf	efgtoa@t& (0+255),w,b
  3368  0010EE  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3369  0010F0  A4D8               	btfss	status,2,c
  3370  0010F2  EF7D  F008         	goto	u6831
  3371  0010F6  EF7F  F008         	goto	u6830
  3372  0010FA                     u6831:
  3373  0010FA  EF66  F008         	goto	l5277
  3374  0010FE                     u6830:
  3375  0010FE                     
  3376                           ; BSR set to: 0
  3377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  3378  0010FE  0E00               	movlw	low _dbuf
  3379  001100  2592               	addwf	efgtoa@n& (0+255),w,b
  3380  001102  6ED9               	movwf	fsr2l,c
  3381  001104  0E01               	movlw	high _dbuf
  3382  001106  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3383  001108  6EDA               	movwf	fsr2h,c
  3384  00110A  5178               	movf	efgtoa@d& (0+255),w,b
  3385  00110C  0F30               	addlw	48
  3386  00110E  6EDF               	movwf	indf2,c
  3387  001110                     
  3388                           ; BSR set to: 0
  3389  001110  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3390  001112  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3391  001114                     
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  3394  001114  077F               	decf	efgtoa@w& (0+255),f,b
  3395  001116  A0D8               	btfss	status,0,c
  3396  001118  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3397  00111A                     l5293:
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  3401  00111A  C082  F02C         	movff	efgtoa@h,___flsub@b
  3402  00111E  C083  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3403  001122  C084  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3404  001126  C085  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3405  00112A  C094  F017         	movff	efgtoa@u,___flmul@a
  3406  00112E  C095  F018         	movff	efgtoa@u+1,___flmul@a+1
  3407  001132  C096  F019         	movff	efgtoa@u+2,___flmul@a+2
  3408  001136  C097  F01A         	movff	efgtoa@u+3,___flmul@a+3
  3409  00113A  C086  F013         	movff	efgtoa@l,___flmul@b
  3410  00113E  C087  F014         	movff	efgtoa@l+1,___flmul@b+1
  3411  001142  C088  F015         	movff	efgtoa@l+2,___flmul@b+2
  3412  001146  C089  F016         	movff	efgtoa@l+3,___flmul@b+3
  3413  00114A  ECE6  F00E         	call	___flmul	;wreg free
  3414  00114E  C013  F030         	movff	?___flmul,___flsub@a
  3415  001152  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3416  001156  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3417  00115A  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3418  00115E  EC69  F01B         	call	___flsub	;wreg free
  3419  001162  C02C  F082         	movff	?___flsub,efgtoa@h
  3420  001166  C02D  F083         	movff	?___flsub+1,efgtoa@h+1
  3421  00116A  C02E  F084         	movff	?___flsub+2,efgtoa@h+2
  3422  00116E  C02F  F085         	movff	?___flsub+3,efgtoa@h+3
  3423  001172                     
  3424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  3425  001172  C094  F005         	movff	efgtoa@u,___fldiv@b
  3426  001176  C095  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3427  00117A  C096  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3428  00117E  C097  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3429  001182  0E00               	movlw	0
  3430  001184  6E09               	movwf	___fldiv@a^0,c
  3431  001186  0E00               	movlw	0
  3432  001188  6E0A               	movwf	(___fldiv@a+1)^0,c
  3433  00118A  0E20               	movlw	32
  3434  00118C  6E0B               	movwf	(___fldiv@a+2)^0,c
  3435  00118E  0E41               	movlw	65
  3436  001190  6E0C               	movwf	(___fldiv@a+3)^0,c
  3437  001192  ECFB  F010         	call	___fldiv	;wreg free
  3438  001196  C005  F094         	movff	?___fldiv,efgtoa@u
  3439  00119A  C006  F095         	movff	?___fldiv+1,efgtoa@u+1
  3440  00119E  C007  F096         	movff	?___fldiv+2,efgtoa@u+2
  3441  0011A2  C008  F097         	movff	?___fldiv+3,efgtoa@u+3
  3442  0011A6                     
  3443                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  3444  0011A6  0100               	movlb	0	; () banked
  3445  0011A8  0776               	decf	efgtoa@ne& (0+255),f,b
  3446  0011AA  A0D8               	btfss	status,0,c
  3447  0011AC  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3448  0011AE                     
  3449                           ; BSR set to: 0
  3450                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  3451  0011AE  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3452  0011B0  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3453  0011B2                     l5301:
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3457  0011B2  5174               	movf	efgtoa@m& (0+255),w,b
  3458  0011B4  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3459  0011B6  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3460  0011B8  0A80               	xorlw	128
  3461  0011BA  6E3F               	movwf	??_efgtoa^0,c
  3462  0011BC  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3463  0011BE  0A80               	xorlw	128
  3464  0011C0  583F               	subwfb	??_efgtoa^0,w,c
  3465  0011C2  B0D8               	btfsc	status,0,c
  3466  0011C4  EFE6  F008         	goto	u6841
  3467  0011C8  EFE8  F008         	goto	u6840
  3468  0011CC                     u6841:
  3469  0011CC  EFF6  F008         	goto	l5305
  3470  0011D0                     u6840:
  3471  0011D0                     
  3472                           ; BSR set to: 0
  3473  0011D0  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3474  0011D2  EFF4  F008         	goto	u6851
  3475  0011D6  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3476  0011D8  E109               	bnz	u6850
  3477  0011DA  0E4B               	movlw	75
  3478  0011DC  5D92               	subwf	efgtoa@n& (0+255),w,b
  3479  0011DE  A0D8               	btfss	status,0,c
  3480  0011E0  EFF4  F008         	goto	u6851
  3481  0011E4  EFF6  F008         	goto	u6850
  3482  0011E8                     u6851:
  3483  0011E8  EFEB  F007         	goto	l5253
  3484  0011EC                     u6850:
  3485  0011EC                     l5305:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3489  0011EC  5172               	movf	efgtoa@pp& (0+255),w,b
  3490  0011EE  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3491  0011F0  A4D8               	btfss	status,2,c
  3492  0011F2  EFFD  F008         	goto	u6861
  3493  0011F6  EFFF  F008         	goto	u6860
  3494  0011FA                     u6861:
  3495  0011FA  EF10  F009         	goto	l5313
  3496  0011FE                     u6860:
  3497  0011FE                     
  3498                           ; BSR set to: 0
  3499  0011FE  A856               	btfss	_flags^0,4,c
  3500  001200  EF04  F009         	goto	u6871
  3501  001204  EF06  F009         	goto	u6870
  3502  001208                     u6871:
  3503  001208  EF10  F009         	goto	l5313
  3504  00120C                     u6870:
  3505  00120C                     
  3506                           ; BSR set to: 0
  3507                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  3508  00120C  0E00               	movlw	low _dbuf
  3509  00120E  2592               	addwf	efgtoa@n& (0+255),w,b
  3510  001210  6ED9               	movwf	fsr2l,c
  3511  001212  0E01               	movlw	high _dbuf
  3512  001214  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3513  001216  6EDA               	movwf	fsr2h,c
  3514  001218  0E2E               	movlw	46
  3515  00121A  6EDF               	movwf	indf2,c
  3516  00121C                     
  3517                           ; BSR set to: 0
  3518  00121C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3519  00121E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3520  001220                     l5313:
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  3524  001220  0E00               	movlw	low _dbuf
  3525  001222  2592               	addwf	efgtoa@n& (0+255),w,b
  3526  001224  6ED9               	movwf	fsr2l,c
  3527  001226  0E01               	movlw	high _dbuf
  3528  001228  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3529  00122A  6EDA               	movwf	fsr2h,c
  3530  00122C  0E00               	movlw	0
  3531  00122E  6EDF               	movwf	indf2,c
  3532  001230                     
  3533                           ; BSR set to: 0
  3534                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  3535  001230  0E65               	movlw	101
  3536  001232  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3537  001234  A4D8               	btfss	status,2,c
  3538  001236  EF1F  F009         	goto	u6881
  3539  00123A  EF21  F009         	goto	u6880
  3540  00123E                     u6881:
  3541  00123E  EFCE  F004         	goto	l5125
  3542  001242                     u6880:
  3543  001242                     
  3544                           ; BSR set to: 0
  3545                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  3546  001242  0E00               	movlw	0
  3547  001244  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3548  001246  0E4F               	movlw	79
  3549  001248  6F8A               	movwf	efgtoa@i& (0+255),b
  3550  00124A                     
  3551                           ; BSR set to: 0
  3552                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  3553  00124A  0E00               	movlw	low _dbuf
  3554  00124C  258A               	addwf	efgtoa@i& (0+255),w,b
  3555  00124E  6ED9               	movwf	fsr2l,c
  3556  001250  0E01               	movlw	high _dbuf
  3557  001252  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3558  001254  6EDA               	movwf	fsr2h,c
  3559  001256  0E00               	movlw	0
  3560  001258  6EDF               	movwf	indf2,c
  3561  00125A                     
  3562                           ; BSR set to: 0
  3563                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  3564  00125A  0E00               	movlw	0
  3565  00125C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3566  00125E  0E00               	movlw	0
  3567  001260  6F7A               	movwf	efgtoa@sign& (0+255),b
  3568  001262                     
  3569                           ; BSR set to: 0
  3570                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  3571  001262  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3572  001264  EF38  F009         	goto	u6890
  3573  001268  EF36  F009         	goto	u6891
  3574  00126C                     u6891:
  3575  00126C  EF40  F009         	goto	l5329
  3576  001270                     u6890:
  3577  001270                     
  3578                           ; BSR set to: 0
  3579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  3580  001270  0E00               	movlw	0
  3581  001272  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3582  001274  0E01               	movlw	1
  3583  001276  6F7A               	movwf	efgtoa@sign& (0+255),b
  3584  001278                     
  3585                           ; BSR set to: 0
  3586                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  3587  001278  6D90               	negf	efgtoa@e& (0+255),b
  3588  00127A  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3589  00127C  B0D8               	btfsc	status,0,c
  3590  00127E  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3591  001280                     l5329:
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  3595  001280  0E00               	movlw	0
  3596  001282  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3597  001284  0E02               	movlw	2
  3598  001286  6F7C               	movwf	efgtoa@p& (0+255),b
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3601  001288  EF71  F009         	goto	l5341
  3602  00128C                     l5331:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  3606  00128C  078A               	decf	efgtoa@i& (0+255),f,b
  3607  00128E  A0D8               	btfss	status,0,c
  3608  001290  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3609  001292                     
  3610                           ; BSR set to: 0
  3611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  3612  001292  0E00               	movlw	low _dbuf
  3613  001294  258A               	addwf	efgtoa@i& (0+255),w,b
  3614  001296  6ED9               	movwf	fsr2l,c
  3615  001298  0E01               	movlw	high _dbuf
  3616  00129A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3617  00129C  6EDA               	movwf	fsr2h,c
  3618  00129E  C090  F005         	movff	efgtoa@e,___awmod@dividend
  3619  0012A2  C091  F006         	movff	efgtoa@e+1,___awmod@dividend+1
  3620  0012A6  0E00               	movlw	0
  3621  0012A8  6E08               	movwf	(___awmod@divisor+1)^0,c
  3622  0012AA  0E0A               	movlw	10
  3623  0012AC  6E07               	movwf	___awmod@divisor^0,c
  3624  0012AE  ECFC  F018         	call	___awmod	;wreg free
  3625  0012B2  5005               	movf	?___awmod^0,w,c
  3626  0012B4  0F30               	addlw	48
  3627  0012B6  6EDF               	movwf	indf2,c
  3628  0012B8                     
  3629                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  3630  0012B8  C090  F005         	movff	efgtoa@e,___awdiv@dividend
  3631  0012BC  C091  F006         	movff	efgtoa@e+1,___awdiv@dividend+1
  3632  0012C0  0E00               	movlw	0
  3633  0012C2  6E08               	movwf	(___awdiv@divisor+1)^0,c
  3634  0012C4  0E0A               	movlw	10
  3635  0012C6  6E07               	movwf	___awdiv@divisor^0,c
  3636  0012C8  EC39  F018         	call	___awdiv	;wreg free
  3637  0012CC  C005  F090         	movff	?___awdiv,efgtoa@e
  3638  0012D0  C006  F091         	movff	?___awdiv+1,efgtoa@e+1
  3639  0012D4                     
  3640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  3641  0012D4  0100               	movlb	0	; () banked
  3642  0012D6  077C               	decf	efgtoa@p& (0+255),f,b
  3643  0012D8  A0D8               	btfss	status,0,c
  3644  0012DA  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3645  0012DC                     
  3646                           ; BSR set to: 0
  3647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  3648  0012DC  077F               	decf	efgtoa@w& (0+255),f,b
  3649  0012DE  A0D8               	btfss	status,0,c
  3650  0012E0  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3651  0012E2                     l5341:
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3655  0012E2  5190               	movf	efgtoa@e& (0+255),w,b
  3656  0012E4  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3657  0012E6  A4D8               	btfss	status,2,c
  3658  0012E8  EF78  F009         	goto	u6901
  3659  0012EC  EF7A  F009         	goto	u6900
  3660  0012F0                     u6901:
  3661  0012F0  EF46  F009         	goto	l5331
  3662  0012F4                     u6900:
  3663  0012F4                     
  3664                           ; BSR set to: 0
  3665  0012F4  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3666  0012F6  EF87  F009         	goto	u6910
  3667  0012FA  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3668  0012FC  E106               	bnz	u6911
  3669  0012FE  057C               	decf	efgtoa@p& (0+255),w,b
  3670  001300  B0D8               	btfsc	status,0,c
  3671  001302  EF85  F009         	goto	u6911
  3672  001306  EF87  F009         	goto	u6910
  3673  00130A                     u6911:
  3674  00130A  EF46  F009         	goto	l5331
  3675  00130E                     u6910:
  3676  00130E                     
  3677                           ; BSR set to: 0
  3678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  3679  00130E  078A               	decf	efgtoa@i& (0+255),f,b
  3680  001310  A0D8               	btfss	status,0,c
  3681  001312  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3682  001314                     
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  3685  001314  517A               	movf	efgtoa@sign& (0+255),w,b
  3686  001316  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3687  001318  A4D8               	btfss	status,2,c
  3688  00131A  EF91  F009         	goto	u6921
  3689  00131E  EF93  F009         	goto	u6920
  3690  001322                     u6921:
  3691  001322  EF99  F009         	goto	l5351
  3692  001326                     u6920:
  3693  001326                     
  3694                           ; BSR set to: 0
  3695  001326  0E00               	movlw	0
  3696  001328  6F6B               	movwf	(_efgtoa$1355+1)& (0+255),b
  3697  00132A  0E2B               	movlw	43
  3698  00132C  6F6A               	movwf	_efgtoa$1355& (0+255),b
  3699  00132E  EF9D  F009         	goto	l5353
  3700  001332                     l5351:
  3701                           
  3702                           ; BSR set to: 0
  3703  001332  0E00               	movlw	0
  3704  001334  6F6B               	movwf	(_efgtoa$1355+1)& (0+255),b
  3705  001336  0E2D               	movlw	45
  3706  001338  6F6A               	movwf	_efgtoa$1355& (0+255),b
  3707  00133A                     l5353:
  3708                           
  3709                           ; BSR set to: 0
  3710  00133A  0E00               	movlw	low _dbuf
  3711  00133C  258A               	addwf	efgtoa@i& (0+255),w,b
  3712  00133E  6ED9               	movwf	fsr2l,c
  3713  001340  0E01               	movlw	high _dbuf
  3714  001342  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3715  001344  6EDA               	movwf	fsr2h,c
  3716  001346  C06A  FFDF         	movff	_efgtoa$1355,indf2
  3717  00134A                     
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  3720  00134A  077F               	decf	efgtoa@w& (0+255),f,b
  3721  00134C  A0D8               	btfss	status,0,c
  3722  00134E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3723  001350                     
  3724                           ; BSR set to: 0
  3725                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3726  001350  078A               	decf	efgtoa@i& (0+255),f,b
  3727  001352  A0D8               	btfss	status,0,c
  3728  001354  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3729  001356                     
  3730                           ; BSR set to: 0
  3731  001356  0EBF               	movlw	191
  3732  001358  6E3F               	movwf	??_efgtoa^0,c
  3733  00135A  0EFF               	movlw	255
  3734  00135C  6E40               	movwf	(??_efgtoa+1)^0,c
  3735  00135E  503E               	movf	efgtoa@c^0,w,c
  3736  001360  6E41               	movwf	(??_efgtoa+2)^0,c
  3737  001362  6A42               	clrf	(??_efgtoa+3)^0,c
  3738  001364  503F               	movf	??_efgtoa^0,w,c
  3739  001366  2641               	addwf	(??_efgtoa+2)^0,f,c
  3740  001368  5040               	movf	(??_efgtoa+1)^0,w,c
  3741  00136A  2242               	addwfc	(??_efgtoa+3)^0,f,c
  3742  00136C  5042               	movf	(??_efgtoa+3)^0,w,c
  3743  00136E  E10A               	bnz	u6930
  3744  001370  0E1A               	movlw	26
  3745  001372  5C41               	subwf	(??_efgtoa+2)^0,w,c
  3746  001374  A0D8               	btfss	status,0,c
  3747  001376  EFBF  F009         	goto	u6931
  3748  00137A  EFC2  F009         	goto	u6930
  3749  00137E                     u6931:
  3750  00137E  0E01               	movlw	1
  3751  001380  EFC3  F009         	goto	u6940
  3752  001384                     u6930:
  3753  001384  0E00               	movlw	0
  3754  001386                     u6940:
  3755  001386  6F6E               	movwf	_efgtoa$1357& (0+255),b
  3756  001388  6B6F               	clrf	(_efgtoa$1357+1)& (0+255),b
  3757  00138A                     
  3758                           ; BSR set to: 0
  3759  00138A  516E               	movf	_efgtoa$1357& (0+255),w,b
  3760  00138C  116F               	iorwf	(_efgtoa$1357+1)& (0+255),w,b
  3761  00138E  A4D8               	btfss	status,2,c
  3762  001390  EFCC  F009         	goto	u6951
  3763  001394  EFCE  F009         	goto	u6950
  3764  001398                     u6951:
  3765  001398  EFD4  F009         	goto	l5367
  3766  00139C                     u6950:
  3767  00139C                     
  3768                           ; BSR set to: 0
  3769  00139C  0E00               	movlw	0
  3770  00139E  6F6D               	movwf	(_efgtoa$1356+1)& (0+255),b
  3771  0013A0  0E65               	movlw	101
  3772  0013A2  6F6C               	movwf	_efgtoa$1356& (0+255),b
  3773  0013A4  EFD8  F009         	goto	l5369
  3774  0013A8                     l5367:
  3775                           
  3776                           ; BSR set to: 0
  3777  0013A8  0E00               	movlw	0
  3778  0013AA  6F6D               	movwf	(_efgtoa$1356+1)& (0+255),b
  3779  0013AC  0E45               	movlw	69
  3780  0013AE  6F6C               	movwf	_efgtoa$1356& (0+255),b
  3781  0013B0                     l5369:
  3782                           
  3783                           ; BSR set to: 0
  3784  0013B0  0E00               	movlw	low _dbuf
  3785  0013B2  258A               	addwf	efgtoa@i& (0+255),w,b
  3786  0013B4  6ED9               	movwf	fsr2l,c
  3787  0013B6  0E01               	movlw	high _dbuf
  3788  0013B8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3789  0013BA  6EDA               	movwf	fsr2h,c
  3790  0013BC  C06C  FFDF         	movff	_efgtoa$1356,indf2
  3791  0013C0                     
  3792                           ; BSR set to: 0
  3793                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  3794  0013C0  077F               	decf	efgtoa@w& (0+255),f,b
  3795  0013C2  A0D8               	btfss	status,0,c
  3796  0013C4  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3797  0013C6                     
  3798                           ; BSR set to: 0
  3799                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3800  0013C6  0E00               	movlw	low _dbuf
  3801  0013C8  2592               	addwf	efgtoa@n& (0+255),w,b
  3802  0013CA  6E05               	movwf	strcpy@dest^0,c
  3803  0013CC  0E01               	movlw	high _dbuf
  3804  0013CE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3805  0013D0  6E06               	movwf	(strcpy@dest+1)^0,c
  3806  0013D2  0E00               	movlw	low _dbuf
  3807  0013D4  258A               	addwf	efgtoa@i& (0+255),w,b
  3808  0013D6  6E07               	movwf	strcpy@src^0,c
  3809  0013D8  0E01               	movlw	high _dbuf
  3810  0013DA  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3811  0013DC  6E08               	movwf	(strcpy@src+1)^0,c
  3812  0013DE  ECBE  F01A         	call	_strcpy	;wreg free
  3813  0013E2  EFCE  F004         	goto	l5125
  3814  0013E6                     l897:
  3815  0013E6  0012               	return		;funcret
  3816  0013E8                     __end_of_efgtoa:
  3817                           	callstack 0
  3818                           
  3819 ;; *************** function _tolower *****************
  3820 ;; Defined at:
  3821 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  c               2   10[COMRAM] int 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  2   10[COMRAM] int 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2, status,0
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3835 ;;      Params:         2       0       0       0       0       0       0       0       0
  3836 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3837 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3838 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3839 ;;Total ram usage:        8 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    3
  3842 ;; This function calls:
  3843 ;;		_isupper
  3844 ;; This function is called by:
  3845 ;;		_efgtoa
  3846 ;;		_vfpfcnvrt
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text6
  3851  00351C                     __ptext6:
  3852                           	callstack 0
  3853  00351C                     _tolower:
  3854                           	callstack 24
  3855  00351C  0EBF               	movlw	191
  3856  00351E  6E0D               	movwf	??_tolower^0,c
  3857  003520  0EFF               	movlw	255
  3858  003522  6E0E               	movwf	(??_tolower+1)^0,c
  3859  003524  C00B  F00F         	movff	tolower@c,??_tolower+2
  3860  003528  C00C  F010         	movff	tolower@c+1,??_tolower+3
  3861  00352C  500D               	movf	??_tolower^0,w,c
  3862  00352E  260F               	addwf	(??_tolower+2)^0,f,c
  3863  003530  500E               	movf	(??_tolower+1)^0,w,c
  3864  003532  2210               	addwfc	(??_tolower+3)^0,f,c
  3865  003534  5010               	movf	(??_tolower+3)^0,w,c
  3866  003536  E10A               	bnz	u6270
  3867  003538  0E1A               	movlw	26
  3868  00353A  5C0F               	subwf	(??_tolower+2)^0,w,c
  3869  00353C  A0D8               	btfss	status,0,c
  3870  00353E  EFA3  F01A         	goto	u6271
  3871  003542  EFA6  F01A         	goto	u6270
  3872  003546                     u6271:
  3873  003546  0E01               	movlw	1
  3874  003548  EFA7  F01A         	goto	u6280
  3875  00354C                     u6270:
  3876  00354C  0E00               	movlw	0
  3877  00354E                     u6280:
  3878  00354E  6E11               	movwf	_tolower$1504^0,c
  3879  003550  6A12               	clrf	(_tolower$1504+1)^0,c
  3880  003552  5011               	movf	_tolower$1504^0,w,c
  3881  003554  1012               	iorwf	(_tolower$1504+1)^0,w,c
  3882  003556  B4D8               	btfsc	status,2,c
  3883  003558  EFB0  F01A         	goto	u6291
  3884  00355C  EFB2  F01A         	goto	u6290
  3885  003560                     u6291:
  3886  003560  EFB9  F01A         	goto	l1137
  3887  003564                     u6290:
  3888  003564  0E20               	movlw	32
  3889  003566  100B               	iorwf	tolower@c^0,w,c
  3890  003568  6E0B               	movwf	?_tolower^0,c
  3891  00356A  500C               	movf	(tolower@c+1)^0,w,c
  3892  00356C  6E0C               	movwf	(?_tolower+1)^0,c
  3893  00356E  EFBD  F01A         	goto	l1142
  3894  003572                     l1137:
  3895  003572  C00B  F00B         	movff	tolower@c,?_tolower
  3896  003576  C00C  F00C         	movff	tolower@c+1,?_tolower+1
  3897  00357A                     l1142:
  3898  00357A  0012               	return		;funcret
  3899  00357C                     __end_of_tolower:
  3900                           	callstack 0
  3901                           
  3902 ;; *************** function _isupper *****************
  3903 ;; Defined at:
  3904 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  c               2    4[COMRAM] int 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;		None
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  2    4[COMRAM] int 
  3911 ;; Registers used:
  3912 ;;		wreg, status,2, status,0
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3918 ;;      Params:         2       0       0       0       0       0       0       0       0
  3919 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3920 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3921 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3922 ;;Total ram usage:        6 bytes
  3923 ;; Hardware stack levels used:    1
  3924 ;; Hardware stack levels required when called:    2
  3925 ;; This function calls:
  3926 ;;		Nothing
  3927 ;; This function is called by:
  3928 ;;		_efgtoa
  3929 ;;		_vfpfcnvrt
  3930 ;;		_tolower
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text7
  3935  00379E                     __ptext7:
  3936                           	callstack 0
  3937  00379E                     _isupper:
  3938                           	callstack 24
  3939  00379E  0EBF               	movlw	191
  3940  0037A0  6E07               	movwf	??_isupper^0,c
  3941  0037A2  0EFF               	movlw	255
  3942  0037A4  6E08               	movwf	(??_isupper+1)^0,c
  3943  0037A6  C005  F009         	movff	isupper@c,??_isupper+2
  3944  0037AA  C006  F00A         	movff	isupper@c+1,??_isupper+3
  3945  0037AE  5007               	movf	??_isupper^0,w,c
  3946  0037B0  2609               	addwf	(??_isupper+2)^0,f,c
  3947  0037B2  5008               	movf	(??_isupper+1)^0,w,c
  3948  0037B4  220A               	addwfc	(??_isupper+3)^0,f,c
  3949  0037B6  500A               	movf	(??_isupper+3)^0,w,c
  3950  0037B8  E10A               	bnz	u5420
  3951  0037BA  0E1A               	movlw	26
  3952  0037BC  5C09               	subwf	(??_isupper+2)^0,w,c
  3953  0037BE  A0D8               	btfss	status,0,c
  3954  0037C0  EFE4  F01B         	goto	u5421
  3955  0037C4  EFE7  F01B         	goto	u5420
  3956  0037C8                     u5421:
  3957  0037C8  0E01               	movlw	1
  3958  0037CA  EFE8  F01B         	goto	u5430
  3959  0037CE                     u5420:
  3960  0037CE  0E00               	movlw	0
  3961  0037D0                     u5430:
  3962  0037D0  6E05               	movwf	?_isupper^0,c
  3963  0037D2  6A06               	clrf	(?_isupper+1)^0,c
  3964  0037D4  0012               	return		;funcret
  3965  0037D6                     __end_of_isupper:
  3966                           	callstack 0
  3967                           
  3968 ;; *************** function _strcpy *****************
  3969 ;; Defined at:
  3970 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  dest            2    4[COMRAM] PTR unsigned char 
  3973 ;;		 -> dbuf(80), 
  3974 ;;  src             2    6[COMRAM] PTR const unsigned char 
  3975 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3976 ;;		 -> dbuf(80), 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  d               2   12[COMRAM] PTR unsigned char 
  3979 ;;		 -> dbuf(80), 
  3980 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3981 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3982 ;;		 -> dbuf(80), 
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  2    4[COMRAM] PTR unsigned char 
  3985 ;; Registers used:
  3986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3992 ;;      Params:         4       0       0       0       0       0       0       0       0
  3993 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3994 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3995 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3996 ;;Total ram usage:       10 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    2
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		_efgtoa
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text8
  4007  00357C                     __ptext8:
  4008                           	callstack 0
  4009  00357C                     _strcpy:
  4010                           	callstack 24
  4011  00357C  C007  F00B         	movff	strcpy@src,strcpy@s
  4012  003580  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  4013  003584  C005  F00D         	movff	strcpy@dest,strcpy@d
  4014  003588  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  4015  00358C                     l5025:
  4016  00358C  500B               	movf	strcpy@s^0,w,c
  4017  00358E  6E09               	movwf	??_strcpy^0,c
  4018  003590  500C               	movf	(strcpy@s+1)^0,w,c
  4019  003592  6E0A               	movwf	(??_strcpy+1)^0,c
  4020  003594  4A0B               	infsnz	strcpy@s^0,f,c
  4021  003596  2A0C               	incf	(strcpy@s+1)^0,f,c
  4022  003598  C009  FFF6         	movff	??_strcpy,tblptrl
  4023  00359C  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  4024  0035A0  6AF8               	clrf	tblptru,c
  4025  0035A2  C00D  FFD9         	movff	strcpy@d,fsr2l
  4026  0035A6  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  4027  0035AA  4A0D               	infsnz	strcpy@d^0,f,c
  4028  0035AC  2A0E               	incf	(strcpy@d+1)^0,f,c
  4029  0035AE  0E07               	movlw	(high __ramtop+-1)
  4030  0035B0  64F7               	cpfsgt	tblptrh,c
  4031  0035B2  D003               	bra	u6257
  4032  0035B4  0008               	tblrd		*
  4033  0035B6  50F5               	movf	tablat,w,c
  4034  0035B8  D005               	bra	u6250
  4035  0035BA                     u6257:
  4036  0035BA  CFF6 FFE1          	movff	tblptrl,fsr1l
  4037  0035BE  CFF7 FFE2          	movff	tblptrh,fsr1h
  4038  0035C2  50E7               	movf	indf1,w,c
  4039  0035C4                     u6250:
  4040  0035C4  6EDF               	movwf	indf2,c
  4041  0035C6  50DF               	movf	indf2,w,c
  4042  0035C8  A4D8               	btfss	status,2,c
  4043  0035CA  EFE9  F01A         	goto	u6261
  4044  0035CE  EFEB  F01A         	goto	u6260
  4045  0035D2                     u6261:
  4046  0035D2  EFC6  F01A         	goto	l5025
  4047  0035D6                     u6260:
  4048  0035D6  0012               	return		;funcret
  4049  0035D8                     __end_of_strcpy:
  4050                           	callstack 0
  4051                           
  4052 ;; *************** function _pad *****************
  4053 ;; Defined at:
  4054 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  4057 ;;		 -> sprintf@f(6), 
  4058 ;;  buf             2   22[COMRAM] PTR unsigned char 
  4059 ;;		 -> dbuf(80), 
  4060 ;;  p               2   24[COMRAM] int 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;  w               2   29[COMRAM] int 
  4063 ;;  i               2   27[COMRAM] int 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  2   20[COMRAM] int 
  4066 ;; Registers used:
  4067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4073 ;;      Params:         6       0       0       0       0       0       0       0       0
  4074 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4075 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4076 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4077 ;;Total ram usage:       11 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:    5
  4080 ;; This function calls:
  4081 ;;		_fputc
  4082 ;;		_fputs
  4083 ;;		_strlen
  4084 ;; This function is called by:
  4085 ;;		_efgtoa
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text9
  4090  003136                     __ptext9:
  4091                           	callstack 0
  4092  003136                     _pad:
  4093                           	callstack 21
  4094  003136                     
  4095                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4096  003136  A056               	btfss	_flags^0,0,c
  4097  003138  EFA0  F018         	goto	u6141
  4098  00313C  EFA2  F018         	goto	u6140
  4099  003140                     u6141:
  4100  003140  EFAC  F018         	goto	l4983
  4101  003144                     u6140:
  4102  003144                     
  4103                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4104  003144  C017  F00E         	movff	pad@buf,fputs@s
  4105  003148  C018  F00F         	movff	pad@buf+1,fputs@s+1
  4106  00314C  C015  F010         	movff	pad@fp,fputs@fp
  4107  003150  C016  F011         	movff	pad@fp+1,fputs@fp+1
  4108  003154  EC8C  F01B         	call	_fputs	;wreg free
  4109  003158                     l4983:
  4110                           
  4111                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4112  003158  BE1A               	btfsc	(pad@p+1)^0,7,c
  4113  00315A  EFB1  F018         	goto	u6151
  4114  00315E  EFB3  F018         	goto	u6150
  4115  003162                     u6151:
  4116  003162  EFB9  F018         	goto	l4987
  4117  003166                     u6150:
  4118  003166  C019  F01E         	movff	pad@p,pad@w
  4119  00316A  C01A  F01F         	movff	pad@p+1,pad@w+1
  4120  00316E  EFBD  F018         	goto	l874
  4121  003172                     l4987:
  4122  003172  0E00               	movlw	0
  4123  003174  6E1F               	movwf	(pad@w+1)^0,c
  4124  003176  0E00               	movlw	0
  4125  003178  6E1E               	movwf	pad@w^0,c
  4126  00317A                     l874:
  4127                           
  4128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4129  00317A  0E00               	movlw	0
  4130  00317C  6E1D               	movwf	(pad@i+1)^0,c
  4131  00317E  0E00               	movlw	0
  4132  003180  6E1C               	movwf	pad@i^0,c
  4133                           
  4134                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4135  003182  EFCF  F018         	goto	l4993
  4136  003186                     l4989:
  4137                           
  4138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4139  003186  0E00               	movlw	0
  4140  003188  6E06               	movwf	(fputc@c+1)^0,c
  4141  00318A  0E20               	movlw	32
  4142  00318C  6E05               	movwf	fputc@c^0,c
  4143  00318E  C015  F007         	movff	pad@fp,fputc@fp
  4144  003192  C016  F008         	movff	pad@fp+1,fputc@fp+1
  4145  003196  ECD4  F017         	call	_fputc	;wreg free
  4146  00319A                     
  4147                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4148  00319A  4A1C               	infsnz	pad@i^0,f,c
  4149  00319C  2A1D               	incf	(pad@i+1)^0,f,c
  4150  00319E                     l4993:
  4151                           
  4152                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4153  00319E  501E               	movf	pad@w^0,w,c
  4154  0031A0  5C1C               	subwf	pad@i^0,w,c
  4155  0031A2  501D               	movf	(pad@i+1)^0,w,c
  4156  0031A4  0A80               	xorlw	128
  4157  0031A6  6E1B               	movwf	??_pad^0,c
  4158  0031A8  501F               	movf	(pad@w+1)^0,w,c
  4159  0031AA  0A80               	xorlw	128
  4160  0031AC  581B               	subwfb	??_pad^0,w,c
  4161  0031AE  A0D8               	btfss	status,0,c
  4162  0031B0  EFDC  F018         	goto	u6161
  4163  0031B4  EFDE  F018         	goto	u6160
  4164  0031B8                     u6161:
  4165  0031B8  EFC3  F018         	goto	l4989
  4166  0031BC                     u6160:
  4167  0031BC                     
  4168                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4169  0031BC  B056               	btfsc	_flags^0,0,c
  4170  0031BE  EFE3  F018         	goto	u6171
  4171  0031C2  EFE5  F018         	goto	u6170
  4172  0031C6                     u6171:
  4173  0031C6  EFEF  F018         	goto	l4997
  4174  0031CA                     u6170:
  4175  0031CA                     
  4176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4177  0031CA  C017  F00E         	movff	pad@buf,fputs@s
  4178  0031CE  C018  F00F         	movff	pad@buf+1,fputs@s+1
  4179  0031D2  C015  F010         	movff	pad@fp,fputs@fp
  4180  0031D6  C016  F011         	movff	pad@fp+1,fputs@fp+1
  4181  0031DA  EC8C  F01B         	call	_fputs	;wreg free
  4182  0031DE                     l4997:
  4183                           
  4184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  4185  0031DE  C017  F005         	movff	pad@buf,strlen@s
  4186  0031E2  C018  F006         	movff	pad@buf+1,strlen@s+1
  4187  0031E6  EC23  F01C         	call	_strlen	;wreg free
  4188  0031EA  501E               	movf	pad@w^0,w,c
  4189  0031EC  2405               	addwf	?_strlen^0,w,c
  4190  0031EE  6E15               	movwf	?_pad^0,c
  4191  0031F0  501F               	movf	(pad@w+1)^0,w,c
  4192  0031F2  2006               	addwfc	(?_strlen+1)^0,w,c
  4193  0031F4  6E16               	movwf	(?_pad+1)^0,c
  4194  0031F6  0012               	return		;funcret
  4195  0031F8                     __end_of_pad:
  4196                           	callstack 0
  4197                           
  4198 ;; *************** function _strlen *****************
  4199 ;; Defined at:
  4200 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4203 ;;		 -> dbuf(80), 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4206 ;;		 -> dbuf(80), 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  2    4[COMRAM] unsigned int 
  4209 ;; Registers used:
  4210 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4216 ;;      Params:         2       0       0       0       0       0       0       0       0
  4217 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4219 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4220 ;;Total ram usage:        4 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    2
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_pad
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text10
  4231  003846                     __ptext10:
  4232                           	callstack 0
  4233  003846                     _strlen:
  4234                           	callstack 23
  4235  003846  C005  F007         	movff	strlen@s,strlen@a
  4236  00384A  C006  F008         	movff	strlen@s+1,strlen@a+1
  4237  00384E  EF2B  F01C         	goto	l4519
  4238  003852                     l4517:
  4239  003852  4A05               	infsnz	strlen@s^0,f,c
  4240  003854  2A06               	incf	(strlen@s+1)^0,f,c
  4241  003856                     l4519:
  4242  003856  C005  FFD9         	movff	strlen@s,fsr2l
  4243  00385A  C006  FFDA         	movff	strlen@s+1,fsr2h
  4244  00385E  50DF               	movf	indf2,w,c
  4245  003860  A4D8               	btfss	status,2,c
  4246  003862  EF35  F01C         	goto	u5411
  4247  003866  EF37  F01C         	goto	u5410
  4248  00386A                     u5411:
  4249  00386A  EF29  F01C         	goto	l4517
  4250  00386E                     u5410:
  4251  00386E  5007               	movf	strlen@a^0,w,c
  4252  003870  5C05               	subwf	strlen@s^0,w,c
  4253  003872  6E05               	movwf	?_strlen^0,c
  4254  003874  5008               	movf	(strlen@a+1)^0,w,c
  4255  003876  5806               	subwfb	(strlen@s+1)^0,w,c
  4256  003878  6E06               	movwf	(?_strlen+1)^0,c
  4257  00387A  0012               	return		;funcret
  4258  00387C                     __end_of_strlen:
  4259                           	callstack 0
  4260                           
  4261 ;; *************** function _fputs *****************
  4262 ;; Defined at:
  4263 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  s               2   13[COMRAM] PTR const unsigned char 
  4266 ;;		 -> dbuf(80), 
  4267 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4268 ;;		 -> sprintf@f(6), 
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;  i               2   18[COMRAM] int 
  4271 ;;  c               1   17[COMRAM] unsigned char 
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  2   13[COMRAM] int 
  4274 ;; Registers used:
  4275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4281 ;;      Params:         4       0       0       0       0       0       0       0       0
  4282 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4284 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4285 ;;Total ram usage:        7 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:    4
  4288 ;; This function calls:
  4289 ;;		_fputc
  4290 ;; This function is called by:
  4291 ;;		_pad
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295                           	psect	text11
  4296  003718                     __ptext11:
  4297                           	callstack 0
  4298  003718                     _fputs:
  4299                           	callstack 21
  4300  003718  0E00               	movlw	0
  4301  00371A  6E14               	movwf	(fputs@i+1)^0,c
  4302  00371C  0E00               	movlw	0
  4303  00371E  6E13               	movwf	fputs@i^0,c
  4304  003720  EF9D  F01B         	goto	l4513
  4305  003724                     l4509:
  4306  003724  C012  F005         	movff	fputs@c,fputc@c
  4307  003728  6A06               	clrf	(fputc@c+1)^0,c
  4308  00372A  C010  F007         	movff	fputs@fp,fputc@fp
  4309  00372E  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  4310  003732  ECD4  F017         	call	_fputc	;wreg free
  4311  003736  4A13               	infsnz	fputs@i^0,f,c
  4312  003738  2A14               	incf	(fputs@i+1)^0,f,c
  4313  00373A                     l4513:
  4314  00373A  5013               	movf	fputs@i^0,w,c
  4315  00373C  240E               	addwf	fputs@s^0,w,c
  4316  00373E  6ED9               	movwf	fsr2l,c
  4317  003740  5014               	movf	(fputs@i+1)^0,w,c
  4318  003742  200F               	addwfc	(fputs@s+1)^0,w,c
  4319  003744  6EDA               	movwf	fsr2h,c
  4320  003746  50DF               	movf	indf2,w,c
  4321  003748  6E12               	movwf	fputs@c^0,c
  4322  00374A  5012               	movf	fputs@c^0,w,c
  4323  00374C  A4D8               	btfss	status,2,c
  4324  00374E  EFAB  F01B         	goto	u5401
  4325  003752  EFAD  F01B         	goto	u5400
  4326  003756                     u5401:
  4327  003756  EF92  F01B         	goto	l4509
  4328  00375A                     u5400:
  4329  00375A  0012               	return		;funcret
  4330  00375C                     __end_of_fputs:
  4331                           	callstack 0
  4332                           
  4333 ;; *************** function _fputc *****************
  4334 ;; Defined at:
  4335 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  c               2    4[COMRAM] int 
  4338 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  4339 ;;		 -> sprintf@f(6), 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;		None
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  2    4[COMRAM] int 
  4344 ;; Registers used:
  4345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4351 ;;      Params:         4       0       0       0       0       0       0       0       0
  4352 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4353 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4354 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4355 ;;Total ram usage:        9 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:    3
  4358 ;; This function calls:
  4359 ;;		_putch
  4360 ;; This function is called by:
  4361 ;;		_pad
  4362 ;;		_vfpfcnvrt
  4363 ;;		_fputs
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text12
  4368  002FA8                     __ptext12:
  4369                           	callstack 0
  4370  002FA8                     _fputc:
  4371                           	callstack 24
  4372  002FA8  5007               	movf	fputc@fp^0,w,c
  4373  002FAA  1008               	iorwf	(fputc@fp+1)^0,w,c
  4374  002FAC  B4D8               	btfsc	status,2,c
  4375  002FAE  EFDB  F017         	goto	u4971
  4376  002FB2  EFDD  F017         	goto	u4970
  4377  002FB6                     u4971:
  4378  002FB6  EFE6  F017         	goto	l4295
  4379  002FBA                     u4970:
  4380  002FBA  5007               	movf	fputc@fp^0,w,c
  4381  002FBC  1008               	iorwf	(fputc@fp+1)^0,w,c
  4382  002FBE  A4D8               	btfss	status,2,c
  4383  002FC0  EFE4  F017         	goto	u4981
  4384  002FC4  EFE6  F017         	goto	u4980
  4385  002FC8                     u4981:
  4386  002FC8  EFEB  F017         	goto	l4297
  4387  002FCC                     u4980:
  4388  002FCC                     l4295:
  4389  002FCC  5005               	movf	fputc@c^0,w,c
  4390  002FCE  ECCE  F01C         	call	_putch
  4391  002FD2  EF38  F018         	goto	l1100
  4392  002FD6                     l4297:
  4393  002FD6  EE20 F004          	lfsr	2,4
  4394  002FDA  5007               	movf	fputc@fp^0,w,c
  4395  002FDC  26D9               	addwf	fsr2l,f,c
  4396  002FDE  5008               	movf	(fputc@fp+1)^0,w,c
  4397  002FE0  22DA               	addwfc	fsr2h,f,c
  4398  002FE2  50DE               	movf	postinc2,w,c
  4399  002FE4  10DE               	iorwf	postinc2,w,c
  4400  002FE6  B4D8               	btfsc	status,2,c
  4401  002FE8  EFF8  F017         	goto	u4991
  4402  002FEC  EFFA  F017         	goto	u4990
  4403  002FF0                     u4991:
  4404  002FF0  EF15  F018         	goto	l4301
  4405  002FF4                     u4990:
  4406  002FF4  EE20 F004          	lfsr	2,4
  4407  002FF8  5007               	movf	fputc@fp^0,w,c
  4408  002FFA  26D9               	addwf	fsr2l,f,c
  4409  002FFC  5008               	movf	(fputc@fp+1)^0,w,c
  4410  002FFE  22DA               	addwfc	fsr2h,f,c
  4411  003000  EE10 F002          	lfsr	1,2
  4412  003004  5007               	movf	fputc@fp^0,w,c
  4413  003006  26E1               	addwf	fsr1l,f,c
  4414  003008  5008               	movf	(fputc@fp+1)^0,w,c
  4415  00300A  22E2               	addwfc	fsr1h,f,c
  4416  00300C  50DE               	movf	postinc2,w,c
  4417  00300E  5CE6               	subwf	postinc1,w,c
  4418  003010  50E6               	movf	postinc1,w,c
  4419  003012  0A80               	xorlw	128
  4420  003014  6E0D               	movwf	(??_fputc+4)^0,c
  4421  003016  50DE               	movf	postinc2,w,c
  4422  003018  0A80               	xorlw	128
  4423  00301A  580D               	subwfb	(??_fputc+4)^0,w,c
  4424  00301C  B0D8               	btfsc	status,0,c
  4425  00301E  EF13  F018         	goto	u5001
  4426  003022  EF15  F018         	goto	u5000
  4427  003026                     u5001:
  4428  003026  EF38  F018         	goto	l1100
  4429  00302A                     u5000:
  4430  00302A                     l4301:
  4431  00302A  EE20 F002          	lfsr	2,2
  4432  00302E  5007               	movf	fputc@fp^0,w,c
  4433  003030  26D9               	addwf	fsr2l,f,c
  4434  003032  5008               	movf	(fputc@fp+1)^0,w,c
  4435  003034  22DA               	addwfc	fsr2h,f,c
  4436  003036  CFDE F009          	movff	postinc2,??_fputc
  4437  00303A  CFDD F00A          	movff	postdec2,??_fputc+1
  4438  00303E  C007  FFD9         	movff	fputc@fp,fsr2l
  4439  003042  C008  FFDA         	movff	fputc@fp+1,fsr2h
  4440  003046  CFDE F00B          	movff	postinc2,??_fputc+2
  4441  00304A  CFDD F00C          	movff	postdec2,??_fputc+3
  4442  00304E  5009               	movf	??_fputc^0,w,c
  4443  003050  240B               	addwf	(??_fputc+2)^0,w,c
  4444  003052  6ED9               	movwf	fsr2l,c
  4445  003054  500A               	movf	(??_fputc+1)^0,w,c
  4446  003056  200C               	addwfc	(??_fputc+3)^0,w,c
  4447  003058  6EDA               	movwf	fsr2h,c
  4448  00305A  C005  FFDF         	movff	fputc@c,indf2
  4449  00305E  EE20 F002          	lfsr	2,2
  4450  003062  5007               	movf	fputc@fp^0,w,c
  4451  003064  26D9               	addwf	fsr2l,f,c
  4452  003066  5008               	movf	(fputc@fp+1)^0,w,c
  4453  003068  22DA               	addwfc	fsr2h,f,c
  4454  00306A  2ADE               	incf	postinc2,f,c
  4455  00306C  0E00               	movlw	0
  4456  00306E  22DD               	addwfc	postdec2,f,c
  4457  003070                     l1100:
  4458  003070  0012               	return		;funcret
  4459  003072                     __end_of_fputc:
  4460                           	callstack 0
  4461                           
  4462 ;; *************** function _putch *****************
  4463 ;; Defined at:
  4464 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  c               1    wreg     unsigned char 
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;  c               1    0[COMRAM] unsigned char 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4478 ;;      Params:         0       0       0       0       0       0       0       0       0
  4479 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4480 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4481 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4482 ;;Total ram usage:        0 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:    2
  4485 ;; This function calls:
  4486 ;;		Nothing
  4487 ;; This function is called by:
  4488 ;;		_fputc
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text13
  4493  00399C                     __ptext13:
  4494                           	callstack 0
  4495  00399C                     _putch:
  4496                           	callstack 24
  4497  00399C  0012               	return		;funcret
  4498  00399E                     __end_of_putch:
  4499                           	callstack 0
  4500                           
  4501 ;; *************** function _floorf *****************
  4502 ;; Defined at:
  4503 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  x               4   29[COMRAM] float 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;  u               4   45[COMRAM] struct .
  4508 ;;  m               4   39[COMRAM] unsigned long 
  4509 ;;  e               2   43[COMRAM] int 
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  4   29[COMRAM] float 
  4512 ;; Registers used:
  4513 ;;		wreg, status,2, status,0
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4519 ;;      Params:         4       0       0       0       0       0       0       0       0
  4520 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4521 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4522 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4523 ;;Total ram usage:       20 bytes
  4524 ;; Hardware stack levels used:    1
  4525 ;; Hardware stack levels required when called:    2
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_efgtoa
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text14
  4534  002590                     __ptext14:
  4535                           	callstack 0
  4536  002590                     _floorf:
  4537                           	callstack 24
  4538  002590  C0CC  F02E         	movff	floorf@F524,floorf@u
  4539  002594  C0CD  F02F         	movff	floorf@F524+1,floorf@u+1
  4540  002598  C0CE  F030         	movff	floorf@F524+2,floorf@u+2
  4541  00259C  C0CF  F031         	movff	floorf@F524+3,floorf@u+3
  4542  0025A0  C01E  F02E         	movff	floorf@x,floorf@u
  4543  0025A4  C01F  F02F         	movff	floorf@x+1,floorf@u+1
  4544  0025A8  C020  F030         	movff	floorf@x+2,floorf@u+2
  4545  0025AC  C021  F031         	movff	floorf@x+3,floorf@u+3
  4546  0025B0  0E81               	movlw	129
  4547  0025B2  6E22               	movwf	??_floorf^0,c
  4548  0025B4  0EFF               	movlw	255
  4549  0025B6  6E23               	movwf	(??_floorf+1)^0,c
  4550  0025B8  C02E  F024         	movff	floorf@u,??_floorf+2
  4551  0025BC  C02F  F025         	movff	floorf@u+1,??_floorf+3
  4552  0025C0  C030  F026         	movff	floorf@u+2,??_floorf+4
  4553  0025C4  C031  F027         	movff	floorf@u+3,??_floorf+5
  4554  0025C8  0E18               	movlw	24
  4555  0025CA  EFEC  F012         	goto	u6300
  4556  0025CE                     u6305:
  4557  0025CE  90D8               	bcf	status,0,c
  4558  0025D0  3227               	rrcf	(??_floorf+5)^0,f,c
  4559  0025D2  3226               	rrcf	(??_floorf+4)^0,f,c
  4560  0025D4  3225               	rrcf	(??_floorf+3)^0,f,c
  4561  0025D6  3224               	rrcf	(??_floorf+2)^0,f,c
  4562  0025D8                     u6300:
  4563  0025D8  2EE8               	decfsz	wreg,f,c
  4564  0025DA  EFE7  F012         	goto	u6305
  4565  0025DE  5024               	movf	(??_floorf+2)^0,w,c
  4566  0025E0  2422               	addwf	??_floorf^0,w,c
  4567  0025E2  6E2C               	movwf	floorf@e^0,c
  4568  0025E4  0E00               	movlw	0
  4569  0025E6  2023               	addwfc	(??_floorf+1)^0,w,c
  4570  0025E8  6E2D               	movwf	(floorf@e+1)^0,c
  4571  0025EA  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4572  0025EC  EF01  F013         	goto	u6311
  4573  0025F0  502D               	movf	(floorf@e+1)^0,w,c
  4574  0025F2  E109               	bnz	u6310
  4575  0025F4  0E17               	movlw	23
  4576  0025F6  5C2C               	subwf	floorf@e^0,w,c
  4577  0025F8  A0D8               	btfss	status,0,c
  4578  0025FA  EF01  F013         	goto	u6311
  4579  0025FE  EF03  F013         	goto	u6310
  4580  002602                     u6311:
  4581  002602  EF0D  F013         	goto	l5043
  4582  002606                     u6310:
  4583  002606                     l5041:
  4584  002606  C01E  F01E         	movff	floorf@x,?_floorf
  4585  00260A  C01F  F01F         	movff	floorf@x+1,?_floorf+1
  4586  00260E  C020  F020         	movff	floorf@x+2,?_floorf+2
  4587  002612  C021  F021         	movff	floorf@x+3,?_floorf+3
  4588  002616  EFD0  F013         	goto	l1061
  4589  00261A                     l5043:
  4590  00261A  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4591  00261C  EF12  F013         	goto	u6321
  4592  002620  EF14  F013         	goto	u6320
  4593  002624                     u6321:
  4594  002624  EF84  F013         	goto	l5053
  4595  002628                     u6320:
  4596  002628  C02C  F022         	movff	floorf@e,??_floorf
  4597  00262C  0EFF               	movlw	255
  4598  00262E  6E23               	movwf	(??_floorf+1)^0,c
  4599  002630  0EFF               	movlw	255
  4600  002632  6E24               	movwf	(??_floorf+2)^0,c
  4601  002634  0E7F               	movlw	127
  4602  002636  6E25               	movwf	(??_floorf+3)^0,c
  4603  002638  0E00               	movlw	0
  4604  00263A  6E26               	movwf	(??_floorf+4)^0,c
  4605  00263C                     u6335:
  4606  00263C  6622               	tstfsz	??_floorf^0,c
  4607  00263E  EF23  F013         	goto	u6336
  4608  002642  EF2B  F013         	goto	u6337
  4609  002646                     u6336:
  4610  002646  3426               	rlcf	(??_floorf+4)^0,w,c
  4611  002648  3226               	rrcf	(??_floorf+4)^0,f,c
  4612  00264A  3225               	rrcf	(??_floorf+3)^0,f,c
  4613  00264C  3224               	rrcf	(??_floorf+2)^0,f,c
  4614  00264E  3223               	rrcf	(??_floorf+1)^0,f,c
  4615  002650  2E22               	decfsz	??_floorf^0,f,c
  4616  002652  EF1E  F013         	goto	u6335
  4617  002656                     u6337:
  4618  002656  C023  F028         	movff	??_floorf+1,floorf@m
  4619  00265A  C024  F029         	movff	??_floorf+2,floorf@m+1
  4620  00265E  C025  F02A         	movff	??_floorf+3,floorf@m+2
  4621  002662  C026  F02B         	movff	??_floorf+4,floorf@m+3
  4622  002666  5028               	movf	floorf@m^0,w,c
  4623  002668  142E               	andwf	floorf@u^0,w,c
  4624  00266A  6E22               	movwf	??_floorf^0,c
  4625  00266C  5029               	movf	(floorf@m+1)^0,w,c
  4626  00266E  142F               	andwf	(floorf@u+1)^0,w,c
  4627  002670  6E23               	movwf	(??_floorf+1)^0,c
  4628  002672  502A               	movf	(floorf@m+2)^0,w,c
  4629  002674  1430               	andwf	(floorf@u+2)^0,w,c
  4630  002676  6E24               	movwf	(??_floorf+2)^0,c
  4631  002678  502B               	movf	(floorf@m+3)^0,w,c
  4632  00267A  1431               	andwf	(floorf@u+3)^0,w,c
  4633  00267C  6E25               	movwf	(??_floorf+3)^0,c
  4634  00267E  5022               	movf	??_floorf^0,w,c
  4635  002680  1023               	iorwf	(??_floorf+1)^0,w,c
  4636  002682  1024               	iorwf	(??_floorf+2)^0,w,c
  4637  002684  1025               	iorwf	(??_floorf+3)^0,w,c
  4638  002686  A4D8               	btfss	status,2,c
  4639  002688  EF48  F013         	goto	u6341
  4640  00268C  EF4A  F013         	goto	u6340
  4641  002690                     u6341:
  4642  002690  EF4C  F013         	goto	l5049
  4643  002694                     u6340:
  4644  002694  EF03  F013         	goto	l5041
  4645  002698                     l5049:
  4646  002698  C02E  F022         	movff	floorf@u,??_floorf
  4647  00269C  C02F  F023         	movff	floorf@u+1,??_floorf+1
  4648  0026A0  C030  F024         	movff	floorf@u+2,??_floorf+2
  4649  0026A4  C031  F025         	movff	floorf@u+3,??_floorf+3
  4650  0026A8  0E20               	movlw	32
  4651  0026AA  EF5C  F013         	goto	u6350
  4652  0026AE                     u6355:
  4653  0026AE  90D8               	bcf	status,0,c
  4654  0026B0  3225               	rrcf	(??_floorf+3)^0,f,c
  4655  0026B2  3224               	rrcf	(??_floorf+2)^0,f,c
  4656  0026B4  3223               	rrcf	(??_floorf+1)^0,f,c
  4657  0026B6  3222               	rrcf	??_floorf^0,f,c
  4658  0026B8                     u6350:
  4659  0026B8  2EE8               	decfsz	wreg,f,c
  4660  0026BA  EF57  F013         	goto	u6355
  4661  0026BE  5022               	movf	??_floorf^0,w,c
  4662  0026C0  1023               	iorwf	(??_floorf+1)^0,w,c
  4663  0026C2  1024               	iorwf	(??_floorf+2)^0,w,c
  4664  0026C4  1025               	iorwf	(??_floorf+3)^0,w,c
  4665  0026C6  B4D8               	btfsc	status,2,c
  4666  0026C8  EF68  F013         	goto	u6361
  4667  0026CC  EF6A  F013         	goto	u6360
  4668  0026D0                     u6361:
  4669  0026D0  EF72  F013         	goto	l1064
  4670  0026D4                     u6360:
  4671  0026D4  5028               	movf	floorf@m^0,w,c
  4672  0026D6  262E               	addwf	floorf@u^0,f,c
  4673  0026D8  5029               	movf	(floorf@m+1)^0,w,c
  4674  0026DA  222F               	addwfc	(floorf@u+1)^0,f,c
  4675  0026DC  502A               	movf	(floorf@m+2)^0,w,c
  4676  0026DE  2230               	addwfc	(floorf@u+2)^0,f,c
  4677  0026E0  502B               	movf	(floorf@m+3)^0,w,c
  4678  0026E2  2231               	addwfc	(floorf@u+3)^0,f,c
  4679  0026E4                     l1064:
  4680  0026E4  1C28               	comf	floorf@m^0,w,c
  4681  0026E6  6E22               	movwf	??_floorf^0,c
  4682  0026E8  1C29               	comf	(floorf@m+1)^0,w,c
  4683  0026EA  6E23               	movwf	(??_floorf+1)^0,c
  4684  0026EC  1C2A               	comf	(floorf@m+2)^0,w,c
  4685  0026EE  6E24               	movwf	(??_floorf+2)^0,c
  4686  0026F0  1C2B               	comf	(floorf@m+3)^0,w,c
  4687  0026F2  6E25               	movwf	(??_floorf+3)^0,c
  4688  0026F4  5022               	movf	??_floorf^0,w,c
  4689  0026F6  162E               	andwf	floorf@u^0,f,c
  4690  0026F8  5023               	movf	(??_floorf+1)^0,w,c
  4691  0026FA  162F               	andwf	(floorf@u+1)^0,f,c
  4692  0026FC  5024               	movf	(??_floorf+2)^0,w,c
  4693  0026FE  1630               	andwf	(floorf@u+2)^0,f,c
  4694  002700  5025               	movf	(??_floorf+3)^0,w,c
  4695  002702  1631               	andwf	(floorf@u+3)^0,f,c
  4696  002704  EFC8  F013         	goto	l5061
  4697  002708                     l5053:
  4698  002708  C02E  F022         	movff	floorf@u,??_floorf
  4699  00270C  C02F  F023         	movff	floorf@u+1,??_floorf+1
  4700  002710  C030  F024         	movff	floorf@u+2,??_floorf+2
  4701  002714  C031  F025         	movff	floorf@u+3,??_floorf+3
  4702  002718  0E20               	movlw	32
  4703  00271A  EF94  F013         	goto	u6370
  4704  00271E                     u6375:
  4705  00271E  90D8               	bcf	status,0,c
  4706  002720  3225               	rrcf	(??_floorf+3)^0,f,c
  4707  002722  3224               	rrcf	(??_floorf+2)^0,f,c
  4708  002724  3223               	rrcf	(??_floorf+1)^0,f,c
  4709  002726  3222               	rrcf	??_floorf^0,f,c
  4710  002728                     u6370:
  4711  002728  2EE8               	decfsz	wreg,f,c
  4712  00272A  EF8F  F013         	goto	u6375
  4713  00272E  5022               	movf	??_floorf^0,w,c
  4714  002730  1023               	iorwf	(??_floorf+1)^0,w,c
  4715  002732  1024               	iorwf	(??_floorf+2)^0,w,c
  4716  002734  1025               	iorwf	(??_floorf+3)^0,w,c
  4717  002736  A4D8               	btfss	status,2,c
  4718  002738  EFA0  F013         	goto	u6381
  4719  00273C  EFA2  F013         	goto	u6380
  4720  002740                     u6381:
  4721  002740  EFAC  F013         	goto	l5057
  4722  002744                     u6380:
  4723  002744  0E00               	movlw	0
  4724  002746  6E2E               	movwf	floorf@u^0,c
  4725  002748  0E00               	movlw	0
  4726  00274A  6E2F               	movwf	(floorf@u+1)^0,c
  4727  00274C  0E00               	movlw	0
  4728  00274E  6E30               	movwf	(floorf@u+2)^0,c
  4729  002750  0E00               	movlw	0
  4730  002752  6E31               	movwf	(floorf@u+3)^0,c
  4731  002754  EFC8  F013         	goto	l5061
  4732  002758                     l5057:
  4733  002758  90D8               	bcf	status,0,c
  4734  00275A  342E               	rlcf	floorf@u^0,w,c
  4735  00275C  6E22               	movwf	??_floorf^0,c
  4736  00275E  342F               	rlcf	(floorf@u+1)^0,w,c
  4737  002760  6E23               	movwf	(??_floorf+1)^0,c
  4738  002762  3430               	rlcf	(floorf@u+2)^0,w,c
  4739  002764  6E24               	movwf	(??_floorf+2)^0,c
  4740  002766  3431               	rlcf	(floorf@u+3)^0,w,c
  4741  002768  6E25               	movwf	(??_floorf+3)^0,c
  4742  00276A  5022               	movf	??_floorf^0,w,c
  4743  00276C  1023               	iorwf	(??_floorf+1)^0,w,c
  4744  00276E  1024               	iorwf	(??_floorf+2)^0,w,c
  4745  002770  1025               	iorwf	(??_floorf+3)^0,w,c
  4746  002772  B4D8               	btfsc	status,2,c
  4747  002774  EFBE  F013         	goto	u6391
  4748  002778  EFC0  F013         	goto	u6390
  4749  00277C                     u6391:
  4750  00277C  EFC8  F013         	goto	l5061
  4751  002780                     u6390:
  4752  002780  0E00               	movlw	0
  4753  002782  6E2E               	movwf	floorf@u^0,c
  4754  002784  0E00               	movlw	0
  4755  002786  6E2F               	movwf	(floorf@u+1)^0,c
  4756  002788  0E80               	movlw	128
  4757  00278A  6E30               	movwf	(floorf@u+2)^0,c
  4758  00278C  0EBF               	movlw	191
  4759  00278E  6E31               	movwf	(floorf@u+3)^0,c
  4760  002790                     l5061:
  4761  002790  C02E  F01E         	movff	floorf@u,?_floorf
  4762  002794  C02F  F01F         	movff	floorf@u+1,?_floorf+1
  4763  002798  C030  F020         	movff	floorf@u+2,?_floorf+2
  4764  00279C  C031  F021         	movff	floorf@u+3,?_floorf+3
  4765  0027A0                     l1061:
  4766  0027A0  0012               	return		;funcret
  4767  0027A2                     __end_of_floorf:
  4768                           	callstack 0
  4769                           
  4770 ;; *************** function ___fpclassifyf *****************
  4771 ;; Defined at:
  4772 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  x               4    4[COMRAM] float 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  u               4   14[COMRAM] struct .
  4777 ;;  e               2   12[COMRAM] int 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  2    4[COMRAM] int 
  4780 ;; Registers used:
  4781 ;;		wreg, status,2, status,0
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4787 ;;      Params:         4       0       0       0       0       0       0       0       0
  4788 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4789 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4790 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4791 ;;Total ram usage:       14 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    2
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_efgtoa
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text15
  4802  002CF0                     __ptext15:
  4803                           	callstack 0
  4804  002CF0                     ___fpclassifyf:
  4805                           	callstack 24
  4806  002CF0  C0D0  F00F         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4807  002CF4  C0D1  F010         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4808  002CF8  C0D2  F011         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4809  002CFC  C0D3  F012         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4810  002D00  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  4811  002D04  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4812  002D08  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4813  002D0C  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4814  002D10  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4815  002D14  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4816  002D18  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4817  002D1C  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4818  002D20  0E18               	movlw	24
  4819  002D22  EF98  F016         	goto	u6180
  4820  002D26                     u6185:
  4821  002D26  90D8               	bcf	status,0,c
  4822  002D28  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  4823  002D2A  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  4824  002D2C  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  4825  002D2E  3209               	rrcf	??___fpclassifyf^0,f,c
  4826  002D30                     u6180:
  4827  002D30  2EE8               	decfsz	wreg,f,c
  4828  002D32  EF93  F016         	goto	u6185
  4829  002D36  5009               	movf	??___fpclassifyf^0,w,c
  4830  002D38  6E0D               	movwf	___fpclassifyf@e^0,c
  4831  002D3A  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  4832  002D3C  500D               	movf	___fpclassifyf@e^0,w,c
  4833  002D3E  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4834  002D40  A4D8               	btfss	status,2,c
  4835  002D42  EFA5  F016         	goto	u6191
  4836  002D46  EFA7  F016         	goto	u6190
  4837  002D4A                     u6191:
  4838  002D4A  EFC7  F016         	goto	l5013
  4839  002D4E                     u6190:
  4840  002D4E  90D8               	bcf	status,0,c
  4841  002D50  340F               	rlcf	___fpclassifyf@u^0,w,c
  4842  002D52  6E09               	movwf	??___fpclassifyf^0,c
  4843  002D54  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4844  002D56  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  4845  002D58  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4846  002D5A  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  4847  002D5C  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4848  002D5E  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  4849  002D60  5009               	movf	??___fpclassifyf^0,w,c
  4850  002D62  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4851  002D64  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4852  002D66  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4853  002D68  A4D8               	btfss	status,2,c
  4854  002D6A  EFB9  F016         	goto	u6201
  4855  002D6E  EFBB  F016         	goto	u6200
  4856  002D72                     u6201:
  4857  002D72  EFC1  F016         	goto	l5009
  4858  002D76                     u6200:
  4859  002D76  0E00               	movlw	0
  4860  002D78  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4861  002D7A  0E02               	movlw	2
  4862  002D7C  6E05               	movwf	?___fpclassifyf^0,c
  4863  002D7E  EFF6  F016         	goto	l1023
  4864  002D82                     l5009:
  4865  002D82  0E00               	movlw	0
  4866  002D84  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4867  002D86  0E03               	movlw	3
  4868  002D88  6E05               	movwf	?___fpclassifyf^0,c
  4869  002D8A  EFF6  F016         	goto	l1023
  4870  002D8E                     l5013:
  4871  002D8E  280D               	incf	___fpclassifyf@e^0,w,c
  4872  002D90  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4873  002D92  A4D8               	btfss	status,2,c
  4874  002D94  EFCE  F016         	goto	u6211
  4875  002D98  EFD0  F016         	goto	u6210
  4876  002D9C                     u6211:
  4877  002D9C  EFF2  F016         	goto	l5019
  4878  002DA0                     u6210:
  4879  002DA0  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4880  002DA4  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4881  002DA8  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4882  002DAC  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4883  002DB0  0E09               	movlw	9
  4884  002DB2                     u6225:
  4885  002DB2  90D8               	bcf	status,0,c
  4886  002DB4  3609               	rlcf	??___fpclassifyf^0,f,c
  4887  002DB6  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  4888  002DB8  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  4889  002DBA  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  4890  002DBC  2EE8               	decfsz	wreg,f,c
  4891  002DBE  EFD9  F016         	goto	u6225
  4892  002DC2  5009               	movf	??___fpclassifyf^0,w,c
  4893  002DC4  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4894  002DC6  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4895  002DC8  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4896  002DCA  B4D8               	btfsc	status,2,c
  4897  002DCC  EFEA  F016         	goto	u6231
  4898  002DD0  EFED  F016         	goto	u6230
  4899  002DD4                     u6231:
  4900  002DD4  0E01               	movlw	1
  4901  002DD6  EFEE  F016         	goto	u6240
  4902  002DDA                     u6230:
  4903  002DDA  0E00               	movlw	0
  4904  002DDC                     u6240:
  4905  002DDC  6E05               	movwf	?___fpclassifyf^0,c
  4906  002DDE  6A06               	clrf	(?___fpclassifyf+1)^0,c
  4907  002DE0  EFF6  F016         	goto	l1023
  4908  002DE4                     l5019:
  4909  002DE4  0E00               	movlw	0
  4910  002DE6  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4911  002DE8  0E04               	movlw	4
  4912  002DEA  6E05               	movwf	?___fpclassifyf^0,c
  4913  002DEC                     l1023:
  4914  002DEC  0012               	return		;funcret
  4915  002DEE                     __end_of___fpclassifyf:
  4916                           	callstack 0
  4917                           
  4918 ;; *************** function ___fltol *****************
  4919 ;; Defined at:
  4920 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  f1              4    4[COMRAM] int 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  exp1            1   13[COMRAM] unsigned char 
  4925 ;;  sign1           1   12[COMRAM] unsigned char 
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  4    4[COMRAM] long 
  4928 ;; Registers used:
  4929 ;;		wreg, status,2, status,0
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4935 ;;      Params:         4       0       0       0       0       0       0       0       0
  4936 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4937 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4938 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4939 ;;Total ram usage:       10 bytes
  4940 ;; Hardware stack levels used:    1
  4941 ;; Hardware stack levels required when called:    2
  4942 ;; This function calls:
  4943 ;;		Nothing
  4944 ;; This function is called by:
  4945 ;;		_efgtoa
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text16
  4950  002AE6                     __ptext16:
  4951                           	callstack 0
  4952  002AE6                     ___fltol:
  4953                           	callstack 24
  4954  002AE6  3407               	rlcf	(___fltol@f1+2)^0,w,c
  4955  002AE8  3408               	rlcf	(___fltol@f1+3)^0,w,c
  4956  002AEA  6E0E               	movwf	___fltol@exp1^0,c
  4957  002AEC  500E               	movf	___fltol@exp1^0,w,c
  4958  002AEE  A4D8               	btfss	status,2,c
  4959  002AF0  EF7C  F015         	goto	u6071
  4960  002AF4  EF7E  F015         	goto	u6070
  4961  002AF8                     u6071:
  4962  002AF8  EF88  F015         	goto	l4941
  4963  002AFC                     u6070:
  4964  002AFC                     l4937:
  4965  002AFC  0E00               	movlw	0
  4966  002AFE  6E05               	movwf	?___fltol^0,c
  4967  002B00  0E00               	movlw	0
  4968  002B02  6E06               	movwf	(?___fltol+1)^0,c
  4969  002B04  0E00               	movlw	0
  4970  002B06  6E07               	movwf	(?___fltol+2)^0,c
  4971  002B08  0E00               	movlw	0
  4972  002B0A  6E08               	movwf	(?___fltol+3)^0,c
  4973  002B0C  EFF5  F015         	goto	l452
  4974  002B10                     l4941:
  4975  002B10  C005  F009         	movff	___fltol@f1,??___fltol
  4976  002B14  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  4977  002B18  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  4978  002B1C  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  4979  002B20  0E20               	movlw	32
  4980  002B22  EF98  F015         	goto	u6080
  4981  002B26                     u6085:
  4982  002B26  90D8               	bcf	status,0,c
  4983  002B28  320C               	rrcf	(??___fltol+3)^0,f,c
  4984  002B2A  320B               	rrcf	(??___fltol+2)^0,f,c
  4985  002B2C  320A               	rrcf	(??___fltol+1)^0,f,c
  4986  002B2E  3209               	rrcf	??___fltol^0,f,c
  4987  002B30                     u6080:
  4988  002B30  2EE8               	decfsz	wreg,f,c
  4989  002B32  EF93  F015         	goto	u6085
  4990  002B36  5009               	movf	??___fltol^0,w,c
  4991  002B38  6E0D               	movwf	___fltol@sign1^0,c
  4992  002B3A  8E07               	bsf	(___fltol@f1+2)^0,7,c
  4993  002B3C  0EFF               	movlw	255
  4994  002B3E  1605               	andwf	___fltol@f1^0,f,c
  4995  002B40  0EFF               	movlw	255
  4996  002B42  1606               	andwf	(___fltol@f1+1)^0,f,c
  4997  002B44  0EFF               	movlw	255
  4998  002B46  1607               	andwf	(___fltol@f1+2)^0,f,c
  4999  002B48  0E00               	movlw	0
  5000  002B4A  1608               	andwf	(___fltol@f1+3)^0,f,c
  5001  002B4C  0E96               	movlw	150
  5002  002B4E  5E0E               	subwf	___fltol@exp1^0,f,c
  5003  002B50  BE0E               	btfsc	___fltol@exp1^0,7,c
  5004  002B52  EFAF  F015         	goto	u6090
  5005  002B56  EFAD  F015         	goto	u6091
  5006  002B5A                     u6091:
  5007  002B5A  EFC5  F015         	goto	l4961
  5008  002B5E                     u6090:
  5009  002B5E  500E               	movf	___fltol@exp1^0,w,c
  5010  002B60  0A80               	xorlw	128
  5011  002B62  0F97               	addlw	151
  5012  002B64  B0D8               	btfsc	status,0,c
  5013  002B66  EFB7  F015         	goto	u6101
  5014  002B6A  EFB9  F015         	goto	u6100
  5015  002B6E                     u6101:
  5016  002B6E  EFBB  F015         	goto	l4957
  5017  002B72                     u6100:
  5018  002B72  EF7E  F015         	goto	l4937
  5019  002B76                     l4957:
  5020  002B76  90D8               	bcf	status,0,c
  5021  002B78  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5022  002B7A  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5023  002B7C  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5024  002B7E  3205               	rrcf	___fltol@f1^0,f,c
  5025  002B80  3E0E               	incfsz	___fltol@exp1^0,f,c
  5026  002B82  EFBB  F015         	goto	l4957
  5027  002B86  EFDD  F015         	goto	l4971
  5028  002B8A                     l4961:
  5029  002B8A  0E1F               	movlw	31
  5030  002B8C  640E               	cpfsgt	___fltol@exp1^0,c
  5031  002B8E  EFCB  F015         	goto	u6111
  5032  002B92  EFCD  F015         	goto	u6110
  5033  002B96                     u6111:
  5034  002B96  EFD5  F015         	goto	l4969
  5035  002B9A                     u6110:
  5036  002B9A  EF7E  F015         	goto	l4937
  5037  002B9E                     l4967:
  5038  002B9E  90D8               	bcf	status,0,c
  5039  002BA0  3605               	rlcf	___fltol@f1^0,f,c
  5040  002BA2  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5041  002BA4  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5042  002BA6  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5043  002BA8  060E               	decf	___fltol@exp1^0,f,c
  5044  002BAA                     l4969:
  5045  002BAA  500E               	movf	___fltol@exp1^0,w,c
  5046  002BAC  A4D8               	btfss	status,2,c
  5047  002BAE  EFDB  F015         	goto	u6121
  5048  002BB2  EFDD  F015         	goto	u6120
  5049  002BB6                     u6121:
  5050  002BB6  EFCF  F015         	goto	l4967
  5051  002BBA                     u6120:
  5052  002BBA                     l4971:
  5053  002BBA  500D               	movf	___fltol@sign1^0,w,c
  5054  002BBC  B4D8               	btfsc	status,2,c
  5055  002BBE  EFE3  F015         	goto	u6131
  5056  002BC2  EFE5  F015         	goto	u6130
  5057  002BC6                     u6131:
  5058  002BC6  EFED  F015         	goto	l4975
  5059  002BCA                     u6130:
  5060  002BCA  1E08               	comf	(___fltol@f1+3)^0,f,c
  5061  002BCC  1E07               	comf	(___fltol@f1+2)^0,f,c
  5062  002BCE  1E06               	comf	(___fltol@f1+1)^0,f,c
  5063  002BD0  6C05               	negf	___fltol@f1^0,c
  5064  002BD2  0E00               	movlw	0
  5065  002BD4  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5066  002BD6  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5067  002BD8  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5068  002BDA                     l4975:
  5069  002BDA  C005  F005         	movff	___fltol@f1,?___fltol
  5070  002BDE  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5071  002BE2  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5072  002BE6  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5073  002BEA                     l452:
  5074  002BEA  0012               	return		;funcret
  5075  002BEC                     __end_of___fltol:
  5076                           	callstack 0
  5077                           
  5078 ;; *************** function ___flsub *****************
  5079 ;; Defined at:
  5080 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  b               4   43[COMRAM] long 
  5083 ;;  a               4   47[COMRAM] long 
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;		None
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  4   43[COMRAM] long 
  5088 ;; Registers used:
  5089 ;;		wreg, status,2, status,0, cstack
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5095 ;;      Params:         8       0       0       0       0       0       0       0       0
  5096 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5097 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5098 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5099 ;;Total ram usage:        8 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    3
  5102 ;; This function calls:
  5103 ;;		___fladd
  5104 ;; This function is called by:
  5105 ;;		_efgtoa
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text17
  5110  0036D2                     __ptext17:
  5111                           	callstack 0
  5112  0036D2                     ___flsub:
  5113                           	callstack 23
  5114  0036D2  0E00               	movlw	0
  5115  0036D4  1A30               	xorwf	___flsub@a^0,f,c
  5116  0036D6  0E00               	movlw	0
  5117  0036D8  1A31               	xorwf	(___flsub@a+1)^0,f,c
  5118  0036DA  0E00               	movlw	0
  5119  0036DC  1A32               	xorwf	(___flsub@a+2)^0,f,c
  5120  0036DE  0E80               	movlw	128
  5121  0036E0  1A33               	xorwf	(___flsub@a+3)^0,f,c
  5122  0036E2  C02C  F005         	movff	___flsub@b,___fladd@b
  5123  0036E6  C02D  F006         	movff	___flsub@b+1,___fladd@b+1
  5124  0036EA  C02E  F007         	movff	___flsub@b+2,___fladd@b+2
  5125  0036EE  C02F  F008         	movff	___flsub@b+3,___fladd@b+3
  5126  0036F2  C030  F009         	movff	___flsub@a,___fladd@a
  5127  0036F6  C031  F00A         	movff	___flsub@a+1,___fladd@a+1
  5128  0036FA  C032  F00B         	movff	___flsub@a+2,___fladd@a+2
  5129  0036FE  C033  F00C         	movff	___flsub@a+3,___fladd@a+3
  5130  003702  EC86  F00C         	call	___fladd	;wreg free
  5131  003706  C005  F02C         	movff	?___fladd,?___flsub
  5132  00370A  C006  F02D         	movff	?___fladd+1,?___flsub+1
  5133  00370E  C007  F02E         	movff	?___fladd+2,?___flsub+2
  5134  003712  C008  F02F         	movff	?___fladd+3,?___flsub+3
  5135  003716  0012               	return		;funcret
  5136  003718                     __end_of___flsub:
  5137                           	callstack 0
  5138                           
  5139 ;; *************** function ___fladd *****************
  5140 ;; Defined at:
  5141 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  b               4    4[COMRAM] long 
  5144 ;;  a               4    8[COMRAM] long 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;  grs             1   19[COMRAM] unsigned char 
  5147 ;;  bexp            1   18[COMRAM] unsigned char 
  5148 ;;  aexp            1   17[COMRAM] unsigned char 
  5149 ;;  signs           1   16[COMRAM] unsigned char 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  4    4[COMRAM] unsigned char 
  5152 ;; Registers used:
  5153 ;;		wreg, status,2, status,0
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5159 ;;      Params:         8       0       0       0       0       0       0       0       0
  5160 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5161 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5162 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5163 ;;Total ram usage:       16 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    2
  5166 ;; This function calls:
  5167 ;;		Nothing
  5168 ;; This function is called by:
  5169 ;;		___flsub
  5170 ;;		_efgtoa
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text18
  5175  00190C                     __ptext18:
  5176                           	callstack 0
  5177  00190C                     ___fladd:
  5178                           	callstack 23
  5179  00190C  5008               	movf	(___fladd@b+3)^0,w,c
  5180  00190E  0B80               	andlw	128
  5181  001910  6E11               	movwf	___fladd@signs^0,c
  5182  001912  5008               	movf	(___fladd@b+3)^0,w,c
  5183  001914  2408               	addwf	(___fladd@b+3)^0,w,c
  5184  001916  6E13               	movwf	___fladd@bexp^0,c
  5185  001918  AE07               	btfss	(___fladd@b+2)^0,7,c
  5186  00191A  EF91  F00C         	goto	u5011
  5187  00191E  EF93  F00C         	goto	u5010
  5188  001922                     u5011:
  5189  001922  EF94  F00C         	goto	l4311
  5190  001926                     u5010:
  5191  001926  8013               	bsf	___fladd@bexp^0,0,c
  5192  001928                     l4311:
  5193  001928  5013               	movf	___fladd@bexp^0,w,c
  5194  00192A  B4D8               	btfsc	status,2,c
  5195  00192C  EF9A  F00C         	goto	u5021
  5196  001930  EF9C  F00C         	goto	u5020
  5197  001934                     u5021:
  5198  001934  EFB1  F00C         	goto	l4321
  5199  001938                     u5020:
  5200  001938  2813               	incf	___fladd@bexp^0,w,c
  5201  00193A  A4D8               	btfss	status,2,c
  5202  00193C  EFA2  F00C         	goto	u5031
  5203  001940  EFA4  F00C         	goto	u5030
  5204  001944                     u5031:
  5205  001944  EFAC  F00C         	goto	l4317
  5206  001948                     u5030:
  5207  001948  0E00               	movlw	0
  5208  00194A  6E05               	movwf	___fladd@b^0,c
  5209  00194C  0E00               	movlw	0
  5210  00194E  6E06               	movwf	(___fladd@b+1)^0,c
  5211  001950  0E00               	movlw	0
  5212  001952  6E07               	movwf	(___fladd@b+2)^0,c
  5213  001954  0E00               	movlw	0
  5214  001956  6E08               	movwf	(___fladd@b+3)^0,c
  5215  001958                     l4317:
  5216  001958  8E07               	bsf	(___fladd@b+2)^0,7,c
  5217  00195A  0E00               	movlw	0
  5218  00195C  6E08               	movwf	(___fladd@b+3)^0,c
  5219  00195E  EFB9  F00C         	goto	l4323
  5220  001962                     l4321:
  5221  001962  0E00               	movlw	0
  5222  001964  6E05               	movwf	___fladd@b^0,c
  5223  001966  0E00               	movlw	0
  5224  001968  6E06               	movwf	(___fladd@b+1)^0,c
  5225  00196A  0E00               	movlw	0
  5226  00196C  6E07               	movwf	(___fladd@b+2)^0,c
  5227  00196E  0E00               	movlw	0
  5228  001970  6E08               	movwf	(___fladd@b+3)^0,c
  5229  001972                     l4323:
  5230  001972  500C               	movf	(___fladd@a+3)^0,w,c
  5231  001974  0B80               	andlw	128
  5232  001976  6E12               	movwf	___fladd@aexp^0,c
  5233  001978  5011               	movf	___fladd@signs^0,w,c
  5234  00197A  1812               	xorwf	___fladd@aexp^0,w,c
  5235  00197C  B4D8               	btfsc	status,2,c
  5236  00197E  EFC3  F00C         	goto	u5041
  5237  001982  EFC5  F00C         	goto	u5040
  5238  001986                     u5041:
  5239  001986  EFC6  F00C         	goto	l4329
  5240  00198A                     u5040:
  5241  00198A  8C11               	bsf	___fladd@signs^0,6,c
  5242  00198C                     l4329:
  5243  00198C  500C               	movf	(___fladd@a+3)^0,w,c
  5244  00198E  240C               	addwf	(___fladd@a+3)^0,w,c
  5245  001990  6E12               	movwf	___fladd@aexp^0,c
  5246  001992  AE0B               	btfss	(___fladd@a+2)^0,7,c
  5247  001994  EFCE  F00C         	goto	u5051
  5248  001998  EFD0  F00C         	goto	u5050
  5249  00199C                     u5051:
  5250  00199C  EFD1  F00C         	goto	l4335
  5251  0019A0                     u5050:
  5252  0019A0  8012               	bsf	___fladd@aexp^0,0,c
  5253  0019A2                     l4335:
  5254  0019A2  5012               	movf	___fladd@aexp^0,w,c
  5255  0019A4  B4D8               	btfsc	status,2,c
  5256  0019A6  EFD7  F00C         	goto	u5061
  5257  0019AA  EFD9  F00C         	goto	u5060
  5258  0019AE                     u5061:
  5259  0019AE  EFEE  F00C         	goto	l4345
  5260  0019B2                     u5060:
  5261  0019B2  2812               	incf	___fladd@aexp^0,w,c
  5262  0019B4  A4D8               	btfss	status,2,c
  5263  0019B6  EFDF  F00C         	goto	u5071
  5264  0019BA  EFE1  F00C         	goto	u5070
  5265  0019BE                     u5071:
  5266  0019BE  EFE9  F00C         	goto	l4341
  5267  0019C2                     u5070:
  5268  0019C2  0E00               	movlw	0
  5269  0019C4  6E09               	movwf	___fladd@a^0,c
  5270  0019C6  0E00               	movlw	0
  5271  0019C8  6E0A               	movwf	(___fladd@a+1)^0,c
  5272  0019CA  0E00               	movlw	0
  5273  0019CC  6E0B               	movwf	(___fladd@a+2)^0,c
  5274  0019CE  0E00               	movlw	0
  5275  0019D0  6E0C               	movwf	(___fladd@a+3)^0,c
  5276  0019D2                     l4341:
  5277  0019D2  8E0B               	bsf	(___fladd@a+2)^0,7,c
  5278  0019D4  0E00               	movlw	0
  5279  0019D6  6E0C               	movwf	(___fladd@a+3)^0,c
  5280  0019D8  EFF6  F00C         	goto	l4347
  5281  0019DC                     l4345:
  5282  0019DC  0E00               	movlw	0
  5283  0019DE  6E09               	movwf	___fladd@a^0,c
  5284  0019E0  0E00               	movlw	0
  5285  0019E2  6E0A               	movwf	(___fladd@a+1)^0,c
  5286  0019E4  0E00               	movlw	0
  5287  0019E6  6E0B               	movwf	(___fladd@a+2)^0,c
  5288  0019E8  0E00               	movlw	0
  5289  0019EA  6E0C               	movwf	(___fladd@a+3)^0,c
  5290  0019EC                     l4347:
  5291  0019EC  5013               	movf	___fladd@bexp^0,w,c
  5292  0019EE  5C12               	subwf	___fladd@aexp^0,w,c
  5293  0019F0  B0D8               	btfsc	status,0,c
  5294  0019F2  EFFD  F00C         	goto	u5081
  5295  0019F6  EFFF  F00C         	goto	u5080
  5296  0019FA                     u5081:
  5297  0019FA  EF26  F00D         	goto	l4383
  5298  0019FE                     u5080:
  5299  0019FE  AC11               	btfss	___fladd@signs^0,6,c
  5300  001A00  EF04  F00D         	goto	u5091
  5301  001A04  EF06  F00D         	goto	u5090
  5302  001A08                     u5091:
  5303  001A08  EF08  F00D         	goto	l4353
  5304  001A0C                     u5090:
  5305  001A0C  0E80               	movlw	128
  5306  001A0E  1A11               	xorwf	___fladd@signs^0,f,c
  5307  001A10                     l4353:
  5308  001A10  C013  F014         	movff	___fladd@bexp,___fladd@grs
  5309  001A14  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5310  001A18  C014  F012         	movff	___fladd@grs,___fladd@aexp
  5311  001A1C  C005  F014         	movff	___fladd@b,___fladd@grs
  5312  001A20  C009  F005         	movff	___fladd@a,___fladd@b
  5313  001A24  C014  F009         	movff	___fladd@grs,___fladd@a
  5314  001A28  C006  F014         	movff	___fladd@b+1,___fladd@grs
  5315  001A2C  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  5316  001A30  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  5317  001A34  C007  F014         	movff	___fladd@b+2,___fladd@grs
  5318  001A38  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  5319  001A3C  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  5320  001A40  C008  F014         	movff	___fladd@b+3,___fladd@grs
  5321  001A44  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  5322  001A48  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  5323  001A4C                     l4383:
  5324  001A4C  0E00               	movlw	0
  5325  001A4E  6E14               	movwf	___fladd@grs^0,c
  5326  001A50  5013               	movf	___fladd@bexp^0,w,c
  5327  001A52  C012  F00D         	movff	___fladd@aexp,??___fladd
  5328  001A56  6A0E               	clrf	(??___fladd+1)^0,c
  5329  001A58  5E0D               	subwf	??___fladd^0,f,c
  5330  001A5A  0E00               	movlw	0
  5331  001A5C  5A0E               	subwfb	(??___fladd+1)^0,f,c
  5332  001A5E  BE0E               	btfsc	(??___fladd+1)^0,7,c
  5333  001A60  EF3B  F00D         	goto	u5101
  5334  001A64  500E               	movf	(??___fladd+1)^0,w,c
  5335  001A66  E109               	bnz	u5100
  5336  001A68  0E1A               	movlw	26
  5337  001A6A  5C0D               	subwf	??___fladd^0,w,c
  5338  001A6C  A0D8               	btfss	status,0,c
  5339  001A6E  EF3B  F00D         	goto	u5101
  5340  001A72  EF3D  F00D         	goto	u5100
  5341  001A76                     u5101:
  5342  001A76  EF74  F00D         	goto	l684
  5343  001A7A                     u5100:
  5344  001A7A  5005               	movf	___fladd@b^0,w,c
  5345  001A7C  1006               	iorwf	(___fladd@b+1)^0,w,c
  5346  001A7E  1007               	iorwf	(___fladd@b+2)^0,w,c
  5347  001A80  1008               	iorwf	(___fladd@b+3)^0,w,c
  5348  001A82  A4D8               	btfss	status,2,c
  5349  001A84  EF46  F00D         	goto	u5111
  5350  001A88  EF49  F00D         	goto	u5110
  5351  001A8C                     u5111:
  5352  001A8C  0E01               	movlw	1
  5353  001A8E  EF4A  F00D         	goto	u5120
  5354  001A92                     u5110:
  5355  001A92  0E00               	movlw	0
  5356  001A94                     u5120:
  5357  001A94  6E14               	movwf	___fladd@grs^0,c
  5358  001A96  0E00               	movlw	0
  5359  001A98  6E05               	movwf	___fladd@b^0,c
  5360  001A9A  0E00               	movlw	0
  5361  001A9C  6E06               	movwf	(___fladd@b+1)^0,c
  5362  001A9E  0E00               	movlw	0
  5363  001AA0  6E07               	movwf	(___fladd@b+2)^0,c
  5364  001AA2  0E00               	movlw	0
  5365  001AA4  6E08               	movwf	(___fladd@b+3)^0,c
  5366  001AA6  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5367  001AAA  EF7D  F00D         	goto	l683
  5368  001AAE                     l685:
  5369  001AAE  A014               	btfss	___fladd@grs^0,0,c
  5370  001AB0  EF5C  F00D         	goto	u5131
  5371  001AB4  EF5E  F00D         	goto	u5130
  5372  001AB8                     u5131:
  5373  001AB8  EF64  F00D         	goto	l4395
  5374  001ABC                     u5130:
  5375  001ABC  90D8               	bcf	status,0,c
  5376  001ABE  3014               	rrcf	___fladd@grs^0,w,c
  5377  001AC0  0901               	iorlw	1
  5378  001AC2  6E14               	movwf	___fladd@grs^0,c
  5379  001AC4  EF66  F00D         	goto	l4397
  5380  001AC8                     l4395:
  5381  001AC8  90D8               	bcf	status,0,c
  5382  001ACA  3214               	rrcf	___fladd@grs^0,f,c
  5383  001ACC                     l4397:
  5384  001ACC  A005               	btfss	___fladd@b^0,0,c
  5385  001ACE  EF6B  F00D         	goto	u5141
  5386  001AD2  EF6D  F00D         	goto	u5140
  5387  001AD6                     u5141:
  5388  001AD6  EF6E  F00D         	goto	l4401
  5389  001ADA                     u5140:
  5390  001ADA  8E14               	bsf	___fladd@grs^0,7,c
  5391  001ADC                     l4401:
  5392  001ADC  3408               	rlcf	(___fladd@b+3)^0,w,c
  5393  001ADE  3208               	rrcf	(___fladd@b+3)^0,f,c
  5394  001AE0  3207               	rrcf	(___fladd@b+2)^0,f,c
  5395  001AE2  3206               	rrcf	(___fladd@b+1)^0,f,c
  5396  001AE4  3205               	rrcf	___fladd@b^0,f,c
  5397  001AE6  2A13               	incf	___fladd@bexp^0,f,c
  5398  001AE8                     l684:
  5399  001AE8  5012               	movf	___fladd@aexp^0,w,c
  5400  001AEA  5C13               	subwf	___fladd@bexp^0,w,c
  5401  001AEC  A0D8               	btfss	status,0,c
  5402  001AEE  EF7B  F00D         	goto	u5151
  5403  001AF2  EF7D  F00D         	goto	u5150
  5404  001AF6                     u5151:
  5405  001AF6  EF57  F00D         	goto	l685
  5406  001AFA                     u5150:
  5407  001AFA                     l683:
  5408  001AFA  BC11               	btfsc	___fladd@signs^0,6,c
  5409  001AFC  EF82  F00D         	goto	u5161
  5410  001B00  EF84  F00D         	goto	u5160
  5411  001B04                     u5161:
  5412  001B04  EFC4  F00D         	goto	l4429
  5413  001B08                     u5160:
  5414  001B08  5013               	movf	___fladd@bexp^0,w,c
  5415  001B0A  A4D8               	btfss	status,2,c
  5416  001B0C  EF8A  F00D         	goto	u5171
  5417  001B10  EF8C  F00D         	goto	u5170
  5418  001B14                     u5171:
  5419  001B14  EF96  F00D         	goto	l4411
  5420  001B18                     u5170:
  5421  001B18  0E00               	movlw	0
  5422  001B1A  6E05               	movwf	?___fladd^0,c
  5423  001B1C  0E00               	movlw	0
  5424  001B1E  6E06               	movwf	(?___fladd+1)^0,c
  5425  001B20  0E00               	movlw	0
  5426  001B22  6E07               	movwf	(?___fladd+2)^0,c
  5427  001B24  0E00               	movlw	0
  5428  001B26  6E08               	movwf	(?___fladd+3)^0,c
  5429  001B28  EFE5  F00E         	goto	l692
  5430  001B2C                     l4411:
  5431  001B2C  5009               	movf	___fladd@a^0,w,c
  5432  001B2E  2605               	addwf	___fladd@b^0,f,c
  5433  001B30  500A               	movf	(___fladd@a+1)^0,w,c
  5434  001B32  2206               	addwfc	(___fladd@b+1)^0,f,c
  5435  001B34  500B               	movf	(___fladd@a+2)^0,w,c
  5436  001B36  2207               	addwfc	(___fladd@b+2)^0,f,c
  5437  001B38  500C               	movf	(___fladd@a+3)^0,w,c
  5438  001B3A  2208               	addwfc	(___fladd@b+3)^0,f,c
  5439  001B3C  A008               	btfss	(___fladd@b+3)^0,0,c
  5440  001B3E  EFA3  F00D         	goto	u5181
  5441  001B42  EFA5  F00D         	goto	u5180
  5442  001B46                     u5181:
  5443  001B46  EF51  F00E         	goto	l4465
  5444  001B4A                     u5180:
  5445  001B4A  A014               	btfss	___fladd@grs^0,0,c
  5446  001B4C  EFAA  F00D         	goto	u5191
  5447  001B50  EFAC  F00D         	goto	u5190
  5448  001B54                     u5191:
  5449  001B54  EFB2  F00D         	goto	l4419
  5450  001B58                     u5190:
  5451  001B58  90D8               	bcf	status,0,c
  5452  001B5A  3014               	rrcf	___fladd@grs^0,w,c
  5453  001B5C  0901               	iorlw	1
  5454  001B5E  6E14               	movwf	___fladd@grs^0,c
  5455  001B60  EFB4  F00D         	goto	l4421
  5456  001B64                     l4419:
  5457  001B64  90D8               	bcf	status,0,c
  5458  001B66  3214               	rrcf	___fladd@grs^0,f,c
  5459  001B68                     l4421:
  5460  001B68  A005               	btfss	___fladd@b^0,0,c
  5461  001B6A  EFB9  F00D         	goto	u5201
  5462  001B6E  EFBB  F00D         	goto	u5200
  5463  001B72                     u5201:
  5464  001B72  EFBC  F00D         	goto	l4425
  5465  001B76                     u5200:
  5466  001B76  8E14               	bsf	___fladd@grs^0,7,c
  5467  001B78                     l4425:
  5468  001B78  3408               	rlcf	(___fladd@b+3)^0,w,c
  5469  001B7A  3208               	rrcf	(___fladd@b+3)^0,f,c
  5470  001B7C  3207               	rrcf	(___fladd@b+2)^0,f,c
  5471  001B7E  3206               	rrcf	(___fladd@b+1)^0,f,c
  5472  001B80  3205               	rrcf	___fladd@b^0,f,c
  5473  001B82  2A13               	incf	___fladd@bexp^0,f,c
  5474  001B84  EF51  F00E         	goto	l4465
  5475  001B88                     l4429:
  5476  001B88  5009               	movf	___fladd@a^0,w,c
  5477  001B8A  5C05               	subwf	___fladd@b^0,w,c
  5478  001B8C  500A               	movf	(___fladd@a+1)^0,w,c
  5479  001B8E  5806               	subwfb	(___fladd@b+1)^0,w,c
  5480  001B90  500B               	movf	(___fladd@a+2)^0,w,c
  5481  001B92  5807               	subwfb	(___fladd@b+2)^0,w,c
  5482  001B94  5008               	movf	(___fladd@b+3)^0,w,c
  5483  001B96  0A80               	xorlw	128
  5484  001B98  6E0D               	movwf	??___fladd^0,c
  5485  001B9A  500C               	movf	(___fladd@a+3)^0,w,c
  5486  001B9C  0A80               	xorlw	128
  5487  001B9E  580D               	subwfb	??___fladd^0,w,c
  5488  001BA0  B0D8               	btfsc	status,0,c
  5489  001BA2  EFD5  F00D         	goto	u5211
  5490  001BA6  EFD7  F00D         	goto	u5210
  5491  001BAA                     u5211:
  5492  001BAA  EF02  F00E         	goto	l4439
  5493  001BAE                     u5210:
  5494  001BAE  5005               	movf	___fladd@b^0,w,c
  5495  001BB0  5C09               	subwf	___fladd@a^0,w,c
  5496  001BB2  6E0D               	movwf	??___fladd^0,c
  5497  001BB4  5006               	movf	(___fladd@b+1)^0,w,c
  5498  001BB6  580A               	subwfb	(___fladd@a+1)^0,w,c
  5499  001BB8  6E0E               	movwf	(??___fladd+1)^0,c
  5500  001BBA  5007               	movf	(___fladd@b+2)^0,w,c
  5501  001BBC  580B               	subwfb	(___fladd@a+2)^0,w,c
  5502  001BBE  6E0F               	movwf	(??___fladd+2)^0,c
  5503  001BC0  5008               	movf	(___fladd@b+3)^0,w,c
  5504  001BC2  580C               	subwfb	(___fladd@a+3)^0,w,c
  5505  001BC4  6E10               	movwf	(??___fladd+3)^0,c
  5506  001BC6  0EFF               	movlw	255
  5507  001BC8  240D               	addwf	??___fladd^0,w,c
  5508  001BCA  6E05               	movwf	___fladd@b^0,c
  5509  001BCC  0EFF               	movlw	255
  5510  001BCE  200E               	addwfc	(??___fladd+1)^0,w,c
  5511  001BD0  6E06               	movwf	(___fladd@b+1)^0,c
  5512  001BD2  0EFF               	movlw	255
  5513  001BD4  200F               	addwfc	(??___fladd+2)^0,w,c
  5514  001BD6  6E07               	movwf	(___fladd@b+2)^0,c
  5515  001BD8  0EFF               	movlw	255
  5516  001BDA  2010               	addwfc	(??___fladd+3)^0,w,c
  5517  001BDC  6E08               	movwf	(___fladd@b+3)^0,c
  5518  001BDE  0E80               	movlw	128
  5519  001BE0  1A11               	xorwf	___fladd@signs^0,f,c
  5520  001BE2  6C14               	negf	___fladd@grs^0,c
  5521  001BE4  5014               	movf	___fladd@grs^0,w,c
  5522  001BE6  A4D8               	btfss	status,2,c
  5523  001BE8  EFF8  F00D         	goto	u5221
  5524  001BEC  EFFA  F00D         	goto	u5220
  5525  001BF0                     u5221:
  5526  001BF0  EF0A  F00E         	goto	l700
  5527  001BF4                     u5220:
  5528  001BF4  0E01               	movlw	1
  5529  001BF6  2605               	addwf	___fladd@b^0,f,c
  5530  001BF8  0E00               	movlw	0
  5531  001BFA  2206               	addwfc	(___fladd@b+1)^0,f,c
  5532  001BFC  2207               	addwfc	(___fladd@b+2)^0,f,c
  5533  001BFE  2208               	addwfc	(___fladd@b+3)^0,f,c
  5534  001C00  EF0A  F00E         	goto	l700
  5535  001C04                     l4439:
  5536  001C04  5009               	movf	___fladd@a^0,w,c
  5537  001C06  5E05               	subwf	___fladd@b^0,f,c
  5538  001C08  500A               	movf	(___fladd@a+1)^0,w,c
  5539  001C0A  5A06               	subwfb	(___fladd@b+1)^0,f,c
  5540  001C0C  500B               	movf	(___fladd@a+2)^0,w,c
  5541  001C0E  5A07               	subwfb	(___fladd@b+2)^0,f,c
  5542  001C10  500C               	movf	(___fladd@a+3)^0,w,c
  5543  001C12  5A08               	subwfb	(___fladd@b+3)^0,f,c
  5544  001C14                     l700:
  5545  001C14  5005               	movf	___fladd@b^0,w,c
  5546  001C16  1006               	iorwf	(___fladd@b+1)^0,w,c
  5547  001C18  1007               	iorwf	(___fladd@b+2)^0,w,c
  5548  001C1A  1008               	iorwf	(___fladd@b+3)^0,w,c
  5549  001C1C  A4D8               	btfss	status,2,c
  5550  001C1E  EF13  F00E         	goto	u5231
  5551  001C22  EF15  F00E         	goto	u5230
  5552  001C26                     u5231:
  5553  001C26  EF4A  F00E         	goto	l4463
  5554  001C2A                     u5230:
  5555  001C2A  5014               	movf	___fladd@grs^0,w,c
  5556  001C2C  A4D8               	btfss	status,2,c
  5557  001C2E  EF1B  F00E         	goto	u5241
  5558  001C32  EF1D  F00E         	goto	u5240
  5559  001C36                     u5241:
  5560  001C36  EF4A  F00E         	goto	l4463
  5561  001C3A                     u5240:
  5562  001C3A  0E00               	movlw	0
  5563  001C3C  6E05               	movwf	?___fladd^0,c
  5564  001C3E  0E00               	movlw	0
  5565  001C40  6E06               	movwf	(?___fladd+1)^0,c
  5566  001C42  0E00               	movlw	0
  5567  001C44  6E07               	movwf	(?___fladd+2)^0,c
  5568  001C46  0E00               	movlw	0
  5569  001C48  6E08               	movwf	(?___fladd+3)^0,c
  5570  001C4A  EFE5  F00E         	goto	l692
  5571  001C4E                     l4447:
  5572  001C4E  90D8               	bcf	status,0,c
  5573  001C50  3605               	rlcf	___fladd@b^0,f,c
  5574  001C52  3606               	rlcf	(___fladd@b+1)^0,f,c
  5575  001C54  3607               	rlcf	(___fladd@b+2)^0,f,c
  5576  001C56  3608               	rlcf	(___fladd@b+3)^0,f,c
  5577  001C58  AE14               	btfss	___fladd@grs^0,7,c
  5578  001C5A  EF31  F00E         	goto	u5251
  5579  001C5E  EF33  F00E         	goto	u5250
  5580  001C62                     u5251:
  5581  001C62  EF34  F00E         	goto	l4453
  5582  001C66                     u5250:
  5583  001C66  8005               	bsf	___fladd@b^0,0,c
  5584  001C68                     l4453:
  5585  001C68  A014               	btfss	___fladd@grs^0,0,c
  5586  001C6A  EF39  F00E         	goto	u5261
  5587  001C6E  EF3B  F00E         	goto	u5260
  5588  001C72                     u5261:
  5589  001C72  EF3F  F00E         	goto	l4457
  5590  001C76                     u5260:
  5591  001C76  80D8               	bsf	status,0,c
  5592  001C78  3614               	rlcf	___fladd@grs^0,f,c
  5593  001C7A  EF41  F00E         	goto	l4459
  5594  001C7E                     l4457:
  5595  001C7E  90D8               	bcf	status,0,c
  5596  001C80  3614               	rlcf	___fladd@grs^0,f,c
  5597  001C82                     l4459:
  5598  001C82  5013               	movf	___fladd@bexp^0,w,c
  5599  001C84  B4D8               	btfsc	status,2,c
  5600  001C86  EF47  F00E         	goto	u5271
  5601  001C8A  EF49  F00E         	goto	u5270
  5602  001C8E                     u5271:
  5603  001C8E  EF4A  F00E         	goto	l4463
  5604  001C92                     u5270:
  5605  001C92  0613               	decf	___fladd@bexp^0,f,c
  5606  001C94                     l4463:
  5607  001C94  AE07               	btfss	(___fladd@b+2)^0,7,c
  5608  001C96  EF4F  F00E         	goto	u5281
  5609  001C9A  EF51  F00E         	goto	u5280
  5610  001C9E                     u5281:
  5611  001C9E  EF27  F00E         	goto	l4447
  5612  001CA2                     u5280:
  5613  001CA2                     l4465:
  5614  001CA2  0E00               	movlw	0
  5615  001CA4  6E12               	movwf	___fladd@aexp^0,c
  5616  001CA6  AE14               	btfss	___fladd@grs^0,7,c
  5617  001CA8  EF58  F00E         	goto	u5291
  5618  001CAC  EF5A  F00E         	goto	u5290
  5619  001CB0                     u5291:
  5620  001CB0  EF72  F00E         	goto	l709
  5621  001CB4                     u5290:
  5622  001CB4  C014  F00D         	movff	___fladd@grs,??___fladd
  5623  001CB8  0E7F               	movlw	127
  5624  001CBA  160D               	andwf	??___fladd^0,f,c
  5625  001CBC  B4D8               	btfsc	status,2,c
  5626  001CBE  EF63  F00E         	goto	u5301
  5627  001CC2  EF65  F00E         	goto	u5300
  5628  001CC6                     u5301:
  5629  001CC6  EF69  F00E         	goto	l710
  5630  001CCA                     u5300:
  5631  001CCA                     l4471:
  5632  001CCA  0E01               	movlw	1
  5633  001CCC  6E12               	movwf	___fladd@aexp^0,c
  5634  001CCE  EF72  F00E         	goto	l709
  5635  001CD2                     l710:
  5636  001CD2  A005               	btfss	___fladd@b^0,0,c
  5637  001CD4  EF6E  F00E         	goto	u5311
  5638  001CD8  EF70  F00E         	goto	u5310
  5639  001CDC                     u5311:
  5640  001CDC  EF72  F00E         	goto	l709
  5641  001CE0                     u5310:
  5642  001CE0  EF65  F00E         	goto	l4471
  5643  001CE4                     l709:
  5644  001CE4  5012               	movf	___fladd@aexp^0,w,c
  5645  001CE6  B4D8               	btfsc	status,2,c
  5646  001CE8  EF78  F00E         	goto	u5321
  5647  001CEC  EF7A  F00E         	goto	u5320
  5648  001CF0                     u5321:
  5649  001CF0  EFA5  F00E         	goto	l4483
  5650  001CF4                     u5320:
  5651  001CF4  0E01               	movlw	1
  5652  001CF6  2605               	addwf	___fladd@b^0,f,c
  5653  001CF8  0E00               	movlw	0
  5654  001CFA  2206               	addwfc	(___fladd@b+1)^0,f,c
  5655  001CFC  2207               	addwfc	(___fladd@b+2)^0,f,c
  5656  001CFE  2208               	addwfc	(___fladd@b+3)^0,f,c
  5657  001D00  A008               	btfss	(___fladd@b+3)^0,0,c
  5658  001D02  EF85  F00E         	goto	u5331
  5659  001D06  EF87  F00E         	goto	u5330
  5660  001D0A                     u5331:
  5661  001D0A  EFA5  F00E         	goto	l4483
  5662  001D0E                     u5330:
  5663  001D0E  C005  F00D         	movff	___fladd@b,??___fladd
  5664  001D12  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  5665  001D16  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  5666  001D1A  C008  F010         	movff	___fladd@b+3,??___fladd+3
  5667  001D1E  3410               	rlcf	(??___fladd+3)^0,w,c
  5668  001D20  3210               	rrcf	(??___fladd+3)^0,f,c
  5669  001D22  320F               	rrcf	(??___fladd+2)^0,f,c
  5670  001D24  320E               	rrcf	(??___fladd+1)^0,f,c
  5671  001D26  320D               	rrcf	??___fladd^0,f,c
  5672  001D28  C00D  F005         	movff	??___fladd,___fladd@b
  5673  001D2C  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  5674  001D30  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  5675  001D34  C010  F008         	movff	??___fladd+3,___fladd@b+3
  5676  001D38  2813               	incf	___fladd@bexp^0,w,c
  5677  001D3A  B4D8               	btfsc	status,2,c
  5678  001D3C  EFA2  F00E         	goto	u5341
  5679  001D40  EFA4  F00E         	goto	u5340
  5680  001D44                     u5341:
  5681  001D44  EFA5  F00E         	goto	l4483
  5682  001D48                     u5340:
  5683  001D48  2A13               	incf	___fladd@bexp^0,f,c
  5684  001D4A                     l4483:
  5685  001D4A  2813               	incf	___fladd@bexp^0,w,c
  5686  001D4C  B4D8               	btfsc	status,2,c
  5687  001D4E  EFAB  F00E         	goto	u5351
  5688  001D52  EFAD  F00E         	goto	u5350
  5689  001D56                     u5351:
  5690  001D56  EFB5  F00E         	goto	l4487
  5691  001D5A                     u5350:
  5692  001D5A  5013               	movf	___fladd@bexp^0,w,c
  5693  001D5C  A4D8               	btfss	status,2,c
  5694  001D5E  EFB3  F00E         	goto	u5361
  5695  001D62  EFB5  F00E         	goto	u5360
  5696  001D66                     u5361:
  5697  001D66  EFC7  F00E         	goto	l4491
  5698  001D6A                     u5360:
  5699  001D6A                     l4487:
  5700  001D6A  0E00               	movlw	0
  5701  001D6C  6E05               	movwf	___fladd@b^0,c
  5702  001D6E  0E00               	movlw	0
  5703  001D70  6E06               	movwf	(___fladd@b+1)^0,c
  5704  001D72  0E00               	movlw	0
  5705  001D74  6E07               	movwf	(___fladd@b+2)^0,c
  5706  001D76  0E00               	movlw	0
  5707  001D78  6E08               	movwf	(___fladd@b+3)^0,c
  5708  001D7A  5013               	movf	___fladd@bexp^0,w,c
  5709  001D7C  A4D8               	btfss	status,2,c
  5710  001D7E  EFC3  F00E         	goto	u5371
  5711  001D82  EFC5  F00E         	goto	u5370
  5712  001D86                     u5371:
  5713  001D86  EFC7  F00E         	goto	l4491
  5714  001D8A                     u5370:
  5715  001D8A  0E00               	movlw	0
  5716  001D8C  6E11               	movwf	___fladd@signs^0,c
  5717  001D8E                     l4491:
  5718  001D8E  A013               	btfss	___fladd@bexp^0,0,c
  5719  001D90  EFCC  F00E         	goto	u5381
  5720  001D94  EFCE  F00E         	goto	u5380
  5721  001D98                     u5381:
  5722  001D98  EFD1  F00E         	goto	l4495
  5723  001D9C                     u5380:
  5724  001D9C  8E07               	bsf	(___fladd@b+2)^0,7,c
  5725  001D9E  EFD2  F00E         	goto	l4497
  5726  001DA2                     l4495:
  5727  001DA2  9E07               	bcf	(___fladd@b+2)^0,7,c
  5728  001DA4                     l4497:
  5729  001DA4  90D8               	bcf	status,0,c
  5730  001DA6  3013               	rrcf	___fladd@bexp^0,w,c
  5731  001DA8  6E08               	movwf	(___fladd@b+3)^0,c
  5732  001DAA  AE11               	btfss	___fladd@signs^0,7,c
  5733  001DAC  EFDA  F00E         	goto	u5391
  5734  001DB0  EFDC  F00E         	goto	u5390
  5735  001DB4                     u5391:
  5736  001DB4  EFDD  F00E         	goto	l4503
  5737  001DB8                     u5390:
  5738  001DB8  8E08               	bsf	(___fladd@b+3)^0,7,c
  5739  001DBA                     l4503:
  5740  001DBA  C005  F005         	movff	___fladd@b,?___fladd
  5741  001DBE  C006  F006         	movff	___fladd@b+1,?___fladd+1
  5742  001DC2  C007  F007         	movff	___fladd@b+2,?___fladd+2
  5743  001DC6  C008  F008         	movff	___fladd@b+3,?___fladd+3
  5744  001DCA                     l692:
  5745  001DCA  0012               	return		;funcret
  5746  001DCC                     __end_of___fladd:
  5747                           	callstack 0
  5748                           
  5749 ;; *************** function ___flneg *****************
  5750 ;; Defined at:
  5751 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  f1              4    4[COMRAM] unsigned char 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;		None
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  4    4[COMRAM] unsigned char 
  5758 ;; Registers used:
  5759 ;;		wreg, status,2, status,0
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5765 ;;      Params:         4       0       0       0       0       0       0       0       0
  5766 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5768 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5769 ;;Total ram usage:        4 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; Hardware stack levels required when called:    2
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		_efgtoa
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text19
  5780  0037D6                     __ptext19:
  5781                           	callstack 0
  5782  0037D6                     ___flneg:
  5783                           	callstack 24
  5784  0037D6  5005               	movf	___flneg@f1^0,w,c
  5785  0037D8  1006               	iorwf	(___flneg@f1+1)^0,w,c
  5786  0037DA  1007               	iorwf	(___flneg@f1+2)^0,w,c
  5787  0037DC  1008               	iorwf	(___flneg@f1+3)^0,w,c
  5788  0037DE  B4D8               	btfsc	status,2,c
  5789  0037E0  EFF4  F01B         	goto	u6061
  5790  0037E4  EFF6  F01B         	goto	u6060
  5791  0037E8                     u6061:
  5792  0037E8  EFFE  F01B         	goto	l4931
  5793  0037EC                     u6060:
  5794  0037EC  0E00               	movlw	0
  5795  0037EE  1A05               	xorwf	___flneg@f1^0,f,c
  5796  0037F0  0E00               	movlw	0
  5797  0037F2  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  5798  0037F4  0E00               	movlw	0
  5799  0037F6  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  5800  0037F8  0E80               	movlw	128
  5801  0037FA  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  5802  0037FC                     l4931:
  5803  0037FC  C005  F005         	movff	___flneg@f1,?___flneg
  5804  003800  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  5805  003804  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  5806  003808  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  5807  00380C  0012               	return		;funcret
  5808  00380E                     __end_of___flneg:
  5809                           	callstack 0
  5810                           
  5811 ;; *************** function ___flmul *****************
  5812 ;; Defined at:
  5813 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  b               4   18[COMRAM] unsigned char 
  5816 ;;  a               4   22[COMRAM] unsigned char 
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;  prod            4   37[COMRAM] struct .
  5819 ;;  grs             4   32[COMRAM] unsigned long 
  5820 ;;  temp            2   41[COMRAM] struct .
  5821 ;;  bexp            1   36[COMRAM] unsigned char 
  5822 ;;  aexp            1   31[COMRAM] unsigned char 
  5823 ;;  sign            1   30[COMRAM] unsigned char 
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  4   18[COMRAM] unsigned char 
  5826 ;; Registers used:
  5827 ;;		wreg, status,2, status,0, prodl, prodh
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5833 ;;      Params:         8       0       0       0       0       0       0       0       0
  5834 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5835 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5836 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5837 ;;Total ram usage:       25 bytes
  5838 ;; Hardware stack levels used:    1
  5839 ;; Hardware stack levels required when called:    2
  5840 ;; This function calls:
  5841 ;;		Nothing
  5842 ;; This function is called by:
  5843 ;;		_main
  5844 ;;		_efgtoa
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text20
  5849  001DCC                     __ptext20:
  5850                           	callstack 0
  5851  001DCC                     ___flmul:
  5852                           	callstack 24
  5853  001DCC  5016               	movf	(___flmul@b+3)^0,w,c
  5854  001DCE  0B80               	andlw	128
  5855  001DD0  6E1F               	movwf	___flmul@sign^0,c
  5856  001DD2  5016               	movf	(___flmul@b+3)^0,w,c
  5857  001DD4  2416               	addwf	(___flmul@b+3)^0,w,c
  5858  001DD6  6E25               	movwf	___flmul@bexp^0,c
  5859  001DD8  AE15               	btfss	(___flmul@b+2)^0,7,c
  5860  001DDA  EFF1  F00E         	goto	u5671
  5861  001DDE  EFF3  F00E         	goto	u5670
  5862  001DE2                     u5671:
  5863  001DE2  EFF4  F00E         	goto	l4679
  5864  001DE6                     u5670:
  5865  001DE6  8025               	bsf	___flmul@bexp^0,0,c
  5866  001DE8                     l4679:
  5867  001DE8  5025               	movf	___flmul@bexp^0,w,c
  5868  001DEA  B4D8               	btfsc	status,2,c
  5869  001DEC  EFFA  F00E         	goto	u5681
  5870  001DF0  EFFC  F00E         	goto	u5680
  5871  001DF4                     u5681:
  5872  001DF4  EF0F  F00F         	goto	l4687
  5873  001DF8                     u5680:
  5874  001DF8  2825               	incf	___flmul@bexp^0,w,c
  5875  001DFA  A4D8               	btfss	status,2,c
  5876  001DFC  EF02  F00F         	goto	u5691
  5877  001E00  EF04  F00F         	goto	u5690
  5878  001E04                     u5691:
  5879  001E04  EF0C  F00F         	goto	l4685
  5880  001E08                     u5690:
  5881  001E08  0E00               	movlw	0
  5882  001E0A  6E13               	movwf	___flmul@b^0,c
  5883  001E0C  0E00               	movlw	0
  5884  001E0E  6E14               	movwf	(___flmul@b+1)^0,c
  5885  001E10  0E00               	movlw	0
  5886  001E12  6E15               	movwf	(___flmul@b+2)^0,c
  5887  001E14  0E00               	movlw	0
  5888  001E16  6E16               	movwf	(___flmul@b+3)^0,c
  5889  001E18                     l4685:
  5890  001E18  8E15               	bsf	(___flmul@b+2)^0,7,c
  5891  001E1A  EF17  F00F         	goto	l4689
  5892  001E1E                     l4687:
  5893  001E1E  0E00               	movlw	0
  5894  001E20  6E13               	movwf	___flmul@b^0,c
  5895  001E22  0E00               	movlw	0
  5896  001E24  6E14               	movwf	(___flmul@b+1)^0,c
  5897  001E26  0E00               	movlw	0
  5898  001E28  6E15               	movwf	(___flmul@b+2)^0,c
  5899  001E2A  0E00               	movlw	0
  5900  001E2C  6E16               	movwf	(___flmul@b+3)^0,c
  5901  001E2E                     l4689:
  5902  001E2E  501A               	movf	(___flmul@a+3)^0,w,c
  5903  001E30  0B80               	andlw	128
  5904  001E32  1A1F               	xorwf	___flmul@sign^0,f,c
  5905  001E34  501A               	movf	(___flmul@a+3)^0,w,c
  5906  001E36  241A               	addwf	(___flmul@a+3)^0,w,c
  5907  001E38  6E20               	movwf	___flmul@aexp^0,c
  5908  001E3A  AE19               	btfss	(___flmul@a+2)^0,7,c
  5909  001E3C  EF22  F00F         	goto	u5701
  5910  001E40  EF24  F00F         	goto	u5700
  5911  001E44                     u5701:
  5912  001E44  EF25  F00F         	goto	l4697
  5913  001E48                     u5700:
  5914  001E48  8020               	bsf	___flmul@aexp^0,0,c
  5915  001E4A                     l4697:
  5916  001E4A  5020               	movf	___flmul@aexp^0,w,c
  5917  001E4C  B4D8               	btfsc	status,2,c
  5918  001E4E  EF2B  F00F         	goto	u5711
  5919  001E52  EF2D  F00F         	goto	u5710
  5920  001E56                     u5711:
  5921  001E56  EF40  F00F         	goto	l4705
  5922  001E5A                     u5710:
  5923  001E5A  2820               	incf	___flmul@aexp^0,w,c
  5924  001E5C  A4D8               	btfss	status,2,c
  5925  001E5E  EF33  F00F         	goto	u5721
  5926  001E62  EF35  F00F         	goto	u5720
  5927  001E66                     u5721:
  5928  001E66  EF3D  F00F         	goto	l4703
  5929  001E6A                     u5720:
  5930  001E6A  0E00               	movlw	0
  5931  001E6C  6E17               	movwf	___flmul@a^0,c
  5932  001E6E  0E00               	movlw	0
  5933  001E70  6E18               	movwf	(___flmul@a+1)^0,c
  5934  001E72  0E00               	movlw	0
  5935  001E74  6E19               	movwf	(___flmul@a+2)^0,c
  5936  001E76  0E00               	movlw	0
  5937  001E78  6E1A               	movwf	(___flmul@a+3)^0,c
  5938  001E7A                     l4703:
  5939  001E7A  8E19               	bsf	(___flmul@a+2)^0,7,c
  5940  001E7C  EF48  F00F         	goto	l769
  5941  001E80                     l4705:
  5942  001E80  0E00               	movlw	0
  5943  001E82  6E17               	movwf	___flmul@a^0,c
  5944  001E84  0E00               	movlw	0
  5945  001E86  6E18               	movwf	(___flmul@a+1)^0,c
  5946  001E88  0E00               	movlw	0
  5947  001E8A  6E19               	movwf	(___flmul@a+2)^0,c
  5948  001E8C  0E00               	movlw	0
  5949  001E8E  6E1A               	movwf	(___flmul@a+3)^0,c
  5950  001E90                     l769:
  5951  001E90  5020               	movf	___flmul@aexp^0,w,c
  5952  001E92  B4D8               	btfsc	status,2,c
  5953  001E94  EF4E  F00F         	goto	u5731
  5954  001E98  EF50  F00F         	goto	u5730
  5955  001E9C                     u5731:
  5956  001E9C  EF58  F00F         	goto	l4709
  5957  001EA0                     u5730:
  5958  001EA0  5025               	movf	___flmul@bexp^0,w,c
  5959  001EA2  A4D8               	btfss	status,2,c
  5960  001EA4  EF56  F00F         	goto	u5741
  5961  001EA8  EF58  F00F         	goto	u5740
  5962  001EAC                     u5741:
  5963  001EAC  EF62  F00F         	goto	l4713
  5964  001EB0                     u5740:
  5965  001EB0                     l4709:
  5966  001EB0  0E00               	movlw	0
  5967  001EB2  6E13               	movwf	?___flmul^0,c
  5968  001EB4  0E00               	movlw	0
  5969  001EB6  6E14               	movwf	(?___flmul+1)^0,c
  5970  001EB8  0E00               	movlw	0
  5971  001EBA  6E15               	movwf	(?___flmul+2)^0,c
  5972  001EBC  0E00               	movlw	0
  5973  001EBE  6E16               	movwf	(?___flmul+3)^0,c
  5974  001EC0  EFFA  F010         	goto	l773
  5975  001EC4                     l4713:
  5976  001EC4  5019               	movf	(___flmul@a+2)^0,w,c
  5977  001EC6  0213               	mulwf	___flmul@b^0,c
  5978  001EC8  CFF3 F02A          	movff	prodl,___flmul@temp
  5979  001ECC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5980  001ED0  502A               	movf	___flmul@temp^0,w,c
  5981  001ED2  6E21               	movwf	___flmul@grs^0,c
  5982  001ED4  6A22               	clrf	(___flmul@grs+1)^0,c
  5983  001ED6  6A23               	clrf	(___flmul@grs+2)^0,c
  5984  001ED8  6A24               	clrf	(___flmul@grs+3)^0,c
  5985  001EDA  502B               	movf	(___flmul@temp+1)^0,w,c
  5986  001EDC  6E26               	movwf	___flmul@prod^0,c
  5987  001EDE  6A27               	clrf	(___flmul@prod+1)^0,c
  5988  001EE0  6A28               	clrf	(___flmul@prod+2)^0,c
  5989  001EE2  6A29               	clrf	(___flmul@prod+3)^0,c
  5990  001EE4  5018               	movf	(___flmul@a+1)^0,w,c
  5991  001EE6  0214               	mulwf	(___flmul@b+1)^0,c
  5992  001EE8  CFF3 F02A          	movff	prodl,___flmul@temp
  5993  001EEC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5994  001EF0  502A               	movf	___flmul@temp^0,w,c
  5995  001EF2  2621               	addwf	___flmul@grs^0,f,c
  5996  001EF4  0E00               	movlw	0
  5997  001EF6  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5998  001EF8  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5999  001EFA  2224               	addwfc	(___flmul@grs+3)^0,f,c
  6000  001EFC  502B               	movf	(___flmul@temp+1)^0,w,c
  6001  001EFE  2626               	addwf	___flmul@prod^0,f,c
  6002  001F00  0E00               	movlw	0
  6003  001F02  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6004  001F04  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6005  001F06  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6006  001F08  5017               	movf	___flmul@a^0,w,c
  6007  001F0A  0215               	mulwf	(___flmul@b+2)^0,c
  6008  001F0C  CFF3 F02A          	movff	prodl,___flmul@temp
  6009  001F10  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6010  001F14  502A               	movf	___flmul@temp^0,w,c
  6011  001F16  2621               	addwf	___flmul@grs^0,f,c
  6012  001F18  0E00               	movlw	0
  6013  001F1A  2222               	addwfc	(___flmul@grs+1)^0,f,c
  6014  001F1C  2223               	addwfc	(___flmul@grs+2)^0,f,c
  6015  001F1E  2224               	addwfc	(___flmul@grs+3)^0,f,c
  6016  001F20  502B               	movf	(___flmul@temp+1)^0,w,c
  6017  001F22  2626               	addwf	___flmul@prod^0,f,c
  6018  001F24  0E00               	movlw	0
  6019  001F26  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6020  001F28  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6021  001F2A  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6022  001F2C  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6023  001F30  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6024  001F34  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6025  001F38  6A21               	clrf	___flmul@grs^0,c
  6026  001F3A  5017               	movf	___flmul@a^0,w,c
  6027  001F3C  0214               	mulwf	(___flmul@b+1)^0,c
  6028  001F3E  CFF3 F02A          	movff	prodl,___flmul@temp
  6029  001F42  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6030  001F46  502A               	movf	___flmul@temp^0,w,c
  6031  001F48  2621               	addwf	___flmul@grs^0,f,c
  6032  001F4A  502B               	movf	(___flmul@temp+1)^0,w,c
  6033  001F4C  2222               	addwfc	(___flmul@grs+1)^0,f,c
  6034  001F4E  0E00               	movlw	0
  6035  001F50  2223               	addwfc	(___flmul@grs+2)^0,f,c
  6036  001F52  0E00               	movlw	0
  6037  001F54  2224               	addwfc	(___flmul@grs+3)^0,f,c
  6038  001F56  5018               	movf	(___flmul@a+1)^0,w,c
  6039  001F58  0213               	mulwf	___flmul@b^0,c
  6040  001F5A  CFF3 F02A          	movff	prodl,___flmul@temp
  6041  001F5E  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6042  001F62  502A               	movf	___flmul@temp^0,w,c
  6043  001F64  2621               	addwf	___flmul@grs^0,f,c
  6044  001F66  502B               	movf	(___flmul@temp+1)^0,w,c
  6045  001F68  2222               	addwfc	(___flmul@grs+1)^0,f,c
  6046  001F6A  0E00               	movlw	0
  6047  001F6C  2223               	addwfc	(___flmul@grs+2)^0,f,c
  6048  001F6E  0E00               	movlw	0
  6049  001F70  2224               	addwfc	(___flmul@grs+3)^0,f,c
  6050  001F72  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6051  001F76  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6052  001F7A  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6053  001F7E  6A21               	clrf	___flmul@grs^0,c
  6054  001F80  5017               	movf	___flmul@a^0,w,c
  6055  001F82  0213               	mulwf	___flmul@b^0,c
  6056  001F84  CFF3 F02A          	movff	prodl,___flmul@temp
  6057  001F88  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6058  001F8C  502A               	movf	___flmul@temp^0,w,c
  6059  001F8E  2621               	addwf	___flmul@grs^0,f,c
  6060  001F90  502B               	movf	(___flmul@temp+1)^0,w,c
  6061  001F92  2222               	addwfc	(___flmul@grs+1)^0,f,c
  6062  001F94  0E00               	movlw	0
  6063  001F96  2223               	addwfc	(___flmul@grs+2)^0,f,c
  6064  001F98  0E00               	movlw	0
  6065  001F9A  2224               	addwfc	(___flmul@grs+3)^0,f,c
  6066  001F9C  5019               	movf	(___flmul@a+2)^0,w,c
  6067  001F9E  0214               	mulwf	(___flmul@b+1)^0,c
  6068  001FA0  CFF3 F02A          	movff	prodl,___flmul@temp
  6069  001FA4  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6070  001FA8  502A               	movf	___flmul@temp^0,w,c
  6071  001FAA  2626               	addwf	___flmul@prod^0,f,c
  6072  001FAC  502B               	movf	(___flmul@temp+1)^0,w,c
  6073  001FAE  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6074  001FB0  0E00               	movlw	0
  6075  001FB2  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6076  001FB4  0E00               	movlw	0
  6077  001FB6  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6078  001FB8  5018               	movf	(___flmul@a+1)^0,w,c
  6079  001FBA  0215               	mulwf	(___flmul@b+2)^0,c
  6080  001FBC  CFF3 F02A          	movff	prodl,___flmul@temp
  6081  001FC0  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6082  001FC4  502A               	movf	___flmul@temp^0,w,c
  6083  001FC6  2626               	addwf	___flmul@prod^0,f,c
  6084  001FC8  502B               	movf	(___flmul@temp+1)^0,w,c
  6085  001FCA  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6086  001FCC  0E00               	movlw	0
  6087  001FCE  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6088  001FD0  0E00               	movlw	0
  6089  001FD2  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6090  001FD4  5019               	movf	(___flmul@a+2)^0,w,c
  6091  001FD6  0215               	mulwf	(___flmul@b+2)^0,c
  6092  001FD8  CFF3 F02A          	movff	prodl,___flmul@temp
  6093  001FDC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  6094  001FE0  502A               	movf	___flmul@temp^0,w,c
  6095  001FE2  6E1B               	movwf	??___flmul^0,c
  6096  001FE4  502B               	movf	(___flmul@temp+1)^0,w,c
  6097  001FE6  6E1C               	movwf	(??___flmul+1)^0,c
  6098  001FE8  6A1D               	clrf	(??___flmul+2)^0,c
  6099  001FEA  6A1E               	clrf	(??___flmul+3)^0,c
  6100  001FEC  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  6101  001FF0  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  6102  001FF4  C01B  F01C         	movff	??___flmul,??___flmul+1
  6103  001FF8  6A1B               	clrf	??___flmul^0,c
  6104  001FFA  501B               	movf	??___flmul^0,w,c
  6105  001FFC  2626               	addwf	___flmul@prod^0,f,c
  6106  001FFE  501C               	movf	(??___flmul+1)^0,w,c
  6107  002000  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6108  002002  501D               	movf	(??___flmul+2)^0,w,c
  6109  002004  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6110  002006  501E               	movf	(??___flmul+3)^0,w,c
  6111  002008  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6112  00200A  C021  F01B         	movff	___flmul@grs,??___flmul
  6113  00200E  C022  F01C         	movff	___flmul@grs+1,??___flmul+1
  6114  002012  C023  F01D         	movff	___flmul@grs+2,??___flmul+2
  6115  002016  C024  F01E         	movff	___flmul@grs+3,??___flmul+3
  6116  00201A  0E19               	movlw	25
  6117  00201C  EF15  F010         	goto	u5750
  6118  002020                     u5755:
  6119  002020  90D8               	bcf	status,0,c
  6120  002022  321E               	rrcf	(??___flmul+3)^0,f,c
  6121  002024  321D               	rrcf	(??___flmul+2)^0,f,c
  6122  002026  321C               	rrcf	(??___flmul+1)^0,f,c
  6123  002028  321B               	rrcf	??___flmul^0,f,c
  6124  00202A                     u5750:
  6125  00202A  2EE8               	decfsz	wreg,f,c
  6126  00202C  EF10  F010         	goto	u5755
  6127  002030  501B               	movf	??___flmul^0,w,c
  6128  002032  2626               	addwf	___flmul@prod^0,f,c
  6129  002034  501C               	movf	(??___flmul+1)^0,w,c
  6130  002036  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6131  002038  501D               	movf	(??___flmul+2)^0,w,c
  6132  00203A  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6133  00203C  501E               	movf	(??___flmul+3)^0,w,c
  6134  00203E  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6135  002040  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6136  002044  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6137  002048  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6138  00204C  6A21               	clrf	___flmul@grs^0,c
  6139  00204E  5020               	movf	___flmul@aexp^0,w,c
  6140  002050  C025  F01B         	movff	___flmul@bexp,??___flmul
  6141  002054  6A1C               	clrf	(??___flmul+1)^0,c
  6142  002056  261B               	addwf	??___flmul^0,f,c
  6143  002058  0E00               	movlw	0
  6144  00205A  221C               	addwfc	(??___flmul+1)^0,f,c
  6145  00205C  0E82               	movlw	130
  6146  00205E  241B               	addwf	??___flmul^0,w,c
  6147  002060  6E2A               	movwf	___flmul@temp^0,c
  6148  002062  0EFF               	movlw	255
  6149  002064  201C               	addwfc	(??___flmul+1)^0,w,c
  6150  002066  6E2B               	movwf	(___flmul@temp+1)^0,c
  6151  002068  EF4B  F010         	goto	l4761
  6152  00206C                     l4755:
  6153  00206C  90D8               	bcf	status,0,c
  6154  00206E  3626               	rlcf	___flmul@prod^0,f,c
  6155  002070  3627               	rlcf	(___flmul@prod+1)^0,f,c
  6156  002072  3628               	rlcf	(___flmul@prod+2)^0,f,c
  6157  002074  3629               	rlcf	(___flmul@prod+3)^0,f,c
  6158  002076  AE24               	btfss	(___flmul@grs+3)^0,7,c
  6159  002078  EF40  F010         	goto	u5761
  6160  00207C  EF42  F010         	goto	u5760
  6161  002080                     u5761:
  6162  002080  EF43  F010         	goto	l776
  6163  002084                     u5760:
  6164  002084  8026               	bsf	___flmul@prod^0,0,c
  6165  002086                     l776:
  6166  002086  90D8               	bcf	status,0,c
  6167  002088  3621               	rlcf	___flmul@grs^0,f,c
  6168  00208A  3622               	rlcf	(___flmul@grs+1)^0,f,c
  6169  00208C  3623               	rlcf	(___flmul@grs+2)^0,f,c
  6170  00208E  3624               	rlcf	(___flmul@grs+3)^0,f,c
  6171  002090  062A               	decf	___flmul@temp^0,f,c
  6172  002092  A0D8               	btfss	status,0,c
  6173  002094  062B               	decf	(___flmul@temp+1)^0,f,c
  6174  002096                     l4761:
  6175  002096  AE28               	btfss	(___flmul@prod+2)^0,7,c
  6176  002098  EF50  F010         	goto	u5771
  6177  00209C  EF52  F010         	goto	u5770
  6178  0020A0                     u5771:
  6179  0020A0  EF36  F010         	goto	l4755
  6180  0020A4                     u5770:
  6181  0020A4  0E00               	movlw	0
  6182  0020A6  6E20               	movwf	___flmul@aexp^0,c
  6183  0020A8  AE24               	btfss	(___flmul@grs+3)^0,7,c
  6184  0020AA  EF59  F010         	goto	u5781
  6185  0020AE  EF5B  F010         	goto	u5780
  6186  0020B2                     u5781:
  6187  0020B2  EF7F  F010         	goto	l778
  6188  0020B6                     u5780:
  6189  0020B6  0EFF               	movlw	255
  6190  0020B8  1421               	andwf	___flmul@grs^0,w,c
  6191  0020BA  6E1B               	movwf	??___flmul^0,c
  6192  0020BC  0EFF               	movlw	255
  6193  0020BE  1422               	andwf	(___flmul@grs+1)^0,w,c
  6194  0020C0  6E1C               	movwf	(??___flmul+1)^0,c
  6195  0020C2  0EFF               	movlw	255
  6196  0020C4  1423               	andwf	(___flmul@grs+2)^0,w,c
  6197  0020C6  6E1D               	movwf	(??___flmul+2)^0,c
  6198  0020C8  0E7F               	movlw	127
  6199  0020CA  1424               	andwf	(___flmul@grs+3)^0,w,c
  6200  0020CC  6E1E               	movwf	(??___flmul+3)^0,c
  6201  0020CE  501B               	movf	??___flmul^0,w,c
  6202  0020D0  101C               	iorwf	(??___flmul+1)^0,w,c
  6203  0020D2  101D               	iorwf	(??___flmul+2)^0,w,c
  6204  0020D4  101E               	iorwf	(??___flmul+3)^0,w,c
  6205  0020D6  B4D8               	btfsc	status,2,c
  6206  0020D8  EF70  F010         	goto	u5791
  6207  0020DC  EF72  F010         	goto	u5790
  6208  0020E0                     u5791:
  6209  0020E0  EF76  F010         	goto	l779
  6210  0020E4                     u5790:
  6211  0020E4                     l4769:
  6212  0020E4  0E01               	movlw	1
  6213  0020E6  6E20               	movwf	___flmul@aexp^0,c
  6214  0020E8  EF7F  F010         	goto	l778
  6215  0020EC                     l779:
  6216  0020EC  A026               	btfss	___flmul@prod^0,0,c
  6217  0020EE  EF7B  F010         	goto	u5801
  6218  0020F2  EF7D  F010         	goto	u5800
  6219  0020F6                     u5801:
  6220  0020F6  EF7F  F010         	goto	l778
  6221  0020FA                     u5800:
  6222  0020FA  EF72  F010         	goto	l4769
  6223  0020FE                     l778:
  6224  0020FE  5020               	movf	___flmul@aexp^0,w,c
  6225  002100  B4D8               	btfsc	status,2,c
  6226  002102  EF85  F010         	goto	u5811
  6227  002106  EF87  F010         	goto	u5810
  6228  00210A                     u5811:
  6229  00210A  EFAB  F010         	goto	l4781
  6230  00210E                     u5810:
  6231  00210E  0E01               	movlw	1
  6232  002110  2626               	addwf	___flmul@prod^0,f,c
  6233  002112  0E00               	movlw	0
  6234  002114  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6235  002116  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6236  002118  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6237  00211A  A029               	btfss	(___flmul@prod+3)^0,0,c
  6238  00211C  EF92  F010         	goto	u5821
  6239  002120  EF94  F010         	goto	u5820
  6240  002124                     u5821:
  6241  002124  EFAB  F010         	goto	l4781
  6242  002128                     u5820:
  6243  002128  C026  F01B         	movff	___flmul@prod,??___flmul
  6244  00212C  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  6245  002130  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  6246  002134  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  6247  002138  341E               	rlcf	(??___flmul+3)^0,w,c
  6248  00213A  321E               	rrcf	(??___flmul+3)^0,f,c
  6249  00213C  321D               	rrcf	(??___flmul+2)^0,f,c
  6250  00213E  321C               	rrcf	(??___flmul+1)^0,f,c
  6251  002140  321B               	rrcf	??___flmul^0,f,c
  6252  002142  C01B  F026         	movff	??___flmul,___flmul@prod
  6253  002146  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  6254  00214A  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  6255  00214E  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  6256  002152  4A2A               	infsnz	___flmul@temp^0,f,c
  6257  002154  2A2B               	incf	(___flmul@temp+1)^0,f,c
  6258  002156                     l4781:
  6259  002156  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  6260  002158  EFB6  F010         	goto	u5831
  6261  00215C  502B               	movf	(___flmul@temp+1)^0,w,c
  6262  00215E  E108               	bnz	u5830
  6263  002160  282A               	incf	___flmul@temp^0,w,c
  6264  002162  A0D8               	btfss	status,0,c
  6265  002164  EFB6  F010         	goto	u5831
  6266  002168  EFB8  F010         	goto	u5830
  6267  00216C                     u5831:
  6268  00216C  EFC2  F010         	goto	l4785
  6269  002170                     u5830:
  6270  002170  0E00               	movlw	0
  6271  002172  6E26               	movwf	___flmul@prod^0,c
  6272  002174  0E00               	movlw	0
  6273  002176  6E27               	movwf	(___flmul@prod+1)^0,c
  6274  002178  0E80               	movlw	128
  6275  00217A  6E28               	movwf	(___flmul@prod+2)^0,c
  6276  00217C  0E7F               	movlw	127
  6277  00217E  6E29               	movwf	(___flmul@prod+3)^0,c
  6278  002180  EFF0  F010         	goto	l4797
  6279  002184                     l4785:
  6280  002184  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  6281  002186  EFCF  F010         	goto	u5840
  6282  00218A  502B               	movf	(___flmul@temp+1)^0,w,c
  6283  00218C  E106               	bnz	u5841
  6284  00218E  042A               	decf	___flmul@temp^0,w,c
  6285  002190  B0D8               	btfsc	status,0,c
  6286  002192  EFCD  F010         	goto	u5841
  6287  002196  EFCF  F010         	goto	u5840
  6288  00219A                     u5841:
  6289  00219A  EFDB  F010         	goto	l786
  6290  00219E                     u5840:
  6291  00219E  0E00               	movlw	0
  6292  0021A0  6E26               	movwf	___flmul@prod^0,c
  6293  0021A2  0E00               	movlw	0
  6294  0021A4  6E27               	movwf	(___flmul@prod+1)^0,c
  6295  0021A6  0E00               	movlw	0
  6296  0021A8  6E28               	movwf	(___flmul@prod+2)^0,c
  6297  0021AA  0E00               	movlw	0
  6298  0021AC  6E29               	movwf	(___flmul@prod+3)^0,c
  6299  0021AE  0E00               	movlw	0
  6300  0021B0  6E1F               	movwf	___flmul@sign^0,c
  6301  0021B2  EFF0  F010         	goto	l4797
  6302  0021B6                     l786:
  6303  0021B6  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  6304  0021BA  0EFF               	movlw	255
  6305  0021BC  1626               	andwf	___flmul@prod^0,f,c
  6306  0021BE  0EFF               	movlw	255
  6307  0021C0  1627               	andwf	(___flmul@prod+1)^0,f,c
  6308  0021C2  0E7F               	movlw	127
  6309  0021C4  1628               	andwf	(___flmul@prod+2)^0,f,c
  6310  0021C6  0E00               	movlw	0
  6311  0021C8  1629               	andwf	(___flmul@prod+3)^0,f,c
  6312  0021CA  A025               	btfss	___flmul@bexp^0,0,c
  6313  0021CC  EFEA  F010         	goto	u5851
  6314  0021D0  EFEC  F010         	goto	u5850
  6315  0021D4                     u5851:
  6316  0021D4  EFED  F010         	goto	l4795
  6317  0021D8                     u5850:
  6318  0021D8  8E28               	bsf	(___flmul@prod+2)^0,7,c
  6319  0021DA                     l4795:
  6320  0021DA  90D8               	bcf	status,0,c
  6321  0021DC  3025               	rrcf	___flmul@bexp^0,w,c
  6322  0021DE  6E29               	movwf	(___flmul@prod+3)^0,c
  6323  0021E0                     l4797:
  6324  0021E0  501F               	movf	___flmul@sign^0,w,c
  6325  0021E2  1229               	iorwf	(___flmul@prod+3)^0,f,c
  6326  0021E4  C026  F013         	movff	___flmul@prod,?___flmul
  6327  0021E8  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  6328  0021EC  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  6329  0021F0  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  6330  0021F4                     l773:
  6331  0021F4  0012               	return		;funcret
  6332  0021F6                     __end_of___flmul:
  6333                           	callstack 0
  6334                           
  6335 ;; *************** function ___flge *****************
  6336 ;; Defined at:
  6337 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  ff1             4   43[COMRAM] unsigned char 
  6340 ;;  ff2             4   47[COMRAM] unsigned char 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;		None
  6343 ;; Return value:  Size  Location     Type
  6344 ;;		None               void
  6345 ;; Registers used:
  6346 ;;		wreg, status,2, status,0
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6352 ;;      Params:         8       0       0       0       0       0       0       0       0
  6353 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6354 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6355 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6356 ;;Total ram usage:       12 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; Hardware stack levels required when called:    2
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		_efgtoa
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           	psect	text21
  6367  002BEC                     __ptext21:
  6368                           	callstack 0
  6369  002BEC                     ___flge:
  6370                           	callstack 24
  6371  002BEC  0E00               	movlw	0
  6372  002BEE  142C               	andwf	___flge@ff1^0,w,c
  6373  002BF0  6E34               	movwf	??___flge^0,c
  6374  002BF2  0E00               	movlw	0
  6375  002BF4  142D               	andwf	(___flge@ff1+1)^0,w,c
  6376  002BF6  6E35               	movwf	(??___flge+1)^0,c
  6377  002BF8  0E80               	movlw	128
  6378  002BFA  142E               	andwf	(___flge@ff1+2)^0,w,c
  6379  002BFC  6E36               	movwf	(??___flge+2)^0,c
  6380  002BFE  0E7F               	movlw	127
  6381  002C00  142F               	andwf	(___flge@ff1+3)^0,w,c
  6382  002C02  6E37               	movwf	(??___flge+3)^0,c
  6383  002C04  5034               	movf	??___flge^0,w,c
  6384  002C06  1035               	iorwf	(??___flge+1)^0,w,c
  6385  002C08  1036               	iorwf	(??___flge+2)^0,w,c
  6386  002C0A  1037               	iorwf	(??___flge+3)^0,w,c
  6387  002C0C  A4D8               	btfss	status,2,c
  6388  002C0E  EF0B  F016         	goto	u6011
  6389  002C12  EF0D  F016         	goto	u6010
  6390  002C16                     u6011:
  6391  002C16  EF15  F016         	goto	l4909
  6392  002C1A                     u6010:
  6393  002C1A  0E00               	movlw	0
  6394  002C1C  6E2C               	movwf	___flge@ff1^0,c
  6395  002C1E  0E00               	movlw	0
  6396  002C20  6E2D               	movwf	(___flge@ff1+1)^0,c
  6397  002C22  0E00               	movlw	0
  6398  002C24  6E2E               	movwf	(___flge@ff1+2)^0,c
  6399  002C26  0E00               	movlw	0
  6400  002C28  6E2F               	movwf	(___flge@ff1+3)^0,c
  6401  002C2A                     l4909:
  6402  002C2A  0E00               	movlw	0
  6403  002C2C  1430               	andwf	___flge@ff2^0,w,c
  6404  002C2E  6E34               	movwf	??___flge^0,c
  6405  002C30  0E00               	movlw	0
  6406  002C32  1431               	andwf	(___flge@ff2+1)^0,w,c
  6407  002C34  6E35               	movwf	(??___flge+1)^0,c
  6408  002C36  0E80               	movlw	128
  6409  002C38  1432               	andwf	(___flge@ff2+2)^0,w,c
  6410  002C3A  6E36               	movwf	(??___flge+2)^0,c
  6411  002C3C  0E7F               	movlw	127
  6412  002C3E  1433               	andwf	(___flge@ff2+3)^0,w,c
  6413  002C40  6E37               	movwf	(??___flge+3)^0,c
  6414  002C42  5034               	movf	??___flge^0,w,c
  6415  002C44  1035               	iorwf	(??___flge+1)^0,w,c
  6416  002C46  1036               	iorwf	(??___flge+2)^0,w,c
  6417  002C48  1037               	iorwf	(??___flge+3)^0,w,c
  6418  002C4A  A4D8               	btfss	status,2,c
  6419  002C4C  EF2A  F016         	goto	u6021
  6420  002C50  EF2C  F016         	goto	u6020
  6421  002C54                     u6021:
  6422  002C54  EF34  F016         	goto	l4913
  6423  002C58                     u6020:
  6424  002C58  0E00               	movlw	0
  6425  002C5A  6E30               	movwf	___flge@ff2^0,c
  6426  002C5C  0E00               	movlw	0
  6427  002C5E  6E31               	movwf	(___flge@ff2+1)^0,c
  6428  002C60  0E00               	movlw	0
  6429  002C62  6E32               	movwf	(___flge@ff2+2)^0,c
  6430  002C64  0E00               	movlw	0
  6431  002C66  6E33               	movwf	(___flge@ff2+3)^0,c
  6432  002C68                     l4913:
  6433  002C68  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  6434  002C6A  EF39  F016         	goto	u6031
  6435  002C6E  EF3B  F016         	goto	u6030
  6436  002C72                     u6031:
  6437  002C72  EF44  F016         	goto	l4917
  6438  002C76                     u6030:
  6439  002C76  6C2C               	negf	___flge@ff1^0,c
  6440  002C78  1E2D               	comf	(___flge@ff1+1)^0,f,c
  6441  002C7A  B0D8               	btfsc	status,0,c
  6442  002C7C  2A2D               	incf	(___flge@ff1+1)^0,f,c
  6443  002C7E  1E2E               	comf	(___flge@ff1+2)^0,f,c
  6444  002C80  B0D8               	btfsc	status,0,c
  6445  002C82  2A2E               	incf	(___flge@ff1+2)^0,f,c
  6446  002C84  0E80               	movlw	128
  6447  002C86  562F               	subfwb	(___flge@ff1+3)^0,f,c
  6448  002C88                     l4917:
  6449  002C88  AE33               	btfss	(___flge@ff2+3)^0,7,c
  6450  002C8A  EF49  F016         	goto	u6041
  6451  002C8E  EF4B  F016         	goto	u6040
  6452  002C92                     u6041:
  6453  002C92  EF54  F016         	goto	l420
  6454  002C96                     u6040:
  6455  002C96  6C30               	negf	___flge@ff2^0,c
  6456  002C98  1E31               	comf	(___flge@ff2+1)^0,f,c
  6457  002C9A  B0D8               	btfsc	status,0,c
  6458  002C9C  2A31               	incf	(___flge@ff2+1)^0,f,c
  6459  002C9E  1E32               	comf	(___flge@ff2+2)^0,f,c
  6460  002CA0  B0D8               	btfsc	status,0,c
  6461  002CA2  2A32               	incf	(___flge@ff2+2)^0,f,c
  6462  002CA4  0E80               	movlw	128
  6463  002CA6  5633               	subfwb	(___flge@ff2+3)^0,f,c
  6464  002CA8                     l420:
  6465  002CA8  0E00               	movlw	0
  6466  002CAA  1A2C               	xorwf	___flge@ff1^0,f,c
  6467  002CAC  0E00               	movlw	0
  6468  002CAE  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  6469  002CB0  0E00               	movlw	0
  6470  002CB2  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  6471  002CB4  0E80               	movlw	128
  6472  002CB6  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  6473  002CB8  0E00               	movlw	0
  6474  002CBA  1A30               	xorwf	___flge@ff2^0,f,c
  6475  002CBC  0E00               	movlw	0
  6476  002CBE  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  6477  002CC0  0E00               	movlw	0
  6478  002CC2  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  6479  002CC4  0E80               	movlw	128
  6480  002CC6  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  6481  002CC8  5030               	movf	___flge@ff2^0,w,c
  6482  002CCA  5C2C               	subwf	___flge@ff1^0,w,c
  6483  002CCC  5031               	movf	(___flge@ff2+1)^0,w,c
  6484  002CCE  582D               	subwfb	(___flge@ff1+1)^0,w,c
  6485  002CD0  5032               	movf	(___flge@ff2+2)^0,w,c
  6486  002CD2  582E               	subwfb	(___flge@ff1+2)^0,w,c
  6487  002CD4  5033               	movf	(___flge@ff2+3)^0,w,c
  6488  002CD6  582F               	subwfb	(___flge@ff1+3)^0,w,c
  6489  002CD8  B0D8               	btfsc	status,0,c
  6490  002CDA  EF71  F016         	goto	u6051
  6491  002CDE  EF73  F016         	goto	u6050
  6492  002CE2                     u6051:
  6493  002CE2  EF76  F016         	goto	l4923
  6494  002CE6                     u6050:
  6495  002CE6  90D8               	bcf	status,0,c
  6496  002CE8  EF77  F016         	goto	l425
  6497  002CEC                     l4923:
  6498  002CEC  80D8               	bsf	status,0,c
  6499  002CEE                     l425:
  6500  002CEE  0012               	return		;funcret
  6501  002CF0                     __end_of___flge:
  6502                           	callstack 0
  6503                           
  6504 ;; *************** function ___fleq *****************
  6505 ;; Defined at:
  6506 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;  ff1             4    4[COMRAM] unsigned char 
  6509 ;;  ff2             4    8[COMRAM] unsigned char 
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;		None
  6512 ;; Return value:  Size  Location     Type
  6513 ;;		None               void
  6514 ;; Registers used:
  6515 ;;		wreg, status,2, status,0
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6521 ;;      Params:         8       0       0       0       0       0       0       0       0
  6522 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6523 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6524 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6525 ;;Total ram usage:       12 bytes
  6526 ;; Hardware stack levels used:    1
  6527 ;; Hardware stack levels required when called:    2
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		_efgtoa
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           	psect	text22
  6536  0032A8                     __ptext22:
  6537                           	callstack 0
  6538  0032A8                     ___fleq:
  6539                           	callstack 24
  6540  0032A8  0E00               	movlw	0
  6541  0032AA  1405               	andwf	___fleq@ff1^0,w,c
  6542  0032AC  6E0D               	movwf	??___fleq^0,c
  6543  0032AE  0E00               	movlw	0
  6544  0032B0  1406               	andwf	(___fleq@ff1+1)^0,w,c
  6545  0032B2  6E0E               	movwf	(??___fleq+1)^0,c
  6546  0032B4  0E80               	movlw	128
  6547  0032B6  1407               	andwf	(___fleq@ff1+2)^0,w,c
  6548  0032B8  6E0F               	movwf	(??___fleq+2)^0,c
  6549  0032BA  0E7F               	movlw	127
  6550  0032BC  1408               	andwf	(___fleq@ff1+3)^0,w,c
  6551  0032BE  6E10               	movwf	(??___fleq+3)^0,c
  6552  0032C0  500D               	movf	??___fleq^0,w,c
  6553  0032C2  100E               	iorwf	(??___fleq+1)^0,w,c
  6554  0032C4  100F               	iorwf	(??___fleq+2)^0,w,c
  6555  0032C6  1010               	iorwf	(??___fleq+3)^0,w,c
  6556  0032C8  A4D8               	btfss	status,2,c
  6557  0032CA  EF69  F019         	goto	u5981
  6558  0032CE  EF6B  F019         	goto	u5980
  6559  0032D2                     u5981:
  6560  0032D2  EF73  F019         	goto	l4893
  6561  0032D6                     u5980:
  6562  0032D6  0E00               	movlw	0
  6563  0032D8  6E05               	movwf	___fleq@ff1^0,c
  6564  0032DA  0E00               	movlw	0
  6565  0032DC  6E06               	movwf	(___fleq@ff1+1)^0,c
  6566  0032DE  0E00               	movlw	0
  6567  0032E0  6E07               	movwf	(___fleq@ff1+2)^0,c
  6568  0032E2  0E00               	movlw	0
  6569  0032E4  6E08               	movwf	(___fleq@ff1+3)^0,c
  6570  0032E6                     l4893:
  6571  0032E6  0E00               	movlw	0
  6572  0032E8  1409               	andwf	___fleq@ff2^0,w,c
  6573  0032EA  6E0D               	movwf	??___fleq^0,c
  6574  0032EC  0E00               	movlw	0
  6575  0032EE  140A               	andwf	(___fleq@ff2+1)^0,w,c
  6576  0032F0  6E0E               	movwf	(??___fleq+1)^0,c
  6577  0032F2  0E80               	movlw	128
  6578  0032F4  140B               	andwf	(___fleq@ff2+2)^0,w,c
  6579  0032F6  6E0F               	movwf	(??___fleq+2)^0,c
  6580  0032F8  0E7F               	movlw	127
  6581  0032FA  140C               	andwf	(___fleq@ff2+3)^0,w,c
  6582  0032FC  6E10               	movwf	(??___fleq+3)^0,c
  6583  0032FE  500D               	movf	??___fleq^0,w,c
  6584  003300  100E               	iorwf	(??___fleq+1)^0,w,c
  6585  003302  100F               	iorwf	(??___fleq+2)^0,w,c
  6586  003304  1010               	iorwf	(??___fleq+3)^0,w,c
  6587  003306  A4D8               	btfss	status,2,c
  6588  003308  EF88  F019         	goto	u5991
  6589  00330C  EF8A  F019         	goto	u5990
  6590  003310                     u5991:
  6591  003310  EF92  F019         	goto	l4897
  6592  003314                     u5990:
  6593  003314  0E00               	movlw	0
  6594  003316  6E09               	movwf	___fleq@ff2^0,c
  6595  003318  0E00               	movlw	0
  6596  00331A  6E0A               	movwf	(___fleq@ff2+1)^0,c
  6597  00331C  0E00               	movlw	0
  6598  00331E  6E0B               	movwf	(___fleq@ff2+2)^0,c
  6599  003320  0E00               	movlw	0
  6600  003322  6E0C               	movwf	(___fleq@ff2+3)^0,c
  6601  003324                     l4897:
  6602  003324  5009               	movf	___fleq@ff2^0,w,c
  6603  003326  1805               	xorwf	___fleq@ff1^0,w,c
  6604  003328  E10F               	bnz	u6000
  6605  00332A  500A               	movf	(___fleq@ff2+1)^0,w,c
  6606  00332C  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  6607  00332E  E10C               	bnz	u6000
  6608  003330  500B               	movf	(___fleq@ff2+2)^0,w,c
  6609  003332  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  6610  003334  E109               	bnz	u6000
  6611  003336  500C               	movf	(___fleq@ff2+3)^0,w,c
  6612  003338  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  6613  00333A  B4D8               	btfsc	status,2,c
  6614  00333C  EFA2  F019         	goto	u6001
  6615  003340  EFA4  F019         	goto	u6000
  6616  003344                     u6001:
  6617  003344  EFA7  F019         	goto	l4901
  6618  003348                     u6000:
  6619  003348  90D8               	bcf	status,0,c
  6620  00334A  EFA8  F019         	goto	l414
  6621  00334E                     l4901:
  6622  00334E  80D8               	bsf	status,0,c
  6623  003350                     l414:
  6624  003350  0012               	return		;funcret
  6625  003352                     __end_of___fleq:
  6626                           	callstack 0
  6627                           
  6628 ;; *************** function ___fldiv *****************
  6629 ;; Defined at:
  6630 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  b               4    4[COMRAM] unsigned char 
  6633 ;;  a               4    8[COMRAM] unsigned char 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  grs             4   23[COMRAM] unsigned long 
  6636 ;;  rem             4   16[COMRAM] unsigned long 
  6637 ;;  new_exp         2   21[COMRAM] short 
  6638 ;;  aexp            1   28[COMRAM] unsigned char 
  6639 ;;  bexp            1   27[COMRAM] unsigned char 
  6640 ;;  sign            1   20[COMRAM] unsigned char 
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  4    4[COMRAM] unsigned char 
  6643 ;; Registers used:
  6644 ;;		wreg, status,2, status,0
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6650 ;;      Params:         8       0       0       0       0       0       0       0       0
  6651 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6652 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6653 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6654 ;;Total ram usage:       25 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; Hardware stack levels required when called:    2
  6657 ;; This function calls:
  6658 ;;		Nothing
  6659 ;; This function is called by:
  6660 ;;		_efgtoa
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text23
  6665  0021F6                     __ptext23:
  6666                           	callstack 0
  6667  0021F6                     ___fldiv:
  6668                           	callstack 24
  6669  0021F6  5008               	movf	(___fldiv@b+3)^0,w,c
  6670  0021F8  0B80               	andlw	128
  6671  0021FA  6E15               	movwf	___fldiv@sign^0,c
  6672  0021FC  5008               	movf	(___fldiv@b+3)^0,w,c
  6673  0021FE  2408               	addwf	(___fldiv@b+3)^0,w,c
  6674  002200  6E1C               	movwf	___fldiv@bexp^0,c
  6675  002202  AE07               	btfss	(___fldiv@b+2)^0,7,c
  6676  002204  EF06  F011         	goto	u5441
  6677  002208  EF08  F011         	goto	u5440
  6678  00220C                     u5441:
  6679  00220C  EF09  F011         	goto	l4541
  6680  002210                     u5440:
  6681  002210  801C               	bsf	___fldiv@bexp^0,0,c
  6682  002212                     l4541:
  6683  002212  501C               	movf	___fldiv@bexp^0,w,c
  6684  002214  B4D8               	btfsc	status,2,c
  6685  002216  EF0F  F011         	goto	u5451
  6686  00221A  EF11  F011         	goto	u5450
  6687  00221E                     u5451:
  6688  00221E  EF26  F011         	goto	l4551
  6689  002222                     u5450:
  6690  002222  281C               	incf	___fldiv@bexp^0,w,c
  6691  002224  A4D8               	btfss	status,2,c
  6692  002226  EF17  F011         	goto	u5461
  6693  00222A  EF19  F011         	goto	u5460
  6694  00222E                     u5461:
  6695  00222E  EF21  F011         	goto	l4547
  6696  002232                     u5460:
  6697  002232  0E00               	movlw	0
  6698  002234  6E05               	movwf	___fldiv@b^0,c
  6699  002236  0E00               	movlw	0
  6700  002238  6E06               	movwf	(___fldiv@b+1)^0,c
  6701  00223A  0E00               	movlw	0
  6702  00223C  6E07               	movwf	(___fldiv@b+2)^0,c
  6703  00223E  0E00               	movlw	0
  6704  002240  6E08               	movwf	(___fldiv@b+3)^0,c
  6705  002242                     l4547:
  6706  002242  8E07               	bsf	(___fldiv@b+2)^0,7,c
  6707  002244  0E00               	movlw	0
  6708  002246  6E08               	movwf	(___fldiv@b+3)^0,c
  6709  002248  EF2E  F011         	goto	l4553
  6710  00224C                     l4551:
  6711  00224C  0E00               	movlw	0
  6712  00224E  6E05               	movwf	___fldiv@b^0,c
  6713  002250  0E00               	movlw	0
  6714  002252  6E06               	movwf	(___fldiv@b+1)^0,c
  6715  002254  0E00               	movlw	0
  6716  002256  6E07               	movwf	(___fldiv@b+2)^0,c
  6717  002258  0E00               	movlw	0
  6718  00225A  6E08               	movwf	(___fldiv@b+3)^0,c
  6719  00225C                     l4553:
  6720  00225C  500C               	movf	(___fldiv@a+3)^0,w,c
  6721  00225E  0B80               	andlw	128
  6722  002260  1A15               	xorwf	___fldiv@sign^0,f,c
  6723  002262  500C               	movf	(___fldiv@a+3)^0,w,c
  6724  002264  240C               	addwf	(___fldiv@a+3)^0,w,c
  6725  002266  6E1D               	movwf	___fldiv@aexp^0,c
  6726  002268  AE0B               	btfss	(___fldiv@a+2)^0,7,c
  6727  00226A  EF39  F011         	goto	u5471
  6728  00226E  EF3B  F011         	goto	u5470
  6729  002272                     u5471:
  6730  002272  EF3C  F011         	goto	l4561
  6731  002276                     u5470:
  6732  002276  801D               	bsf	___fldiv@aexp^0,0,c
  6733  002278                     l4561:
  6734  002278  501D               	movf	___fldiv@aexp^0,w,c
  6735  00227A  B4D8               	btfsc	status,2,c
  6736  00227C  EF42  F011         	goto	u5481
  6737  002280  EF44  F011         	goto	u5480
  6738  002284                     u5481:
  6739  002284  EF59  F011         	goto	l4571
  6740  002288                     u5480:
  6741  002288  281D               	incf	___fldiv@aexp^0,w,c
  6742  00228A  A4D8               	btfss	status,2,c
  6743  00228C  EF4A  F011         	goto	u5491
  6744  002290  EF4C  F011         	goto	u5490
  6745  002294                     u5491:
  6746  002294  EF54  F011         	goto	l4567
  6747  002298                     u5490:
  6748  002298  0E00               	movlw	0
  6749  00229A  6E09               	movwf	___fldiv@a^0,c
  6750  00229C  0E00               	movlw	0
  6751  00229E  6E0A               	movwf	(___fldiv@a+1)^0,c
  6752  0022A0  0E00               	movlw	0
  6753  0022A2  6E0B               	movwf	(___fldiv@a+2)^0,c
  6754  0022A4  0E00               	movlw	0
  6755  0022A6  6E0C               	movwf	(___fldiv@a+3)^0,c
  6756  0022A8                     l4567:
  6757  0022A8  8E0B               	bsf	(___fldiv@a+2)^0,7,c
  6758  0022AA  0E00               	movlw	0
  6759  0022AC  6E0C               	movwf	(___fldiv@a+3)^0,c
  6760  0022AE  EF61  F011         	goto	l4573
  6761  0022B2                     l4571:
  6762  0022B2  0E00               	movlw	0
  6763  0022B4  6E09               	movwf	___fldiv@a^0,c
  6764  0022B6  0E00               	movlw	0
  6765  0022B8  6E0A               	movwf	(___fldiv@a+1)^0,c
  6766  0022BA  0E00               	movlw	0
  6767  0022BC  6E0B               	movwf	(___fldiv@a+2)^0,c
  6768  0022BE  0E00               	movlw	0
  6769  0022C0  6E0C               	movwf	(___fldiv@a+3)^0,c
  6770  0022C2                     l4573:
  6771  0022C2  5009               	movf	___fldiv@a^0,w,c
  6772  0022C4  100A               	iorwf	(___fldiv@a+1)^0,w,c
  6773  0022C6  100B               	iorwf	(___fldiv@a+2)^0,w,c
  6774  0022C8  100C               	iorwf	(___fldiv@a+3)^0,w,c
  6775  0022CA  A4D8               	btfss	status,2,c
  6776  0022CC  EF6A  F011         	goto	u5501
  6777  0022D0  EF6C  F011         	goto	u5500
  6778  0022D4                     u5501:
  6779  0022D4  EF84  F011         	goto	l4585
  6780  0022D8                     u5500:
  6781  0022D8  0E00               	movlw	0
  6782  0022DA  6E05               	movwf	___fldiv@b^0,c
  6783  0022DC  0E00               	movlw	0
  6784  0022DE  6E06               	movwf	(___fldiv@b+1)^0,c
  6785  0022E0  0E00               	movlw	0
  6786  0022E2  6E07               	movwf	(___fldiv@b+2)^0,c
  6787  0022E4  0E00               	movlw	0
  6788  0022E6  6E08               	movwf	(___fldiv@b+3)^0,c
  6789  0022E8  0E80               	movlw	128
  6790  0022EA  1207               	iorwf	(___fldiv@b+2)^0,f,c
  6791  0022EC  0E7F               	movlw	127
  6792  0022EE  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6793  0022F0                     l4579:
  6794  0022F0  5015               	movf	___fldiv@sign^0,w,c
  6795  0022F2  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6796  0022F4  C005  F005         	movff	___fldiv@b,?___fldiv
  6797  0022F8  C006  F006         	movff	___fldiv@b+1,?___fldiv+1
  6798  0022FC  C007  F007         	movff	___fldiv@b+2,?___fldiv+2
  6799  002300  C008  F008         	movff	___fldiv@b+3,?___fldiv+3
  6800  002304  EFC7  F012         	goto	l737
  6801  002308                     l4585:
  6802  002308  501C               	movf	___fldiv@bexp^0,w,c
  6803  00230A  A4D8               	btfss	status,2,c
  6804  00230C  EF8A  F011         	goto	u5511
  6805  002310  EF8C  F011         	goto	u5510
  6806  002314                     u5511:
  6807  002314  EF96  F011         	goto	l4593
  6808  002318                     u5510:
  6809  002318  0E00               	movlw	0
  6810  00231A  6E05               	movwf	?___fldiv^0,c
  6811  00231C  0E00               	movlw	0
  6812  00231E  6E06               	movwf	(?___fldiv+1)^0,c
  6813  002320  0E00               	movlw	0
  6814  002322  6E07               	movwf	(?___fldiv+2)^0,c
  6815  002324  0E00               	movlw	0
  6816  002326  6E08               	movwf	(?___fldiv+3)^0,c
  6817  002328  EFC7  F012         	goto	l737
  6818  00232C                     l4593:
  6819  00232C  501D               	movf	___fldiv@aexp^0,w,c
  6820  00232E  C01C  F00D         	movff	___fldiv@bexp,??___fldiv
  6821  002332  6A0E               	clrf	(??___fldiv+1)^0,c
  6822  002334  5E0D               	subwf	??___fldiv^0,f,c
  6823  002336  0E00               	movlw	0
  6824  002338  5A0E               	subwfb	(??___fldiv+1)^0,f,c
  6825  00233A  0E7F               	movlw	127
  6826  00233C  240D               	addwf	??___fldiv^0,w,c
  6827  00233E  6E16               	movwf	___fldiv@new_exp^0,c
  6828  002340  0E00               	movlw	0
  6829  002342  200E               	addwfc	(??___fldiv+1)^0,w,c
  6830  002344  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  6831  002346  C005  F011         	movff	___fldiv@b,___fldiv@rem
  6832  00234A  C006  F012         	movff	___fldiv@b+1,___fldiv@rem+1
  6833  00234E  C007  F013         	movff	___fldiv@b+2,___fldiv@rem+2
  6834  002352  C008  F014         	movff	___fldiv@b+3,___fldiv@rem+3
  6835  002356  0E00               	movlw	0
  6836  002358  6E05               	movwf	___fldiv@b^0,c
  6837  00235A  0E00               	movlw	0
  6838  00235C  6E06               	movwf	(___fldiv@b+1)^0,c
  6839  00235E  0E00               	movlw	0
  6840  002360  6E07               	movwf	(___fldiv@b+2)^0,c
  6841  002362  0E00               	movlw	0
  6842  002364  6E08               	movwf	(___fldiv@b+3)^0,c
  6843  002366  0E00               	movlw	0
  6844  002368  6E18               	movwf	___fldiv@grs^0,c
  6845  00236A  0E00               	movlw	0
  6846  00236C  6E19               	movwf	(___fldiv@grs+1)^0,c
  6847  00236E  0E00               	movlw	0
  6848  002370  6E1A               	movwf	(___fldiv@grs+2)^0,c
  6849  002372  0E00               	movlw	0
  6850  002374  6E1B               	movwf	(___fldiv@grs+3)^0,c
  6851  002376  0E00               	movlw	0
  6852  002378  6E1D               	movwf	___fldiv@aexp^0,c
  6853  00237A  EFF7  F011         	goto	l739
  6854  00237E                     l4603:
  6855  00237E  501D               	movf	___fldiv@aexp^0,w,c
  6856  002380  B4D8               	btfsc	status,2,c
  6857  002382  EFC5  F011         	goto	u5521
  6858  002386  EFC7  F011         	goto	u5520
  6859  00238A                     u5521:
  6860  00238A  EFDE  F011         	goto	l4611
  6861  00238E                     u5520:
  6862  00238E  90D8               	bcf	status,0,c
  6863  002390  3611               	rlcf	___fldiv@rem^0,f,c
  6864  002392  3612               	rlcf	(___fldiv@rem+1)^0,f,c
  6865  002394  3613               	rlcf	(___fldiv@rem+2)^0,f,c
  6866  002396  3614               	rlcf	(___fldiv@rem+3)^0,f,c
  6867  002398  90D8               	bcf	status,0,c
  6868  00239A  3605               	rlcf	___fldiv@b^0,f,c
  6869  00239C  3606               	rlcf	(___fldiv@b+1)^0,f,c
  6870  00239E  3607               	rlcf	(___fldiv@b+2)^0,f,c
  6871  0023A0  3608               	rlcf	(___fldiv@b+3)^0,f,c
  6872  0023A2  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6873  0023A4  EFD6  F011         	goto	u5531
  6874  0023A8  EFD8  F011         	goto	u5530
  6875  0023AC                     u5531:
  6876  0023AC  EFD9  F011         	goto	l742
  6877  0023B0                     u5530:
  6878  0023B0  8005               	bsf	___fldiv@b^0,0,c
  6879  0023B2                     l742:
  6880  0023B2  90D8               	bcf	status,0,c
  6881  0023B4  3618               	rlcf	___fldiv@grs^0,f,c
  6882  0023B6  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  6883  0023B8  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  6884  0023BA  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  6885  0023BC                     l4611:
  6886  0023BC  5009               	movf	___fldiv@a^0,w,c
  6887  0023BE  5C11               	subwf	___fldiv@rem^0,w,c
  6888  0023C0  500A               	movf	(___fldiv@a+1)^0,w,c
  6889  0023C2  5812               	subwfb	(___fldiv@rem+1)^0,w,c
  6890  0023C4  500B               	movf	(___fldiv@a+2)^0,w,c
  6891  0023C6  5813               	subwfb	(___fldiv@rem+2)^0,w,c
  6892  0023C8  500C               	movf	(___fldiv@a+3)^0,w,c
  6893  0023CA  5814               	subwfb	(___fldiv@rem+3)^0,w,c
  6894  0023CC  A0D8               	btfss	status,0,c
  6895  0023CE  EFEB  F011         	goto	u5541
  6896  0023D2  EFED  F011         	goto	u5540
  6897  0023D6                     u5541:
  6898  0023D6  EFF6  F011         	goto	l4617
  6899  0023DA                     u5540:
  6900  0023DA  8C1B               	bsf	(___fldiv@grs+3)^0,6,c
  6901  0023DC  5009               	movf	___fldiv@a^0,w,c
  6902  0023DE  5E11               	subwf	___fldiv@rem^0,f,c
  6903  0023E0  500A               	movf	(___fldiv@a+1)^0,w,c
  6904  0023E2  5A12               	subwfb	(___fldiv@rem+1)^0,f,c
  6905  0023E4  500B               	movf	(___fldiv@a+2)^0,w,c
  6906  0023E6  5A13               	subwfb	(___fldiv@rem+2)^0,f,c
  6907  0023E8  500C               	movf	(___fldiv@a+3)^0,w,c
  6908  0023EA  5A14               	subwfb	(___fldiv@rem+3)^0,f,c
  6909  0023EC                     l4617:
  6910  0023EC  2A1D               	incf	___fldiv@aexp^0,f,c
  6911  0023EE                     l739:
  6912  0023EE  0E19               	movlw	25
  6913  0023F0  641D               	cpfsgt	___fldiv@aexp^0,c
  6914  0023F2  EFFD  F011         	goto	u5551
  6915  0023F6  EFFF  F011         	goto	u5550
  6916  0023FA                     u5551:
  6917  0023FA  EFBF  F011         	goto	l4603
  6918  0023FE                     u5550:
  6919  0023FE  5011               	movf	___fldiv@rem^0,w,c
  6920  002400  1012               	iorwf	(___fldiv@rem+1)^0,w,c
  6921  002402  1013               	iorwf	(___fldiv@rem+2)^0,w,c
  6922  002404  1014               	iorwf	(___fldiv@rem+3)^0,w,c
  6923  002406  B4D8               	btfsc	status,2,c
  6924  002408  EF08  F012         	goto	u5561
  6925  00240C  EF0A  F012         	goto	u5560
  6926  002410                     u5561:
  6927  002410  EF22  F012         	goto	l4629
  6928  002414                     u5560:
  6929  002414  8018               	bsf	___fldiv@grs^0,0,c
  6930  002416  EF22  F012         	goto	l4629
  6931  00241A                     l4623:
  6932  00241A  90D8               	bcf	status,0,c
  6933  00241C  3605               	rlcf	___fldiv@b^0,f,c
  6934  00241E  3606               	rlcf	(___fldiv@b+1)^0,f,c
  6935  002420  3607               	rlcf	(___fldiv@b+2)^0,f,c
  6936  002422  3608               	rlcf	(___fldiv@b+3)^0,f,c
  6937  002424  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6938  002426  EF17  F012         	goto	u5571
  6939  00242A  EF19  F012         	goto	u5570
  6940  00242E                     u5571:
  6941  00242E  EF1A  F012         	goto	l748
  6942  002432                     u5570:
  6943  002432  8005               	bsf	___fldiv@b^0,0,c
  6944  002434                     l748:
  6945  002434  90D8               	bcf	status,0,c
  6946  002436  3618               	rlcf	___fldiv@grs^0,f,c
  6947  002438  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  6948  00243A  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  6949  00243C  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  6950  00243E  0616               	decf	___fldiv@new_exp^0,f,c
  6951  002440  A0D8               	btfss	status,0,c
  6952  002442  0617               	decf	(___fldiv@new_exp+1)^0,f,c
  6953  002444                     l4629:
  6954  002444  AE07               	btfss	(___fldiv@b+2)^0,7,c
  6955  002446  EF27  F012         	goto	u5581
  6956  00244A  EF29  F012         	goto	u5580
  6957  00244E                     u5581:
  6958  00244E  EF0D  F012         	goto	l4623
  6959  002452                     u5580:
  6960  002452  0E00               	movlw	0
  6961  002454  6E1D               	movwf	___fldiv@aexp^0,c
  6962  002456  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6963  002458  EF30  F012         	goto	u5591
  6964  00245C  EF32  F012         	goto	u5590
  6965  002460                     u5591:
  6966  002460  EF56  F012         	goto	l750
  6967  002464                     u5590:
  6968  002464  0EFF               	movlw	255
  6969  002466  1418               	andwf	___fldiv@grs^0,w,c
  6970  002468  6E0D               	movwf	??___fldiv^0,c
  6971  00246A  0EFF               	movlw	255
  6972  00246C  1419               	andwf	(___fldiv@grs+1)^0,w,c
  6973  00246E  6E0E               	movwf	(??___fldiv+1)^0,c
  6974  002470  0EFF               	movlw	255
  6975  002472  141A               	andwf	(___fldiv@grs+2)^0,w,c
  6976  002474  6E0F               	movwf	(??___fldiv+2)^0,c
  6977  002476  0E7F               	movlw	127
  6978  002478  141B               	andwf	(___fldiv@grs+3)^0,w,c
  6979  00247A  6E10               	movwf	(??___fldiv+3)^0,c
  6980  00247C  500D               	movf	??___fldiv^0,w,c
  6981  00247E  100E               	iorwf	(??___fldiv+1)^0,w,c
  6982  002480  100F               	iorwf	(??___fldiv+2)^0,w,c
  6983  002482  1010               	iorwf	(??___fldiv+3)^0,w,c
  6984  002484  B4D8               	btfsc	status,2,c
  6985  002486  EF47  F012         	goto	u5601
  6986  00248A  EF49  F012         	goto	u5600
  6987  00248E                     u5601:
  6988  00248E  EF4D  F012         	goto	l751
  6989  002492                     u5600:
  6990  002492                     l4637:
  6991  002492  0E01               	movlw	1
  6992  002494  6E1D               	movwf	___fldiv@aexp^0,c
  6993  002496  EF56  F012         	goto	l750
  6994  00249A                     l751:
  6995  00249A  A005               	btfss	___fldiv@b^0,0,c
  6996  00249C  EF52  F012         	goto	u5611
  6997  0024A0  EF54  F012         	goto	u5610
  6998  0024A4                     u5611:
  6999  0024A4  EF56  F012         	goto	l750
  7000  0024A8                     u5610:
  7001  0024A8  EF49  F012         	goto	l4637
  7002  0024AC                     l750:
  7003  0024AC  501D               	movf	___fldiv@aexp^0,w,c
  7004  0024AE  B4D8               	btfsc	status,2,c
  7005  0024B0  EF5C  F012         	goto	u5621
  7006  0024B4  EF5E  F012         	goto	u5620
  7007  0024B8                     u5621:
  7008  0024B8  EF82  F012         	goto	l4649
  7009  0024BC                     u5620:
  7010  0024BC  0E01               	movlw	1
  7011  0024BE  2605               	addwf	___fldiv@b^0,f,c
  7012  0024C0  0E00               	movlw	0
  7013  0024C2  2206               	addwfc	(___fldiv@b+1)^0,f,c
  7014  0024C4  2207               	addwfc	(___fldiv@b+2)^0,f,c
  7015  0024C6  2208               	addwfc	(___fldiv@b+3)^0,f,c
  7016  0024C8  A008               	btfss	(___fldiv@b+3)^0,0,c
  7017  0024CA  EF69  F012         	goto	u5631
  7018  0024CE  EF6B  F012         	goto	u5630
  7019  0024D2                     u5631:
  7020  0024D2  EF82  F012         	goto	l4649
  7021  0024D6                     u5630:
  7022  0024D6  C005  F00D         	movff	___fldiv@b,??___fldiv
  7023  0024DA  C006  F00E         	movff	___fldiv@b+1,??___fldiv+1
  7024  0024DE  C007  F00F         	movff	___fldiv@b+2,??___fldiv+2
  7025  0024E2  C008  F010         	movff	___fldiv@b+3,??___fldiv+3
  7026  0024E6  3410               	rlcf	(??___fldiv+3)^0,w,c
  7027  0024E8  3210               	rrcf	(??___fldiv+3)^0,f,c
  7028  0024EA  320F               	rrcf	(??___fldiv+2)^0,f,c
  7029  0024EC  320E               	rrcf	(??___fldiv+1)^0,f,c
  7030  0024EE  320D               	rrcf	??___fldiv^0,f,c
  7031  0024F0  C00D  F005         	movff	??___fldiv,___fldiv@b
  7032  0024F4  C00E  F006         	movff	??___fldiv+1,___fldiv@b+1
  7033  0024F8  C00F  F007         	movff	??___fldiv+2,___fldiv@b+2
  7034  0024FC  C010  F008         	movff	??___fldiv+3,___fldiv@b+3
  7035  002500  4A16               	infsnz	___fldiv@new_exp^0,f,c
  7036  002502  2A17               	incf	(___fldiv@new_exp+1)^0,f,c
  7037  002504                     l4649:
  7038  002504  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7039  002506  EF8D  F012         	goto	u5641
  7040  00250A  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  7041  00250C  E108               	bnz	u5640
  7042  00250E  2816               	incf	___fldiv@new_exp^0,w,c
  7043  002510  A0D8               	btfss	status,0,c
  7044  002512  EF8D  F012         	goto	u5641
  7045  002516  EF8F  F012         	goto	u5640
  7046  00251A                     u5641:
  7047  00251A  EF9A  F012         	goto	l4653
  7048  00251E                     u5640:
  7049  00251E  0E00               	movlw	0
  7050  002520  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  7051  002522  6816               	setf	___fldiv@new_exp^0,c
  7052  002524  0E00               	movlw	0
  7053  002526  6E05               	movwf	___fldiv@b^0,c
  7054  002528  0E00               	movlw	0
  7055  00252A  6E06               	movwf	(___fldiv@b+1)^0,c
  7056  00252C  0E00               	movlw	0
  7057  00252E  6E07               	movwf	(___fldiv@b+2)^0,c
  7058  002530  0E00               	movlw	0
  7059  002532  6E08               	movwf	(___fldiv@b+3)^0,c
  7060  002534                     l4653:
  7061  002534  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7062  002536  EFA7  F012         	goto	u5650
  7063  00253A  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  7064  00253C  E106               	bnz	u5651
  7065  00253E  0416               	decf	___fldiv@new_exp^0,w,c
  7066  002540  B0D8               	btfsc	status,0,c
  7067  002542  EFA5  F012         	goto	u5651
  7068  002546  EFA7  F012         	goto	u5650
  7069  00254A                     u5651:
  7070  00254A  EFB5  F012         	goto	l4657
  7071  00254E                     u5650:
  7072  00254E  0E00               	movlw	0
  7073  002550  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  7074  002552  0E00               	movlw	0
  7075  002554  6E16               	movwf	___fldiv@new_exp^0,c
  7076  002556  0E00               	movlw	0
  7077  002558  6E05               	movwf	___fldiv@b^0,c
  7078  00255A  0E00               	movlw	0
  7079  00255C  6E06               	movwf	(___fldiv@b+1)^0,c
  7080  00255E  0E00               	movlw	0
  7081  002560  6E07               	movwf	(___fldiv@b+2)^0,c
  7082  002562  0E00               	movlw	0
  7083  002564  6E08               	movwf	(___fldiv@b+3)^0,c
  7084  002566  0E00               	movlw	0
  7085  002568  6E15               	movwf	___fldiv@sign^0,c
  7086  00256A                     l4657:
  7087  00256A  C016  F01C         	movff	___fldiv@new_exp,___fldiv@bexp
  7088  00256E  A01C               	btfss	___fldiv@bexp^0,0,c
  7089  002570  EFBC  F012         	goto	u5661
  7090  002574  EFBE  F012         	goto	u5660
  7091  002578                     u5661:
  7092  002578  EFC1  F012         	goto	l4663
  7093  00257C                     u5660:
  7094  00257C  8E07               	bsf	(___fldiv@b+2)^0,7,c
  7095  00257E  EFC2  F012         	goto	l4665
  7096  002582                     l4663:
  7097  002582  9E07               	bcf	(___fldiv@b+2)^0,7,c
  7098  002584                     l4665:
  7099  002584  90D8               	bcf	status,0,c
  7100  002586  301C               	rrcf	___fldiv@bexp^0,w,c
  7101  002588  6E08               	movwf	(___fldiv@b+3)^0,c
  7102  00258A  EF78  F011         	goto	l4579
  7103  00258E                     l737:
  7104  00258E  0012               	return		;funcret
  7105  002590                     __end_of___fldiv:
  7106                           	callstack 0
  7107                           
  7108 ;; *************** function ___awmod *****************
  7109 ;; Defined at:
  7110 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;  dividend        2    4[COMRAM] int 
  7113 ;;  divisor         2    6[COMRAM] int 
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;  sign            1    9[COMRAM] unsigned char 
  7116 ;;  counter         1    8[COMRAM] unsigned char 
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  2    4[COMRAM] int 
  7119 ;; Registers used:
  7120 ;;		wreg, status,2, status,0
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7126 ;;      Params:         4       0       0       0       0       0       0       0       0
  7127 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7128 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7129 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7130 ;;Total ram usage:        6 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    2
  7133 ;; This function calls:
  7134 ;;		Nothing
  7135 ;; This function is called by:
  7136 ;;		_efgtoa
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           
  7140                           	psect	text24
  7141  0031F8                     __ptext24:
  7142                           	callstack 0
  7143  0031F8                     ___awmod:
  7144                           	callstack 24
  7145  0031F8  0E00               	movlw	0
  7146  0031FA  6E0A               	movwf	___awmod@sign^0,c
  7147  0031FC  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  7148  0031FE  EF05  F019         	goto	u5920
  7149  003202  EF03  F019         	goto	u5921
  7150  003206                     u5921:
  7151  003206  EF0B  F019         	goto	l4861
  7152  00320A                     u5920:
  7153  00320A  6C05               	negf	___awmod@dividend^0,c
  7154  00320C  1E06               	comf	(___awmod@dividend+1)^0,f,c
  7155  00320E  B0D8               	btfsc	status,0,c
  7156  003210  2A06               	incf	(___awmod@dividend+1)^0,f,c
  7157  003212  0E01               	movlw	1
  7158  003214  6E0A               	movwf	___awmod@sign^0,c
  7159  003216                     l4861:
  7160  003216  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  7161  003218  EF12  F019         	goto	u5930
  7162  00321C  EF10  F019         	goto	u5931
  7163  003220                     u5931:
  7164  003220  EF16  F019         	goto	l4865
  7165  003224                     u5930:
  7166  003224  6C07               	negf	___awmod@divisor^0,c
  7167  003226  1E08               	comf	(___awmod@divisor+1)^0,f,c
  7168  003228  B0D8               	btfsc	status,0,c
  7169  00322A  2A08               	incf	(___awmod@divisor+1)^0,f,c
  7170  00322C                     l4865:
  7171  00322C  5007               	movf	___awmod@divisor^0,w,c
  7172  00322E  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  7173  003230  B4D8               	btfsc	status,2,c
  7174  003232  EF1D  F019         	goto	u5941
  7175  003236  EF1F  F019         	goto	u5940
  7176  00323A                     u5941:
  7177  00323A  EF43  F019         	goto	l4881
  7178  00323E                     u5940:
  7179  00323E  0E01               	movlw	1
  7180  003240  6E09               	movwf	___awmod@counter^0,c
  7181  003242  EF27  F019         	goto	l4871
  7182  003246                     l4869:
  7183  003246  90D8               	bcf	status,0,c
  7184  003248  3607               	rlcf	___awmod@divisor^0,f,c
  7185  00324A  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  7186  00324C  2A09               	incf	___awmod@counter^0,f,c
  7187  00324E                     l4871:
  7188  00324E  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  7189  003250  EF2C  F019         	goto	u5951
  7190  003254  EF2E  F019         	goto	u5950
  7191  003258                     u5951:
  7192  003258  EF23  F019         	goto	l4869
  7193  00325C                     u5950:
  7194  00325C                     l4873:
  7195  00325C  5007               	movf	___awmod@divisor^0,w,c
  7196  00325E  5C05               	subwf	___awmod@dividend^0,w,c
  7197  003260  5008               	movf	(___awmod@divisor+1)^0,w,c
  7198  003262  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  7199  003264  A0D8               	btfss	status,0,c
  7200  003266  EF37  F019         	goto	u5961
  7201  00326A  EF39  F019         	goto	u5960
  7202  00326E                     u5961:
  7203  00326E  EF3D  F019         	goto	l4877
  7204  003272                     u5960:
  7205  003272  5007               	movf	___awmod@divisor^0,w,c
  7206  003274  5E05               	subwf	___awmod@dividend^0,f,c
  7207  003276  5008               	movf	(___awmod@divisor+1)^0,w,c
  7208  003278  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  7209  00327A                     l4877:
  7210  00327A  90D8               	bcf	status,0,c
  7211  00327C  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  7212  00327E  3207               	rrcf	___awmod@divisor^0,f,c
  7213  003280  2E09               	decfsz	___awmod@counter^0,f,c
  7214  003282  EF2E  F019         	goto	l4873
  7215  003286                     l4881:
  7216  003286  500A               	movf	___awmod@sign^0,w,c
  7217  003288  B4D8               	btfsc	status,2,c
  7218  00328A  EF49  F019         	goto	u5971
  7219  00328E  EF4B  F019         	goto	u5970
  7220  003292                     u5971:
  7221  003292  EF4F  F019         	goto	l4885
  7222  003296                     u5970:
  7223  003296  6C05               	negf	___awmod@dividend^0,c
  7224  003298  1E06               	comf	(___awmod@dividend+1)^0,f,c
  7225  00329A  B0D8               	btfsc	status,0,c
  7226  00329C  2A06               	incf	(___awmod@dividend+1)^0,f,c
  7227  00329E                     l4885:
  7228  00329E  C005  F005         	movff	___awmod@dividend,?___awmod
  7229  0032A2  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  7230  0032A6  0012               	return		;funcret
  7231  0032A8                     __end_of___awmod:
  7232                           	callstack 0
  7233                           
  7234 ;; *************** function ___awdiv *****************
  7235 ;; Defined at:
  7236 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;  dividend        2    4[COMRAM] int 
  7239 ;;  divisor         2    6[COMRAM] int 
  7240 ;; Auto vars:     Size  Location     Type
  7241 ;;  quotient        2   10[COMRAM] int 
  7242 ;;  sign            1    9[COMRAM] unsigned char 
  7243 ;;  counter         1    8[COMRAM] unsigned char 
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  2    4[COMRAM] int 
  7246 ;; Registers used:
  7247 ;;		wreg, status,2, status,0
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7253 ;;      Params:         4       0       0       0       0       0       0       0       0
  7254 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7255 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7256 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7257 ;;Total ram usage:        8 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; Hardware stack levels required when called:    2
  7260 ;; This function calls:
  7261 ;;		Nothing
  7262 ;; This function is called by:
  7263 ;;		_efgtoa
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           	psect	text25
  7268  003072                     __ptext25:
  7269                           	callstack 0
  7270  003072                     ___awdiv:
  7271                           	callstack 24
  7272  003072  0E00               	movlw	0
  7273  003074  6E0A               	movwf	___awdiv@sign^0,c
  7274  003076  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  7275  003078  EF42  F018         	goto	u5860
  7276  00307C  EF40  F018         	goto	u5861
  7277  003080                     u5861:
  7278  003080  EF48  F018         	goto	l4817
  7279  003084                     u5860:
  7280  003084  6C07               	negf	___awdiv@divisor^0,c
  7281  003086  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  7282  003088  B0D8               	btfsc	status,0,c
  7283  00308A  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  7284  00308C  0E01               	movlw	1
  7285  00308E  6E0A               	movwf	___awdiv@sign^0,c
  7286  003090                     l4817:
  7287  003090  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  7288  003092  EF4F  F018         	goto	u5870
  7289  003096  EF4D  F018         	goto	u5871
  7290  00309A                     u5871:
  7291  00309A  EF55  F018         	goto	l4823
  7292  00309E                     u5870:
  7293  00309E  6C05               	negf	___awdiv@dividend^0,c
  7294  0030A0  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  7295  0030A2  B0D8               	btfsc	status,0,c
  7296  0030A4  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  7297  0030A6  0E01               	movlw	1
  7298  0030A8  1A0A               	xorwf	___awdiv@sign^0,f,c
  7299  0030AA                     l4823:
  7300  0030AA  0E00               	movlw	0
  7301  0030AC  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  7302  0030AE  0E00               	movlw	0
  7303  0030B0  6E0B               	movwf	___awdiv@quotient^0,c
  7304  0030B2  5007               	movf	___awdiv@divisor^0,w,c
  7305  0030B4  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  7306  0030B6  B4D8               	btfsc	status,2,c
  7307  0030B8  EF60  F018         	goto	u5881
  7308  0030BC  EF62  F018         	goto	u5880
  7309  0030C0                     u5881:
  7310  0030C0  EF8A  F018         	goto	l4845
  7311  0030C4                     u5880:
  7312  0030C4  0E01               	movlw	1
  7313  0030C6  6E09               	movwf	___awdiv@counter^0,c
  7314  0030C8  EF6A  F018         	goto	l4831
  7315  0030CC                     l4829:
  7316  0030CC  90D8               	bcf	status,0,c
  7317  0030CE  3607               	rlcf	___awdiv@divisor^0,f,c
  7318  0030D0  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  7319  0030D2  2A09               	incf	___awdiv@counter^0,f,c
  7320  0030D4                     l4831:
  7321  0030D4  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  7322  0030D6  EF6F  F018         	goto	u5891
  7323  0030DA  EF71  F018         	goto	u5890
  7324  0030DE                     u5891:
  7325  0030DE  EF66  F018         	goto	l4829
  7326  0030E2                     u5890:
  7327  0030E2                     l4833:
  7328  0030E2  90D8               	bcf	status,0,c
  7329  0030E4  360B               	rlcf	___awdiv@quotient^0,f,c
  7330  0030E6  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  7331  0030E8  5007               	movf	___awdiv@divisor^0,w,c
  7332  0030EA  5C05               	subwf	___awdiv@dividend^0,w,c
  7333  0030EC  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7334  0030EE  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  7335  0030F0  A0D8               	btfss	status,0,c
  7336  0030F2  EF7D  F018         	goto	u5901
  7337  0030F6  EF7F  F018         	goto	u5900
  7338  0030FA                     u5901:
  7339  0030FA  EF84  F018         	goto	l4841
  7340  0030FE                     u5900:
  7341  0030FE  5007               	movf	___awdiv@divisor^0,w,c
  7342  003100  5E05               	subwf	___awdiv@dividend^0,f,c
  7343  003102  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7344  003104  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  7345  003106  800B               	bsf	___awdiv@quotient^0,0,c
  7346  003108                     l4841:
  7347  003108  90D8               	bcf	status,0,c
  7348  00310A  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  7349  00310C  3207               	rrcf	___awdiv@divisor^0,f,c
  7350  00310E  2E09               	decfsz	___awdiv@counter^0,f,c
  7351  003110  EF71  F018         	goto	l4833
  7352  003114                     l4845:
  7353  003114  500A               	movf	___awdiv@sign^0,w,c
  7354  003116  B4D8               	btfsc	status,2,c
  7355  003118  EF90  F018         	goto	u5911
  7356  00311C  EF92  F018         	goto	u5910
  7357  003120                     u5911:
  7358  003120  EF96  F018         	goto	l4849
  7359  003124                     u5910:
  7360  003124  6C0B               	negf	___awdiv@quotient^0,c
  7361  003126  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  7362  003128  B0D8               	btfsc	status,0,c
  7363  00312A  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  7364  00312C                     l4849:
  7365  00312C  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  7366  003130  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  7367  003134  0012               	return		;funcret
  7368  003136                     __end_of___awdiv:
  7369                           	callstack 0
  7370                           
  7371 ;; *************** function _atoi *****************
  7372 ;; Defined at:
  7373 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;  s               2   11[COMRAM] PTR const unsigned char 
  7376 ;;		 -> STR_2(18), 
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;  n               2   24[COMRAM] int 
  7379 ;;  neg             2   17[COMRAM] int 
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  2   11[COMRAM] int 
  7382 ;; Registers used:
  7383 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7389 ;;      Params:         2       0       0       0       0       0       0       0       0
  7390 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7391 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7392 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7393 ;;Total ram usage:       15 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; Hardware stack levels required when called:    3
  7396 ;; This function calls:
  7397 ;;		___wmul
  7398 ;;		_isdigit
  7399 ;;		_isspace
  7400 ;; This function is called by:
  7401 ;;		_vfpfcnvrt
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           	psect	text26
  7406  002956                     __ptext26:
  7407                           	callstack 0
  7408  002956                     _atoi:
  7409                           	callstack 24
  7410  002956  0E00               	movlw	0
  7411  002958  6E1A               	movwf	(atoi@n+1)^0,c
  7412  00295A  0E00               	movlw	0
  7413  00295C  6E19               	movwf	atoi@n^0,c
  7414  00295E  0E00               	movlw	0
  7415  002960  6E13               	movwf	(atoi@neg+1)^0,c
  7416  002962  0E00               	movlw	0
  7417  002964  6E12               	movwf	atoi@neg^0,c
  7418  002966  EFB7  F014         	goto	l5383
  7419  00296A                     l5381:
  7420  00296A  4A0C               	infsnz	atoi@s^0,f,c
  7421  00296C  2A0D               	incf	(atoi@s+1)^0,f,c
  7422  00296E                     l5383:
  7423  00296E  0E01               	movlw	1
  7424  002970  6E18               	movwf	_atoi$1410^0,c
  7425  002972  C00C  FFF6         	movff	atoi@s,tblptrl
  7426  002976  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7427  00297A                     	if	0	;tblptru may be non-zero
  7428  00297A                     	endif
  7429  00297A                     	if	0	;tblptru may be non-zero
  7430  00297A                     	endif
  7431  00297A  0008               	tblrd		*
  7432  00297C  50F5               	movf	tablat,w,c
  7433  00297E  0A20               	xorlw	32
  7434  002980  B4D8               	btfsc	status,2,c
  7435  002982  EFC5  F014         	goto	u6961
  7436  002986  EFC7  F014         	goto	u6960
  7437  00298A                     u6961:
  7438  00298A  EFE4  F014         	goto	l5391
  7439  00298E                     u6960:
  7440  00298E  0EF7               	movlw	247
  7441  002990  6E0E               	movwf	??_atoi^0,c
  7442  002992  0EFF               	movlw	255
  7443  002994  6E0F               	movwf	(??_atoi+1)^0,c
  7444  002996  C00C  FFF6         	movff	atoi@s,tblptrl
  7445  00299A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7446  00299E                     	if	0	;tblptru may be non-zero
  7447  00299E                     	endif
  7448  00299E                     	if	0	;tblptru may be non-zero
  7449  00299E                     	endif
  7450  00299E  0008               	tblrd		*
  7451  0029A0  50F5               	movf	tablat,w,c
  7452  0029A2  6E10               	movwf	(??_atoi+2)^0,c
  7453  0029A4  6A11               	clrf	(??_atoi+3)^0,c
  7454  0029A6  500E               	movf	??_atoi^0,w,c
  7455  0029A8  2610               	addwf	(??_atoi+2)^0,f,c
  7456  0029AA  500F               	movf	(??_atoi+1)^0,w,c
  7457  0029AC  2211               	addwfc	(??_atoi+3)^0,f,c
  7458  0029AE  5011               	movf	(??_atoi+3)^0,w,c
  7459  0029B0  E109               	bnz	u6970
  7460  0029B2  0E05               	movlw	5
  7461  0029B4  5C10               	subwf	(??_atoi+2)^0,w,c
  7462  0029B6  A0D8               	btfss	status,0,c
  7463  0029B8  EFE0  F014         	goto	u6971
  7464  0029BC  EFE2  F014         	goto	u6970
  7465  0029C0                     u6971:
  7466  0029C0  EFE4  F014         	goto	l5391
  7467  0029C4                     u6970:
  7468  0029C4  0E00               	movlw	0
  7469  0029C6  6E18               	movwf	_atoi$1410^0,c
  7470  0029C8                     l5391:
  7471  0029C8  C018  F014         	movff	_atoi$1410,_atoi$1409
  7472  0029CC  6A15               	clrf	(_atoi$1409+1)^0,c
  7473  0029CE  5014               	movf	_atoi$1409^0,w,c
  7474  0029D0  1015               	iorwf	(_atoi$1409+1)^0,w,c
  7475  0029D2  A4D8               	btfss	status,2,c
  7476  0029D4  EFEE  F014         	goto	u6981
  7477  0029D8  EFF0  F014         	goto	u6980
  7478  0029DC                     u6981:
  7479  0029DC  EFB5  F014         	goto	l5381
  7480  0029E0                     u6980:
  7481  0029E0  EFFA  F014         	goto	l5401
  7482  0029E4                     l5397:
  7483  0029E4  0E00               	movlw	0
  7484  0029E6  6E13               	movwf	(atoi@neg+1)^0,c
  7485  0029E8  0E01               	movlw	1
  7486  0029EA  6E12               	movwf	atoi@neg^0,c
  7487  0029EC                     l5399:
  7488  0029EC  4A0C               	infsnz	atoi@s^0,f,c
  7489  0029EE  2A0D               	incf	(atoi@s+1)^0,f,c
  7490  0029F0  EF2F  F015         	goto	l5407
  7491  0029F4                     l5401:
  7492  0029F4  C00C  FFF6         	movff	atoi@s,tblptrl
  7493  0029F8  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7494  0029FC                     	if	0	;tblptru may be non-zero
  7495  0029FC                     	endif
  7496  0029FC                     	if	0	;tblptru may be non-zero
  7497  0029FC                     	endif
  7498  0029FC  0008               	tblrd		*
  7499  0029FE  50F5               	movf	tablat,w,c
  7500  002A00  6E0E               	movwf	??_atoi^0,c
  7501  002A02  6A0F               	clrf	(??_atoi+1)^0,c
  7502                           
  7503                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7504                           ; Switch size 1, requested type "simple"
  7505                           ; Number of cases is 1, Range of values is 0 to 0
  7506                           ; switch strategies available:
  7507                           ; Name         Instructions Cycles
  7508                           ; simple_byte            4     3 (average)
  7509                           ;	Chosen strategy is simple_byte
  7510  002A04  500F               	movf	(??_atoi+1)^0,w,c
  7511  002A06  0A00               	xorlw	0	; case 0
  7512  002A08  B4D8               	btfsc	status,2,c
  7513  002A0A  EF09  F015         	goto	l5689
  7514  002A0E  EF2F  F015         	goto	l5407
  7515  002A12                     l5689:
  7516                           
  7517                           ; Switch size 1, requested type "simple"
  7518                           ; Number of cases is 2, Range of values is 43 to 45
  7519                           ; switch strategies available:
  7520                           ; Name         Instructions Cycles
  7521                           ; simple_byte            7     4 (average)
  7522                           ;	Chosen strategy is simple_byte
  7523  002A12  500E               	movf	??_atoi^0,w,c
  7524  002A14  0A2B               	xorlw	43	; case 43
  7525  002A16  B4D8               	btfsc	status,2,c
  7526  002A18  EFF6  F014         	goto	l5399
  7527  002A1C  0A06               	xorlw	6	; case 45
  7528  002A1E  B4D8               	btfsc	status,2,c
  7529  002A20  EFF2  F014         	goto	l5397
  7530  002A24  EF2F  F015         	goto	l5407
  7531  002A28                     l5403:
  7532  002A28  C019  F005         	movff	atoi@n,___wmul@multiplier
  7533  002A2C  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  7534  002A30  0E00               	movlw	0
  7535  002A32  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  7536  002A34  0E0A               	movlw	10
  7537  002A36  6E07               	movwf	___wmul@multiplicand^0,c
  7538  002A38  EC8A  F01C         	call	___wmul	;wreg free
  7539  002A3C  C00C  FFF6         	movff	atoi@s,tblptrl
  7540  002A40  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7541  002A44                     	if	0	;tblptru may be non-zero
  7542  002A44                     	endif
  7543  002A44                     	if	0	;tblptru may be non-zero
  7544  002A44                     	endif
  7545  002A44  0008               	tblrd		*
  7546  002A46  50F5               	movf	tablat,w,c
  7547  002A48  5E05               	subwf	?___wmul^0,f,c
  7548  002A4A  0E00               	movlw	0
  7549  002A4C  5A06               	subwfb	(?___wmul+1)^0,f,c
  7550  002A4E  0E30               	movlw	48
  7551  002A50  2405               	addwf	?___wmul^0,w,c
  7552  002A52  6E19               	movwf	atoi@n^0,c
  7553  002A54  0E00               	movlw	0
  7554  002A56  2006               	addwfc	(?___wmul+1)^0,w,c
  7555  002A58  6E1A               	movwf	(atoi@n+1)^0,c
  7556  002A5A  EFF6  F014         	goto	l5399
  7557  002A5E                     l5407:
  7558  002A5E  0ED0               	movlw	208
  7559  002A60  6E0E               	movwf	??_atoi^0,c
  7560  002A62  0EFF               	movlw	255
  7561  002A64  6E0F               	movwf	(??_atoi+1)^0,c
  7562  002A66  C00C  FFF6         	movff	atoi@s,tblptrl
  7563  002A6A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7564  002A6E                     	if	0	;tblptru may be non-zero
  7565  002A6E                     	endif
  7566  002A6E                     	if	0	;tblptru may be non-zero
  7567  002A6E                     	endif
  7568  002A6E  0008               	tblrd		*
  7569  002A70  50F5               	movf	tablat,w,c
  7570  002A72  6E10               	movwf	(??_atoi+2)^0,c
  7571  002A74  6A11               	clrf	(??_atoi+3)^0,c
  7572  002A76  500E               	movf	??_atoi^0,w,c
  7573  002A78  2610               	addwf	(??_atoi+2)^0,f,c
  7574  002A7A  500F               	movf	(??_atoi+1)^0,w,c
  7575  002A7C  2211               	addwfc	(??_atoi+3)^0,f,c
  7576  002A7E  5011               	movf	(??_atoi+3)^0,w,c
  7577  002A80  E10A               	bnz	u6990
  7578  002A82  0E0A               	movlw	10
  7579  002A84  5C10               	subwf	(??_atoi+2)^0,w,c
  7580  002A86  A0D8               	btfss	status,0,c
  7581  002A88  EF48  F015         	goto	u6991
  7582  002A8C  EF4B  F015         	goto	u6990
  7583  002A90                     u6991:
  7584  002A90  0E01               	movlw	1
  7585  002A92  EF4C  F015         	goto	u7000
  7586  002A96                     u6990:
  7587  002A96  0E00               	movlw	0
  7588  002A98                     u7000:
  7589  002A98  6E16               	movwf	_atoi$1411^0,c
  7590  002A9A  6A17               	clrf	(_atoi$1411+1)^0,c
  7591  002A9C  5016               	movf	_atoi$1411^0,w,c
  7592  002A9E  1017               	iorwf	(_atoi$1411+1)^0,w,c
  7593  002AA0  A4D8               	btfss	status,2,c
  7594  002AA2  EF55  F015         	goto	u7011
  7595  002AA6  EF57  F015         	goto	u7010
  7596  002AAA                     u7011:
  7597  002AAA  EF14  F015         	goto	l5403
  7598  002AAE                     u7010:
  7599  002AAE  5012               	movf	atoi@neg^0,w,c
  7600  002AB0  1013               	iorwf	(atoi@neg+1)^0,w,c
  7601  002AB2  A4D8               	btfss	status,2,c
  7602  002AB4  EF5E  F015         	goto	u7021
  7603  002AB8  EF60  F015         	goto	u7020
  7604  002ABC                     u7021:
  7605  002ABC  EF6E  F015         	goto	l1052
  7606  002AC0                     u7020:
  7607  002AC0  C019  F00E         	movff	atoi@n,??_atoi
  7608  002AC4  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  7609  002AC8  1E0E               	comf	??_atoi^0,f,c
  7610  002ACA  1E0F               	comf	(??_atoi+1)^0,f,c
  7611  002ACC  4A0E               	infsnz	??_atoi^0,f,c
  7612  002ACE  2A0F               	incf	(??_atoi+1)^0,f,c
  7613  002AD0  C00E  F00C         	movff	??_atoi,?_atoi
  7614  002AD4  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  7615  002AD8  EF72  F015         	goto	l1055
  7616  002ADC                     l1052:
  7617  002ADC  C019  F00C         	movff	atoi@n,?_atoi
  7618  002AE0  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  7619  002AE4                     l1055:
  7620  002AE4  0012               	return		;funcret
  7621  002AE6                     __end_of_atoi:
  7622                           	callstack 0
  7623                           
  7624 ;; *************** function _isspace *****************
  7625 ;; Defined at:
  7626 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;  c               2    4[COMRAM] int 
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;		None
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  2    4[COMRAM] int 
  7633 ;; Registers used:
  7634 ;;		wreg, status,2, status,0
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7640 ;;      Params:         2       0       0       0       0       0       0       0       0
  7641 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7642 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7643 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7644 ;;Total ram usage:        7 bytes
  7645 ;; Hardware stack levels used:    1
  7646 ;; Hardware stack levels required when called:    2
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_atoi
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text27
  7655  003680                     __ptext27:
  7656                           	callstack 0
  7657  003680                     _isspace:
  7658                           	callstack 24
  7659  003680  0E01               	movlw	1
  7660  003682  6E0B               	movwf	_isspace$1440^0,c
  7661  003684  0E20               	movlw	32
  7662  003686  1805               	xorwf	isspace@c^0,w,c
  7663  003688  1006               	iorwf	(isspace@c+1)^0,w,c
  7664  00368A  B4D8               	btfsc	status,2,c
  7665  00368C  EF4A  F01B         	goto	u6421
  7666  003690  EF4C  F01B         	goto	u6420
  7667  003694                     u6421:
  7668  003694  EF65  F01B         	goto	l5077
  7669  003698                     u6420:
  7670  003698  0EF7               	movlw	247
  7671  00369A  6E07               	movwf	??_isspace^0,c
  7672  00369C  0EFF               	movlw	255
  7673  00369E  6E08               	movwf	(??_isspace+1)^0,c
  7674  0036A0  C005  F009         	movff	isspace@c,??_isspace+2
  7675  0036A4  C006  F00A         	movff	isspace@c+1,??_isspace+3
  7676  0036A8  5007               	movf	??_isspace^0,w,c
  7677  0036AA  2609               	addwf	(??_isspace+2)^0,f,c
  7678  0036AC  5008               	movf	(??_isspace+1)^0,w,c
  7679  0036AE  220A               	addwfc	(??_isspace+3)^0,f,c
  7680  0036B0  500A               	movf	(??_isspace+3)^0,w,c
  7681  0036B2  E109               	bnz	u6430
  7682  0036B4  0E05               	movlw	5
  7683  0036B6  5C09               	subwf	(??_isspace+2)^0,w,c
  7684  0036B8  A0D8               	btfss	status,0,c
  7685  0036BA  EF61  F01B         	goto	u6431
  7686  0036BE  EF63  F01B         	goto	u6430
  7687  0036C2                     u6431:
  7688  0036C2  EF65  F01B         	goto	l5077
  7689  0036C6                     u6430:
  7690  0036C6  0E00               	movlw	0
  7691  0036C8  6E0B               	movwf	_isspace$1440^0,c
  7692  0036CA                     l5077:
  7693  0036CA  C00B  F005         	movff	_isspace$1440,?_isspace
  7694  0036CE  6A06               	clrf	(?_isspace+1)^0,c
  7695  0036D0  0012               	return		;funcret
  7696  0036D2                     __end_of_isspace:
  7697                           	callstack 0
  7698                           
  7699 ;; *************** function _isdigit *****************
  7700 ;; Defined at:
  7701 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;  c               2    4[COMRAM] int 
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;		None
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  2    4[COMRAM] int 
  7708 ;; Registers used:
  7709 ;;		wreg, status,2, status,0
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7715 ;;      Params:         2       0       0       0       0       0       0       0       0
  7716 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7717 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7718 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7719 ;;Total ram usage:        6 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; Hardware stack levels required when called:    2
  7722 ;; This function calls:
  7723 ;;		Nothing
  7724 ;; This function is called by:
  7725 ;;		_vfpfcnvrt
  7726 ;;		_atoi
  7727 ;; This function uses a non-reentrant model
  7728 ;;
  7729                           
  7730                           	psect	text28
  7731  00380E                     __ptext28:
  7732                           	callstack 0
  7733  00380E                     _isdigit:
  7734                           	callstack 25
  7735  00380E  0ED0               	movlw	208
  7736  003810  6E07               	movwf	??_isdigit^0,c
  7737  003812  0EFF               	movlw	255
  7738  003814  6E08               	movwf	(??_isdigit+1)^0,c
  7739  003816  C005  F009         	movff	isdigit@c,??_isdigit+2
  7740  00381A  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  7741  00381E  5007               	movf	??_isdigit^0,w,c
  7742  003820  2609               	addwf	(??_isdigit+2)^0,f,c
  7743  003822  5008               	movf	(??_isdigit+1)^0,w,c
  7744  003824  220A               	addwfc	(??_isdigit+3)^0,f,c
  7745  003826  500A               	movf	(??_isdigit+3)^0,w,c
  7746  003828  E10A               	bnz	u6400
  7747  00382A  0E0A               	movlw	10
  7748  00382C  5C09               	subwf	(??_isdigit+2)^0,w,c
  7749  00382E  A0D8               	btfss	status,0,c
  7750  003830  EF1C  F01C         	goto	u6401
  7751  003834  EF1F  F01C         	goto	u6400
  7752  003838                     u6401:
  7753  003838  0E01               	movlw	1
  7754  00383A  EF20  F01C         	goto	u6410
  7755  00383E                     u6400:
  7756  00383E  0E00               	movlw	0
  7757  003840                     u6410:
  7758  003840  6E05               	movwf	?_isdigit^0,c
  7759  003842  6A06               	clrf	(?_isdigit+1)^0,c
  7760  003844  0012               	return		;funcret
  7761  003846                     __end_of_isdigit:
  7762                           	callstack 0
  7763                           
  7764 ;; *************** function ___wmul *****************
  7765 ;; Defined at:
  7766 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  7767 ;; Parameters:    Size  Location     Type
  7768 ;;  multiplier      2    4[COMRAM] unsigned int 
  7769 ;;  multiplicand    2    6[COMRAM] unsigned int 
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;  product         2    8[COMRAM] unsigned int 
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  2    4[COMRAM] unsigned int 
  7774 ;; Registers used:
  7775 ;;		wreg, status,2, status,0, prodl, prodh
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7781 ;;      Params:         4       0       0       0       0       0       0       0       0
  7782 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7784 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7785 ;;Total ram usage:        6 bytes
  7786 ;; Hardware stack levels used:    1
  7787 ;; Hardware stack levels required when called:    2
  7788 ;; This function calls:
  7789 ;;		Nothing
  7790 ;; This function is called by:
  7791 ;;		_atoi
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           	psect	text29
  7796  003914                     __ptext29:
  7797                           	callstack 0
  7798  003914                     ___wmul:
  7799                           	callstack 24
  7800  003914  5005               	movf	___wmul@multiplier^0,w,c
  7801  003916  0207               	mulwf	___wmul@multiplicand^0,c
  7802  003918  CFF3 F009          	movff	prodl,___wmul@product
  7803  00391C  CFF4 F00A          	movff	prodh,___wmul@product+1
  7804  003920  5005               	movf	___wmul@multiplier^0,w,c
  7805  003922  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  7806  003924  50F3               	movf	243,w,c
  7807  003926  260A               	addwf	(___wmul@product+1)^0,f,c
  7808  003928  5006               	movf	(___wmul@multiplier+1)^0,w,c
  7809  00392A  0207               	mulwf	___wmul@multiplicand^0,c
  7810  00392C  50F3               	movf	243,w,c
  7811  00392E  260A               	addwf	(___wmul@product+1)^0,f,c
  7812  003930  C009  F005         	movff	___wmul@product,?___wmul
  7813  003934  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  7814  003938  0012               	return		;funcret
  7815  00393A                     __end_of___wmul:
  7816                           	callstack 0
  7817                           
  7818 ;; *************** function ___xxtofl *****************
  7819 ;; Defined at:
  7820 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;  sign            1    wreg     unsigned char 
  7823 ;;  val             4    4[COMRAM] long 
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;  sign            1   12[COMRAM] unsigned char 
  7826 ;;  arg             4   14[COMRAM] unsigned long 
  7827 ;;  exp             1   13[COMRAM] unsigned char 
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  4    4[COMRAM] unsigned char 
  7830 ;; Registers used:
  7831 ;;		wreg, status,2, status,0
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7837 ;;      Params:         4       0       0       0       0       0       0       0       0
  7838 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7839 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7840 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7841 ;;Total ram usage:       14 bytes
  7842 ;; Hardware stack levels used:    1
  7843 ;; Hardware stack levels required when called:    2
  7844 ;; This function calls:
  7845 ;;		Nothing
  7846 ;; This function is called by:
  7847 ;;		_main
  7848 ;; This function uses a non-reentrant model
  7849 ;;
  7850                           
  7851                           	psect	text30
  7852  0027A2                     __ptext30:
  7853                           	callstack 0
  7854  0027A2                     ___xxtofl:
  7855                           	callstack 28
  7856                           
  7857                           ;incstack = 0
  7858                           ;___xxtofl@sign stored from wreg
  7859  0027A2  6E0D               	movwf	___xxtofl@sign^0,c
  7860  0027A4  500D               	movf	___xxtofl@sign^0,w,c
  7861  0027A6  B4D8               	btfsc	status,2,c
  7862  0027A8  EFD8  F013         	goto	u4821
  7863  0027AC  EFDA  F013         	goto	u4820
  7864  0027B0                     u4821:
  7865  0027B0  EFFC  F013         	goto	l810
  7866  0027B4                     u4820:
  7867  0027B4  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7868  0027B6  EFE1  F013         	goto	u4830
  7869  0027BA  EFDF  F013         	goto	u4831
  7870  0027BE                     u4831:
  7871  0027BE  EFFC  F013         	goto	l810
  7872  0027C2                     u4830:
  7873  0027C2  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7874  0027C6  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7875  0027CA  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7876  0027CE  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7877  0027D2  1E09               	comf	??___xxtofl^0,f,c
  7878  0027D4  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7879  0027D6  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7880  0027D8  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7881  0027DA  2A09               	incf	??___xxtofl^0,f,c
  7882  0027DC  0E00               	movlw	0
  7883  0027DE  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7884  0027E0  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7885  0027E2  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7886  0027E4  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7887  0027E8  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7888  0027EC  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7889  0027F0  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7890  0027F4  EF04  F014         	goto	l4137
  7891  0027F8                     l810:
  7892  0027F8  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7893  0027FC  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7894  002800  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7895  002804  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7896  002808                     l4137:
  7897  002808  5005               	movf	___xxtofl@val^0,w,c
  7898  00280A  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7899  00280C  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7900  00280E  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7901  002810  A4D8               	btfss	status,2,c
  7902  002812  EF0D  F014         	goto	u4841
  7903  002816  EF0F  F014         	goto	u4840
  7904  00281A                     u4841:
  7905  00281A  EF19  F014         	goto	l4143
  7906  00281E                     u4840:
  7907  00281E  0E00               	movlw	0
  7908  002820  6E05               	movwf	?___xxtofl^0,c
  7909  002822  0E00               	movlw	0
  7910  002824  6E06               	movwf	(?___xxtofl+1)^0,c
  7911  002826  0E00               	movlw	0
  7912  002828  6E07               	movwf	(?___xxtofl+2)^0,c
  7913  00282A  0E00               	movlw	0
  7914  00282C  6E08               	movwf	(?___xxtofl+3)^0,c
  7915  00282E  EFAA  F014         	goto	l813
  7916  002832                     l4143:
  7917  002832  0E96               	movlw	150
  7918  002834  6E0E               	movwf	___xxtofl@exp^0,c
  7919  002836  EF23  F014         	goto	l4147
  7920  00283A                     l4145:
  7921  00283A  2A0E               	incf	___xxtofl@exp^0,f,c
  7922  00283C  90D8               	bcf	status,0,c
  7923  00283E  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7924  002840  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7925  002842  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7926  002844  320F               	rrcf	___xxtofl@arg^0,f,c
  7927  002846                     l4147:
  7928  002846  0E00               	movlw	0
  7929  002848  140F               	andwf	___xxtofl@arg^0,w,c
  7930  00284A  6E09               	movwf	??___xxtofl^0,c
  7931  00284C  0E00               	movlw	0
  7932  00284E  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7933  002850  6E0A               	movwf	(??___xxtofl+1)^0,c
  7934  002852  0E00               	movlw	0
  7935  002854  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7936  002856  6E0B               	movwf	(??___xxtofl+2)^0,c
  7937  002858  0EFE               	movlw	254
  7938  00285A  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7939  00285C  6E0C               	movwf	(??___xxtofl+3)^0,c
  7940  00285E  5009               	movf	??___xxtofl^0,w,c
  7941  002860  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7942  002862  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7943  002864  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7944  002866  A4D8               	btfss	status,2,c
  7945  002868  EF38  F014         	goto	u4851
  7946  00286C  EF3A  F014         	goto	u4850
  7947  002870                     u4851:
  7948  002870  EF1D  F014         	goto	l4145
  7949  002874                     u4850:
  7950  002874  EF48  F014         	goto	l817
  7951  002878                     l4149:
  7952  002878  2A0E               	incf	___xxtofl@exp^0,f,c
  7953  00287A  0E01               	movlw	1
  7954  00287C  260F               	addwf	___xxtofl@arg^0,f,c
  7955  00287E  0E00               	movlw	0
  7956  002880  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7957  002882  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7958  002884  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7959  002886  90D8               	bcf	status,0,c
  7960  002888  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7961  00288A  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7962  00288C  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7963  00288E  320F               	rrcf	___xxtofl@arg^0,f,c
  7964  002890                     l817:
  7965  002890  0E00               	movlw	0
  7966  002892  140F               	andwf	___xxtofl@arg^0,w,c
  7967  002894  6E09               	movwf	??___xxtofl^0,c
  7968  002896  0E00               	movlw	0
  7969  002898  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7970  00289A  6E0A               	movwf	(??___xxtofl+1)^0,c
  7971  00289C  0E00               	movlw	0
  7972  00289E  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7973  0028A0  6E0B               	movwf	(??___xxtofl+2)^0,c
  7974  0028A2  0EFF               	movlw	255
  7975  0028A4  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7976  0028A6  6E0C               	movwf	(??___xxtofl+3)^0,c
  7977  0028A8  5009               	movf	??___xxtofl^0,w,c
  7978  0028AA  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7979  0028AC  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7980  0028AE  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7981  0028B0  A4D8               	btfss	status,2,c
  7982  0028B2  EF5D  F014         	goto	u4861
  7983  0028B6  EF5F  F014         	goto	u4860
  7984  0028BA                     u4861:
  7985  0028BA  EF3C  F014         	goto	l4149
  7986  0028BE                     u4860:
  7987  0028BE  EF67  F014         	goto	l4157
  7988  0028C2                     l4155:
  7989  0028C2  060E               	decf	___xxtofl@exp^0,f,c
  7990  0028C4  90D8               	bcf	status,0,c
  7991  0028C6  360F               	rlcf	___xxtofl@arg^0,f,c
  7992  0028C8  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  7993  0028CA  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  7994  0028CC  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  7995  0028CE                     l4157:
  7996  0028CE  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  7997  0028D0  EF6C  F014         	goto	u4871
  7998  0028D4  EF6E  F014         	goto	u4870
  7999  0028D8                     u4871:
  8000  0028D8  EF76  F014         	goto	l824
  8001  0028DC                     u4870:
  8002  0028DC  0E02               	movlw	2
  8003  0028DE  600E               	cpfslt	___xxtofl@exp^0,c
  8004  0028E0  EF74  F014         	goto	u4881
  8005  0028E4  EF76  F014         	goto	u4880
  8006  0028E8                     u4881:
  8007  0028E8  EF61  F014         	goto	l4155
  8008  0028EC                     u4880:
  8009  0028EC                     l824:
  8010  0028EC  B00E               	btfsc	___xxtofl@exp^0,0,c
  8011  0028EE  EF7B  F014         	goto	u4891
  8012  0028F2  EF7D  F014         	goto	u4890
  8013  0028F6                     u4891:
  8014  0028F6  EF7E  F014         	goto	l4163
  8015  0028FA                     u4890:
  8016  0028FA  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  8017  0028FC                     l4163:
  8018  0028FC  90D8               	bcf	status,0,c
  8019  0028FE  320E               	rrcf	___xxtofl@exp^0,f,c
  8020  002900  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  8021  002904  6A0A               	clrf	(??___xxtofl+1)^0,c
  8022  002906  6A0B               	clrf	(??___xxtofl+2)^0,c
  8023  002908  6A0C               	clrf	(??___xxtofl+3)^0,c
  8024  00290A  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  8025  00290E  6A0B               	clrf	(??___xxtofl+2)^0,c
  8026  002910  6A0A               	clrf	(??___xxtofl+1)^0,c
  8027  002912  6A09               	clrf	??___xxtofl^0,c
  8028  002914  5009               	movf	??___xxtofl^0,w,c
  8029  002916  120F               	iorwf	___xxtofl@arg^0,f,c
  8030  002918  500A               	movf	(??___xxtofl+1)^0,w,c
  8031  00291A  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  8032  00291C  500B               	movf	(??___xxtofl+2)^0,w,c
  8033  00291E  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  8034  002920  500C               	movf	(??___xxtofl+3)^0,w,c
  8035  002922  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  8036  002924  500D               	movf	___xxtofl@sign^0,w,c
  8037  002926  B4D8               	btfsc	status,2,c
  8038  002928  EF98  F014         	goto	u4901
  8039  00292C  EF9A  F014         	goto	u4900
  8040  002930                     u4901:
  8041  002930  EFA2  F014         	goto	l4173
  8042  002934                     u4900:
  8043  002934  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8044  002936  EFA1  F014         	goto	u4910
  8045  00293A  EF9F  F014         	goto	u4911
  8046  00293E                     u4911:
  8047  00293E  EFA2  F014         	goto	l4173
  8048  002942                     u4910:
  8049  002942  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  8050  002944                     l4173:
  8051  002944  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  8052  002948  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  8053  00294C  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  8054  002950  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  8055  002954                     l813:
  8056  002954  0012               	return		;funcret
  8057  002956                     __end_of___xxtofl:
  8058                           	callstack 0
  8059                           
  8060 ;; *************** function _LCD_Init *****************
  8061 ;; Defined at:
  8062 ;;		line 6 in file "LCD_Libreria.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;		None
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;		None
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  1    wreg      void 
  8069 ;; Registers used:
  8070 ;;		wreg, status,2, status,0, cstack
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8076 ;;      Params:         0       0       0       0       0       0       0       0       0
  8077 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8078 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8079 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8080 ;;Total ram usage:        1 bytes
  8081 ;; Hardware stack levels used:    1
  8082 ;; Hardware stack levels required when called:    3
  8083 ;; This function calls:
  8084 ;;		_LCD_Comando
  8085 ;; This function is called by:
  8086 ;;		_main
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           	psect	text31
  8091  0035D8                     __ptext31:
  8092                           	callstack 0
  8093  0035D8                     _LCD_Init:
  8094                           	callstack 27
  8095  0035D8                     
  8096                           ;LCD_Libreria.c: 7:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
  8097  0035D8  0E62               	movlw	98
  8098  0035DA  6E07               	movwf	??_LCD_Init^0,c
  8099  0035DC  0E66               	movlw	102
  8100  0035DE                     u7277:
  8101  0035DE  2EE8               	decfsz	wreg,f,c
  8102  0035E0  D7FE               	bra	u7277
  8103  0035E2  2E07               	decfsz	??_LCD_Init^0,f,c
  8104  0035E4  D7FC               	bra	u7277
  8105  0035E6                     
  8106                           ;LCD_Libreria.c: 8:     TRISD = 0x00;
  8107  0035E6  0E00               	movlw	0
  8108  0035E8  6E95               	movwf	149,c	;volatile
  8109  0035EA                     
  8110                           ;LCD_Libreria.c: 9:     LCD_Comando(0x30);
  8111  0035EA  0E30               	movlw	48
  8112  0035EC  ECEB  F019         	call	_LCD_Comando
  8113  0035F0                     
  8114                           ;LCD_Libreria.c: 10:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8115  0035F0  0E21               	movlw	33
  8116  0035F2  6E07               	movwf	??_LCD_Init^0,c
  8117  0035F4  0E76               	movlw	118
  8118  0035F6                     u7287:
  8119  0035F6  2EE8               	decfsz	wreg,f,c
  8120  0035F8  D7FE               	bra	u7287
  8121  0035FA  2E07               	decfsz	??_LCD_Init^0,f,c
  8122  0035FC  D7FC               	bra	u7287
  8123  0035FE  D000               	nop2	
  8124  003600                     
  8125                           ;LCD_Libreria.c: 11:     LCD_Comando(0x30);
  8126  003600  0E30               	movlw	48
  8127  003602  ECEB  F019         	call	_LCD_Comando
  8128  003606                     
  8129                           ;LCD_Libreria.c: 12:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  8130  003606  0EA6               	movlw	166
  8131  003608                     u7297:
  8132  003608  2EE8               	decfsz	wreg,f,c
  8133  00360A  D7FE               	bra	u7297
  8134  00360C  D000               	nop2	
  8135  00360E                     
  8136                           ;LCD_Libreria.c: 13:     LCD_Comando(0x32);
  8137  00360E  0E32               	movlw	50
  8138  003610  ECEB  F019         	call	_LCD_Comando
  8139  003614                     
  8140                           ;LCD_Libreria.c: 14:     LCD_Comando(0x28);
  8141  003614  0E28               	movlw	40
  8142  003616  ECEB  F019         	call	_LCD_Comando
  8143  00361A                     
  8144                           ;LCD_Libreria.c: 15:     LCD_Comando(0x0C);
  8145  00361A  0E0C               	movlw	12
  8146  00361C  ECEB  F019         	call	_LCD_Comando
  8147  003620                     
  8148                           ;LCD_Libreria.c: 16:     LCD_Comando(0x01);
  8149  003620  0E01               	movlw	1
  8150  003622  ECEB  F019         	call	_LCD_Comando
  8151  003626                     
  8152                           ;LCD_Libreria.c: 17:     LCD_Comando(0x06);
  8153  003626  0E06               	movlw	6
  8154  003628  ECEB  F019         	call	_LCD_Comando
  8155  00362C  0012               	return		;funcret
  8156  00362E                     __end_of_LCD_Init:
  8157                           	callstack 0
  8158                           
  8159 ;; *************** function _LCD_Comando *****************
  8160 ;; Defined at:
  8161 ;;		line 20 in file "LCD_Libreria.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;  cmd             1    wreg     unsigned char 
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;  cmd             1    5[COMRAM] unsigned char 
  8166 ;; Return value:  Size  Location     Type
  8167 ;;                  1    wreg      void 
  8168 ;; Registers used:
  8169 ;;		wreg, status,2, status,0
  8170 ;; Tracked objects:
  8171 ;;		On entry : 0/0
  8172 ;;		On exit  : 0/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8175 ;;      Params:         0       0       0       0       0       0       0       0       0
  8176 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8177 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8178 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8179 ;;Total ram usage:        2 bytes
  8180 ;; Hardware stack levels used:    1
  8181 ;; Hardware stack levels required when called:    2
  8182 ;; This function calls:
  8183 ;;		Nothing
  8184 ;; This function is called by:
  8185 ;;		_LCD_Init
  8186 ;;		_LCD_XY
  8187 ;; This function uses a non-reentrant model
  8188 ;;
  8189                           
  8190                           	psect	text32
  8191  0033D6                     __ptext32:
  8192                           	callstack 0
  8193  0033D6                     _LCD_Comando:
  8194                           	callstack 27
  8195                           
  8196                           ;incstack = 0
  8197                           ;LCD_Comando@cmd stored from wreg
  8198  0033D6  6E06               	movwf	LCD_Comando@cmd^0,c
  8199  0033D8                     
  8200                           ;LCD_Libreria.c: 22:     LATD = (LATD&0X0F) | (cmd&0xF0);
  8201  0033D8  C006  F005         	movff	LCD_Comando@cmd,??_LCD_Comando
  8202  0033DC  0EF0               	movlw	240
  8203  0033DE  1605               	andwf	??_LCD_Comando^0,f,c
  8204  0033E0  508C               	movf	140,w,c	;volatile
  8205  0033E2  0B0F               	andlw	15
  8206  0033E4  1005               	iorwf	??_LCD_Comando^0,w,c
  8207  0033E6  6E8C               	movwf	140,c	;volatile
  8208  0033E8                     
  8209                           ;LCD_Libreria.c: 39:     LATDbits.LATD2 = 0;
  8210  0033E8  948C               	bcf	140,2,c	;volatile
  8211  0033EA                     
  8212                           ;LCD_Libreria.c: 40:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8213  0033EA  0E07               	movlw	7
  8214  0033EC  6E05               	movwf	??_LCD_Comando^0,c
  8215  0033EE  0E7D               	movlw	125
  8216  0033F0                     u7307:
  8217  0033F0  2EE8               	decfsz	wreg,f,c
  8218  0033F2  D7FE               	bra	u7307
  8219  0033F4  2E05               	decfsz	??_LCD_Comando^0,f,c
  8220  0033F6  D7FC               	bra	u7307
  8221  0033F8  F000               	nop	
  8222  0033FA                     
  8223                           ;LCD_Libreria.c: 41:     LATDbits.LATD3 = 1;
  8224  0033FA  868C               	bsf	140,3,c	;volatile
  8225  0033FC                     
  8226                           ;LCD_Libreria.c: 42:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8227  0033FC  0E07               	movlw	7
  8228  0033FE  6E05               	movwf	??_LCD_Comando^0,c
  8229  003400  0E7D               	movlw	125
  8230  003402                     u7317:
  8231  003402  2EE8               	decfsz	wreg,f,c
  8232  003404  D7FE               	bra	u7317
  8233  003406  2E05               	decfsz	??_LCD_Comando^0,f,c
  8234  003408  D7FC               	bra	u7317
  8235  00340A  F000               	nop	
  8236  00340C                     
  8237                           ;LCD_Libreria.c: 43:     LATDbits.LATD3 = 0;
  8238  00340C  968C               	bcf	140,3,c	;volatile
  8239                           
  8240                           ;LCD_Libreria.c: 45:     LATD &= 0X0F;
  8241  00340E  0E0F               	movlw	15
  8242  003410  168C               	andwf	140,f,c	;volatile
  8243                           
  8244                           ;LCD_Libreria.c: 46:     LATD |= ((cmd&0x0F)<<4);
  8245  003412  C006  F005         	movff	LCD_Comando@cmd,??_LCD_Comando
  8246  003416  0E0F               	movlw	15
  8247  003418  1605               	andwf	??_LCD_Comando^0,f,c
  8248  00341A  3805               	swapf	??_LCD_Comando^0,w,c
  8249  00341C  0BF0               	andlw	240
  8250  00341E  128C               	iorwf	140,f,c	;volatile
  8251  003420                     
  8252                           ;LCD_Libreria.c: 56:     LATDbits.LATD2 = 0;
  8253  003420  948C               	bcf	140,2,c	;volatile
  8254  003422                     
  8255                           ;LCD_Libreria.c: 57:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8256  003422  0E07               	movlw	7
  8257  003424  6E05               	movwf	??_LCD_Comando^0,c
  8258  003426  0E7D               	movlw	125
  8259  003428                     u7327:
  8260  003428  2EE8               	decfsz	wreg,f,c
  8261  00342A  D7FE               	bra	u7327
  8262  00342C  2E05               	decfsz	??_LCD_Comando^0,f,c
  8263  00342E  D7FC               	bra	u7327
  8264  003430  F000               	nop	
  8265  003432                     
  8266                           ;LCD_Libreria.c: 58:     LATDbits.LATD3 = 1;
  8267  003432  868C               	bsf	140,3,c	;volatile
  8268  003434                     
  8269                           ;LCD_Libreria.c: 59:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8270  003434  0E07               	movlw	7
  8271  003436  6E05               	movwf	??_LCD_Comando^0,c
  8272  003438  0E7D               	movlw	125
  8273  00343A                     u7337:
  8274  00343A  2EE8               	decfsz	wreg,f,c
  8275  00343C  D7FE               	bra	u7337
  8276  00343E  2E05               	decfsz	??_LCD_Comando^0,f,c
  8277  003440  D7FC               	bra	u7337
  8278  003442  F000               	nop	
  8279  003444                     
  8280                           ;LCD_Libreria.c: 60:     LATDbits.LATD3 = 0;
  8281  003444  968C               	bcf	140,3,c	;volatile
  8282  003446  0012               	return		;funcret
  8283  003448                     __end_of_LCD_Comando:
  8284                           	callstack 0
  8285                           
  8286 ;; *************** function _LCD_Cadena *****************
  8287 ;; Defined at:
  8288 ;;		line 92 in file "LCD_Libreria.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;  dat             2    6[COMRAM] PTR unsigned char 
  8291 ;;		 -> STR_1(14), 
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;		None
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  1    wreg      void 
  8296 ;; Registers used:
  8297 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8303 ;;      Params:         2       0       0       0       0       0       0       0       0
  8304 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8306 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8307 ;;Total ram usage:        2 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:    3
  8310 ;; This function calls:
  8311 ;;		_LCD_Caracter
  8312 ;; This function is called by:
  8313 ;;		_main
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           	psect	text33
  8318  00387C                     __ptext33:
  8319                           	callstack 0
  8320  00387C                     _LCD_Cadena:
  8321                           	callstack 27
  8322  00387C                     
  8323                           ;LCD_Libreria.c: 95:     while(*dat != '\0'){
  8324  00387C  EF4A  F01C         	goto	l4101
  8325  003880                     l4097:
  8326                           
  8327                           ;LCD_Libreria.c: 96:         LCD_Caracter(*dat);
  8328  003880  C007  FFF6         	movff	LCD_Cadena@dat,tblptrl
  8329  003884  C008  FFF7         	movff	LCD_Cadena@dat+1,tblptrh
  8330  003888                     	if	0	;tblptru may be non-zero
  8331  003888                     	endif
  8332  003888                     	if	0	;tblptru may be non-zero
  8333  003888                     	endif
  8334  003888  0008               	tblrd		*
  8335  00388A  50F5               	movf	tablat,w,c
  8336  00388C  EC24  F01A         	call	_LCD_Caracter
  8337  003890                     
  8338                           ;LCD_Libreria.c: 97:         dat++;
  8339  003890  4A07               	infsnz	LCD_Cadena@dat^0,f,c
  8340  003892  2A08               	incf	(LCD_Cadena@dat+1)^0,f,c
  8341  003894                     l4101:
  8342                           
  8343                           ;LCD_Libreria.c: 95:     while(*dat != '\0'){
  8344  003894  C007  FFF6         	movff	LCD_Cadena@dat,tblptrl
  8345  003898  C008  FFF7         	movff	LCD_Cadena@dat+1,tblptrh
  8346  00389C                     	if	0	;tblptru may be non-zero
  8347  00389C                     	endif
  8348  00389C                     	if	0	;tblptru may be non-zero
  8349  00389C                     	endif
  8350  00389C  0008               	tblrd		*
  8351  00389E  50F5               	movf	tablat,w,c
  8352  0038A0  0900               	iorlw	0
  8353  0038A2  A4D8               	btfss	status,2,c
  8354  0038A4  EF56  F01C         	goto	u4781
  8355  0038A8  EF58  F01C         	goto	u4780
  8356  0038AC                     u4781:
  8357  0038AC  EF40  F01C         	goto	l4097
  8358  0038B0                     u4780:
  8359  0038B0  0012               	return		;funcret
  8360  0038B2                     __end_of_LCD_Cadena:
  8361                           	callstack 0
  8362                           
  8363 ;; *************** function _LCD_Caracter *****************
  8364 ;; Defined at:
  8365 ;;		line 72 in file "LCD_Libreria.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;  data            1    wreg     unsigned char 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  data            1    5[COMRAM] unsigned char 
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		wreg, status,2, status,0
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8379 ;;      Params:         0       0       0       0       0       0       0       0       0
  8380 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8381 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8382 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8383 ;;Total ram usage:        2 bytes
  8384 ;; Hardware stack levels used:    1
  8385 ;; Hardware stack levels required when called:    2
  8386 ;; This function calls:
  8387 ;;		Nothing
  8388 ;; This function is called by:
  8389 ;;		_LCD_Cadena
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           	psect	text34
  8394  003448                     __ptext34:
  8395                           	callstack 0
  8396  003448                     _LCD_Caracter:
  8397                           	callstack 27
  8398                           
  8399                           ;incstack = 0
  8400                           ;LCD_Caracter@data stored from wreg
  8401  003448  6E06               	movwf	LCD_Caracter@data^0,c
  8402  00344A                     
  8403                           ;LCD_Libreria.c: 73:     LATD = (LATD&0X0F) | (data&0xF0);
  8404  00344A  C006  F005         	movff	LCD_Caracter@data,??_LCD_Caracter
  8405  00344E  0EF0               	movlw	240
  8406  003450  1605               	andwf	??_LCD_Caracter^0,f,c
  8407  003452  508C               	movf	140,w,c	;volatile
  8408  003454  0B0F               	andlw	15
  8409  003456  1005               	iorwf	??_LCD_Caracter^0,w,c
  8410  003458  6E8C               	movwf	140,c	;volatile
  8411  00345A                     
  8412                           ;LCD_Libreria.c: 75:     LATDbits.LATD2 = 1;
  8413  00345A  848C               	bsf	140,2,c	;volatile
  8414  00345C                     
  8415                           ;LCD_Libreria.c: 76:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8416  00345C  0E07               	movlw	7
  8417  00345E  6E05               	movwf	??_LCD_Caracter^0,c
  8418  003460  0E7D               	movlw	125
  8419  003462                     u7347:
  8420  003462  2EE8               	decfsz	wreg,f,c
  8421  003464  D7FE               	bra	u7347
  8422  003466  2E05               	decfsz	??_LCD_Caracter^0,f,c
  8423  003468  D7FC               	bra	u7347
  8424  00346A  F000               	nop	
  8425  00346C                     
  8426                           ;LCD_Libreria.c: 77:     LATDbits.LATD3 = 1;
  8427  00346C  868C               	bsf	140,3,c	;volatile
  8428  00346E                     
  8429                           ;LCD_Libreria.c: 78:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8430  00346E  0E07               	movlw	7
  8431  003470  6E05               	movwf	??_LCD_Caracter^0,c
  8432  003472  0E7D               	movlw	125
  8433  003474                     u7357:
  8434  003474  2EE8               	decfsz	wreg,f,c
  8435  003476  D7FE               	bra	u7357
  8436  003478  2E05               	decfsz	??_LCD_Caracter^0,f,c
  8437  00347A  D7FC               	bra	u7357
  8438  00347C  F000               	nop	
  8439  00347E                     
  8440                           ;LCD_Libreria.c: 79:     LATDbits.LATD3 = 0;
  8441  00347E  968C               	bcf	140,3,c	;volatile
  8442                           
  8443                           ;LCD_Libreria.c: 81:     LATD &= 0X0F;
  8444  003480  0E0F               	movlw	15
  8445  003482  168C               	andwf	140,f,c	;volatile
  8446                           
  8447                           ;LCD_Libreria.c: 82:     LATD |= ((data&0x0F)<<4);
  8448  003484  C006  F005         	movff	LCD_Caracter@data,??_LCD_Caracter
  8449  003488  0E0F               	movlw	15
  8450  00348A  1605               	andwf	??_LCD_Caracter^0,f,c
  8451  00348C  3805               	swapf	??_LCD_Caracter^0,w,c
  8452  00348E  0BF0               	andlw	240
  8453  003490  128C               	iorwf	140,f,c	;volatile
  8454  003492                     
  8455                           ;LCD_Libreria.c: 84:     LATDbits.LATD2 = 1;
  8456  003492  848C               	bsf	140,2,c	;volatile
  8457  003494                     
  8458                           ;LCD_Libreria.c: 85:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8459  003494  0E07               	movlw	7
  8460  003496  6E05               	movwf	??_LCD_Caracter^0,c
  8461  003498  0E7D               	movlw	125
  8462  00349A                     u7367:
  8463  00349A  2EE8               	decfsz	wreg,f,c
  8464  00349C  D7FE               	bra	u7367
  8465  00349E  2E05               	decfsz	??_LCD_Caracter^0,f,c
  8466  0034A0  D7FC               	bra	u7367
  8467  0034A2  F000               	nop	
  8468  0034A4                     
  8469                           ;LCD_Libreria.c: 86:     LATDbits.LATD3 = 1;
  8470  0034A4  868C               	bsf	140,3,c	;volatile
  8471  0034A6                     
  8472                           ;LCD_Libreria.c: 87:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8473  0034A6  0E07               	movlw	7
  8474  0034A8  6E05               	movwf	??_LCD_Caracter^0,c
  8475  0034AA  0E7D               	movlw	125
  8476  0034AC                     u7377:
  8477  0034AC  2EE8               	decfsz	wreg,f,c
  8478  0034AE  D7FE               	bra	u7377
  8479  0034B0  2E05               	decfsz	??_LCD_Caracter^0,f,c
  8480  0034B2  D7FC               	bra	u7377
  8481  0034B4  F000               	nop	
  8482  0034B6                     
  8483                           ;LCD_Libreria.c: 88:     LATDbits.LATD3 = 0;
  8484  0034B6  968C               	bcf	140,3,c	;volatile
  8485  0034B8  0012               	return		;funcret
  8486  0034BA                     __end_of_LCD_Caracter:
  8487                           	callstack 0
  8488                           
  8489 ;; *************** function _Int_Init *****************
  8490 ;; Defined at:
  8491 ;;		line 10 in file "Interrupcion.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;		None
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;		None
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  1    wreg      void 
  8498 ;; Registers used:
  8499 ;;		None
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8505 ;;      Params:         0       0       0       0       0       0       0       0       0
  8506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8507 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8508 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8509 ;;Total ram usage:        0 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; Hardware stack levels required when called:    2
  8512 ;; This function calls:
  8513 ;;		Nothing
  8514 ;; This function is called by:
  8515 ;;		_main
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519                           	psect	text35
  8520  003994                     __ptext35:
  8521                           	callstack 0
  8522  003994                     _Int_Init:
  8523                           	callstack 28
  8524  003994                     
  8525                           ;Interrupcion.c: 19:     RCONbits.IPEN = 1;
  8526  003994  8ED0               	bsf	208,7,c	;volatile
  8527                           
  8528                           ;Interrupcion.c: 21:     INTCONbits.GIEL = 1;
  8529  003996  8CF2               	bsf	242,6,c	;volatile
  8530                           
  8531                           ;Interrupcion.c: 22:     INTCONbits.GIEH = 1;
  8532  003998  8EF2               	bsf	242,7,c	;volatile
  8533  00399A  0012               	return		;funcret
  8534  00399C                     __end_of_Int_Init:
  8535                           	callstack 0
  8536                           
  8537 ;; *************** function _EUSART_Init *****************
  8538 ;; Defined at:
  8539 ;;		line 6 in file "EUSART_Libreria.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;  baud            1    wreg     unsigned char 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;  baud            1    4[COMRAM] unsigned char 
  8544 ;; Return value:  Size  Location     Type
  8545 ;;                  1    wreg      void 
  8546 ;; Registers used:
  8547 ;;		wreg
  8548 ;; Tracked objects:
  8549 ;;		On entry : 0/0
  8550 ;;		On exit  : 0/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8553 ;;      Params:         0       0       0       0       0       0       0       0       0
  8554 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8555 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8556 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8557 ;;Total ram usage:        1 bytes
  8558 ;; Hardware stack levels used:    1
  8559 ;; Hardware stack levels required when called:    2
  8560 ;; This function calls:
  8561 ;;		Nothing
  8562 ;; This function is called by:
  8563 ;;		_main
  8564 ;; This function uses a non-reentrant model
  8565 ;;
  8566                           
  8567                           	psect	text36
  8568  003960                     __ptext36:
  8569                           	callstack 0
  8570  003960                     _EUSART_Init:
  8571                           	callstack 28
  8572                           
  8573                           ;incstack = 0
  8574                           ;EUSART_Init@baud stored from wreg
  8575  003960  6E05               	movwf	EUSART_Init@baud^0,c
  8576  003962                     
  8577                           ;EUSART_Libreria.c: 7:     SPBRG = baud;
  8578  003962  C005  FFAF         	movff	EUSART_Init@baud,4015	;volatile
  8579  003966                     
  8580                           ;EUSART_Libreria.c: 8:     BAUDCONbits.BRG16 = 0;
  8581  003966  96B8               	bcf	184,3,c	;volatile
  8582  003968                     
  8583                           ;EUSART_Libreria.c: 9:     TXSTAbits.BRGH = 0;
  8584  003968  94AC               	bcf	172,2,c	;volatile
  8585  00396A                     
  8586                           ;EUSART_Libreria.c: 10:     TXSTAbits.SYNC = 0;
  8587  00396A  98AC               	bcf	172,4,c	;volatile
  8588  00396C                     
  8589                           ;EUSART_Libreria.c: 11:     RCSTAbits.SPEN = 1;
  8590  00396C  8EAB               	bsf	171,7,c	;volatile
  8591  00396E                     
  8592                           ;EUSART_Libreria.c: 12:     TXSTAbits.TX9 = 0;
  8593  00396E  9CAC               	bcf	172,6,c	;volatile
  8594  003970                     
  8595                           ;EUSART_Libreria.c: 14:     TXSTAbits.TXEN = 1;
  8596  003970  8AAC               	bsf	172,5,c	;volatile
  8597  003972                     
  8598                           ;EUSART_Libreria.c: 16:     RCSTAbits.RX9 = 0;
  8599  003972  9CAB               	bcf	171,6,c	;volatile
  8600  003974                     
  8601                           ;EUSART_Libreria.c: 17:     RCSTAbits.CREN = 1;
  8602  003974  88AB               	bsf	171,4,c	;volatile
  8603  003976                     
  8604                           ;EUSART_Libreria.c: 18:     PIR1bits.RCIF = 0;
  8605  003976  9A9E               	bcf	158,5,c	;volatile
  8606  003978                     
  8607                           ;EUSART_Libreria.c: 19:     PIE1bits.RCIE = 1;
  8608  003978  8A9D               	bsf	157,5,c	;volatile
  8609  00397A                     
  8610                           ;EUSART_Libreria.c: 20:     IPR1bits.RCIP = 1;
  8611  00397A  8A9F               	bsf	159,5,c	;volatile
  8612  00397C  0012               	return		;funcret
  8613  00397E                     __end_of_EUSART_Init:
  8614                           	callstack 0
  8615                           
  8616 ;; *************** function _EUSART_Cadena *****************
  8617 ;; Defined at:
  8618 ;;		line 23 in file "EUSART_Libreria.c"
  8619 ;; Parameters:    Size  Location     Type
  8620 ;;  dat             2    5[COMRAM] PTR unsigned char 
  8621 ;;		 -> datos_adc(16), 
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;		None
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      void 
  8626 ;; Registers used:
  8627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8633 ;;      Params:         2       0       0       0       0       0       0       0       0
  8634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8636 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8637 ;;Total ram usage:        2 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; Hardware stack levels required when called:    3
  8640 ;; This function calls:
  8641 ;;		_EUSART_Tx
  8642 ;; This function is called by:
  8643 ;;		_main
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           	psect	text37
  8648  0038E4                     __ptext37:
  8649                           	callstack 0
  8650  0038E4                     _EUSART_Cadena:
  8651                           	callstack 27
  8652  0038E4                     
  8653                           ;EUSART_Libreria.c: 24:     while(*dat != '\0'){
  8654  0038E4  EF7D  F01C         	goto	l4129
  8655  0038E8                     l4125:
  8656                           
  8657                           ;EUSART_Libreria.c: 25:         EUSART_Tx(*dat);
  8658  0038E8  C006  FFD9         	movff	EUSART_Cadena@dat,fsr2l
  8659  0038EC  C007  FFDA         	movff	EUSART_Cadena@dat+1,fsr2h
  8660  0038F0  50DF               	movf	indf2,w,c
  8661  0038F2  ECBF  F01C         	call	_EUSART_Tx
  8662  0038F6                     
  8663                           ;EUSART_Libreria.c: 26:         dat++;
  8664  0038F6  4A06               	infsnz	EUSART_Cadena@dat^0,f,c
  8665  0038F8  2A07               	incf	(EUSART_Cadena@dat+1)^0,f,c
  8666  0038FA                     l4129:
  8667                           
  8668                           ;EUSART_Libreria.c: 24:     while(*dat != '\0'){
  8669  0038FA  C006  FFD9         	movff	EUSART_Cadena@dat,fsr2l
  8670  0038FE  C007  FFDA         	movff	EUSART_Cadena@dat+1,fsr2h
  8671  003902  50DF               	movf	indf2,w,c
  8672  003904  A4D8               	btfss	status,2,c
  8673  003906  EF87  F01C         	goto	u4811
  8674  00390A  EF89  F01C         	goto	u4810
  8675  00390E                     u4811:
  8676  00390E  EF74  F01C         	goto	l4125
  8677  003912                     u4810:
  8678  003912  0012               	return		;funcret
  8679  003914                     __end_of_EUSART_Cadena:
  8680                           	callstack 0
  8681                           
  8682 ;; *************** function _EUSART_Tx *****************
  8683 ;; Defined at:
  8684 ;;		line 31 in file "EUSART_Libreria.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;  data            1    wreg     unsigned char 
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;  data            1    4[COMRAM] unsigned char 
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  1    wreg      void 
  8691 ;; Registers used:
  8692 ;;		wreg
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8698 ;;      Params:         0       0       0       0       0       0       0       0       0
  8699 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8701 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8702 ;;Total ram usage:        1 bytes
  8703 ;; Hardware stack levels used:    1
  8704 ;; Hardware stack levels required when called:    2
  8705 ;; This function calls:
  8706 ;;		Nothing
  8707 ;; This function is called by:
  8708 ;;		_EUSART_Cadena
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712                           	psect	text38
  8713  00397E                     __ptext38:
  8714                           	callstack 0
  8715  00397E                     _EUSART_Tx:
  8716                           	callstack 27
  8717                           
  8718                           ;incstack = 0
  8719                           ;EUSART_Tx@data stored from wreg
  8720  00397E  6E05               	movwf	EUSART_Tx@data^0,c
  8721  003980                     l68:
  8722  003980  A2AC               	btfss	172,1,c	;volatile
  8723  003982  EFC5  F01C         	goto	u4761
  8724  003986  EFC7  F01C         	goto	u4760
  8725  00398A                     u4761:
  8726  00398A  EFC0  F01C         	goto	l68
  8727  00398E                     u4760:
  8728  00398E                     
  8729                           ;EUSART_Libreria.c: 33:     TXREG = data;
  8730  00398E  C005  FFAD         	movff	EUSART_Tx@data,4013	;volatile
  8731  003992  0012               	return		;funcret
  8732  003994                     __end_of_EUSART_Tx:
  8733                           	callstack 0
  8734                           
  8735 ;; *************** function _ADC_Read *****************
  8736 ;; Defined at:
  8737 ;;		line 19 in file "ADC_Libreria.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;  ch              1    wreg     unsigned char 
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;  ch              1    7[COMRAM] unsigned char 
  8742 ;; Return value:  Size  Location     Type
  8743 ;;                  2    4[COMRAM] unsigned short 
  8744 ;; Registers used:
  8745 ;;		wreg, status,2, status,0
  8746 ;; Tracked objects:
  8747 ;;		On entry : 0/0
  8748 ;;		On exit  : 0/0
  8749 ;;		Unchanged: 0/0
  8750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8751 ;;      Params:         2       0       0       0       0       0       0       0       0
  8752 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8753 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8754 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8755 ;;Total ram usage:        4 bytes
  8756 ;; Hardware stack levels used:    1
  8757 ;; Hardware stack levels required when called:    2
  8758 ;; This function calls:
  8759 ;;		Nothing
  8760 ;; This function is called by:
  8761 ;;		_main
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           	psect	text39
  8766  00375C                     __ptext39:
  8767                           	callstack 0
  8768  00375C                     _ADC_Read:
  8769                           	callstack 28
  8770                           
  8771                           ;incstack = 0
  8772                           ;ADC_Read@ch stored from wreg
  8773  00375C  6E08               	movwf	ADC_Read@ch^0,c
  8774  00375E                     
  8775                           ;ADC_Libreria.c: 20:     if(ch >= 13){
  8776  00375E  0E0C               	movlw	12
  8777  003760  6408               	cpfsgt	ADC_Read@ch^0,c
  8778  003762  EFB5  F01B         	goto	u4791
  8779  003766  EFB7  F01B         	goto	u4790
  8780  00376A                     u4791:
  8781  00376A  EFB9  F01B         	goto	l4107
  8782  00376E                     u4790:
  8783  00376E                     
  8784                           ;ADC_Libreria.c: 21:         ch = 0;
  8785  00376E  0E00               	movlw	0
  8786  003770  6E08               	movwf	ADC_Read@ch^0,c
  8787  003772                     l4107:
  8788                           
  8789                           ;ADC_Libreria.c: 23:     ADCON0bits.CHS = ch;
  8790  003772  C008  F007         	movff	ADC_Read@ch,??_ADC_Read
  8791  003776  4607               	rlncf	??_ADC_Read^0,f,c
  8792  003778  4607               	rlncf	??_ADC_Read^0,f,c
  8793  00377A  50C2               	movf	194,w,c	;volatile
  8794  00377C  1807               	xorwf	??_ADC_Read^0,w,c
  8795  00377E  0BC3               	andlw	-61
  8796  003780  1807               	xorwf	??_ADC_Read^0,w,c
  8797  003782  6EC2               	movwf	194,c	;volatile
  8798  003784                     
  8799                           ;ADC_Libreria.c: 24:     ADCON0bits.GO_NOT_DONE = 1;
  8800  003784  82C2               	bsf	194,1,c	;volatile
  8801  003786                     l149:
  8802  003786  B2C2               	btfsc	194,1,c	;volatile
  8803  003788  EFC8  F01B         	goto	u4801
  8804  00378C  EFCA  F01B         	goto	u4800
  8805  003790                     u4801:
  8806  003790  EFC3  F01B         	goto	l149
  8807  003794                     u4800:
  8808  003794                     
  8809                           ;ADC_Libreria.c: 26:     return ADRES;
  8810  003794  CFC3 F005          	movff	4035,?_ADC_Read	;volatile
  8811  003798  CFC4 F006          	movff	4036,?_ADC_Read+1	;volatile
  8812  00379C  0012               	return		;funcret
  8813  00379E                     __end_of_ADC_Read:
  8814                           	callstack 0
  8815                           
  8816 ;; *************** function _ADC_Init *****************
  8817 ;; Defined at:
  8818 ;;		line 6 in file "ADC_Libreria.c"
  8819 ;; Parameters:    Size  Location     Type
  8820 ;;		None
  8821 ;; Auto vars:     Size  Location     Type
  8822 ;;		None
  8823 ;; Return value:  Size  Location     Type
  8824 ;;                  1    wreg      void 
  8825 ;; Registers used:
  8826 ;;		wreg, status,2
  8827 ;; Tracked objects:
  8828 ;;		On entry : 0/0
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8832 ;;      Params:         0       0       0       0       0       0       0       0       0
  8833 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8834 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8835 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8836 ;;Total ram usage:        0 bytes
  8837 ;; Hardware stack levels used:    1
  8838 ;; Hardware stack levels required when called:    2
  8839 ;; This function calls:
  8840 ;;		Nothing
  8841 ;; This function is called by:
  8842 ;;		_main
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           
  8846                           	psect	text40
  8847  00393A                     __ptext40:
  8848                           	callstack 0
  8849  00393A                     _ADC_Init:
  8850                           	callstack 28
  8851  00393A                     
  8852                           ;ADC_Libreria.c: 7:     ADCON1bits.PCFG = 0b1101;
  8853  00393A  50C1               	movf	193,w,c	;volatile
  8854  00393C  0BF0               	andlw	-16
  8855  00393E  090D               	iorlw	13
  8856  003940  6EC1               	movwf	193,c	;volatile
  8857                           
  8858                           ;ADC_Libreria.c: 8:     ADCON1bits.VCFG = 0b00;
  8859  003942  0ECF               	movlw	-49
  8860  003944  16C1               	andwf	193,f,c	;volatile
  8861                           
  8862                           ;ADC_Libreria.c: 9:     ADCON0bits.CHS = 0b0000;
  8863  003946  0EC3               	movlw	-61
  8864  003948  16C2               	andwf	194,f,c	;volatile
  8865                           
  8866                           ;ADC_Libreria.c: 11:     ADCON2bits.ADCS = 0b101;
  8867  00394A  50C0               	movf	192,w,c	;volatile
  8868  00394C  0BF8               	andlw	-8
  8869  00394E  0905               	iorlw	5
  8870  003950  6EC0               	movwf	192,c	;volatile
  8871                           
  8872                           ;ADC_Libreria.c: 13:     ADCON2bits.ACQT = 0b010;
  8873  003952  50C0               	movf	192,w,c	;volatile
  8874  003954  0BC7               	andlw	-57
  8875  003956  0910               	iorlw	16
  8876  003958  6EC0               	movwf	192,c	;volatile
  8877  00395A                     
  8878                           ;ADC_Libreria.c: 15:     ADCON2bits.ADFM = 1;
  8879  00395A  8EC0               	bsf	192,7,c	;volatile
  8880  00395C                     
  8881                           ;ADC_Libreria.c: 16:     ADCON0bits.ADON = 1;
  8882  00395C  80C2               	bsf	194,0,c	;volatile
  8883  00395E  0012               	return		;funcret
  8884  003960                     __end_of_ADC_Init:
  8885                           	callstack 0
  8886                           
  8887 ;; *************** function _INT1_ISR *****************
  8888 ;; Defined at:
  8889 ;;		line 41 in file "Interrupcion.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;		None
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;		None
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  1    wreg      void 
  8896 ;; Registers used:
  8897 ;;		None
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/0
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8903 ;;      Params:         0       0       0       0       0       0       0       0       0
  8904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8905 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8906 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8907 ;;Total ram usage:        1 bytes
  8908 ;; Hardware stack levels used:    1
  8909 ;; Hardware stack levels required when called:    1
  8910 ;; This function calls:
  8911 ;;		Nothing
  8912 ;; This function is called by:
  8913 ;;		Interrupt level 1
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917                           	psect	intcodelo
  8918  000018                     __pintcodelo:
  8919                           	callstack 0
  8920  000018                     _INT1_ISR:
  8921                           	callstack 21
  8922                           
  8923                           ;incstack = 0
  8924  000018  805A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8925  00001A  CFE0 F004          	movff	bsr,??_INT1_ISR
  8926  00001E  C004  FFE0         	movff	??_INT1_ISR,bsr
  8927  000022  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8928  000024  0010               	retfie	
  8929  000026                     __end_of_INT1_ISR:
  8930                           	callstack 0
  8931                           
  8932 ;; *************** function _RX_ISR *****************
  8933 ;; Defined at:
  8934 ;;		line 26 in file "Interrupcion.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;		None
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;		None
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      void 
  8941 ;; Registers used:
  8942 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8948 ;;      Params:         0       0       0       0       0       0       0       0       0
  8949 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8950 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8951 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8952 ;;Total ram usage:        3 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; This function calls:
  8955 ;;		Nothing
  8956 ;; This function is called by:
  8957 ;;		Interrupt level 2
  8958 ;; This function uses a non-reentrant model
  8959 ;;
  8960                           
  8961                           	psect	intcode
  8962  000008                     __pintcode:
  8963                           	callstack 0
  8964  000008                     _RX_ISR:
  8965                           	callstack 21
  8966                           
  8967                           ;incstack = 0
  8968  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8969  00000A  EDA9  F019         	call	int_func,f	;refresh shadow registers
  8970                           
  8971                           	psect	intcode_body
  8972  003352                     __pintcode_body:
  8973                           	callstack 21
  8974  003352                     int_func:
  8975                           	callstack 21
  8976  003352  0006               	pop		; remove dummy address from shadow register refresh
  8977  003354  CFD9 F002          	movff	fsr2l,??_RX_ISR+1
  8978  003358  CFDA F003          	movff	fsr2h,??_RX_ISR+2
  8979  00335C                     
  8980                           ;Interrupcion.c: 27:     if(RCREG == '1' | RCREG == '0'){
  8981  00335C  0E30               	movlw	48
  8982  00335E  18AE               	xorwf	174,w,c	;volatile
  8983  003360  B4D8               	btfsc	status,2,c
  8984  003362  EFB5  F019         	goto	i2u492_41
  8985  003366  EFB8  F019         	goto	i2u492_40
  8986  00336A                     i2u492_41:
  8987  00336A  0E01               	movlw	1
  8988  00336C  EFB9  F019         	goto	i2u492_42
  8989  003370                     i2u492_40:
  8990  003370  0E00               	movlw	0
  8991  003372                     i2u492_42:
  8992  003372  6E01               	movwf	??_RX_ISR^0,c
  8993  003374  0E31               	movlw	49
  8994  003376  18AE               	xorwf	174,w,c	;volatile
  8995  003378  B4D8               	btfsc	status,2,c
  8996  00337A  EFC1  F019         	goto	i2u493_41
  8997  00337E  EFC4  F019         	goto	i2u493_40
  8998  003382                     i2u493_41:
  8999  003382  0E01               	movlw	1
  9000  003384  EFC5  F019         	goto	i2u493_42
  9001  003388                     i2u493_40:
  9002  003388  0E00               	movlw	0
  9003  00338A                     i2u493_42:
  9004  00338A  1001               	iorwf	??_RX_ISR^0,w,c
  9005  00338C  A0E8               	btfss	wreg,0,c
  9006  00338E  EFCB  F019         	goto	i2u494_41
  9007  003392  EFCD  F019         	goto	i2u494_40
  9008  003396                     i2u494_41:
  9009  003396  EFD1  F019         	goto	i2l4205
  9010  00339A                     i2u494_40:
  9011  00339A                     
  9012                           ;Interrupcion.c: 28:         valor = RCREG;
  9013  00339A  CFAE F059          	movff	4014,_valor	;volatile
  9014                           
  9015                           ;Interrupcion.c: 29:     }
  9016  00339E  EFE4  F019         	goto	i2l4213
  9017  0033A2                     i2l4205:
  9018                           
  9019                           ;Interrupcion.c: 31:         datos[x] = RCREG;
  9020  0033A2  0EBC               	movlw	low _datos
  9021  0033A4  2458               	addwf	_x^0,w,c
  9022  0033A6  6ED9               	movwf	fsr2l,c
  9023  0033A8  6ADA               	clrf	fsr2h,c
  9024  0033AA  0E00               	movlw	high _datos
  9025  0033AC  22DA               	addwfc	fsr2h,f,c
  9026  0033AE  CFAE FFDF          	movff	4014,indf2	;volatile
  9027  0033B2                     
  9028                           ;Interrupcion.c: 32:         x++;
  9029  0033B2  2A58               	incf	_x^0,f,c
  9030  0033B4                     
  9031                           ;Interrupcion.c: 33:         if( x >= 17){
  9032  0033B4  0E10               	movlw	16
  9033  0033B6  6458               	cpfsgt	_x^0,c
  9034  0033B8  EFE0  F019         	goto	i2u495_41
  9035  0033BC  EFE2  F019         	goto	i2u495_40
  9036  0033C0                     i2u495_41:
  9037  0033C0  EFE4  F019         	goto	i2l4213
  9038  0033C4                     i2u495_40:
  9039  0033C4                     
  9040                           ;Interrupcion.c: 34:             x = 0;
  9041  0033C4  0E00               	movlw	0
  9042  0033C6  6E58               	movwf	_x^0,c
  9043  0033C8                     i2l4213:
  9044                           
  9045                           ;Interrupcion.c: 38:     PIR1bits.RCIF = 0;
  9046  0033C8  9A9E               	bcf	158,5,c	;volatile
  9047  0033CA  C003  FFDA         	movff	??_RX_ISR+2,fsr2h
  9048  0033CE  C002  FFD9         	movff	??_RX_ISR+1,fsr2l
  9049  0033D2  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9050  0033D4  0011               	retfie		f
  9051  0033D6                     __end_of_RX_ISR:
  9052                           	callstack 0
  9053                           
  9054                           	psect	rparam
  9055  0000                     
  9056                           	psect	temp
  9057  00005A                     btemp:
  9058                           	callstack 0
  9059  00005A                     	ds	1
  9060  0000                     int$flags	set	btemp
  9061  0000                     wtemp8	set	btemp+1
  9062  0000                     ttemp5	set	btemp+1
  9063  0000                     ttemp6	set	btemp+4
  9064  0000                     ttemp7	set	btemp+8
  9065                           
  9066                           	psect	idloc
  9067                           
  9068                           ;Config register IDLOC0 @ 0x200000
  9069                           ;	unspecified, using default values
  9070  200000                     	org	2097152
  9071  200000  FF                 	db	255
  9072                           
  9073                           ;Config register IDLOC1 @ 0x200001
  9074                           ;	unspecified, using default values
  9075  200001                     	org	2097153
  9076  200001  FF                 	db	255
  9077                           
  9078                           ;Config register IDLOC2 @ 0x200002
  9079                           ;	unspecified, using default values
  9080  200002                     	org	2097154
  9081  200002  FF                 	db	255
  9082                           
  9083                           ;Config register IDLOC3 @ 0x200003
  9084                           ;	unspecified, using default values
  9085  200003                     	org	2097155
  9086  200003  FF                 	db	255
  9087                           
  9088                           ;Config register IDLOC4 @ 0x200004
  9089                           ;	unspecified, using default values
  9090  200004                     	org	2097156
  9091  200004  FF                 	db	255
  9092                           
  9093                           ;Config register IDLOC5 @ 0x200005
  9094                           ;	unspecified, using default values
  9095  200005                     	org	2097157
  9096  200005  FF                 	db	255
  9097                           
  9098                           ;Config register IDLOC6 @ 0x200006
  9099                           ;	unspecified, using default values
  9100  200006                     	org	2097158
  9101  200006  FF                 	db	255
  9102                           
  9103                           ;Config register IDLOC7 @ 0x200007
  9104                           ;	unspecified, using default values
  9105  200007                     	org	2097159
  9106  200007  FF                 	db	255
  9107                           
  9108                           	psect	config
  9109                           
  9110                           ;Config register CONFIG1L @ 0x300000
  9111                           ;	PLL Prescaler Selection bits
  9112                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9113                           ;	System Clock Postscaler Selection bits
  9114                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9115                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9116                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9117  300000                     	org	3145728
  9118  300000  00                 	db	0
  9119                           
  9120                           ;Config register CONFIG1H @ 0x300001
  9121                           ;	Oscillator Selection bits
  9122                           ;	FOSC = HS, HS oscillator (HS)
  9123                           ;	Fail-Safe Clock Monitor Enable bit
  9124                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9125                           ;	Internal/External Oscillator Switchover bit
  9126                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9127  300001                     	org	3145729
  9128  300001  0C                 	db	12
  9129                           
  9130                           ;Config register CONFIG2L @ 0x300002
  9131                           ;	Power-up Timer Enable bit
  9132                           ;	PWRT = ON, PWRT enabled
  9133                           ;	Brown-out Reset Enable bits
  9134                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9135                           ;	Brown-out Reset Voltage bits
  9136                           ;	BORV = 3, Minimum setting 2.05V
  9137                           ;	USB Voltage Regulator Enable bit
  9138                           ;	VREGEN = OFF, USB voltage regulator disabled
  9139  300002                     	org	3145730
  9140  300002  18                 	db	24
  9141                           
  9142                           ;Config register CONFIG2H @ 0x300003
  9143                           ;	Watchdog Timer Enable bit
  9144                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9145                           ;	Watchdog Timer Postscale Select bits
  9146                           ;	WDTPS = 32768, 1:32768
  9147  300003                     	org	3145731
  9148  300003  1E                 	db	30
  9149                           
  9150                           ; Padding undefined space
  9151  300004                     	org	3145732
  9152  300004  FF                 	db	255
  9153                           
  9154                           ;Config register CONFIG3H @ 0x300005
  9155                           ;	CCP2 MUX bit
  9156                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9157                           ;	PORTB A/D Enable bit
  9158                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9159                           ;	Low-Power Timer 1 Oscillator Enable bit
  9160                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9161                           ;	MCLR Pin Enable bit
  9162                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9163  300005                     	org	3145733
  9164  300005  81                 	db	129
  9165                           
  9166                           ;Config register CONFIG4L @ 0x300006
  9167                           ;	Stack Full/Underflow Reset Enable bit
  9168                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  9169                           ;	Single-Supply ICSP Enable bit
  9170                           ;	LVP = ON, Single-Supply ICSP enabled
  9171                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9172                           ;	ICPRT = OFF, ICPORT disabled
  9173                           ;	Extended Instruction Set Enable bit
  9174                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9175                           ;	Background Debugger Enable bit
  9176                           ;	DEBUG = 0x1, unprogrammed default
  9177  300006                     	org	3145734
  9178  300006  84                 	db	132
  9179                           
  9180                           ; Padding undefined space
  9181  300007                     	org	3145735
  9182  300007  FF                 	db	255
  9183                           
  9184                           ;Config register CONFIG5L @ 0x300008
  9185                           ;	Code Protection bit
  9186                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9187                           ;	Code Protection bit
  9188                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9189                           ;	Code Protection bit
  9190                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9191                           ;	Code Protection bit
  9192                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9193  300008                     	org	3145736
  9194  300008  0F                 	db	15
  9195                           
  9196                           ;Config register CONFIG5H @ 0x300009
  9197                           ;	Boot Block Code Protection bit
  9198                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9199                           ;	Data EEPROM Code Protection bit
  9200                           ;	CPD = OFF, Data EEPROM is not code-protected
  9201  300009                     	org	3145737
  9202  300009  C0                 	db	192
  9203                           
  9204                           ;Config register CONFIG6L @ 0x30000A
  9205                           ;	Write Protection bit
  9206                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9207                           ;	Write Protection bit
  9208                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9209                           ;	Write Protection bit
  9210                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9211                           ;	Write Protection bit
  9212                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9213  30000A                     	org	3145738
  9214  30000A  0F                 	db	15
  9215                           
  9216                           ;Config register CONFIG6H @ 0x30000B
  9217                           ;	Configuration Register Write Protection bit
  9218                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9219                           ;	Boot Block Write Protection bit
  9220                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9221                           ;	Data EEPROM Write Protection bit
  9222                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9223  30000B                     	org	3145739
  9224  30000B  E0                 	db	224
  9225                           
  9226                           ;Config register CONFIG7L @ 0x30000C
  9227                           ;	Table Read Protection bit
  9228                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9229                           ;	Table Read Protection bit
  9230                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9231                           ;	Table Read Protection bit
  9232                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9233                           ;	Table Read Protection bit
  9234                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9235  30000C                     	org	3145740
  9236  30000C  0F                 	db	15
  9237                           
  9238                           ;Config register CONFIG7H @ 0x30000D
  9239                           ;	Boot Block Table Read Protection bit
  9240                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9241  30000D                     	org	3145741
  9242  30000D  40                 	db	64
  9243                           tosu	equ	0xFFF
  9244                           tosh	equ	0xFFE
  9245                           tosl	equ	0xFFD
  9246                           stkptr	equ	0xFFC
  9247                           pclatu	equ	0xFFB
  9248                           pclath	equ	0xFFA
  9249                           pcl	equ	0xFF9
  9250                           tblptru	equ	0xFF8
  9251                           tblptrh	equ	0xFF7
  9252                           tblptrl	equ	0xFF6
  9253                           tablat	equ	0xFF5
  9254                           prodh	equ	0xFF4
  9255                           prodl	equ	0xFF3
  9256                           indf0	equ	0xFEF
  9257                           postinc0	equ	0xFEE
  9258                           postdec0	equ	0xFED
  9259                           preinc0	equ	0xFEC
  9260                           plusw0	equ	0xFEB
  9261                           fsr0h	equ	0xFEA
  9262                           fsr0l	equ	0xFE9
  9263                           wreg	equ	0xFE8
  9264                           indf1	equ	0xFE7
  9265                           postinc1	equ	0xFE6
  9266                           postdec1	equ	0xFE5
  9267                           preinc1	equ	0xFE4
  9268                           plusw1	equ	0xFE3
  9269                           fsr1h	equ	0xFE2
  9270                           fsr1l	equ	0xFE1
  9271                           bsr	equ	0xFE0
  9272                           indf2	equ	0xFDF
  9273                           postinc2	equ	0xFDE
  9274                           postdec2	equ	0xFDD
  9275                           preinc2	equ	0xFDC
  9276                           plusw2	equ	0xFDB
  9277                           fsr2h	equ	0xFDA
  9278                           fsr2l	equ	0xFD9
  9279                           status	equ	0xFD8

Data Sizes:
    Strings     51
    Constant    0
    Data        0
    BSS         136
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     83      89
    BANK0           160     92     142
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> datos_adc(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> datos_adc(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1220_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> datos_adc(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> datos_adc(BANK0[16]), 

    LCD_Cadena@dat	PTR unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    EUSART_Cadena@dat	PTR unsigned char  size(2) Largest target is 16
		 -> datos_adc(BANK0[16]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _LCD_Init->_LCD_Comando
    _LCD_Cadena->_LCD_Caracter
    _EUSART_Cadena->_EUSART_Tx

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _RX_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _RX_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _RX_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _RX_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _RX_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _RX_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _RX_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _RX_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _RX_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   41373
                                             90 BANK0      2     2      0
                           _ADC_Init
                           _ADC_Read
                      _EUSART_Cadena
                        _EUSART_Init
                           _Int_Init
                         _LCD_Cadena
                           _LCD_Init
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   37143
                                             72 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   36639
                                             77 COMRAM     6     0      6
                                             70 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   36079
                                             67 COMRAM    10     4      6
                                             56 BANK0     14    14      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   29047
                                             55 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             10 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             29 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             43 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3413
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     806
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2723
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1515
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      44
                                              6 COMRAM     1     1      0
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (2) _LCD_Comando                                          2     2      0      44
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Cadena                                           2     0      2     165
                                              6 COMRAM     2     0      2
                       _LCD_Caracter
 ---------------------------------------------------------------------------------
 (2) _LCD_Caracter                                         2     2      0      44
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Int_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Cadena                                        2     0      2     143
                                              5 COMRAM     2     0      2
                          _EUSART_Tx
 ---------------------------------------------------------------------------------
 (2) _EUSART_Tx                                            1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      45
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INT1_ISR                                             1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _RX_ISR                                              3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _EUSART_Cadena
     _EUSART_Tx
   _EUSART_Init
   _Int_Init
   _LCD_Cadena
     _LCD_Caracter
   _LCD_Init
     _LCD_Comando
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _INT1_ISR (ROOT)

 _RX_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     53      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     137      20        0.0%
DATA                 0      0     137       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Feb 16 21:08:00 2021

           ___fldiv@aexp 001D             ___fldiv@bexp 001C            ?_LCD_Caracter 0001  
                      _x 0058             ___fldiv@sign 0015             ?_LCD_Comando 0001  
                     l71 3992                       l65 3912                       l59 397C  
                     l91 399A                       l68 3980             ___awdiv@sign 000A  
                     bsr 000FE0      ___wmul@multiplicand 0007                      l120 3446  
                    l117 362C                      l134 38B0                      l151 3794  
                    l152 379C                      l128 34B8                      l145 395E  
                    l155 3938                      l420 2CA8                      l149 3786  
                    l414 3350                      l425 2CEE                      l700 1C14  
                    l452 2BEA                      l429 380C                      l710 1CD2  
                    l810 27F8                      l386 3134                      l813 2954  
                    l709 1CE4                      l725 3716                      l750 24AC  
                    l742 23B2                      l399 32A6                      l751 249A  
                    l824 28EC                      l817 2890                      l737 258E  
                    l833 367E                      l739 23EE                      l683 1AFA  
                    l915 0C22                      l748 2434                      l692 1DCA  
                    l684 1AE8                      l773 21F4                      l685 1AAE  
                    l941 0FBA                      l776 2086                      l769 1E90  
                    l786 21B6                      l778 20FE                      l874 317A  
                    l779 20EC                      l877 31BC                      l879 31F6  
                    l984 14DA                      l897 13E6                      l999 190A  
                    _pad 3136                      _vin 00D4             ___awmod@sign 000A  
                    wreg 000FE8             ___flmul@aexp 0020             ___flmul@bexp 0025  
           ___flmul@sign 001F             ___flmul@temp 002A             ___flmul@prod 0026  
           ?_EUSART_Init 0001             ___fltol@exp1 000E                     l1100 3070  
                   l1012 3512                     l1013 351A                     l1006 1854  
                   l1023 2DEC                     l1111 399C                     l1123 387A  
                   l1052 2ADC                     l1108 375A                     l1061 27A0  
                   l1117 35D6                     l1142 357A                     l1071 3844  
                   l1055 2AE4                     l1127 2FA6                     l1064 26E4  
                   l1137 3572                     l1085 37D4                     l1079 36D0  
                   l4001 3420                     l4011 344A                     l4003 3422  
                   l4021 347E                     l4013 345A                     l4101 3894  
                   l4005 3432                     l4103 375E                     l4031 34B6  
                   l4023 3492                     l4015 345C                     l4007 3434  
                   l4105 376E                     l4041 3962                     l4025 3494  
                   l4017 346C                     l4009 3444                     l5001 2CF0  
                   l4107 3772                     l4123 38E4                     l4051 396E  
                   l4043 3966                     l4027 34A4                     l4019 346E  
                   l4131 27A4                     l5003 2D10                     l4109 3784  
                   l4125 38E8                     l4061 3978                     l4053 3970  
                   l4045 3968                     l4029 34A6                     l4133 27B4  
                   l5005 2D4E                     l5013 2D8E                     l4301 302A  
                   l5101 08CE                     l4127 38F6                     l4063 397A  
                   l4055 3972                     l4047 396A                     l4071 35EA  
                   l4151 287A                     l4143 2832                     l4135 27C2  
                   l4311 1928                     l5015 2DA0                     l5007 2D76  
                   l5023 357C                     l5031 3552                     l5103 08DA  
                   l5111 08F0                     l4129 38FA                     l4057 3974  
                   l4049 396C                     l4065 3994                     l4081 3614  
                   l4073 35F0                     l4161 28FA                     l4153 2886  
                   l4145 283A                     l4137 2808                     l4401 1ADC  
                   l4313 1938                     l4321 1962                     l4305 190C  
                   l5009 2D82                     l5041 2606                     l5025 358C  
                   l5033 3564                     l5201 0CDC                     l5121 097A  
                   l5113 0916                     l5105 08E2                     l4091 395A  
                   l4059 3976                     l4083 361A                     l4075 3600  
                   l4067 35D8                     l4171 2942                     l4163 28FC  
                   l4155 28C2                     l4147 2846                     l4139 281E  
                   l4411 1B2C                     l4403 1AE6                     l4331 1992  
                   l4323 1972                     l4315 1948                     l4307 1918  
                   l5019 2DE4                     l5051 26D4                     l5043 261A  
                   l5027 351C                     l5211 0D26                     l5203 0CEA  
                   l5131 09EA                     l5123 0992                     l5107 08E6  
                   l4093 395C                     l4085 3620                     l4077 3606  
                   l4069 35E6                     l4173 2944                     l4165 2900  
                   l4157 28CE                     l4149 2878                     l4501 1DB8  
                   l4421 1B68                     l4413 1B3C                     l4405 1B08  
                   l4341 19D2                     l4333 19A0                     l4325 1978  
                   l4317 1958                     l4309 1926                     l5061 2790  
                   l5045 2628                     l5053 2708                     l5037 2590  
                   l5301 11B2                     l5221 0D6C                     l5213 0D38  
                   l5205 0CEE                     l5125 099C                     l5117 094C  
                   l5109 08EA                     l4095 387C                     l4087 3626  
                   l4079 360E                     l4167 2924                     l4159 28DC  
                   l5071 3684                     l4503 1DBA                     l4431 1BAE  
                   l4423 1B76                     l4415 1B4A                     l4407 1B18  
                   l4351 1A0C                     l4343 19D4                     l4335 19A2  
                   l4327 198A                     l4319 195A                     l5055 2744  
                   l5039 25B0                     l4511 3736                     l5311 121C  
                   l5303 11D0                     l5231 0E80                     l5223 0DD0  
                   l5207 0D00                     l5215 0D40                     l5135 0A20  
                   l5119 095E                     l4089 393A                     l4097 3880  
                   l4169 2934                     l5065 380E                     l5073 3698  
                   l5401 29F4                     l4601 2376                     l4441 1C2A  
                   l4433 1BE2                     l4425 1B78                     l4417 1B58  
                   l4361 1A20                     l4353 1A10                     l4337 19B2  
                   l4345 19DC                     l4329 198C                     l5057 2758  
                   l5049 2698                     l4513 373A                     l4521 386E  
                   l5321 125A                     l5313 1220                     l5305 11EC  
                   l5241 0F3E                     l5233 0EB4                     l5225 0E28  
                   l5217 0D48                     l5209 0D0E                     l5161 0B82  
                   l5153 0ABA                     l5137 0A32                     l5129 09C4  
                   l5081 0836                     l4099 3890                     l4531 3930  
                   l5075 36C6                     l5411 2A9C                     l5403 2A28  
                   l4611 23BC                     l4603 237E                     l4451 1C66  
                   l4443 1C3A                     l4435 1BE4                     l4427 1B82  
                   l4419 1B64                     l4371 1A34                     l4363 1A24  
                   l4355 1A14                     l4347 19EC                     l4339 19C2  
                   l5059 2780                     l4291 2FA8                     l4507 3718  
                   l4515 3846                     l5331 128C                     l5323 1262  
                   l5315 1230                     l5307 11FE                     l5251 0FB2  
                   l5243 0F4E                     l5235 0EE6                     l5227 0E5C  
                   l5219 0D58                     l5171 0BE2                     l5163 0B8A  
                   l5155 0AEE                     l5139 0A4E                     l5147 0A6A  
                   l5091 088A                     l5083 0840                     l5077 36CA  
                   l5069 3680                     l5413 2AAE                     l4621 2414  
                   l4613 23DA                     l4605 238E                     l4541 2212  
                   l4701 1E6A                     l4461 1C92                     l4453 1C68  
                   l4437 1BF4                     l4429 1B88                     l4381 1A48  
                   l4373 1A38                     l4365 1A28                     l4357 1A18  
                   l4349 19FE                     l4293 2FBA                     l4509 3724  
                   l4517 3852                     l4525 379E                     l5333 1292  
                   l5341 12E2                     l5325 1270                     l5317 1242  
                   l5309 120C                     l5261 106E                     l5253 0FD6  
                   l5245 0F82                     l5237 0EFC                     l5229 0E62  
                   l5173 0BF4                     l5157 0AF4                     l5165 0BBC  
                   l5149 0A84                     l5093 0894                     l5085 0850  
                   l5421 2ED2                     l5501 160A                     ?_pad 0015  
                   l5415 2AC0                     l5407 2A5E                     l4631 2452  
                   l4623 241A                     l4615 23DC                     l4607 23A2  
                   l4543 2222                     l4551 224C                     l4535 21F6  
                   l4703 1E7A                     l4471 1CCA                     l4455 1C76  
                   l4447 1C4E                     l4463 1C94                     l4439 1C04  
                   l4391 1AA6                     l4375 1A3C                     l4367 1A2C  
                   l4359 1A1C                     l4383 1A4C                     l4295 2FCC  
                   l4519 3856                     l5351 1332                     l5343 12F4  
                   l5335 12B8                     l5327 1278                     l5319 124A  
                   l5271 10B6                     l5263 107C                     l5255 103A  
                   l5247 0F92                     l5239 0F2E                     l5191 0CA4  
                   l5175 0BFC                     l5167 0BCC                     l5159 0B4E  
                   l5095 089C                     l5087 085E                     l5431 2F2E  
                   l5423 2EFC                     l5511 16B0                     l5503 162C  
                   l4529 3914                     l4641 24BC                     l4633 2456  
                   l4625 2424                     l4617 23EC                     l4609 23B0  
                   l4561 2278                     l4553 225C                     l4545 2232  
                   l4537 2202                     l4721 1EFC                     l4713 1EC4  
                   l4705 1E80                     l4481 1D48                     l4457 1C7E  
                   l4449 1C58                     l4465 1CA2                     l4393 1ABC  
                   l4385 1A50                     l4377 1A40                     l4369 1A30  
                   l4297 2FD6                     l5353 133A                     l5345 130E  
                   l5337 12D4                     l5329 1280                     l5281 10E0  
                   l5273 10BA                     l5257 1048                     l5265 1084  
                   l5249 0FA6                     l5193 0CAC                     l5185 0C40  
                   l5177 0C16                     l5169 0BD0                     l5097 08AE  
                   l5089 0866                     l5433 2F4A                     l5513 16C2  
                   l5505 163C                     l5441 13E8                     l5601 2E00  
                   l4811 3076                     l4651 251E                     l4643 24C8  
                   l4635 2464                     l4627 2432                     l4619 23FE  
                   l4563 2288                     l4571 22B2                     l4555 2262  
                   l4547 2242                     l4539 2210                     l4731 1F46  
                   l4723 1F14                     l4715 1ED0                     l4707 1EA0  
                   l4491 1D8E                     l4475 1CF4                     l4483 1D4A  
                   l4467 1CA6                     l4459 1C82                     l4395 1AC8  
                   l4387 1A7A                     l4379 1A44                     l4803 36D2  
                   l4299 2FF4                     l5371 13C0                     l5363 138A  
                   l5355 134A                     l5347 1314                     l5339 12DC  
                   l5291 1114                     l5283 10E6                     l5275 10C0  
                   l5267 1098                     l5259 105C                     l5187 0C52  
                   l5195 0CB0                     l5179 0C2E                     l5099 08BC  
                   l5435 2F5C                     l5427 2F08                     l5531 17F0  
                   l5515 16D8                     l5523 1742                     l5507 166E  
                   l5451 143C                     l5443 140C                     l5611 2E7E  
                   l5603 2E04                     l5381 296A                     l4821 30A6  
                   l4813 3084                     l4661 257C                     l4653 2534  
                   l4645 24D6                     l4637 2492                     l4629 2444  
                   l4581 22F4                     l4573 22C2                     l4565 2298  
                   l4557 2268                     l4549 2244                     l4901 334E  
                   l4741 1F9C                     l4733 1F56                     l4725 1F20  
                   l4717 1EDA                     l4709 1EB0                     l4493 1D9C  
                   l4485 1D5A                     l4477 1D00                     l4469 1CB4  
                   l4397 1ACC                     l4389 1A96                     l4805 36E2  
                   l5373 13C6                     l5365 139C                     l5357 1350  
                   l5349 1326                     l5277 10CC                     l5269 10A6  
                   l5285 10EC                     l5293 111A                     l5197 0CB8  
                   l5189 0C6E                     l5437 2F84                     l5429 2F16  
                   l5541 188C                     l5533 1824                     l5525 1770  
                   l5517 16E6                     l5509 167E                     l5453 143E  
                   l5445 141A                     l5613 2EA4                     l5605 2E10  
                   l5391 29C8                     l5383 296E                     l4831 30D4  
                   l4823 30AA                     l4815 308C                     l4663 2582  
                   l4655 254E                     l4647 2500                     l4575 22D8  
                   l4567 22A8                     l4559 2276                     l4911 2C58  
                   l4751 2040                     l4743 1FB8                     l4735 1F62  
                   l4727 1F2C                     l4719 1EF0                     l4495 1DA2  
                   l4487 1D6A                     l4479 1D0E                     l4399 1ADA  
                   l5367 13A8                     l5359 1356                     l5295 1172  
                   l5287 10FE                     l5279 10DC                     l5199 0CCA  
                   l5551 18C8                     l5543 189A                     l5519 1716  
                   l5471 1468                     l5463 145C                     l5455 1450  
                   l5447 142C                     l5615 2EB0                     l5607 2E2A  
                   l5385 2972                     l4841 3108                     l4833 30E2  
                   l4825 30B2                     l4817 3090                     l4809 3072  
                   l4665 2584                     l4657 256A                     l4649 2504  
                   l4593 232C                     l4577 22E8                     l4585 2308  
                   l4569 22AA                     l4921 2CE6                     l4913 2C68  
                   l4905 2BEC                     l4761 2096                     l4753 204E  
                   l4745 1FC4                     l4737 1F72                     l4729 1F3A  
                   l4681 1DF8                     l4673 1DCC                     l4497 1DA4  
                   l4489 1D8A                     l5369 13B0                     l5297 11A6  
                   l5289 1110                     l5545 18AE                     l5529 17DE  
                   l5481 14EA                     l5449 1430                     l5609 2E38  
                   l5395 29CE                     l5387 298E                     l5379 2956  
                   l4843 310E                     l4835 30E8                     l4827 30C4  
                   l4819 309E                     l4659 256E                     l4595 2346  
                   l4587 2318                     l4579 22F0                     l4923 2CEC  
                   l4915 2C76                     l4907 2C1A                     l4763 20A4  
                   l4755 206C                     l4747 1FE0                     l4739 1F8C  
                   l4691 1E34                     l4683 1E08                     l4675 1DD8  
                   l4931 37FC                     l4499 1DAA                     l5299 11AE  
                   l5539 1868                     l5491 1582                     l5483 150E  
                   l5475 1474                     l5467 1462                     l5459 1456  
                   l5555 18D4                     l5397 29E4                     l5389 29C4  
                   l4837 30FE                     l4829 30CC                     l4845 3114  
                   l4861 3216                     l4853 31F8                     l4597 2356  
                   l4589 2318                     l4917 2C88                     l4909 2C2A  
                   l4773 210E                     l4781 2156                     l4765 20A8  
                   l4757 2076                     l4749 200A                     l4693 1E3A  
                   l4685 1E18                     l4677 1DE6                     l4941 2B10  
                   l5557 18F8                     l5549 18BA                     l5493 15A2  
                   l5485 1516                     l5477 14C8                     l5573 34BA  
                   l5581 362E                     l3991 33E8                     l5399 29EC  
                   l4847 3124                     l4839 3106                     l4871 324E  
                   l4863 3224                     l4855 31FC                     l4599 2366  
                   l4919 2C96                     l4791 21CA                     l4783 2170  
                   l4775 211A                     l4767 20B6                     l4759 2084  
                   l4695 1E48                     l4687 1E1E                     l4679 1DE8  
                   l4927 37D6                     l4951 2B5E                     l4943 2B3A  
                   l4935 2AE6                     l5495 15B0                     l5487 1524  
                   l5479 14E8                     l5575 34C2                     l5583 3640  
                   l3985 3980                     l3993 33EA                     l4849 312C  
                   l4873 325C                     l4881 3286                     l4865 322C  
                   l4857 320A                     l4793 21D8                     l4785 2184  
                   l4777 2128                     l4769 20E4                     l4697 1E4A  
                   l4689 1E2E                     l4929 37EC                     l4961 2B8A  
                   l4945 2B3C                     l4937 2AFC                     l5489 1548  
                   l5577 34D0                     l5585 3648                     l5593 2DEE  
                   l3987 398E                     l3995 33FA                     l4883 3296  
                   l4875 3272                     l4867 323E                     l4859 3212  
                   l4891 32D6                     l4795 21DA                     l4787 219E  
                   l4779 2152                     l4699 1E5A                     l4971 2BBA  
                   l4947 2B4C                     l5499 15F8                     l5579 34F6  
                   l5587 3650                     l5595 2DF2                     l3997 33FC  
                   l3989 33D8                     l4885 329E                     l4877 327A  
                   l4869 3246                     l4893 32E6                     l4789 21BA  
                   l4797 21E0                     l4973 2BCA                     l4957 2B76  
                   l4949 2B50                     l4981 3144                     l5589 366C  
                   l5597 2DF8                     l3999 340C                     l4879 3280  
                   l4895 3314                     l4799 21E4                     l4975 2BDA  
                   l4967 2B9E                     l4959 2B80                     l4991 319A  
                   l4983 3158                     l5687 149A                     l5599 2DFC  
                   l5689 2A12                     l4897 3324                     l4889 32A8  
                   l4969 2BAA                     l4993 319E                     l4985 3166  
                   l4899 3348                     l4995 31CA                     l4987 3172  
                   l4979 3136                     l4997 31DE                     l4989 3186  
                   STR_1 0813                     STR_2 0801                     STR_3 0821  
                   STR_4 0829                     STR_7 0825                     STR_8 082D  
                   _LATD 000F8C                     u5000 302A                     u5001 3026  
                   u5010 1926                     u5011 1922                     u5100 1A7A  
                   u5020 1938                     u5101 1A76                     u5021 1934  
                   u5110 1A92                     u5030 1948                     u5111 1A8C  
                   u5031 1944                     u6000 3348                     u5200 1B76  
                   u5120 1A94                     u5040 198A                     u6001 3344  
                   u5201 1B72                     u5041 1986                     u6010 2C1A  
                   u5210 1BAE                     u5130 1ABC                     u5050 19A0  
                   u6011 2C16                     u5211 1BAA                     u5131 1AB8  
                   u5051 199C                     u6020 2C58                     u5300 1CCA  
                   u5220 1BF4                     u5140 1ADA                     u5060 19B2  
                   u6100 2B72                     u6021 2C54                     u5301 1CC6  
                   u5221 1BF0                     u5141 1AD6                     u5061 19AE  
                   u6101 2B6E                     u6030 2C76                     u5310 1CE0  
                   u5230 1C2A                     u5150 1AFA                     u5070 19C2  
                   u6110 2B9A                     u6031 2C72                     u5311 1CDC  
                   u5231 1C26                     u5151 1AF6                     u5071 19BE  
                   u6111 2B96                     u7000 2A98                     u6040 2C96  
                   u5320 1CF4                     u5240 1C3A                     u5160 1B08  
                   u5080 19FE                     u6120 2BBA                     u6200 2D76  
                   u5400 375A                     u6041 2C92                     u5321 1CF0  
                   u5241 1C36                     u5161 1B04                     u5081 19FA  
                   u6121 2BB6                     u6201 2D72                     u5401 3756  
                   u7010 2AAE                     u6050 2CE6                     u5330 1D0E  
                   u5250 1C66                     u5170 1B18                     u5090 1A0C  
                   u6130 2BCA                     u6210 2DA0                     u5410 386E  
                   u7011 2AAA                     u6051 2CE2                     u5331 1D0A  
                   u5251 1C62                     u5171 1B14                     u5091 1A08  
                   u6131 2BC6                     u6211 2D9C                     u5411 386A  
                   u7020 2AC0                     u5500 22D8                     u6060 37EC  
                   u5340 1D48                     u5260 1C76                     u5180 1B4A  
                   u6300 25D8                     u6140 3144                     u5420 37CE  
                   u7100 14E8                     u7021 2ABC                     u5501 22D4  
                   u6061 37E8                     u5341 1D44                     u5261 1C72  
                   u5181 1B46                     u6141 3140                     u5421 37C8  
                   u7101 14E4                     u5510 2318                     u5350 1D5A  
                   u5270 1C92                     u5190 1B58                     u6070 2AFC  
                   u6230 2DDA                     u6310 2606                     u6150 3166  
                   u5430 37D0                     u7030 2EFC                     u7110 150E  
                   u5511 2314                     u5351 1D56                     u5271 1C8E  
                   u5191 1B54                     u6071 2AF8                     u6231 2DD4  
                   u6311 2602                     u6151 3162                     u7031 2EF8  
                   u7111 150A                     u4800 3794                     u6400 383E  
                   u5600 2492                     u5520 238E                     u5440 2210  
                   u5360 1D6A                     u5280 1CA2                     u6080 2B30  
                   u6240 2DDC                     u6320 2628                     u6160 31BC  
                   u7040 2F2E                     u7200 17D6                     u7120 1548  
                   u4801 3790                     u6401 3838                     u5601 248E  
                   u5521 238A                     u5441 220C                     u5361 1D66  
                   u5281 1C9E                     u6225 2DB2                     u6321 2624  
                   u6305 25CE                     u6161 31B8                     u7041 2F2A  
                   u7201 17D0                     u7121 1544                     u4810 3912  
                   u6410 3840                     u5610 24A8                     u5530 23B0  
                   u5450 2222                     u5370 1D8A                     u5290 1CB4  
                   u6090 2B5E                     u6170 31CA                     u6250 35C4  
                   u7050 2F4A                     u7210 17D8                     u7130 15F0  
                   u4811 390E                     u5611 24A4                     u5531 23AC  
                   u5451 221E                     u5371 1D86                     u5291 1CB0  
                   u6091 2B5A                     u6171 31C6                     u7051 2F46  
                   u7131 15EA                     u4900 2934                     u4820 27B4  
                   u6420 3698                     u5620 24BC                     u5540 23DA  
                   u5460 2232                     u5700 1E48                     u5380 1D9C  
                   u6180 2D30                     u6340 2694                     u6260 35D6  
                   u6500 0946                     u7060 2F5C                     u7220 17F0  
                   u7140 15F2                     u4901 2930                     u4821 27B0  
                   u6421 3694                     u5621 24B8                     u5541 23D6  
                   u5461 222E                     u5701 1E44                     u5381 1D98  
                   u6085 2B26                     u6341 2690                     u6261 35D2  
                   u7061 2F58                     u7221 17EC                     u4910 2942  
                   u4830 27C2                     u6430 36C6                     u5630 24D6  
                   u5550 23FE                     u5470 2276                     u5710 1E5A  
                   u5390 1DB8                     u6190 2D4E                     u6350 26B8  
                   u6270 354C                     u6510 095E                     u7070 2F84  
                   u7230 188C                     u7150 160A                     u4911 293E  
                   u4831 27BE                     u6431 36C2                     u5631 24D2  
                   u5551 23FA                     u5471 2272                     u5711 1E56  
                   u5391 1DB4                     u6191 2D4A                     u6335 263C  
                   u6271 3546                     u6511 095A                     u7071 2F80  
                   u7231 1888                     u7151 1606                     u4760 398E  
                   u4840 281E                     u5640 251E                     u5560 2414  
                   u5480 2288                     u5800 20FA                     u5720 1E6A  
                   u6360 26D4                     u6336 2646                     u6280 354E  
                   u6600 0BF4                     u6520 09EA                     u6440 085E  
                   u7160 163C                     u7080 140C                     u7240 3512  
                   u4761 398A                     u4841 281A                     u5641 251A  
                   u5561 2410                     u5481 2284                     u5801 20F6  
                   u5721 1E66                     u6185 2D26                     u6361 26D0  
                   u6337 2656                     u6257 35BA                     u6601 0BF0  
                   u6521 09E6                     u6441 085A                     u7161 1638  
                   u7081 1408                     u7241 350E                     u4850 2874  
                   u5650 254E                     u5570 2432                     u5490 2298  
                   u5810 210E                     u5730 1EA0                     u6370 2728  
                   u6290 3564                     u6610 0C16                     u6530 0A18  
                   u6450 08AE                     u7170 167E                     u7090 14DA  
                   u7307 33F0                     u4851 2870                     u5651 254A  
                   u5571 242E                     u5491 2294                     u5811 210A  
                   u5731 1E9C                     u6355 26AE                     u6291 3560  
                   u6611 0C12                     u6531 0A12                     u6451 08AA  
                   u7171 167A                     u7091 14D6                     u4780 38B0  
                   u4860 28BE                     u5900 30FE                     u5660 257C  
                   u5580 2452                     u5820 2128                     u5740 1EB0  
                   u6380 2744                     u6700 0D0E                     u6620 0C3C  
                   u6540 0A1A                     u6460 08BC                     u7180 16C2  
                   u4781 38AC                     u7317 3402                     u4861 28BA  
                   u5901 30FA                     u5661 2578                     u5581 244E  
                   u5821 2124                     u5741 1EAC                     u6381 2740  
                   u6701 0D0A                     u6621 0C38                     u6461 08B8  
                   u7181 16BE                     u4790 376E                     u4870 28DC  
                   u5910 3124                     u5590 2464                     u5830 2170  
                   u5750 202A                     u5670 1DE6                     u6390 2780  
                   u6710 0D38                     u6630 0C52                     u6550 0A32  
                   u6470 08CE                     u7190 1770                     u4791 376A  
                   u7327 3428                     u4871 28D8                     u5911 3120  
                   u5591 2460                     u5831 216C                     u5671 1DE2  
                   u6391 277C                     u6375 271E                     u6711 0D34  
                   u6631 0C4E                     u6551 0A2E                     u6471 08CA  
                   u7191 176C                     u4880 28EC                     u5920 320A  
                   u5840 219E                     u5760 2084                     u5680 1DF8  
                   u6800 107C                     u6720 0E80                     u6640 0C6E  
                   u6560 0AB6                     u6480 0916                     u7337 343A  
                   u4881 28E8                     u5921 3206                     u5841 219A  
                   u5761 2080                     u5681 1DF4                     u6801 1078  
                   u6721 0E7C                     u6641 0C6A                     u6561 0AB2  
                   u6481 0912                     u7257 2E1C                     u4890 28FA  
                   u5930 3224                     u5850 21D8                     u5770 20A4  
                   u5690 1E08                     u4970 2FBA                     u6810 1098  
                   u6730 0EE6                     u6650 0CA4                     u6570 0B4A  
                   u6490 0944                     u7347 3462                     u4891 28F6  
                   u5931 3220                     u5851 21D4                     u5771 20A0  
                   u5755 2020                     u5691 1E04                     u4971 2FB6  
                   u6811 1094                     u6731 0EE2                     u6651 0CA0  
                   u6571 0B46                     u6491 093E                     u7267 2EBC  
                   u5860 3084                     u5940 323E                     u5780 20B6  
                   u4980 2FCC                     u6900 12F4                     u6820 10A6  
                   u6740 0F2E                     u6660 0CCA                     u6580 0BBC  
                   u7357 3474                     u7277 35DE                     u5861 3080  
                   u5941 323A                     u5781 20B2                     u4981 2FC8  
                   u6901 12F0                     u6821 10A2                     u6741 0F2A  
                   u6661 0CC6                     u6581 0BB8                     u5870 309E  
                   u5950 325C                     u5790 20E4                     u4990 2FF4  
                   u6910 130E                     u6830 10FE                     u6750 0F3E  
                   u6670 0CDC                     u6590 0BE2                     u7367 349A  
                   u7287 35F6                     u5871 309A                     u5951 3258  
                   u5791 20E0                     u4991 2FF0                     u6911 130A  
                   u6831 10FA                     u6751 0F3A                     u6671 0CD8  
                   u6591 0BDE                     u5880 30C4                     u5960 3272  
                   u6920 1326                     u6840 11D0                     u6760 0FA6  
                   u6680 0CEA                     u7377 34AC                     u7297 3608  
                   u5881 30C0                     u5961 326E                     u6921 1322  
                   u6841 11CC                     u6761 0FA2                     u6681 0CE6  
                   u5890 30E2                     u5970 3296                     u6930 1384  
                   u6850 11EC                     u6770 1048                     u6690 0D00  
                   i2l99 33CA                     u5891 30DE                     u5971 3292  
                   u6931 137E                     u6851 11E8                     u6771 1044  
                   u6691 0CFC                     u5980 32D6                     u6940 1386  
                   u6860 11FE                     u6780 105C                     u5981 32D2  
                   u6861 11FA                     u6781 1058                     u5990 3314  
                   u6950 139C                     u6870 120C                     u6790 106E  
                   u5991 3310                     u6951 1398                     u6871 1208  
                   u6791 106A                     u6960 298E                     u6880 1242  
                   u6961 298A                     u6881 123E                     u6970 29C4  
                   u6890 1270                     u6971 29C0                     u6891 126C  
                   u6980 29E0                     u6981 29DC                     u6990 2A96  
                   u6991 2A90                     _dbuf 0100                     _atoi 2956  
                   _main 2DEE                     _prec 0054                     _nout 00D8  
                   pad@i 001C                     pad@p 0019                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001E                     fsr2l 000FD9  
                   btemp 005A         __end_of_ADC_Init 3960         __end_of_ADC_Read 379E  
          ___fpclassifyf 2CF0                     prodh 000FF4                     prodl 000FF3  
                   start 0026          ___fldiv@new_exp 0016       __size_of_EUSART_Tx 0016  
           _tolower$1504 0011             ___param_bank 000000           ??_LCD_Caracter 0005  
                  ??_pad 001B         __end_of_LCD_Init 362E         __end_of_INT1_ISR 0026  
          _EUSART_Cadena 38E4            ___fltol@sign1 000D                    ?_atoi 000C  
        __end_of___fladd 1DCC                    ?_main 0001          __end_of___fldiv 2590  
        __end_of___awdiv 3136          __end_of___flneg 380E                    _ADRES 000FC3  
                  STR_11 0831                    STR_13 0831          __end_of___awmod 32A8  
        __end_of___flmul 21F6          __end_of___flsub 3718          __end_of___fltol 2BEC  
        ___awdiv@divisor 0007                    i1l104 001E          ___awdiv@counter 0009  
                  _RCREG 000FAE             vfpfcnvrt@fmt 0046                    _SPBRG 000FAF  
                  _TRISD 000F95                    _TXREG 000FAD                    _datos 00BC  
    __size_of_LCD_Cadena 0036                    _flags 0056                    _fputc 2FA8  
                  _fputs 3718          __end_of_isdigit 3846                    _valor 0059  
                  atoi@n 0019                    pad@fp 0015                    atoi@s 000C  
                  _width 00DA                    _putch 399C          __end_of_isspace 36D2  
        __end_of_isupper 37D6                    tablat 000FF5                    ttemp5 005B  
                  ttemp6 005E                    ttemp7 0062                    status 000FD8  
                  wtemp8 005B          __end_of_sprintf 3680           ?___fpclassifyf 0005  
        __end_of_tolower 357C          __end_of_strncmp 2FA8          __initialization 38B2  
           __end_of_atoi 2AE6             __end_of_main 2ED2            LCD_Cadena@dat 0007  
       __end_of_Int_Init 399C           ?_EUSART_Cadena 0006                   ??_atoi 000E  
                 ??_main 00BA            __activetblptr 000002        __end_of_EUSART_Tx 3994  
                 ?_fputc 0005                   ?_fputs 000E         ___awdiv@dividend 0005  
                 ?_putch 0001                   i2l4201 335C                   i2l4211 33C4  
                 i2l4203 339A                   i2l4213 33C8                   i2l4205 33A2  
                 i2l4207 33B2                   i2l4209 33B4            vfpfcnvrt@done 0098  
       __end_of___xxtofl 2956                   _RX_ISR 0008             vfprintf@cfmt 00A6  
                 ___flge 2BEC                   ___fleq 32A8                ??___fladd 000D  
                 ___wmul 3914                ??___fldiv 000D                ??___awdiv 0009  
              ??___flneg 0009                ??___awmod 0009                ??___flmul 001B  
              ??___flsub 0034                ??___fltol 0009                   _efgtoa 0836  
                 _floorf 2590                   clear_0 38B8                   clear_1 38C4  
       ___awdiv@quotient 000B          ___awmod@divisor 0007          ___awmod@counter 0009  
                 pad@buf 0017     __size_of_LCD_Comando 0072                   _strcpy 357C  
                 _strlen 3846                   fputc@c 0005                   fputs@c 0012  
                 fputs@i 0013                   fputs@s 000E                ??_isdigit 0007  
        ___fpclassifyf@e 000D                ?_ADC_Init 0001          ___fpclassifyf@u 000F  
              ?_ADC_Read 0005          ___fpclassifyf@x 0005             __mediumconst 0000  
              ??_isspace 0007                   tblptrh 000FF7                ??_isupper 0007  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 351C     __end_of_LCD_Caracter 34BA                ??_sprintf 0054  
              ??_tolower 000D                ??_strncmp 000B               ___flge@ff1 002C  
             ___flge@ff2 0030          ??___fpclassifyf 0009             ___xxtofl@arg 000F  
   __size_of_EUSART_Init 001E             ___xxtofl@exp 000E             ___xxtofl@val 0005  
             ___fleq@ff1 0005               ___fleq@ff2 0009               __accesstop 0060  
__end_of__initialization 38D6                ?_LCD_Init 0001                ?_INT1_ISR 0001  
             ___flneg@f1 0005            ___rparam_used 000001               ___fltol@f1 0005  
           ??_LCD_Cadena 0009           __pcstackCOMRAM 0001          ??_EUSART_Cadena 0008  
          __end_of_fputc 3072            __end_of_fputs 375C            __end_of_putch 399E  
             ??_ADC_Init 0005               ??_ADC_Read 0007                  ??_fputc 0009  
                ??_fputs 0012       __end_of_LCD_Cadena 38B2                  ??_putch 0005  
             __pbssBANK0 00BC               __pbssBANK1 0100                ?_Int_Init 0001  
             ??_LCD_Init 0007               ??_INT1_ISR 0004                  ?_RX_ISR 0001  
                ?___flge 002C                  ?___fleq 0005                  ?___wmul 0005  
                ?_efgtoa 0038                  ?_floorf 001E               ADC_Read@ch 0008  
                ?_strcpy 0005                  ?_strlen 0005         LCD_Caracter@data 0006  
              ?___xxtofl 0005       __size_of_vfpfcnvrt 0524               ??_Int_Init 0005  
        __size_of_RX_ISR 33CE                  __Hparam 0000                  __Lparam 0000  
        __size_of___flge 0104          __size_of___fleq 00AA                  ___fladd 190C  
                ___fldiv 21F6                  ___awdiv 3072                  ___flneg 37D6  
                ___awmod 31F8                  ___flmul 1DCC                  ___flsub 36D2  
                ___fltol 2AE6          __size_of___wmul 0026                ?_vfprintf 004E  
           __psmallconst 0800          __size_of_efgtoa 0BB2          __size_of_floorf 0212  
                __pcinit 38B2                  __ramtop 0800                  __ptext0 2DEE  
                __ptext1 362E                  __ptext2 34BA                  __ptext3 13E8  
                __ptext4 2ED2                  __ptext5 0836                  __ptext6 351C  
                __ptext7 379E                  __ptext8 357C                  __ptext9 3136  
        __size_of_strcpy 005C          __size_of_strlen 0036    __size_of_LCD_Caracter 0072  
           __size_of_pad 00C2                  _isdigit 380E               ??___xxtofl 0009  
       ___awmod@dividend 0005                  _isspace 3680                  _isupper 379E  
                efgtoa@c 003E                  efgtoa@d 0078                  efgtoa@e 0090  
                efgtoa@f 003A                  efgtoa@g 008C                  efgtoa@h 0082  
                efgtoa@i 008A                  efgtoa@l 0086                  efgtoa@m 0074  
                efgtoa@n 0092                  efgtoa@p 007C                  efgtoa@t 0070  
                efgtoa@u 0094                  efgtoa@w 007F                  atoi@neg 0012  
         LCD_Comando@cmd 0006                  _sprintf 362E                  _tolower 351C  
                _strncmp 2ED2           __pintcode_body 3352     end_of_initialization 38D6  
              _EUSART_Tx 397E                  floorf@e 002C                  floorf@m 0028  
                floorf@u 002E                  floorf@x 001E                  fputc@fp 0007  
          __Lmediumconst 0000                  int_func 3352                  fputs@fp 0010  
          EUSART_Tx@data 0005        __end_of_vfpfcnvrt 190C               efgtoa@mode 0081  
             efgtoa@sign 007A                _RCSTAbits 000FAB                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
           _LCD_Caracter 3448               ??_vfprintf 0054                  strcpy@d 000D  
                strlen@a 0007                  strcpy@s 000B                  strlen@s 0005  
       EUSART_Cadena@dat 0006              ___fladd@grs 0014            ___xxtofl@sign 000D  
            ___fldiv@grs 0018              ___fldiv@rem 0011        __size_of_ADC_Init 0026  
      __size_of_ADC_Read 0042               ?_EUSART_Tx 0001              ___flmul@grs 0021  
              _TXSTAbits 000FAC        __size_of_LCD_Init 0056        __size_of_INT1_ISR 000E  
         __end_of_RX_ISR 33D6            ??_LCD_Comando 0005           __end_of___flge 2CF0  
         __end_of___fleq 3352              vfpfcnvrt@ap 0048              vfpfcnvrt@ct 00A2  
            vfpfcnvrt@fp 0044           __end_of___wmul 393A              _BAUDCONbits 000FB8  
         __end_of_efgtoa 13E8           __end_of_floorf 27A2               floorf@F524 00CC  
         __end_of_strcpy 35D8           __end_of_strlen 387C      start_initialization 38B2  
            __end_of_pad 31F8            ??_EUSART_Init 0005    __end_of___fpclassifyf 2DEE  
               ??_RX_ISR 0001        __size_of_Int_Init 0008              vfprintf@fmt 0050  
               ??___flge 0034                 ??___fleq 000D                 ??___wmul 0009  
               ??_efgtoa 003F                 ??_floorf 0022    __end_of_EUSART_Cadena 3914  
               ??_strcpy 0009                 ??_strlen 0007                ___fladd@a 0009  
              ___fladd@b 0005                ___fldiv@a 0009                ___fldiv@b 0005  
    __end_of_LCD_Comando 3448                ___flmul@a 0017                ___flmul@b 0013  
            __pbssCOMRAM 0054                ___flsub@a 0030                ___flsub@b 002C  
          __pcstackBANK0 0060        __size_of___xxtofl 01B4              ??_EUSART_Tx 0005  
    __end_of_EUSART_Init 397E                _atoi$1410 0018                _atoi$1411 0016  
              _atoi$1409 0014              _efgtoa$1351 0068              _efgtoa$1345 0064  
            _efgtoa$1346 0066              _efgtoa$1355 006A              _efgtoa$1356 006C  
            _efgtoa$1357 006E                _datos_adc 00DC                __pintcode 0008  
               ?___fladd 0005                 ?___fldiv 0005                 ?___awdiv 0005  
               ?___flneg 0005                 ?___awmod 0005                 ?___flmul 0013  
               ?___flsub 002C                 ?___fltol 0005              __pintcodelo 0018  
      __size_of_vfprintf 0062              __smallconst 0800                 ?_isdigit 0005  
               _ADC_Init 393A                 _ADC_Read 375C                 ?_isspace 0005  
               ?_isupper 0005                 ?_sprintf 00A8                 ?_tolower 000B  
         __size_of_fputc 00CA           __size_of_fputs 0044                 ?_strncmp 0005  
         __size_of_putch 0002                 _LCD_Init 35D8                 _INT1_ISR 0018  
         ___wmul@product 0009                 _LATDbits 000F8C                 _IPR1bits 000F9F  
               _PIE1bits 000F9D                 _PIR1bits 000F9E                 i2u492_40 3370  
               i2u492_41 336A                 i2u492_42 3372                 i2u493_40 3388  
               i2u493_41 3382                 i2u493_42 338A                 i2u494_40 339A  
               i2u494_41 3396                 i2u495_40 33C4                 i2u495_41 33C0  
               _RCONbits 000FD0                _valor_adc 00EC              _LCD_Comando 33D6  
              _vfpfcnvrt 13E8               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0        ___wmul@multiplier 0005             _isspace$1440 000B  
            _EUSART_Init 3960               vfpfcnvrt@c 00A5               vfpfcnvrt@f 009E  
               _Int_Init 3994                 __Hrparam 0000          EUSART_Init@baud 0005  
             vfprintf@ap 0052                 __Lrparam 0000               vfprintf@fp 004E  
       __size_of___fladd 04C0         __size_of___fldiv 039A         __size_of___awdiv 00C4  
       __size_of___flneg 0038         __size_of___awmod 00B0         __size_of___flmul 042A  
       __size_of___flsub 0046         __size_of___fltol 0106               ?_vfpfcnvrt 0044  
     ___fpclassifyf@F463 00D0               sprintf@fmt 00AA                 ___xxtofl 27A2  
       __size_of_isdigit 0038         __size_of_isspace 0052                 __ptext10 3846  
               __ptext11 3718                 __ptext20 1DCC                 __ptext12 2FA8  
               __ptext21 2BEC                 __ptext13 399C                 __ptext30 27A2  
               __ptext22 32A8                 __ptext14 2590                 __ptext31 35D8  
               __ptext23 21F6                 __ptext15 2CF0                 __ptext40 393A  
               __ptext32 33D6                 __ptext24 31F8                 __ptext16 2AE6  
               __ptext33 387C                 __ptext25 3072                 __ptext17 36D2  
               __ptext34 3448                 __ptext26 2956                 __ptext18 190C  
               __ptext35 3994                 __ptext27 3680                 __ptext19 37D6  
               __ptext36 3960                 __ptext28 380E                 __ptext37 38E4  
               __ptext29 3914                 __ptext38 397E                 __ptext39 375C  
       __size_of_isupper 0038         __size_of_sprintf 0052         __size_of_tolower 0060  
             strcpy@dest 0005         __size_of_strncmp 00D6            __size_of_atoi 0190  
          __size_of_main 00E4                 efgtoa@fp 0038                 efgtoa@ne 0076  
             _LCD_Cadena 387C                 efgtoa@pp 0072                 efgtoa@ou 0060  
               int$flags 005A                 _vfprintf 34BA           _vfpfcnvrt$1371 009A  
         _vfpfcnvrt$1375 009C               _INTCONbits 000FF2                 isdigit@c 0005  
               intlevel1 0000                 intlevel2 0000                sprintf@ap 00B2  
               isspace@c 0005                strcpy@src 0007                 isupper@c 0005  
              strncmp@_l 0005                strncmp@_r 0007              efgtoa@nmode 007E  
            ??_vfpfcnvrt 004A                 sprintf@f 00B4                 tolower@c 000B  
               sprintf@s 00A8   __size_of___fpclassifyf 00FE                 strncmp@l 000C  
               strncmp@n 0009                 strncmp@r 000E            ___fladd@signs 0011  
 __size_of_EUSART_Cadena 0030             ___fladd@aexp 0012             ___fladd@bexp 0013  
            ?_LCD_Cadena 0007  
