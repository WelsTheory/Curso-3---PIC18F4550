

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Feb 15 21:32:26 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	nvCOMRAM
    58  00001E                     __pnvCOMRAM:
    59                           	callstack 0
    60  00001E                     _valor_adc:
    61                           	callstack 0
    62  00001E                     	ds	2
    63  0000                     _ADRES	set	4035
    64  0000                     _T2CONbits	set	4042
    65  0000                     _TRISCbits	set	3988
    66  0000                     _PR2	set	4043
    67  0000                     _CCP1CONbits	set	4029
    68  0000                     _CCPR1L	set	4030
    69  0000                     _TRISAbits	set	3986
    70  0000                     _LATDbits	set	3980
    71  0000                     _LATD	set	3980
    72  0000                     _TRISD	set	3989
    73  0000                     _INTCON3bits	set	4080
    74  0000                     _INTCONbits	set	4082
    75  0000                     _ADCON2bits	set	4032
    76  0000                     _ADCON0bits	set	4034
    77  0000                     _ADCON1bits	set	4033
    78                           
    79                           ; #config settings
    80                           
    81                           	psect	cinit
    82  00014A                     __pcinit:
    83                           	callstack 0
    84  00014A                     start_initialization:
    85                           	callstack 0
    86  00014A                     __initialization:
    87                           	callstack 0
    88                           
    89                           ; Clear objects allocated to COMRAM (21 bytes)
    90  00014A  EE00  F001         	lfsr	0,__pbssCOMRAM
    91  00014E  0E15               	movlw	21
    92  000150                     clear_0:
    93  000150  6AEE               	clrf	postinc0,c
    94  000152  06E8               	decf	wreg,f,c
    95  000154  E1FD               	bnz	clear_0
    96  000156                     end_of_initialization:
    97                           	callstack 0
    98  000156                     __end_of__initialization:
    99                           	callstack 0
   100  000156  9020               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   101  000158  9220               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   102  00015A  0100               	movlb	0
   103  00015C  EF16  F000         	goto	_main	;jump to C main() function
   104                           
   105                           	psect	bssCOMRAM
   106  000001                     __pbssCOMRAM:
   107                           	callstack 0
   108  000001                     _datos:
   109                           	callstack 0
   110  000001                     	ds	16
   111  000011                     _vin:
   112                           	callstack 0
   113  000011                     	ds	4
   114  000015                     _x:
   115                           	callstack 0
   116  000015                     	ds	1
   117                           
   118                           	psect	cstackCOMRAM
   119  000016                     __pcstackCOMRAM:
   120                           	callstack 0
   121  000016                     ??_INT1_ISR:
   122  000016                     
   123                           ; 1 bytes @ 0x0
   124  000016                     	ds	1
   125  000017                     ?_ADC_Read:
   126                           	callstack 0
   127                           
   128                           ; 2 bytes @ 0x1
   129  000017                     	ds	2
   130  000019                     ??_ADC_Read:
   131                           
   132                           ; 1 bytes @ 0x3
   133  000019                     	ds	1
   134  00001A                     ADC_Read@ch:
   135                           	callstack 0
   136                           
   137                           ; 1 bytes @ 0x4
   138  00001A                     	ds	1
   139  00001B                     ??_main:
   140                           
   141                           ; 1 bytes @ 0x5
   142  00001B                     	ds	3
   143                           
   144 ;;
   145 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   146 ;;
   147 ;; *************** function _main *****************
   148 ;; Defined at:
   149 ;;		line 24 in file "Programa_principal.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;		None
   152 ;; Auto vars:     Size  Location     Type
   153 ;;		None
   154 ;; Return value:  Size  Location     Type
   155 ;;                  1    wreg      void 
   156 ;; Registers used:
   157 ;;		wreg, status,2, status,0, cstack
   158 ;; Tracked objects:
   159 ;;		On entry : 0/0
   160 ;;		On exit  : 0/0
   161 ;;		Unchanged: 0/0
   162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   163 ;;      Params:         0       0       0       0       0       0       0       0       0
   164 ;;      Locals:         0       0       0       0       0       0       0       0       0
   165 ;;      Temps:          3       0       0       0       0       0       0       0       0
   166 ;;      Totals:         3       0       0       0       0       0       0       0       0
   167 ;;Total ram usage:        3 bytes
   168 ;; Hardware stack levels required when called:    3
   169 ;; This function calls:
   170 ;;		_ADC_Init
   171 ;;		_ADC_Read
   172 ;;		_PWM_Init
   173 ;; This function is called by:
   174 ;;		Startup code after reset
   175 ;; This function uses a non-reentrant model
   176 ;;
   177                           
   178                           	psect	text0
   179  00002C                     __ptext0:
   180                           	callstack 0
   181  00002C                     _main:
   182                           	callstack 28
   183  00002C                     
   184                           ;Programa_principal.c: 25:     TRISAbits.RA1 = 1;
   185  00002C  8292               	bsf	146,1,c	;volatile
   186                           
   187                           ;Programa_principal.c: 26:     TRISAbits.RA0 = 1;
   188  00002E  8092               	bsf	146,0,c	;volatile
   189  000030                     
   190                           ;Programa_principal.c: 28:     ADC_Init();
   191  000030  EC92  F000         	call	_ADC_Init	;wreg free
   192                           
   193                           ;Programa_principal.c: 29:     PWM_Init();
   194  000034  EC7F  F000         	call	_PWM_Init	;wreg free
   195  000038                     l920:
   196                           
   197                           ;Programa_principal.c: 34:         valor_adc = ADC_Read(0);
   198  000038  0E00               	movlw	0
   199  00003A  EC5E  F000         	call	_ADC_Read
   200  00003E  C017  F01E         	movff	?_ADC_Read,_valor_adc
   201  000042  C018  F01F         	movff	?_ADC_Read+1,_valor_adc+1
   202  000046                     
   203                           ;Programa_principal.c: 35:         if(valor_adc == 312){
   204  000046  0E38               	movlw	56
   205  000048  181E               	xorwf	_valor_adc^0,w,c
   206  00004A  E106               	bnz	u101
   207  00004C  041F               	decf	(_valor_adc+1)^0,w,c
   208  00004E  A4D8               	btfss	status,2,c
   209  000050  EF2C  F000         	goto	u101
   210  000054  EF2E  F000         	goto	u100
   211  000058                     u101:
   212  000058  EF32  F000         	goto	l926
   213  00005C                     u100:
   214  00005C                     
   215                           ;Programa_principal.c: 36:             valor_adc = 311;
   216  00005C  0E01               	movlw	1
   217  00005E  6E1F               	movwf	(_valor_adc+1)^0,c
   218  000060  0E37               	movlw	55
   219  000062  6E1E               	movwf	_valor_adc^0,c
   220  000064                     l926:
   221                           
   222                           ;Programa_principal.c: 38:         if(valor_adc == 0){
   223  000064  501E               	movf	_valor_adc^0,w,c
   224  000066  101F               	iorwf	(_valor_adc+1)^0,w,c
   225  000068  A4D8               	btfss	status,2,c
   226  00006A  EF39  F000         	goto	u111
   227  00006E  EF3B  F000         	goto	u110
   228  000072                     u111:
   229  000072  EF3F  F000         	goto	l94
   230  000076                     u110:
   231  000076                     
   232                           ;Programa_principal.c: 39:             valor_adc = 1;
   233  000076  0E00               	movlw	0
   234  000078  6E1F               	movwf	(_valor_adc+1)^0,c
   235  00007A  0E01               	movlw	1
   236  00007C  6E1E               	movwf	_valor_adc^0,c
   237  00007E                     l94:
   238                           
   239                           ;Programa_principal.c: 41:         CCPR1L = (valor_adc>>8);
   240  00007E  501F               	movf	(_valor_adc+1)^0,w,c
   241  000080  6EBE               	movwf	190,c	;volatile
   242  000082                     
   243                           ;Programa_principal.c: 42:         CCP1CONbits.DC1B = ((valor_adc>>6));
   244  000082  C01E  F01B         	movff	_valor_adc,??_main
   245  000086  C01F  F01C         	movff	_valor_adc+1,??_main+1
   246  00008A  0E06               	movlw	6
   247  00008C  6E1D               	movwf	(??_main+2)^0,c
   248  00008E                     u125:
   249  00008E  90D8               	bcf	status,0,c
   250  000090  321C               	rrcf	(??_main+1)^0,f,c
   251  000092  321B               	rrcf	??_main^0,f,c
   252  000094  2E1D               	decfsz	(??_main+2)^0,f,c
   253  000096  EF47  F000         	goto	u125
   254  00009A  3A1B               	swapf	??_main^0,f,c
   255  00009C  50BD               	movf	189,w,c	;volatile
   256  00009E  181B               	xorwf	??_main^0,w,c
   257  0000A0  0BCF               	andlw	-49
   258  0000A2  181B               	xorwf	??_main^0,w,c
   259  0000A4  6EBD               	movwf	189,c	;volatile
   260  0000A6                     
   261                           ;Programa_principal.c: 43:         _delay((unsigned long)((20)*(20000000UL/4000.0)));
   262  0000A6  0E82               	movlw	130
   263  0000A8  6E1B               	movwf	??_main^0,c
   264  0000AA  0EDE               	movlw	222
   265  0000AC                     u137:
   266  0000AC  2EE8               	decfsz	wreg,f,c
   267  0000AE  D7FE               	bra	u137
   268  0000B0  2E1B               	decfsz	??_main^0,f,c
   269  0000B2  D7FC               	bra	u137
   270  0000B4  EF1C  F000         	goto	l920
   271  0000B8  EF14  F000         	goto	start
   272  0000BC                     __end_of_main:
   273                           	callstack 0
   274                           
   275 ;; *************** function _PWM_Init *****************
   276 ;; Defined at:
   277 ;;		line 5 in file "PWM.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;		None
   282 ;; Return value:  Size  Location     Type
   283 ;;                  1    wreg      void 
   284 ;; Registers used:
   285 ;;		wreg, status,2
   286 ;; Tracked objects:
   287 ;;		On entry : 0/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   291 ;;      Params:         0       0       0       0       0       0       0       0       0
   292 ;;      Locals:         0       0       0       0       0       0       0       0       0
   293 ;;      Temps:          0       0       0       0       0       0       0       0       0
   294 ;;      Totals:         0       0       0       0       0       0       0       0       0
   295 ;;Total ram usage:        0 bytes
   296 ;; Hardware stack levels used:    1
   297 ;; Hardware stack levels required when called:    2
   298 ;; This function calls:
   299 ;;		Nothing
   300 ;; This function is called by:
   301 ;;		_main
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           	psect	text1
   306  0000FE                     __ptext1:
   307                           	callstack 0
   308  0000FE                     _PWM_Init:
   309                           	callstack 28
   310  0000FE                     
   311                           ;PWM.c: 6:     PR2 = 77;
   312  0000FE  0E4D               	movlw	77
   313  000100  6ECB               	movwf	203,c	;volatile
   314                           
   315                           ;PWM.c: 14:     CCPR1L = 0b00000000;
   316  000102  0E00               	movlw	0
   317  000104  6EBE               	movwf	190,c	;volatile
   318                           
   319                           ;PWM.c: 15:     CCP1CONbits.DC1B = 0b01;
   320  000106  50BD               	movf	189,w,c	;volatile
   321  000108  0BCF               	andlw	-49
   322  00010A  0910               	iorlw	16
   323  00010C  6EBD               	movwf	189,c	;volatile
   324  00010E                     
   325                           ;PWM.c: 16:     TRISCbits.RC2 = 0;
   326  00010E  9494               	bcf	148,2,c	;volatile
   327                           
   328                           ;PWM.c: 17:     T2CONbits.T2CKPS = 0b10;
   329  000110  50CA               	movf	202,w,c	;volatile
   330  000112  0BFC               	andlw	-4
   331  000114  0902               	iorlw	2
   332  000116  6ECA               	movwf	202,c	;volatile
   333  000118                     
   334                           ;PWM.c: 18:     T2CONbits.TMR2ON = 1;
   335  000118  84CA               	bsf	202,2,c	;volatile
   336                           
   337                           ;PWM.c: 19:     CCP1CONbits.CCP1M = 0b1100;
   338  00011A  50BD               	movf	189,w,c	;volatile
   339  00011C  0BF0               	andlw	-16
   340  00011E  090C               	iorlw	12
   341  000120  6EBD               	movwf	189,c	;volatile
   342  000122  0012               	return		;funcret
   343  000124                     __end_of_PWM_Init:
   344                           	callstack 0
   345                           
   346 ;; *************** function _ADC_Read *****************
   347 ;; Defined at:
   348 ;;		line 19 in file "ADC_Libreria.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;  ch              1    wreg     unsigned char 
   351 ;; Auto vars:     Size  Location     Type
   352 ;;  ch              1    4[COMRAM] unsigned char 
   353 ;; Return value:  Size  Location     Type
   354 ;;                  2    1[COMRAM] unsigned short 
   355 ;; Registers used:
   356 ;;		wreg, status,2, status,0
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   362 ;;      Params:         2       0       0       0       0       0       0       0       0
   363 ;;      Locals:         1       0       0       0       0       0       0       0       0
   364 ;;      Temps:          1       0       0       0       0       0       0       0       0
   365 ;;      Totals:         4       0       0       0       0       0       0       0       0
   366 ;;Total ram usage:        4 bytes
   367 ;; Hardware stack levels used:    1
   368 ;; Hardware stack levels required when called:    2
   369 ;; This function calls:
   370 ;;		Nothing
   371 ;; This function is called by:
   372 ;;		_main
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text2
   377  0000BC                     __ptext2:
   378                           	callstack 0
   379  0000BC                     _ADC_Read:
   380                           	callstack 28
   381                           
   382                           ;incstack = 0
   383                           ;ADC_Read@ch stored from wreg
   384  0000BC  6E1A               	movwf	ADC_Read@ch^0,c
   385  0000BE                     
   386                           ;ADC_Libreria.c: 20:     if(ch >= 13){
   387  0000BE  0E0C               	movlw	12
   388  0000C0  641A               	cpfsgt	ADC_Read@ch^0,c
   389  0000C2  EF65  F000         	goto	u81
   390  0000C6  EF67  F000         	goto	u80
   391  0000CA                     u81:
   392  0000CA  EF69  F000         	goto	l912
   393  0000CE                     u80:
   394  0000CE                     
   395                           ;ADC_Libreria.c: 21:         ch = 0;
   396  0000CE  0E00               	movlw	0
   397  0000D0  6E1A               	movwf	ADC_Read@ch^0,c
   398  0000D2                     l912:
   399                           
   400                           ;ADC_Libreria.c: 23:     ADCON0bits.CHS = ch;
   401  0000D2  C01A  F019         	movff	ADC_Read@ch,??_ADC_Read
   402  0000D6  4619               	rlncf	??_ADC_Read^0,f,c
   403  0000D8  4619               	rlncf	??_ADC_Read^0,f,c
   404  0000DA  50C2               	movf	194,w,c	;volatile
   405  0000DC  1819               	xorwf	??_ADC_Read^0,w,c
   406  0000DE  0BC3               	andlw	-61
   407  0000E0  1819               	xorwf	??_ADC_Read^0,w,c
   408  0000E2  6EC2               	movwf	194,c	;volatile
   409  0000E4                     
   410                           ;ADC_Libreria.c: 24:     ADCON0bits.GO_NOT_DONE = 1;
   411  0000E4  82C2               	bsf	194,1,c	;volatile
   412  0000E6                     l15:
   413  0000E6  B2C2               	btfsc	194,1,c	;volatile
   414  0000E8  EF78  F000         	goto	u91
   415  0000EC  EF7A  F000         	goto	u90
   416  0000F0                     u91:
   417  0000F0  EF73  F000         	goto	l15
   418  0000F4                     u90:
   419  0000F4                     
   420                           ;ADC_Libreria.c: 26:     return ADRES;
   421  0000F4  CFC3 F017          	movff	4035,?_ADC_Read	;volatile
   422  0000F8  CFC4 F018          	movff	4036,?_ADC_Read+1	;volatile
   423  0000FC  0012               	return		;funcret
   424  0000FE                     __end_of_ADC_Read:
   425                           	callstack 0
   426                           
   427 ;; *************** function _ADC_Init *****************
   428 ;; Defined at:
   429 ;;		line 6 in file "ADC_Libreria.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, status,2
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   443 ;;      Params:         0       0       0       0       0       0       0       0       0
   444 ;;      Locals:         0       0       0       0       0       0       0       0       0
   445 ;;      Temps:          0       0       0       0       0       0       0       0       0
   446 ;;      Totals:         0       0       0       0       0       0       0       0       0
   447 ;;Total ram usage:        0 bytes
   448 ;; Hardware stack levels used:    1
   449 ;; Hardware stack levels required when called:    2
   450 ;; This function calls:
   451 ;;		Nothing
   452 ;; This function is called by:
   453 ;;		_main
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           	psect	text3
   458  000124                     __ptext3:
   459                           	callstack 0
   460  000124                     _ADC_Init:
   461                           	callstack 28
   462  000124                     
   463                           ;ADC_Libreria.c: 7:     ADCON1bits.PCFG = 0b1101;
   464  000124  50C1               	movf	193,w,c	;volatile
   465  000126  0BF0               	andlw	-16
   466  000128  090D               	iorlw	13
   467  00012A  6EC1               	movwf	193,c	;volatile
   468                           
   469                           ;ADC_Libreria.c: 8:     ADCON1bits.VCFG = 0b00;
   470  00012C  0ECF               	movlw	-49
   471  00012E  16C1               	andwf	193,f,c	;volatile
   472                           
   473                           ;ADC_Libreria.c: 9:     ADCON0bits.CHS = 0b0000;
   474  000130  0EC3               	movlw	-61
   475  000132  16C2               	andwf	194,f,c	;volatile
   476                           
   477                           ;ADC_Libreria.c: 11:     ADCON2bits.ADCS = 0b101;
   478  000134  50C0               	movf	192,w,c	;volatile
   479  000136  0BF8               	andlw	-8
   480  000138  0905               	iorlw	5
   481  00013A  6EC0               	movwf	192,c	;volatile
   482                           
   483                           ;ADC_Libreria.c: 13:     ADCON2bits.ACQT = 0b010;
   484  00013C  50C0               	movf	192,w,c	;volatile
   485  00013E  0BC7               	andlw	-57
   486  000140  0910               	iorlw	16
   487  000142  6EC0               	movwf	192,c	;volatile
   488  000144                     
   489                           ;ADC_Libreria.c: 15:     ADCON2bits.ADFM = 0;
   490  000144  9EC0               	bcf	192,7,c	;volatile
   491  000146                     
   492                           ;ADC_Libreria.c: 16:     ADCON0bits.ADON = 1;
   493  000146  80C2               	bsf	194,0,c	;volatile
   494  000148  0012               	return		;funcret
   495  00014A                     __end_of_ADC_Init:
   496                           	callstack 0
   497                           
   498 ;; *************** function _INT1_ISR *****************
   499 ;; Defined at:
   500 ;;		line 32 in file "Interrupcion.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		None
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   514 ;;      Params:         0       0       0       0       0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0       0       0       0       0
   516 ;;      Temps:          1       0       0       0       0       0       0       0       0
   517 ;;      Totals:         1       0       0       0       0       0       0       0       0
   518 ;;Total ram usage:        1 bytes
   519 ;; Hardware stack levels used:    1
   520 ;; Hardware stack levels required when called:    1
   521 ;; This function calls:
   522 ;;		Nothing
   523 ;; This function is called by:
   524 ;;		Interrupt level 1
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           	psect	intcodelo
   529  000018                     __pintcodelo:
   530                           	callstack 0
   531  000018                     _INT1_ISR:
   532                           	callstack 28
   533                           
   534                           ;incstack = 0
   535  000018  8020               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   536  00001A  CFE0 F016          	movff	bsr,??_INT1_ISR
   537  00001E                     
   538                           ;Interrupcion.c: 37:     INTCON3bits.INT1F = 0;
   539  00001E  90F0               	bcf	240,0,c	;volatile
   540  000020  C016  FFE0         	movff	??_INT1_ISR,bsr
   541  000024  9020               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   542  000026  0010               	retfie	
   543  000028                     __end_of_INT1_ISR:
   544                           	callstack 0
   545                           
   546 ;; *************** function _INT0_ISR *****************
   547 ;; Defined at:
   548 ;;		line 24 in file "Interrupcion.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;		None
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		None
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   562 ;;      Params:         0       0       0       0       0       0       0       0       0
   563 ;;      Locals:         0       0       0       0       0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0       0       0
   565 ;;      Totals:         0       0       0       0       0       0       0       0       0
   566 ;;Total ram usage:        0 bytes
   567 ;; Hardware stack levels used:    1
   568 ;; This function calls:
   569 ;;		Nothing
   570 ;; This function is called by:
   571 ;;		Interrupt level 2
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           	psect	intcode
   576  000008                     __pintcode:
   577                           	callstack 0
   578  000008                     _INT0_ISR:
   579                           	callstack 28
   580                           
   581                           ;incstack = 0
   582  000008  8220               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   583  00000A  EDB0  F000         	call	int_func,f	;refresh shadow registers
   584                           
   585                           	psect	intcode_body
   586  000160                     __pintcode_body:
   587                           	callstack 28
   588  000160                     int_func:
   589                           	callstack 28
   590  000160  0006               	pop		; remove dummy address from shadow register refresh
   591  000162                     
   592                           ;Interrupcion.c: 29:     INTCONbits.INT0IF = 0;
   593  000162  92F2               	bcf	242,1,c	;volatile
   594  000164  9220               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   595  000166  0011               	retfie		f
   596  000168                     __end_of_INT0_ISR:
   597                           	callstack 0
   598  0000                     
   599                           	psect	rparam
   600  0000                     
   601                           	psect	temp
   602  000020                     btemp:
   603                           	callstack 0
   604  000020                     	ds	1
   605  0000                     int$flags	set	btemp
   606  0000                     wtemp8	set	btemp+1
   607  0000                     ttemp5	set	btemp+1
   608  0000                     ttemp6	set	btemp+4
   609  0000                     ttemp7	set	btemp+8
   610                           
   611                           	psect	idloc
   612                           
   613                           ;Config register IDLOC0 @ 0x200000
   614                           ;	unspecified, using default values
   615  200000                     	org	2097152
   616  200000  FF                 	db	255
   617                           
   618                           ;Config register IDLOC1 @ 0x200001
   619                           ;	unspecified, using default values
   620  200001                     	org	2097153
   621  200001  FF                 	db	255
   622                           
   623                           ;Config register IDLOC2 @ 0x200002
   624                           ;	unspecified, using default values
   625  200002                     	org	2097154
   626  200002  FF                 	db	255
   627                           
   628                           ;Config register IDLOC3 @ 0x200003
   629                           ;	unspecified, using default values
   630  200003                     	org	2097155
   631  200003  FF                 	db	255
   632                           
   633                           ;Config register IDLOC4 @ 0x200004
   634                           ;	unspecified, using default values
   635  200004                     	org	2097156
   636  200004  FF                 	db	255
   637                           
   638                           ;Config register IDLOC5 @ 0x200005
   639                           ;	unspecified, using default values
   640  200005                     	org	2097157
   641  200005  FF                 	db	255
   642                           
   643                           ;Config register IDLOC6 @ 0x200006
   644                           ;	unspecified, using default values
   645  200006                     	org	2097158
   646  200006  FF                 	db	255
   647                           
   648                           ;Config register IDLOC7 @ 0x200007
   649                           ;	unspecified, using default values
   650  200007                     	org	2097159
   651  200007  FF                 	db	255
   652                           
   653                           	psect	config
   654                           
   655                           ;Config register CONFIG1L @ 0x300000
   656                           ;	PLL Prescaler Selection bits
   657                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   658                           ;	System Clock Postscaler Selection bits
   659                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   660                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   661                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   662  300000                     	org	3145728
   663  300000  00                 	db	0
   664                           
   665                           ;Config register CONFIG1H @ 0x300001
   666                           ;	Oscillator Selection bits
   667                           ;	FOSC = HS, HS oscillator (HS)
   668                           ;	Fail-Safe Clock Monitor Enable bit
   669                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   670                           ;	Internal/External Oscillator Switchover bit
   671                           ;	IESO = OFF, Oscillator Switchover mode disabled
   672  300001                     	org	3145729
   673  300001  0C                 	db	12
   674                           
   675                           ;Config register CONFIG2L @ 0x300002
   676                           ;	Power-up Timer Enable bit
   677                           ;	PWRT = ON, PWRT enabled
   678                           ;	Brown-out Reset Enable bits
   679                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   680                           ;	Brown-out Reset Voltage bits
   681                           ;	BORV = 3, Minimum setting 2.05V
   682                           ;	USB Voltage Regulator Enable bit
   683                           ;	VREGEN = OFF, USB voltage regulator disabled
   684  300002                     	org	3145730
   685  300002  18                 	db	24
   686                           
   687                           ;Config register CONFIG2H @ 0x300003
   688                           ;	Watchdog Timer Enable bit
   689                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   690                           ;	Watchdog Timer Postscale Select bits
   691                           ;	WDTPS = 32768, 1:32768
   692  300003                     	org	3145731
   693  300003  1E                 	db	30
   694                           
   695                           ; Padding undefined space
   696  300004                     	org	3145732
   697  300004  FF                 	db	255
   698                           
   699                           ;Config register CONFIG3H @ 0x300005
   700                           ;	CCP2 MUX bit
   701                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   702                           ;	PORTB A/D Enable bit
   703                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   704                           ;	Low-Power Timer 1 Oscillator Enable bit
   705                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   706                           ;	MCLR Pin Enable bit
   707                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   708  300005                     	org	3145733
   709  300005  81                 	db	129
   710                           
   711                           ;Config register CONFIG4L @ 0x300006
   712                           ;	Stack Full/Underflow Reset Enable bit
   713                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   714                           ;	Single-Supply ICSP Enable bit
   715                           ;	LVP = ON, Single-Supply ICSP enabled
   716                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   717                           ;	ICPRT = OFF, ICPORT disabled
   718                           ;	Extended Instruction Set Enable bit
   719                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   720                           ;	Background Debugger Enable bit
   721                           ;	DEBUG = 0x1, unprogrammed default
   722  300006                     	org	3145734
   723  300006  84                 	db	132
   724                           
   725                           ; Padding undefined space
   726  300007                     	org	3145735
   727  300007  FF                 	db	255
   728                           
   729                           ;Config register CONFIG5L @ 0x300008
   730                           ;	Code Protection bit
   731                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   732                           ;	Code Protection bit
   733                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   734                           ;	Code Protection bit
   735                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   736                           ;	Code Protection bit
   737                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   738  300008                     	org	3145736
   739  300008  0F                 	db	15
   740                           
   741                           ;Config register CONFIG5H @ 0x300009
   742                           ;	Boot Block Code Protection bit
   743                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   744                           ;	Data EEPROM Code Protection bit
   745                           ;	CPD = OFF, Data EEPROM is not code-protected
   746  300009                     	org	3145737
   747  300009  C0                 	db	192
   748                           
   749                           ;Config register CONFIG6L @ 0x30000A
   750                           ;	Write Protection bit
   751                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   752                           ;	Write Protection bit
   753                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   754                           ;	Write Protection bit
   755                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   756                           ;	Write Protection bit
   757                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   758  30000A                     	org	3145738
   759  30000A  0F                 	db	15
   760                           
   761                           ;Config register CONFIG6H @ 0x30000B
   762                           ;	Configuration Register Write Protection bit
   763                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   764                           ;	Boot Block Write Protection bit
   765                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   766                           ;	Data EEPROM Write Protection bit
   767                           ;	WRTD = OFF, Data EEPROM is not write-protected
   768  30000B                     	org	3145739
   769  30000B  E0                 	db	224
   770                           
   771                           ;Config register CONFIG7L @ 0x30000C
   772                           ;	Table Read Protection bit
   773                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   774                           ;	Table Read Protection bit
   775                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   776                           ;	Table Read Protection bit
   777                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   778                           ;	Table Read Protection bit
   779                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   780  30000C                     	org	3145740
   781  30000C  0F                 	db	15
   782                           
   783                           ;Config register CONFIG7H @ 0x30000D
   784                           ;	Boot Block Table Read Protection bit
   785                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   786  30000D                     	org	3145741
   787  30000D  40                 	db	64
   788                           tosu	equ	0xFFF
   789                           tosh	equ	0xFFE
   790                           tosl	equ	0xFFD
   791                           stkptr	equ	0xFFC
   792                           pclatu	equ	0xFFB
   793                           pclath	equ	0xFFA
   794                           pcl	equ	0xFF9
   795                           tblptru	equ	0xFF8
   796                           tblptrh	equ	0xFF7
   797                           tblptrl	equ	0xFF6
   798                           tablat	equ	0xFF5
   799                           prodh	equ	0xFF4
   800                           prodl	equ	0xFF3
   801                           indf0	equ	0xFEF
   802                           postinc0	equ	0xFEE
   803                           postdec0	equ	0xFED
   804                           preinc0	equ	0xFEC
   805                           plusw0	equ	0xFEB
   806                           fsr0h	equ	0xFEA
   807                           fsr0l	equ	0xFE9
   808                           wreg	equ	0xFE8
   809                           indf1	equ	0xFE7
   810                           postinc1	equ	0xFE6
   811                           postdec1	equ	0xFE5
   812                           preinc1	equ	0xFE4
   813                           plusw1	equ	0xFE3
   814                           fsr1h	equ	0xFE2
   815                           fsr1l	equ	0xFE1
   816                           bsr	equ	0xFE0
   817                           indf2	equ	0xFDF
   818                           postinc2	equ	0xFDE
   819                           postdec2	equ	0xFDD
   820                           preinc2	equ	0xFDC
   821                           plusw2	equ	0xFDB
   822                           fsr2h	equ	0xFDA
   823                           fsr2l	equ	0xFD9
   824                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         21
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      8      31
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ADC_Read

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      45
                                              5 COMRAM     3     3      0
                           _ADC_Init
                           _ADC_Read
                           _PWM_Init
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      45
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT1_ISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _PWM_Init

 _INT1_ISR (ROOT)

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      8      1F       1       33.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1F      20        0.0%
DATA                 0      0      1F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Feb 15 21:32:26 2021

                      _x 0015                       l11 0148                       l15 00E6  
                     l17 00F4                       l18 00FC                       l94 007E  
                     u80 00CE                       u81 00CA                       u90 00F4  
                     u91 00F0                       bsr 000FE0                      l110 0122  
                    l910 00CE                      l912 00D2                      l920 0038  
                    l914 00E4                      l930 0082                      l922 0046  
                    l908 00BE                      l844 00FE                      l932 00A6  
                    l924 005C                      l916 002C                      l790 0146  
                    l846 010E                      l926 0064                      l918 0030  
                    l848 0118                      l928 0076                      l786 0124  
                    l788 0144                      u100 005C                      u101 0058  
                    u110 0076                      u111 0072                      u125 008E  
                    u137 00AC                      _PR2 000FCB                      _vin 0011  
                    wreg 000FE8                     _LATD 000F8C                     i1l37 0020  
                   i2l32 0164                     _main 002C                     btemp 0020  
       __end_of_ADC_Init 014A         __end_of_ADC_Read 00FE                     start 0028  
           ___param_bank 000000         __end_of_INT0_ISR 0168         __end_of_INT1_ISR 0028  
                  ?_main 0016                    _ADRES 000FC3                    i1l852 001E  
                  i2l850 0162                    _TRISD 000F95                    _datos 0001  
       __end_of_PWM_Init 0124                    ttemp5 0021                    ttemp6 0024  
                  ttemp7 0028                    status 000FD8                    wtemp8 0021  
        __initialization 014A             __end_of_main 00BC                   ??_main 001B  
          __activetblptr 000000                   _CCPR1L 000FBE                   clear_0 0150  
              ?_ADC_Init 0016                ?_ADC_Read 0017               __accesstop 0060  
__end_of__initialization 0156                ?_INT0_ISR 0016                ?_INT1_ISR 0016  
          ___rparam_used 000001           __pcstackCOMRAM 0016                ?_PWM_Init 0016  
             ??_ADC_Init 0017               ??_ADC_Read 0019               ??_INT0_ISR 0016  
             ??_INT1_ISR 0016               __pnvCOMRAM 001E               ADC_Read@ch 001A  
             ??_PWM_Init 0017                  __Hparam 0000                  __Lparam 0000  
                __pcinit 014A                  __ramtop 0800                  __ptext0 002C  
                __ptext1 00FE                  __ptext2 00BC                  __ptext3 0124  
              _T2CONbits 000FCA           __pintcode_body 0160     end_of_initialization 0156  
                int_func 0160                  postinc0 000FEE                _TRISAbits 000F92  
              _TRISCbits 000F94        __size_of_ADC_Init 0026        __size_of_ADC_Read 0042  
            _CCP1CONbits 000FBD        __size_of_INT0_ISR 0160        __size_of_INT1_ISR 0010  
      __size_of_PWM_Init 0026      start_initialization 014A              __pbssCOMRAM 0001  
              __pintcode 0008              __pintcodelo 0018                 _ADC_Init 0124  
               _ADC_Read 00BC                 _INT0_ISR 0008                 _INT1_ISR 0018  
               _LATDbits 000F8C                _valor_adc 001E               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0                 _PWM_Init 00FE  
            _INTCON3bits 000FF0                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 0090                 int$flags 0020               _INTCONbits 000FF2  
               intlevel1 0000                 intlevel2 0000  
