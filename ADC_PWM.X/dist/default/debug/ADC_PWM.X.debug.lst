

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Feb 15 21:32:45 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	nvCOMRAM
    57  000016                     __pnvCOMRAM:
    58                           	callstack 0
    59  000016                     _valor_adc:
    60                           	callstack 0
    61  000016                     	ds	2
    62  0000                     _ADRES	set	4035
    63  0000                     _T2CONbits	set	4042
    64  0000                     _TRISCbits	set	3988
    65  0000                     _PR2	set	4043
    66  0000                     _CCP1CONbits	set	4029
    67  0000                     _CCPR1L	set	4030
    68  0000                     _TRISAbits	set	3986
    69  0000                     _LATDbits	set	3980
    70  0000                     _LATD	set	3980
    71  0000                     _TRISD	set	3989
    72  0000                     _INTCON3bits	set	4080
    73  0000                     _INTCONbits	set	4082
    74  0000                     _ADCON2bits	set	4032
    75  0000                     _ADCON0bits	set	4034
    76  0000                     _ADCON1bits	set	4033
    77                           
    78                           ; #config settings
    79                           
    80                           	psect	cinit
    81  0000AE                     __pcinit:
    82                           	callstack 0
    83  0000AE                     start_initialization:
    84                           	callstack 0
    85  0000AE                     __initialization:
    86                           	callstack 0
    87                           
    88                           ; Clear objects allocated to COMRAM (21 bytes)
    89  0000AE  EE00  F001         	lfsr	0,__pbssCOMRAM
    90  0000B2  0E15               	movlw	21
    91  0000B4                     clear_0:
    92  0000B4  6AEE               	clrf	postinc0,c
    93  0000B6  06E8               	decf	wreg,f,c
    94  0000B8  E1FD               	bnz	clear_0
    95  0000BA                     end_of_initialization:
    96                           	callstack 0
    97  0000BA                     __end_of__initialization:
    98                           	callstack 0
    99  0000BA  901A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   100  0000BC  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   101  0000BE  0100               	movlb	0
   102  0000C0  EF16  F000         	goto	_main	;jump to C main() function
   103                           
   104                           	psect	bssCOMRAM
   105  000001                     __pbssCOMRAM:
   106                           	callstack 0
   107  000001                     _datos:
   108                           	callstack 0
   109  000001                     	ds	16
   110  000011                     _vin:
   111                           	callstack 0
   112  000011                     	ds	4
   113  000015                     _x:
   114                           	callstack 0
   115  000015                     	ds	1
   116                           
   117                           	psect	cstackCOMRAM
   118  000018                     __pcstackCOMRAM:
   119                           	callstack 0
   120  000018                     ??_INT1_ISR:
   121  000018                     
   122                           ; 1 bytes @ 0x0
   123  000018                     	ds	1
   124  000019                     ??_main:
   125                           
   126                           ; 1 bytes @ 0x1
   127  000019                     	ds	1
   128                           
   129 ;;
   130 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   131 ;;
   132 ;; *************** function _main *****************
   133 ;; Defined at:
   134 ;;		line 24 in file "Programa_principal.c"
   135 ;; Parameters:    Size  Location     Type
   136 ;;		None
   137 ;; Auto vars:     Size  Location     Type
   138 ;;		None
   139 ;; Return value:  Size  Location     Type
   140 ;;                  1    wreg      void 
   141 ;; Registers used:
   142 ;;		wreg, status,2, cstack
   143 ;; Tracked objects:
   144 ;;		On entry : 0/0
   145 ;;		On exit  : 0/0
   146 ;;		Unchanged: 0/0
   147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   148 ;;      Params:         0       0       0       0       0       0       0       0       0
   149 ;;      Locals:         0       0       0       0       0       0       0       0       0
   150 ;;      Temps:          1       0       0       0       0       0       0       0       0
   151 ;;      Totals:         1       0       0       0       0       0       0       0       0
   152 ;;Total ram usage:        1 bytes
   153 ;; Hardware stack levels required when called:    3
   154 ;; This function calls:
   155 ;;		_ADC_Init
   156 ;;		_PWM_Init
   157 ;; This function is called by:
   158 ;;		Startup code after reset
   159 ;; This function uses a non-reentrant model
   160 ;;
   161                           
   162                           	psect	text0
   163  00002C                     __ptext0:
   164                           	callstack 0
   165  00002C                     _main:
   166                           	callstack 28
   167  00002C                     
   168                           ;Programa_principal.c: 25:     TRISAbits.RA1 = 1;
   169  00002C  8292               	bsf	146,1,c	;volatile
   170                           
   171                           ;Programa_principal.c: 26:     TRISAbits.RA0 = 1;
   172  00002E  8092               	bsf	146,0,c	;volatile
   173  000030                     
   174                           ;Programa_principal.c: 28:     ADC_Init();
   175  000030  EC44  F000         	call	_ADC_Init	;wreg free
   176                           
   177                           ;Programa_principal.c: 29:     PWM_Init();
   178  000034  EC31  F000         	call	_PWM_Init	;wreg free
   179  000038                     l892:
   180                           
   181                           ;Programa_principal.c: 34:         valor_adc = 0xFEB0;
   182  000038  0EFE               	movlw	254
   183  00003A  6E17               	movwf	(_valor_adc+1)^0,c
   184  00003C  0EB0               	movlw	176
   185  00003E  6E16               	movwf	_valor_adc^0,c
   186  000040                     
   187                           ;Programa_principal.c: 41:         CCPR1L = (valor_adc>>8);
   188  000040  0EFE               	movlw	254
   189  000042  6EBE               	movwf	190,c	;volatile
   190  000044                     
   191                           ;Programa_principal.c: 42:         CCP1CONbits.DC1B = ((valor_adc>>6));
   192  000044  50BD               	movf	189,w,c	;volatile
   193  000046  0BCF               	andlw	-49
   194  000048  0920               	iorlw	32
   195  00004A  6EBD               	movwf	189,c	;volatile
   196  00004C                     
   197                           ;Programa_principal.c: 43:         _delay((unsigned long)((20)*(20000000UL/4000.0)));
   198  00004C  0E82               	movlw	130
   199  00004E  6E19               	movwf	??_main^0,c
   200  000050  0EDE               	movlw	222
   201  000052                     u57:
   202  000052  2EE8               	decfsz	wreg,f,c
   203  000054  D7FE               	bra	u57
   204  000056  2E19               	decfsz	??_main^0,f,c
   205  000058  D7FC               	bra	u57
   206  00005A  EF1C  F000         	goto	l892
   207  00005E  EF14  F000         	goto	start
   208  000062                     __end_of_main:
   209                           	callstack 0
   210                           
   211 ;; *************** function _PWM_Init *****************
   212 ;; Defined at:
   213 ;;		line 5 in file "PWM.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;		None
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		wreg, status,2
   222 ;; Tracked objects:
   223 ;;		On entry : 0/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   227 ;;      Params:         0       0       0       0       0       0       0       0       0
   228 ;;      Locals:         0       0       0       0       0       0       0       0       0
   229 ;;      Temps:          0       0       0       0       0       0       0       0       0
   230 ;;      Totals:         0       0       0       0       0       0       0       0       0
   231 ;;Total ram usage:        0 bytes
   232 ;; Hardware stack levels used:    1
   233 ;; Hardware stack levels required when called:    2
   234 ;; This function calls:
   235 ;;		Nothing
   236 ;; This function is called by:
   237 ;;		_main
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241                           	psect	text1
   242  000062                     __ptext1:
   243                           	callstack 0
   244  000062                     _PWM_Init:
   245                           	callstack 28
   246  000062                     
   247                           ;PWM.c: 6:     PR2 = 77;
   248  000062  0E4D               	movlw	77
   249  000064  6ECB               	movwf	203,c	;volatile
   250                           
   251                           ;PWM.c: 14:     CCPR1L = 0b00000000;
   252  000066  0E00               	movlw	0
   253  000068  6EBE               	movwf	190,c	;volatile
   254                           
   255                           ;PWM.c: 15:     CCP1CONbits.DC1B = 0b01;
   256  00006A  50BD               	movf	189,w,c	;volatile
   257  00006C  0BCF               	andlw	-49
   258  00006E  0910               	iorlw	16
   259  000070  6EBD               	movwf	189,c	;volatile
   260  000072                     
   261                           ;PWM.c: 16:     TRISCbits.RC2 = 0;
   262  000072  9494               	bcf	148,2,c	;volatile
   263                           
   264                           ;PWM.c: 17:     T2CONbits.T2CKPS = 0b10;
   265  000074  50CA               	movf	202,w,c	;volatile
   266  000076  0BFC               	andlw	-4
   267  000078  0902               	iorlw	2
   268  00007A  6ECA               	movwf	202,c	;volatile
   269  00007C                     
   270                           ;PWM.c: 18:     T2CONbits.TMR2ON = 1;
   271  00007C  84CA               	bsf	202,2,c	;volatile
   272                           
   273                           ;PWM.c: 19:     CCP1CONbits.CCP1M = 0b1100;
   274  00007E  50BD               	movf	189,w,c	;volatile
   275  000080  0BF0               	andlw	-16
   276  000082  090C               	iorlw	12
   277  000084  6EBD               	movwf	189,c	;volatile
   278  000086  0012               	return		;funcret
   279  000088                     __end_of_PWM_Init:
   280                           	callstack 0
   281                           
   282 ;; *************** function _ADC_Init *****************
   283 ;; Defined at:
   284 ;;		line 6 in file "ADC_Libreria.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, status,2
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   298 ;;      Params:         0       0       0       0       0       0       0       0       0
   299 ;;      Locals:         0       0       0       0       0       0       0       0       0
   300 ;;      Temps:          0       0       0       0       0       0       0       0       0
   301 ;;      Totals:         0       0       0       0       0       0       0       0       0
   302 ;;Total ram usage:        0 bytes
   303 ;; Hardware stack levels used:    1
   304 ;; Hardware stack levels required when called:    2
   305 ;; This function calls:
   306 ;;		Nothing
   307 ;; This function is called by:
   308 ;;		_main
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           	psect	text2
   313  000088                     __ptext2:
   314                           	callstack 0
   315  000088                     _ADC_Init:
   316                           	callstack 28
   317  000088                     
   318                           ;ADC_Libreria.c: 7:     ADCON1bits.PCFG = 0b1101;
   319  000088  50C1               	movf	193,w,c	;volatile
   320  00008A  0BF0               	andlw	-16
   321  00008C  090D               	iorlw	13
   322  00008E  6EC1               	movwf	193,c	;volatile
   323                           
   324                           ;ADC_Libreria.c: 8:     ADCON1bits.VCFG = 0b00;
   325  000090  0ECF               	movlw	-49
   326  000092  16C1               	andwf	193,f,c	;volatile
   327                           
   328                           ;ADC_Libreria.c: 9:     ADCON0bits.CHS = 0b0000;
   329  000094  0EC3               	movlw	-61
   330  000096  16C2               	andwf	194,f,c	;volatile
   331                           
   332                           ;ADC_Libreria.c: 11:     ADCON2bits.ADCS = 0b101;
   333  000098  50C0               	movf	192,w,c	;volatile
   334  00009A  0BF8               	andlw	-8
   335  00009C  0905               	iorlw	5
   336  00009E  6EC0               	movwf	192,c	;volatile
   337                           
   338                           ;ADC_Libreria.c: 13:     ADCON2bits.ACQT = 0b010;
   339  0000A0  50C0               	movf	192,w,c	;volatile
   340  0000A2  0BC7               	andlw	-57
   341  0000A4  0910               	iorlw	16
   342  0000A6  6EC0               	movwf	192,c	;volatile
   343  0000A8                     
   344                           ;ADC_Libreria.c: 15:     ADCON2bits.ADFM = 0;
   345  0000A8  9EC0               	bcf	192,7,c	;volatile
   346  0000AA                     
   347                           ;ADC_Libreria.c: 16:     ADCON0bits.ADON = 1;
   348  0000AA  80C2               	bsf	194,0,c	;volatile
   349  0000AC  0012               	return		;funcret
   350  0000AE                     __end_of_ADC_Init:
   351                           	callstack 0
   352                           
   353 ;; *************** function _INT1_ISR *****************
   354 ;; Defined at:
   355 ;;		line 32 in file "Interrupcion.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		None
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   369 ;;      Params:         0       0       0       0       0       0       0       0       0
   370 ;;      Locals:         0       0       0       0       0       0       0       0       0
   371 ;;      Temps:          1       0       0       0       0       0       0       0       0
   372 ;;      Totals:         1       0       0       0       0       0       0       0       0
   373 ;;Total ram usage:        1 bytes
   374 ;; Hardware stack levels used:    1
   375 ;; Hardware stack levels required when called:    1
   376 ;; This function calls:
   377 ;;		Nothing
   378 ;; This function is called by:
   379 ;;		Interrupt level 1
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           	psect	intcodelo
   384  000018                     __pintcodelo:
   385                           	callstack 0
   386  000018                     _INT1_ISR:
   387                           	callstack 28
   388                           
   389                           ;incstack = 0
   390  000018  801A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   391  00001A  CFE0 F018          	movff	bsr,??_INT1_ISR
   392  00001E                     
   393                           ;Interrupcion.c: 37:     INTCON3bits.INT1F = 0;
   394  00001E  90F0               	bcf	240,0,c	;volatile
   395  000020  C018  FFE0         	movff	??_INT1_ISR,bsr
   396  000024  901A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   397  000026  0010               	retfie	
   398  000028                     __end_of_INT1_ISR:
   399                           	callstack 0
   400                           
   401 ;; *************** function _INT0_ISR *****************
   402 ;; Defined at:
   403 ;;		line 24 in file "Interrupcion.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		None
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   417 ;;      Params:         0       0       0       0       0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0       0       0       0       0
   420 ;;      Totals:         0       0       0       0       0       0       0       0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels used:    1
   423 ;; This function calls:
   424 ;;		Nothing
   425 ;; This function is called by:
   426 ;;		Interrupt level 2
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	intcode
   431  000008                     __pintcode:
   432                           	callstack 0
   433  000008                     _INT0_ISR:
   434                           	callstack 28
   435                           
   436                           ;incstack = 0
   437  000008  821A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   438  00000A  ED62  F000         	call	int_func,f	;refresh shadow registers
   439                           
   440                           	psect	intcode_body
   441  0000C4                     __pintcode_body:
   442                           	callstack 28
   443  0000C4                     int_func:
   444                           	callstack 28
   445  0000C4  0006               	pop		; remove dummy address from shadow register refresh
   446  0000C6                     
   447                           ;Interrupcion.c: 29:     INTCONbits.INT0IF = 0;
   448  0000C6  92F2               	bcf	242,1,c	;volatile
   449  0000C8  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   450  0000CA  0011               	retfie		f
   451  0000CC                     __end_of_INT0_ISR:
   452                           	callstack 0
   453  0000                     
   454                           	psect	rparam
   455  0000                     
   456                           	psect	temp
   457  00001A                     btemp:
   458                           	callstack 0
   459  00001A                     	ds	1
   460  0000                     int$flags	set	btemp
   461  0000                     wtemp8	set	btemp+1
   462  0000                     ttemp5	set	btemp+1
   463  0000                     ttemp6	set	btemp+4
   464  0000                     ttemp7	set	btemp+8
   465                           
   466                           	psect	idloc
   467                           
   468                           ;Config register IDLOC0 @ 0x200000
   469                           ;	unspecified, using default values
   470  200000                     	org	2097152
   471  200000  FF                 	db	255
   472                           
   473                           ;Config register IDLOC1 @ 0x200001
   474                           ;	unspecified, using default values
   475  200001                     	org	2097153
   476  200001  FF                 	db	255
   477                           
   478                           ;Config register IDLOC2 @ 0x200002
   479                           ;	unspecified, using default values
   480  200002                     	org	2097154
   481  200002  FF                 	db	255
   482                           
   483                           ;Config register IDLOC3 @ 0x200003
   484                           ;	unspecified, using default values
   485  200003                     	org	2097155
   486  200003  FF                 	db	255
   487                           
   488                           ;Config register IDLOC4 @ 0x200004
   489                           ;	unspecified, using default values
   490  200004                     	org	2097156
   491  200004  FF                 	db	255
   492                           
   493                           ;Config register IDLOC5 @ 0x200005
   494                           ;	unspecified, using default values
   495  200005                     	org	2097157
   496  200005  FF                 	db	255
   497                           
   498                           ;Config register IDLOC6 @ 0x200006
   499                           ;	unspecified, using default values
   500  200006                     	org	2097158
   501  200006  FF                 	db	255
   502                           
   503                           ;Config register IDLOC7 @ 0x200007
   504                           ;	unspecified, using default values
   505  200007                     	org	2097159
   506  200007  FF                 	db	255
   507                           
   508                           	psect	config
   509                           
   510                           ;Config register CONFIG1L @ 0x300000
   511                           ;	PLL Prescaler Selection bits
   512                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   513                           ;	System Clock Postscaler Selection bits
   514                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   515                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   516                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   517  300000                     	org	3145728
   518  300000  00                 	db	0
   519                           
   520                           ;Config register CONFIG1H @ 0x300001
   521                           ;	Oscillator Selection bits
   522                           ;	FOSC = HS, HS oscillator (HS)
   523                           ;	Fail-Safe Clock Monitor Enable bit
   524                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   525                           ;	Internal/External Oscillator Switchover bit
   526                           ;	IESO = OFF, Oscillator Switchover mode disabled
   527  300001                     	org	3145729
   528  300001  0C                 	db	12
   529                           
   530                           ;Config register CONFIG2L @ 0x300002
   531                           ;	Power-up Timer Enable bit
   532                           ;	PWRT = ON, PWRT enabled
   533                           ;	Brown-out Reset Enable bits
   534                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   535                           ;	Brown-out Reset Voltage bits
   536                           ;	BORV = 3, Minimum setting 2.05V
   537                           ;	USB Voltage Regulator Enable bit
   538                           ;	VREGEN = OFF, USB voltage regulator disabled
   539  300002                     	org	3145730
   540  300002  18                 	db	24
   541                           
   542                           ;Config register CONFIG2H @ 0x300003
   543                           ;	Watchdog Timer Enable bit
   544                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   545                           ;	Watchdog Timer Postscale Select bits
   546                           ;	WDTPS = 32768, 1:32768
   547  300003                     	org	3145731
   548  300003  1E                 	db	30
   549                           
   550                           ; Padding undefined space
   551  300004                     	org	3145732
   552  300004  FF                 	db	255
   553                           
   554                           ;Config register CONFIG3H @ 0x300005
   555                           ;	CCP2 MUX bit
   556                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   557                           ;	PORTB A/D Enable bit
   558                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   559                           ;	Low-Power Timer 1 Oscillator Enable bit
   560                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   561                           ;	MCLR Pin Enable bit
   562                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   563  300005                     	org	3145733
   564  300005  81                 	db	129
   565                           
   566                           ;Config register CONFIG4L @ 0x300006
   567                           ;	Stack Full/Underflow Reset Enable bit
   568                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   569                           ;	Single-Supply ICSP Enable bit
   570                           ;	LVP = ON, Single-Supply ICSP enabled
   571                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   572                           ;	ICPRT = OFF, ICPORT disabled
   573                           ;	Extended Instruction Set Enable bit
   574                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   575                           ;	Background Debugger Enable bit
   576                           ;	DEBUG = 0x1, unprogrammed default
   577  300006                     	org	3145734
   578  300006  84                 	db	132
   579                           
   580                           ; Padding undefined space
   581  300007                     	org	3145735
   582  300007  FF                 	db	255
   583                           
   584                           ;Config register CONFIG5L @ 0x300008
   585                           ;	Code Protection bit
   586                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   587                           ;	Code Protection bit
   588                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   589                           ;	Code Protection bit
   590                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   591                           ;	Code Protection bit
   592                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   593  300008                     	org	3145736
   594  300008  0F                 	db	15
   595                           
   596                           ;Config register CONFIG5H @ 0x300009
   597                           ;	Boot Block Code Protection bit
   598                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   599                           ;	Data EEPROM Code Protection bit
   600                           ;	CPD = OFF, Data EEPROM is not code-protected
   601  300009                     	org	3145737
   602  300009  C0                 	db	192
   603                           
   604                           ;Config register CONFIG6L @ 0x30000A
   605                           ;	Write Protection bit
   606                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   607                           ;	Write Protection bit
   608                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   609                           ;	Write Protection bit
   610                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   611                           ;	Write Protection bit
   612                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   613  30000A                     	org	3145738
   614  30000A  0F                 	db	15
   615                           
   616                           ;Config register CONFIG6H @ 0x30000B
   617                           ;	Configuration Register Write Protection bit
   618                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   619                           ;	Boot Block Write Protection bit
   620                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   621                           ;	Data EEPROM Write Protection bit
   622                           ;	WRTD = OFF, Data EEPROM is not write-protected
   623  30000B                     	org	3145739
   624  30000B  E0                 	db	224
   625                           
   626                           ;Config register CONFIG7L @ 0x30000C
   627                           ;	Table Read Protection bit
   628                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   629                           ;	Table Read Protection bit
   630                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   631                           ;	Table Read Protection bit
   632                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   633                           ;	Table Read Protection bit
   634                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   635  30000C                     	org	3145740
   636  30000C  0F                 	db	15
   637                           
   638                           ;Config register CONFIG7H @ 0x30000D
   639                           ;	Boot Block Table Read Protection bit
   640                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   641  30000D                     	org	3145741
   642  30000D  40                 	db	64
   643                           tosu	equ	0xFFF
   644                           tosh	equ	0xFFE
   645                           tosl	equ	0xFFD
   646                           stkptr	equ	0xFFC
   647                           pclatu	equ	0xFFB
   648                           pclath	equ	0xFFA
   649                           pcl	equ	0xFF9
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           prodh	equ	0xFF4
   655                           prodl	equ	0xFF3
   656                           indf0	equ	0xFEF
   657                           postinc0	equ	0xFEE
   658                           postdec0	equ	0xFED
   659                           preinc0	equ	0xFEC
   660                           plusw0	equ	0xFEB
   661                           fsr0h	equ	0xFEA
   662                           fsr0l	equ	0xFE9
   663                           wreg	equ	0xFE8
   664                           indf1	equ	0xFE7
   665                           postinc1	equ	0xFE6
   666                           postdec1	equ	0xFE5
   667                           preinc1	equ	0xFE4
   668                           plusw1	equ	0xFE3
   669                           fsr1h	equ	0xFE2
   670                           fsr1l	equ	0xFE1
   671                           bsr	equ	0xFE0
   672                           indf2	equ	0xFDF
   673                           postinc2	equ	0xFDE
   674                           postdec2	equ	0xFDD
   675                           preinc2	equ	0xFDC
   676                           plusw2	equ	0xFDB
   677                           fsr2h	equ	0xFDA
   678                           fsr2l	equ	0xFD9
   679                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         21
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              1 COMRAM     1     1      0
                           _ADC_Init
                           _PWM_Init
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT1_ISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _PWM_Init

 _INT1_ISR (ROOT)

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      2      19       1       26.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      20        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Feb 15 21:32:45 2021

                      _x 0015                       l11 00AC                       l92 0040  
                     u57 0052                       bsr 000FE0                      l108 0086  
                    l902 0044                      l904 004C                      l834 0062  
                    l836 0072                      l838 007C                      l784 0088  
                    l786 00A8                      l890 0030                      l788 00AA  
                    l892 0038                      l888 002C                      _PR2 000FCB  
                    _vin 0011                      wreg 000FE8                     _LATD 000F8C  
                   i1l37 0020                     i2l32 00C8                     _main 002C  
                   btemp 001A         __end_of_ADC_Init 00AE                     start 0028  
           ___param_bank 000000         __end_of_INT0_ISR 00CC         __end_of_INT1_ISR 0028  
                  ?_main 0018                    _ADRES 000FC3                    i1l850 001E  
                  i2l848 00C6                    _TRISD 000F95                    _datos 0001  
       __end_of_PWM_Init 0088                    ttemp5 001B                    ttemp6 001E  
                  ttemp7 0022                    wtemp8 001B          __initialization 00AE  
           __end_of_main 0062                   ??_main 0019            __activetblptr 000000  
                 _CCPR1L 000FBE                   clear_0 00B4                ?_ADC_Init 0018  
             __accesstop 0060  __end_of__initialization 00BA                ?_INT0_ISR 0018  
              ?_INT1_ISR 0018            ___rparam_used 000001           __pcstackCOMRAM 0018  
              ?_PWM_Init 0018               ??_ADC_Init 0019               ??_INT0_ISR 0018  
             ??_INT1_ISR 0018               __pnvCOMRAM 0016               ??_PWM_Init 0019  
                __Hparam 0000                  __Lparam 0000                  __pcinit 00AE  
                __ramtop 0800                  __ptext0 002C                  __ptext1 0062  
                __ptext2 0088                _T2CONbits 000FCA           __pintcode_body 00C4  
   end_of_initialization 00BA                  int_func 00C4                  postinc0 000FEE  
              _TRISAbits 000F92                _TRISCbits 000F94        __size_of_ADC_Init 0026  
            _CCP1CONbits 000FBD        __size_of_INT0_ISR 00C4        __size_of_INT1_ISR 0010  
      __size_of_PWM_Init 0026      start_initialization 00AE              __pbssCOMRAM 0001  
              __pintcode 0008              __pintcodelo 0018                 _ADC_Init 0088  
               _INT0_ISR 0008                 _INT1_ISR 0018                 _LATDbits 000F8C  
              _valor_adc 0016               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0                 _PWM_Init 0062              _INTCON3bits 000FF0  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 0036  
               int$flags 001A               _INTCONbits 000FF2                 intlevel1 0000  
               intlevel2 0000  
