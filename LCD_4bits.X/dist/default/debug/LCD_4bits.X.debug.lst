

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Feb 08 20:26:36 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _LATDbits	set	3980
    59  0000                     _LATD	set	3980
    60  0000                     _TRISD	set	3989
    61  0000                     _RCONbits	set	4048
    62  0000                     _INTCON2bits	set	4081
    63  0000                     _INTCON3bits	set	4080
    64  0000                     _INTCONbits	set	4082
    65  0000                     _TRISBbits	set	3987
    66                           
    67                           	psect	smallconst
    68  000800                     __psmallconst:
    69                           	callstack 0
    70  000800  00                 	db	0
    71  000801                     STR_1:
    72  000801  50                 	db	80	;'P'
    73  000802  69                 	db	105	;'i'
    74  000803  63                 	db	99	;'c'
    75  000804  31                 	db	49	;'1'
    76  000805  38                 	db	56	;'8'
    77  000806  66                 	db	102	;'f'
    78  000807  34                 	db	52	;'4'
    79  000808  35                 	db	53	;'5'
    80  000809  00                 	db	0
    81  00080A  00                 	db	0	; dummy byte at the end
    82  0000                     
    83                           ; #config settings
    84                           
    85                           	psect	cinit
    86  000944                     __pcinit:
    87                           	callstack 0
    88  000944                     start_initialization:
    89                           	callstack 0
    90  000944                     __initialization:
    91                           	callstack 0
    92                           
    93                           ; Clear objects allocated to COMRAM (1 bytes)
    94  000944  6A0A               	clrf	__pbssCOMRAM& (0+255),c
    95  000946                     end_of_initialization:
    96                           	callstack 0
    97  000946                     __end_of__initialization:
    98                           	callstack 0
    99  000946  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   100  000948  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   101  00094A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   102  00094C  6EF8               	movwf	tblptru,c
   103  00094E  0E08               	movlw	high __Lsmallconst
   104  000950  6EF7               	movwf	tblptrh,c
   105  000952  0100               	movlb	0
   106  000954  EF06  F004         	goto	_main	;jump to C main() function
   107                           
   108                           	psect	bssCOMRAM
   109  00000A                     __pbssCOMRAM:
   110                           	callstack 0
   111  00000A                     _x:
   112                           	callstack 0
   113  00000A                     	ds	1
   114                           
   115                           	psect	cstackCOMRAM
   116  000001                     __pcstackCOMRAM:
   117                           	callstack 0
   118  000001                     ??_INT1_ISR:
   119  000001                     
   120                           ; 1 bytes @ 0x0
   121  000001                     	ds	3
   122  000004                     ??_LCD_Caracter:
   123  000004                     ??_LCD_Comando:
   124                           
   125                           ; 1 bytes @ 0x3
   126  000004                     	ds	1
   127  000005                     LCD_Comando@cmd:
   128                           	callstack 0
   129  000005                     LCD_Caracter@data:
   130                           	callstack 0
   131                           
   132                           ; 1 bytes @ 0x4
   133  000005                     	ds	1
   134  000006                     LCD_XY@x:
   135                           	callstack 0
   136  000006                     LCD_Cadena@dat:
   137                           	callstack 0
   138                           
   139                           ; 2 bytes @ 0x5
   140  000006                     	ds	2
   141  000008                     LCD_XY@y:
   142                           	callstack 0
   143                           
   144                           ; 2 bytes @ 0x7
   145  000008                     	ds	2
   146  00000A                     
   147                           ; 1 bytes @ 0x9
   148 ;;
   149 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   150 ;;
   151 ;; *************** function _main *****************
   152 ;; Defined at:
   153 ;;		line 14 in file "Programa_principal.c"
   154 ;; Parameters:    Size  Location     Type
   155 ;;		None
   156 ;; Auto vars:     Size  Location     Type
   157 ;;		None
   158 ;; Return value:  Size  Location     Type
   159 ;;                  1    wreg      void 
   160 ;; Registers used:
   161 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   162 ;; Tracked objects:
   163 ;;		On entry : 0/0
   164 ;;		On exit  : 0/0
   165 ;;		Unchanged: 0/0
   166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   167 ;;      Params:         0       0       0       0       0       0       0       0       0
   168 ;;      Locals:         0       0       0       0       0       0       0       0       0
   169 ;;      Temps:          0       0       0       0       0       0       0       0       0
   170 ;;      Totals:         0       0       0       0       0       0       0       0       0
   171 ;;Total ram usage:        0 bytes
   172 ;; Hardware stack levels required when called:    4
   173 ;; This function calls:
   174 ;;		_LCD_Cadena
   175 ;;		_LCD_Caracter
   176 ;;		_LCD_Init
   177 ;;		_LCD_XY
   178 ;; This function is called by:
   179 ;;		Startup code after reset
   180 ;; This function uses a non-reentrant model
   181 ;;
   182                           
   183                           	psect	text0
   184  00080C                     __ptext0:
   185                           	callstack 0
   186  00080C                     _main:
   187                           	callstack 27
   188  00080C                     
   189                           ;Programa_principal.c: 15:     LCD_Init();
   190  00080C  EC76  F004         	call	_LCD_Init	;wreg free
   191                           
   192                           ;Programa_principal.c: 16:     LCD_XY(1,10);
   193  000810  0E00               	movlw	0
   194  000812  6E07               	movwf	(LCD_XY@x+1)^0,c
   195  000814  0E01               	movlw	1
   196  000816  6E06               	movwf	LCD_XY@x^0,c
   197  000818  0E00               	movlw	0
   198  00081A  6E09               	movwf	(LCD_XY@y+1)^0,c
   199  00081C  0E0A               	movlw	10
   200  00081E  6E08               	movwf	LCD_XY@y^0,c
   201  000820  EC8E  F004         	call	_LCD_XY	;wreg free
   202                           
   203                           ;Programa_principal.c: 17:     LCD_Caracter('q');
   204  000824  0E71               	movlw	113
   205  000826  EC5D  F004         	call	_LCD_Caracter
   206                           
   207                           ;Programa_principal.c: 18:     LCD_XY(0,0);
   208  00082A  0E00               	movlw	0
   209  00082C  6E07               	movwf	(LCD_XY@x+1)^0,c
   210  00082E  0E00               	movlw	0
   211  000830  6E06               	movwf	LCD_XY@x^0,c
   212  000832  0E00               	movlw	0
   213  000834  6E09               	movwf	(LCD_XY@y+1)^0,c
   214  000836  0E00               	movlw	0
   215  000838  6E08               	movwf	LCD_XY@y^0,c
   216  00083A  EC8E  F004         	call	_LCD_XY	;wreg free
   217  00083E                     
   218                           ;Programa_principal.c: 19:     LCD_Cadena("Pic18f45");
   219  00083E  0E01               	movlw	low STR_1
   220  000840  6E06               	movwf	LCD_Cadena@dat^0,c
   221  000842  0E08               	movlw	high STR_1
   222  000844  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
   223  000846  EC29  F004         	call	_LCD_Cadena	;wreg free
   224  00084A                     l38:
   225  00084A  EF25  F004         	goto	l38
   226  00084E  EF1E  F000         	goto	start
   227  000852                     __end_of_main:
   228                           	callstack 0
   229                           
   230 ;; *************** function _LCD_XY *****************
   231 ;; Defined at:
   232 ;;		line 63 in file "LCD_Libreria.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;  x               2    5[COMRAM] int 
   235 ;;  y               2    7[COMRAM] int 
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : 0/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   247 ;;      Params:         4       0       0       0       0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0       0       0       0       0
   249 ;;      Temps:          0       0       0       0       0       0       0       0       0
   250 ;;      Totals:         4       0       0       0       0       0       0       0       0
   251 ;;Total ram usage:        4 bytes
   252 ;; Hardware stack levels used:    1
   253 ;; Hardware stack levels required when called:    3
   254 ;; This function calls:
   255 ;;		_LCD_Comando
   256 ;; This function is called by:
   257 ;;		_main
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           	psect	text1
   262  00091C                     __ptext1:
   263                           	callstack 0
   264  00091C                     _LCD_XY:
   265                           	callstack 27
   266  00091C                     
   267                           ;LCD_Libreria.c: 64:     if(x == 1){
   268  00091C  0406               	decf	LCD_XY@x^0,w,c
   269  00091E  1007               	iorwf	(LCD_XY@x+1)^0,w,c
   270  000920  A4D8               	btfss	status,2,c
   271  000922  EF95  F004         	goto	u31
   272  000926  EF97  F004         	goto	u30
   273  00092A                     u31:
   274  00092A  EF9D  F004         	goto	l821
   275  00092E                     u30:
   276  00092E                     
   277                           ;LCD_Libreria.c: 65:         LCD_Comando(0xC0+y);
   278  00092E  5008               	movf	LCD_XY@y^0,w,c
   279  000930  0FC0               	addlw	192
   280  000932  EC44  F004         	call	_LCD_Comando
   281                           
   282                           ;LCD_Libreria.c: 66:     }
   283  000936  EFA1  F004         	goto	l60
   284  00093A                     l821:
   285                           
   286                           ;LCD_Libreria.c: 68:         LCD_Comando(0x80+y);
   287  00093A  5008               	movf	LCD_XY@y^0,w,c
   288  00093C  0F80               	addlw	128
   289  00093E  EC44  F004         	call	_LCD_Comando
   290  000942                     l60:
   291  000942  0012               	return		;funcret
   292  000944                     __end_of_LCD_XY:
   293                           	callstack 0
   294                           
   295 ;; *************** function _LCD_Init *****************
   296 ;; Defined at:
   297 ;;		line 6 in file "LCD_Libreria.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, status,2, status,0, cstack
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   311 ;;      Params:         0       0       0       0       0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0       0       0       0       0
   313 ;;      Temps:          0       0       0       0       0       0       0       0       0
   314 ;;      Totals:         0       0       0       0       0       0       0       0       0
   315 ;;Total ram usage:        0 bytes
   316 ;; Hardware stack levels used:    1
   317 ;; Hardware stack levels required when called:    3
   318 ;; This function calls:
   319 ;;		_LCD_Comando
   320 ;; This function is called by:
   321 ;;		_main
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           	psect	text2
   326  0008EC                     __ptext2:
   327                           	callstack 0
   328  0008EC                     _LCD_Init:
   329                           	callstack 27
   330  0008EC                     
   331                           ;LCD_Libreria.c: 8:     TRISD = 0x00;
   332  0008EC  0E00               	movlw	0
   333  0008EE  6E95               	movwf	149,c	;volatile
   334  0008F0                     
   335                           ;LCD_Libreria.c: 9:     LCD_Comando(0x30);
   336  0008F0  0E30               	movlw	48
   337  0008F2  EC44  F004         	call	_LCD_Comando
   338  0008F6                     
   339                           ;LCD_Libreria.c: 11:     LCD_Comando(0x30);
   340  0008F6  0E30               	movlw	48
   341  0008F8  EC44  F004         	call	_LCD_Comando
   342  0008FC                     
   343                           ;LCD_Libreria.c: 13:     LCD_Comando(0x32);
   344  0008FC  0E32               	movlw	50
   345  0008FE  EC44  F004         	call	_LCD_Comando
   346  000902                     
   347                           ;LCD_Libreria.c: 14:     LCD_Comando(0x28);
   348  000902  0E28               	movlw	40
   349  000904  EC44  F004         	call	_LCD_Comando
   350  000908                     
   351                           ;LCD_Libreria.c: 15:     LCD_Comando(0x0C);
   352  000908  0E0C               	movlw	12
   353  00090A  EC44  F004         	call	_LCD_Comando
   354  00090E                     
   355                           ;LCD_Libreria.c: 16:     LCD_Comando(0x01);
   356  00090E  0E01               	movlw	1
   357  000910  EC44  F004         	call	_LCD_Comando
   358  000914                     
   359                           ;LCD_Libreria.c: 17:     LCD_Comando(0x06);
   360  000914  0E06               	movlw	6
   361  000916  EC44  F004         	call	_LCD_Comando
   362  00091A  0012               	return		;funcret
   363  00091C                     __end_of_LCD_Init:
   364                           	callstack 0
   365                           
   366 ;; *************** function _LCD_Comando *****************
   367 ;; Defined at:
   368 ;;		line 20 in file "LCD_Libreria.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;  cmd             1    wreg     unsigned char 
   371 ;; Auto vars:     Size  Location     Type
   372 ;;  cmd             1    4[COMRAM] unsigned char 
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   382 ;;      Params:         0       0       0       0       0       0       0       0       0
   383 ;;      Locals:         1       0       0       0       0       0       0       0       0
   384 ;;      Temps:          1       0       0       0       0       0       0       0       0
   385 ;;      Totals:         2       0       0       0       0       0       0       0       0
   386 ;;Total ram usage:        2 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:    2
   389 ;; This function calls:
   390 ;;		Nothing
   391 ;; This function is called by:
   392 ;;		_LCD_Init
   393 ;;		_LCD_XY
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           	psect	text3
   398  000888                     __ptext3:
   399                           	callstack 0
   400  000888                     _LCD_Comando:
   401                           	callstack 27
   402                           
   403                           ;incstack = 0
   404                           ;LCD_Comando@cmd stored from wreg
   405  000888  6E05               	movwf	LCD_Comando@cmd^0,c
   406  00088A                     
   407                           ;LCD_Libreria.c: 22:     LATD = (LATD&0X0F) | (cmd&0xF0);
   408  00088A  C005  F004         	movff	LCD_Comando@cmd,??_LCD_Comando
   409  00088E  0EF0               	movlw	240
   410  000890  1604               	andwf	??_LCD_Comando^0,f,c
   411  000892  508C               	movf	140,w,c	;volatile
   412  000894  0B0F               	andlw	15
   413  000896  1004               	iorwf	??_LCD_Comando^0,w,c
   414  000898  6E8C               	movwf	140,c	;volatile
   415  00089A                     
   416                           ;LCD_Libreria.c: 39:     LATDbits.LATD2 = 0;
   417  00089A  948C               	bcf	140,2,c	;volatile
   418  00089C                     
   419                           ;LCD_Libreria.c: 41:     LATDbits.LATD3 = 1;
   420  00089C  868C               	bsf	140,3,c	;volatile
   421  00089E                     
   422                           ;LCD_Libreria.c: 43:     LATDbits.LATD3 = 0;
   423  00089E  968C               	bcf	140,3,c	;volatile
   424                           
   425                           ;LCD_Libreria.c: 45:     LATD &= 0X0F;
   426  0008A0  0E0F               	movlw	15
   427  0008A2  168C               	andwf	140,f,c	;volatile
   428                           
   429                           ;LCD_Libreria.c: 46:     LATD |= ((cmd&0x0F)<<4);
   430  0008A4  C005  F004         	movff	LCD_Comando@cmd,??_LCD_Comando
   431  0008A8  0E0F               	movlw	15
   432  0008AA  1604               	andwf	??_LCD_Comando^0,f,c
   433  0008AC  3804               	swapf	??_LCD_Comando^0,w,c
   434  0008AE  0BF0               	andlw	240
   435  0008B0  128C               	iorwf	140,f,c	;volatile
   436  0008B2                     
   437                           ;LCD_Libreria.c: 56:     LATDbits.LATD2 = 0;
   438  0008B2  948C               	bcf	140,2,c	;volatile
   439  0008B4                     
   440                           ;LCD_Libreria.c: 58:     LATDbits.LATD3 = 1;
   441  0008B4  868C               	bsf	140,3,c	;volatile
   442  0008B6                     
   443                           ;LCD_Libreria.c: 60:     LATDbits.LATD3 = 0;
   444  0008B6  968C               	bcf	140,3,c	;volatile
   445  0008B8  0012               	return		;funcret
   446  0008BA                     __end_of_LCD_Comando:
   447                           	callstack 0
   448                           
   449 ;; *************** function _LCD_Cadena *****************
   450 ;; Defined at:
   451 ;;		line 92 in file "LCD_Libreria.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;  dat             2    5[COMRAM] PTR unsigned char 
   454 ;;		 -> STR_1(9), 
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   466 ;;      Params:         2       0       0       0       0       0       0       0       0
   467 ;;      Locals:         0       0       0       0       0       0       0       0       0
   468 ;;      Temps:          0       0       0       0       0       0       0       0       0
   469 ;;      Totals:         2       0       0       0       0       0       0       0       0
   470 ;;Total ram usage:        2 bytes
   471 ;; Hardware stack levels used:    1
   472 ;; Hardware stack levels required when called:    3
   473 ;; This function calls:
   474 ;;		_LCD_Caracter
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           	psect	text4
   481  000852                     __ptext4:
   482                           	callstack 0
   483  000852                     _LCD_Cadena:
   484                           	callstack 27
   485  000852                     
   486                           ;LCD_Libreria.c: 95:     while(*dat != '\0'){
   487  000852  EF35  F004         	goto	l829
   488  000856                     l825:
   489                           
   490                           ;LCD_Libreria.c: 96:         LCD_Caracter(*dat);
   491  000856  C006  FFF6         	movff	LCD_Cadena@dat,tblptrl
   492  00085A  C007  FFF7         	movff	LCD_Cadena@dat+1,tblptrh
   493  00085E                     	if	0	;tblptru may be non-zero
   494  00085E                     	endif
   495  00085E                     	if	0	;tblptru may be non-zero
   496  00085E                     	endif
   497  00085E  0008               	tblrd		*
   498  000860  50F5               	movf	tablat,w,c
   499  000862  EC5D  F004         	call	_LCD_Caracter
   500  000866                     
   501                           ;LCD_Libreria.c: 97:         dat++;
   502  000866  4A06               	infsnz	LCD_Cadena@dat^0,f,c
   503  000868  2A07               	incf	(LCD_Cadena@dat+1)^0,f,c
   504  00086A                     l829:
   505                           
   506                           ;LCD_Libreria.c: 95:     while(*dat != '\0'){
   507  00086A  C006  FFF6         	movff	LCD_Cadena@dat,tblptrl
   508  00086E  C007  FFF7         	movff	LCD_Cadena@dat+1,tblptrh
   509  000872                     	if	0	;tblptru may be non-zero
   510  000872                     	endif
   511  000872                     	if	0	;tblptru may be non-zero
   512  000872                     	endif
   513  000872  0008               	tblrd		*
   514  000874  50F5               	movf	tablat,w,c
   515  000876  0900               	iorlw	0
   516  000878  A4D8               	btfss	status,2,c
   517  00087A  EF41  F004         	goto	u41
   518  00087E  EF43  F004         	goto	u40
   519  000882                     u41:
   520  000882  EF2B  F004         	goto	l825
   521  000886                     u40:
   522  000886  0012               	return		;funcret
   523  000888                     __end_of_LCD_Cadena:
   524                           	callstack 0
   525                           
   526 ;; *************** function _LCD_Caracter *****************
   527 ;; Defined at:
   528 ;;		line 72 in file "LCD_Libreria.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;  data            1    wreg     unsigned char 
   531 ;; Auto vars:     Size  Location     Type
   532 ;;  data            1    4[COMRAM] unsigned char 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   542 ;;      Params:         0       0       0       0       0       0       0       0       0
   543 ;;      Locals:         1       0       0       0       0       0       0       0       0
   544 ;;      Temps:          1       0       0       0       0       0       0       0       0
   545 ;;      Totals:         2       0       0       0       0       0       0       0       0
   546 ;;Total ram usage:        2 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; Hardware stack levels required when called:    2
   549 ;; This function calls:
   550 ;;		Nothing
   551 ;; This function is called by:
   552 ;;		_main
   553 ;;		_LCD_Cadena
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text5
   558  0008BA                     __ptext5:
   559                           	callstack 0
   560  0008BA                     _LCD_Caracter:
   561                           	callstack 28
   562                           
   563                           ;incstack = 0
   564                           ;LCD_Caracter@data stored from wreg
   565  0008BA  6E05               	movwf	LCD_Caracter@data^0,c
   566  0008BC                     
   567                           ;LCD_Libreria.c: 73:     LATD = (LATD&0X0F) | (data&0xF0);
   568  0008BC  C005  F004         	movff	LCD_Caracter@data,??_LCD_Caracter
   569  0008C0  0EF0               	movlw	240
   570  0008C2  1604               	andwf	??_LCD_Caracter^0,f,c
   571  0008C4  508C               	movf	140,w,c	;volatile
   572  0008C6  0B0F               	andlw	15
   573  0008C8  1004               	iorwf	??_LCD_Caracter^0,w,c
   574  0008CA  6E8C               	movwf	140,c	;volatile
   575  0008CC                     
   576                           ;LCD_Libreria.c: 75:     LATDbits.LATD2 = 1;
   577  0008CC  848C               	bsf	140,2,c	;volatile
   578  0008CE                     
   579                           ;LCD_Libreria.c: 77:     LATDbits.LATD3 = 1;
   580  0008CE  868C               	bsf	140,3,c	;volatile
   581  0008D0                     
   582                           ;LCD_Libreria.c: 79:     LATDbits.LATD3 = 0;
   583  0008D0  968C               	bcf	140,3,c	;volatile
   584                           
   585                           ;LCD_Libreria.c: 81:     LATD &= 0X0F;
   586  0008D2  0E0F               	movlw	15
   587  0008D4  168C               	andwf	140,f,c	;volatile
   588                           
   589                           ;LCD_Libreria.c: 82:     LATD |= ((data&0x0F)<<4);
   590  0008D6  C005  F004         	movff	LCD_Caracter@data,??_LCD_Caracter
   591  0008DA  0E0F               	movlw	15
   592  0008DC  1604               	andwf	??_LCD_Caracter^0,f,c
   593  0008DE  3804               	swapf	??_LCD_Caracter^0,w,c
   594  0008E0  0BF0               	andlw	240
   595  0008E2  128C               	iorwf	140,f,c	;volatile
   596  0008E4                     
   597                           ;LCD_Libreria.c: 84:     LATDbits.LATD2 = 1;
   598  0008E4  848C               	bsf	140,2,c	;volatile
   599  0008E6                     
   600                           ;LCD_Libreria.c: 86:     LATDbits.LATD3 = 1;
   601  0008E6  868C               	bsf	140,3,c	;volatile
   602  0008E8                     
   603                           ;LCD_Libreria.c: 88:     LATDbits.LATD3 = 0;
   604  0008E8  968C               	bcf	140,3,c	;volatile
   605  0008EA  0012               	return		;funcret
   606  0008EC                     __end_of_LCD_Caracter:
   607                           	callstack 0
   608                           
   609 ;; *************** function _INT1_ISR *****************
   610 ;; Defined at:
   611 ;;		line 30 in file "Interrupcion.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, status,2
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   625 ;;      Params:         0       0       0       0       0       0       0       0       0
   626 ;;      Locals:         0       0       0       0       0       0       0       0       0
   627 ;;      Temps:          3       0       0       0       0       0       0       0       0
   628 ;;      Totals:         3       0       0       0       0       0       0       0       0
   629 ;;Total ram usage:        3 bytes
   630 ;; Hardware stack levels used:    1
   631 ;; Hardware stack levels required when called:    1
   632 ;; This function calls:
   633 ;;		Nothing
   634 ;; This function is called by:
   635 ;;		Interrupt level 1
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	intcodelo
   640  000018                     __pintcodelo:
   641                           	callstack 0
   642  000018                     _INT1_ISR:
   643                           	callstack 27
   644                           
   645                           ;incstack = 0
   646  000018  800B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   647  00001A  CFD8 F001          	movff	status,??_INT1_ISR
   648  00001E  CFE8 F002          	movff	wreg,??_INT1_ISR+1
   649  000022  CFE0 F003          	movff	bsr,??_INT1_ISR+2
   650  000026                     
   651                           ;Interrupcion.c: 31:     x = 2;
   652  000026  0E02               	movlw	2
   653  000028  6E0A               	movwf	_x^0,c
   654  00002A                     
   655                           ;Interrupcion.c: 33:     INTCON3bits.INT1F = 0;
   656  00002A  90F0               	bcf	240,0,c	;volatile
   657  00002C  C003  FFE0         	movff	??_INT1_ISR+2,bsr
   658  000030  C002  FFE8         	movff	??_INT1_ISR+1,wreg
   659  000034  C001  FFD8         	movff	??_INT1_ISR,status
   660  000038  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   661  00003A  0010               	retfie	
   662  00003C                     __end_of_INT1_ISR:
   663                           	callstack 0
   664                           
   665 ;; *************** function _INT0_ISR *****************
   666 ;; Defined at:
   667 ;;		line 24 in file "Interrupcion.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, status,2
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   681 ;;      Params:         0       0       0       0       0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0       0       0       0       0
   684 ;;      Totals:         0       0       0       0       0       0       0       0       0
   685 ;;Total ram usage:        0 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		Interrupt level 2
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	intcode
   695  000008                     __pintcode:
   696                           	callstack 0
   697  000008                     _INT0_ISR:
   698                           	callstack 27
   699                           
   700                           ;incstack = 0
   701  000008  820B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   702  00000A  EDAC  F004         	call	int_func,f	;refresh shadow registers
   703                           
   704                           	psect	intcode_body
   705  000958                     __pintcode_body:
   706                           	callstack 27
   707  000958                     int_func:
   708                           	callstack 27
   709  000958  0006               	pop		; remove dummy address from shadow register refresh
   710  00095A                     
   711                           ;Interrupcion.c: 25:     x = 1;
   712  00095A  0E01               	movlw	1
   713  00095C  6E0A               	movwf	_x^0,c
   714  00095E                     
   715                           ;Interrupcion.c: 27:     INTCONbits.INT0IF = 0;
   716  00095E  92F2               	bcf	242,1,c	;volatile
   717  000960  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   718  000962  0011               	retfie		f
   719  000964                     __end_of_INT0_ISR:
   720                           	callstack 0
   721                           
   722                           	psect	rparam
   723  0000                     
   724                           	psect	temp
   725  00000B                     btemp:
   726                           	callstack 0
   727  00000B                     	ds	1
   728  0000                     int$flags	set	btemp
   729  0000                     wtemp8	set	btemp+1
   730  0000                     ttemp5	set	btemp+1
   731  0000                     ttemp6	set	btemp+4
   732  0000                     ttemp7	set	btemp+8
   733                           
   734                           	psect	idloc
   735                           
   736                           ;Config register IDLOC0 @ 0x200000
   737                           ;	unspecified, using default values
   738  200000                     	org	2097152
   739  200000  FF                 	db	255
   740                           
   741                           ;Config register IDLOC1 @ 0x200001
   742                           ;	unspecified, using default values
   743  200001                     	org	2097153
   744  200001  FF                 	db	255
   745                           
   746                           ;Config register IDLOC2 @ 0x200002
   747                           ;	unspecified, using default values
   748  200002                     	org	2097154
   749  200002  FF                 	db	255
   750                           
   751                           ;Config register IDLOC3 @ 0x200003
   752                           ;	unspecified, using default values
   753  200003                     	org	2097155
   754  200003  FF                 	db	255
   755                           
   756                           ;Config register IDLOC4 @ 0x200004
   757                           ;	unspecified, using default values
   758  200004                     	org	2097156
   759  200004  FF                 	db	255
   760                           
   761                           ;Config register IDLOC5 @ 0x200005
   762                           ;	unspecified, using default values
   763  200005                     	org	2097157
   764  200005  FF                 	db	255
   765                           
   766                           ;Config register IDLOC6 @ 0x200006
   767                           ;	unspecified, using default values
   768  200006                     	org	2097158
   769  200006  FF                 	db	255
   770                           
   771                           ;Config register IDLOC7 @ 0x200007
   772                           ;	unspecified, using default values
   773  200007                     	org	2097159
   774  200007  FF                 	db	255
   775                           
   776                           	psect	config
   777                           
   778                           ;Config register CONFIG1L @ 0x300000
   779                           ;	PLL Prescaler Selection bits
   780                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   781                           ;	System Clock Postscaler Selection bits
   782                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   783                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   784                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   785  300000                     	org	3145728
   786  300000  00                 	db	0
   787                           
   788                           ;Config register CONFIG1H @ 0x300001
   789                           ;	Oscillator Selection bits
   790                           ;	FOSC = HS, HS oscillator (HS)
   791                           ;	Fail-Safe Clock Monitor Enable bit
   792                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   793                           ;	Internal/External Oscillator Switchover bit
   794                           ;	IESO = OFF, Oscillator Switchover mode disabled
   795  300001                     	org	3145729
   796  300001  0C                 	db	12
   797                           
   798                           ;Config register CONFIG2L @ 0x300002
   799                           ;	Power-up Timer Enable bit
   800                           ;	PWRT = ON, PWRT enabled
   801                           ;	Brown-out Reset Enable bits
   802                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   803                           ;	Brown-out Reset Voltage bits
   804                           ;	BORV = 3, Minimum setting 2.05V
   805                           ;	USB Voltage Regulator Enable bit
   806                           ;	VREGEN = OFF, USB voltage regulator disabled
   807  300002                     	org	3145730
   808  300002  18                 	db	24
   809                           
   810                           ;Config register CONFIG2H @ 0x300003
   811                           ;	Watchdog Timer Enable bit
   812                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   813                           ;	Watchdog Timer Postscale Select bits
   814                           ;	WDTPS = 32768, 1:32768
   815  300003                     	org	3145731
   816  300003  1E                 	db	30
   817                           
   818                           ; Padding undefined space
   819  300004                     	org	3145732
   820  300004  FF                 	db	255
   821                           
   822                           ;Config register CONFIG3H @ 0x300005
   823                           ;	CCP2 MUX bit
   824                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   825                           ;	PORTB A/D Enable bit
   826                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   827                           ;	Low-Power Timer 1 Oscillator Enable bit
   828                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   829                           ;	MCLR Pin Enable bit
   830                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   831  300005                     	org	3145733
   832  300005  81                 	db	129
   833                           
   834                           ;Config register CONFIG4L @ 0x300006
   835                           ;	Stack Full/Underflow Reset Enable bit
   836                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   837                           ;	Single-Supply ICSP Enable bit
   838                           ;	LVP = ON, Single-Supply ICSP enabled
   839                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   840                           ;	ICPRT = OFF, ICPORT disabled
   841                           ;	Extended Instruction Set Enable bit
   842                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   843                           ;	Background Debugger Enable bit
   844                           ;	DEBUG = 0x1, unprogrammed default
   845  300006                     	org	3145734
   846  300006  84                 	db	132
   847                           
   848                           ; Padding undefined space
   849  300007                     	org	3145735
   850  300007  FF                 	db	255
   851                           
   852                           ;Config register CONFIG5L @ 0x300008
   853                           ;	Code Protection bit
   854                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   855                           ;	Code Protection bit
   856                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   857                           ;	Code Protection bit
   858                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   859                           ;	Code Protection bit
   860                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   861  300008                     	org	3145736
   862  300008  0F                 	db	15
   863                           
   864                           ;Config register CONFIG5H @ 0x300009
   865                           ;	Boot Block Code Protection bit
   866                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   867                           ;	Data EEPROM Code Protection bit
   868                           ;	CPD = OFF, Data EEPROM is not code-protected
   869  300009                     	org	3145737
   870  300009  C0                 	db	192
   871                           
   872                           ;Config register CONFIG6L @ 0x30000A
   873                           ;	Write Protection bit
   874                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   875                           ;	Write Protection bit
   876                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   877                           ;	Write Protection bit
   878                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   879                           ;	Write Protection bit
   880                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   881  30000A                     	org	3145738
   882  30000A  0F                 	db	15
   883                           
   884                           ;Config register CONFIG6H @ 0x30000B
   885                           ;	Configuration Register Write Protection bit
   886                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   887                           ;	Boot Block Write Protection bit
   888                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   889                           ;	Data EEPROM Write Protection bit
   890                           ;	WRTD = OFF, Data EEPROM is not write-protected
   891  30000B                     	org	3145739
   892  30000B  E0                 	db	224
   893                           
   894                           ;Config register CONFIG7L @ 0x30000C
   895                           ;	Table Read Protection bit
   896                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   897                           ;	Table Read Protection bit
   898                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   899                           ;	Table Read Protection bit
   900                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   901                           ;	Table Read Protection bit
   902                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   903  30000C                     	org	3145740
   904  30000C  0F                 	db	15
   905                           
   906                           ;Config register CONFIG7H @ 0x30000D
   907                           ;	Boot Block Table Read Protection bit
   908                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   909  30000D                     	org	3145741
   910  30000D  40                 	db	64
   911                           tosu	equ	0xFFF
   912                           tosh	equ	0xFFE
   913                           tosl	equ	0xFFD
   914                           stkptr	equ	0xFFC
   915                           pclatu	equ	0xFFB
   916                           pclath	equ	0xFFA
   917                           pcl	equ	0xFF9
   918                           tblptru	equ	0xFF8
   919                           tblptrh	equ	0xFF7
   920                           tblptrl	equ	0xFF6
   921                           tablat	equ	0xFF5
   922                           prodh	equ	0xFF4
   923                           prodl	equ	0xFF3
   924                           indf0	equ	0xFEF
   925                           postinc0	equ	0xFEE
   926                           postdec0	equ	0xFED
   927                           preinc0	equ	0xFEC
   928                           plusw0	equ	0xFEB
   929                           fsr0h	equ	0xFEA
   930                           fsr0l	equ	0xFE9
   931                           wreg	equ	0xFE8
   932                           indf1	equ	0xFE7
   933                           postinc1	equ	0xFE6
   934                           postdec1	equ	0xFE5
   935                           preinc1	equ	0xFE4
   936                           plusw1	equ	0xFE3
   937                           fsr1h	equ	0xFE2
   938                           fsr1l	equ	0xFE1
   939                           bsr	equ	0xFE0
   940                           indf2	equ	0xFDF
   941                           postinc2	equ	0xFDE
   942                           postdec2	equ	0xFDD
   943                           preinc2	equ	0xFDC
   944                           plusw2	equ	0xFDB
   945                           fsr2h	equ	0xFDA
   946                           fsr2l	equ	0xFD9
   947                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      9      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_Cadena@dat	PTR unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_LCD_XY
    _LCD_XY->_LCD_Comando
    _LCD_Init->_LCD_Comando
    _LCD_Cadena->_LCD_Caracter

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     611
                         _LCD_Cadena
                       _LCD_Caracter
                           _LCD_Init
                             _LCD_XY
 ---------------------------------------------------------------------------------
 (1) _LCD_XY                                               4     0      4     400
                                              5 COMRAM     4     0      4
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0      30
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (2) _LCD_Comando                                          2     2      0      30
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Cadena                                           2     0      2     151
                                              5 COMRAM     2     0      2
                       _LCD_Caracter
 ---------------------------------------------------------------------------------
 (1) _LCD_Caracter                                         2     2      0      30
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT1_ISR                                             3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Cadena
     _LCD_Caracter
   _LCD_Caracter
   _LCD_Init
     _LCD_Comando
   _LCD_XY
     _LCD_Comando

 _INT1_ISR (ROOT)

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      9       A       1       10.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A      20        0.0%
DATA                 0      0       A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Feb 08 20:26:36 2021

          ?_LCD_Caracter 0001                        _x 000A             ?_LCD_Comando 0001  
                     l52 091A                       l60 0942                       l38 084A  
                     l63 08EA                       l55 08B8                       l39 084A  
                     l69 0886                       u30 092E                       u31 092A  
                     u40 0886                       u41 0882                       bsr 000FE0  
                    l821 093A                      l751 08D0                      l823 0852  
                    l831 080C                      l753 08E4                      l745 08BC  
                    l825 0856                      l761 089A                      l817 091C  
                    l833 083E                      l755 08E6                      l747 08CC  
                    l827 0866                      l771 08B6                      l763 089C  
                    l819 092E                      l757 08E8                      l749 08CE  
                    l829 086A                      l765 089E                      l781 0902  
                    l773 08EC                      l767 08B2                      l759 088A  
                    l783 0908                      l775 08F0                      l769 08B4  
                    l785 090E                      l777 08F6                      l787 0914  
                    l779 08FC                      wreg 000FE8                     STR_1 0801  
                   _LATD 000F8C                     i1l25 002C                     i2l20 0960  
                   _main 080C                     btemp 000B                     start 003C  
           ___param_bank 000000           ??_LCD_Caracter 0004         __end_of_LCD_Init 091C  
       __end_of_INT0_ISR 0964         __end_of_INT1_ISR 003C                    ?_main 0001  
                  i1l811 002A                    i1l809 0026                    i2l805 095A  
                  i2l807 095E                    _TRISD 000F95      __size_of_LCD_Cadena 0036  
                  tablat 000FF5                    ttemp5 000C                    ttemp6 000F  
                  ttemp7 0013                    status 000FD8                    wtemp8 000C  
        __initialization 0944             __end_of_main 0852            LCD_Cadena@dat 0006  
                 ??_main 000A            __activetblptr 000001                   _LCD_XY 091C  
   __size_of_LCD_Comando 0032             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8     __end_of_LCD_Caracter 08EC  
             __accesstop 0060  __end_of__initialization 0946                ?_LCD_Init 0001  
              ?_INT0_ISR 0001                ?_INT1_ISR 0001            ___rparam_used 000001  
           ??_LCD_Cadena 0008           __pcstackCOMRAM 0001       __end_of_LCD_Cadena 0888  
                ?_LCD_XY 0006                  LCD_XY@x 0006                  LCD_XY@y 0008  
             ??_LCD_Init 0006               ??_INT0_ISR 0001               ??_INT1_ISR 0001  
       LCD_Caracter@data 0005          __size_of_LCD_XY 0028                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0800                  __pcinit 0944  
                __ramtop 0800                  __ptext0 080C                  __ptext1 091C  
                __ptext2 08EC                  __ptext3 0888                  __ptext4 0852  
                __ptext5 08BA    __size_of_LCD_Caracter 0032           LCD_Comando@cmd 0005  
         __pintcode_body 0958     end_of_initialization 0946                  int_func 0958  
           _LCD_Caracter 08BA                _TRISBbits 000F93           __end_of_LCD_XY 0944  
      __size_of_LCD_Init 0030        __size_of_INT0_ISR 095C        __size_of_INT1_ISR 0024  
          ??_LCD_Comando 0004      start_initialization 0944                 ??_LCD_XY 000A  
    __end_of_LCD_Comando 08BA              __pbssCOMRAM 000A                __pintcode 0008  
            __pintcodelo 0018              __smallconst 0800                 _LCD_Init 08EC  
               _INT0_ISR 0008                 _INT1_ISR 0018                 _LATDbits 000F8C  
               _RCONbits 000FD0              _LCD_Comando 0888              _INTCON2bits 000FF1  
            _INTCON3bits 000FF0                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0800            __size_of_main 0046               _LCD_Cadena 0852  
               int$flags 000B               _INTCONbits 000FF2                 intlevel1 0000  
               intlevel2 0000              ?_LCD_Cadena 0006  
