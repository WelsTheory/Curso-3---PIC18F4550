

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Feb 08 20:31:13 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _LATDbits	set	3980
    59  0000                     _LATD	set	3980
    60  0000                     _TRISD	set	3989
    61  0000                     _RCONbits	set	4048
    62  0000                     _INTCON2bits	set	4081
    63  0000                     _INTCON3bits	set	4080
    64  0000                     _INTCONbits	set	4082
    65  0000                     _TRISBbits	set	3987
    66                           
    67                           	psect	smallconst
    68  000800                     __psmallconst:
    69                           	callstack 0
    70  000800  00                 	db	0
    71  000801                     STR_1:
    72  000801  50                 	db	80	;'P'
    73  000802  69                 	db	105	;'i'
    74  000803  63                 	db	99	;'c'
    75  000804  31                 	db	49	;'1'
    76  000805  38                 	db	56	;'8'
    77  000806  66                 	db	102	;'f'
    78  000807  34                 	db	52	;'4'
    79  000808  35                 	db	53	;'5'
    80  000809  00                 	db	0
    81  00080A  00                 	db	0	; dummy byte at the end
    82  0000                     
    83                           ; #config settings
    84                           
    85                           	psect	cinit
    86  000A08                     __pcinit:
    87                           	callstack 0
    88  000A08                     start_initialization:
    89                           	callstack 0
    90  000A08                     __initialization:
    91                           	callstack 0
    92                           
    93                           ; Clear objects allocated to COMRAM (1 bytes)
    94  000A08  6A0C               	clrf	__pbssCOMRAM& (0+255),c
    95  000A0A                     end_of_initialization:
    96                           	callstack 0
    97  000A0A                     __end_of__initialization:
    98                           	callstack 0
    99  000A0A  900D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   100  000A0C  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   101  000A0E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   102  000A10  6EF8               	movwf	tblptru,c
   103  000A12  0E08               	movlw	high __Lsmallconst
   104  000A14  6EF7               	movwf	tblptrh,c
   105  000A16  0100               	movlb	0
   106  000A18  EF78  F004         	goto	_main	;jump to C main() function
   107                           
   108                           	psect	bssCOMRAM
   109  00000C                     __pbssCOMRAM:
   110                           	callstack 0
   111  00000C                     _x:
   112                           	callstack 0
   113  00000C                     	ds	1
   114                           
   115                           	psect	cstackCOMRAM
   116  000001                     __pcstackCOMRAM:
   117                           	callstack 0
   118  000001                     ??_INT1_ISR:
   119  000001                     
   120                           ; 1 bytes @ 0x0
   121  000001                     	ds	3
   122  000004                     ??_LCD_Caracter:
   123  000004                     ??_LCD_Comando:
   124                           
   125                           ; 1 bytes @ 0x3
   126  000004                     	ds	1
   127  000005                     LCD_Comando@cmd:
   128                           	callstack 0
   129  000005                     LCD_Caracter@data:
   130                           	callstack 0
   131                           
   132                           ; 1 bytes @ 0x4
   133  000005                     	ds	1
   134  000006                     ??_LCD_Init:
   135  000006                     LCD_XY@x:
   136                           	callstack 0
   137  000006                     LCD_Cadena@dat:
   138                           	callstack 0
   139                           
   140                           ; 2 bytes @ 0x5
   141  000006                     	ds	2
   142  000008                     LCD_XY@y:
   143                           	callstack 0
   144                           
   145                           ; 2 bytes @ 0x7
   146  000008                     	ds	2
   147  00000A                     ??_main:
   148                           
   149                           ; 1 bytes @ 0x9
   150  00000A                     	ds	2
   151                           
   152 ;;
   153 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   154 ;;
   155 ;; *************** function _main *****************
   156 ;; Defined at:
   157 ;;		line 14 in file "Programa_principal.c"
   158 ;; Parameters:    Size  Location     Type
   159 ;;		None
   160 ;; Auto vars:     Size  Location     Type
   161 ;;		None
   162 ;; Return value:  Size  Location     Type
   163 ;;                  1    wreg      void 
   164 ;; Registers used:
   165 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   166 ;; Tracked objects:
   167 ;;		On entry : 0/0
   168 ;;		On exit  : 0/0
   169 ;;		Unchanged: 0/0
   170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   171 ;;      Params:         0       0       0       0       0       0       0       0       0
   172 ;;      Locals:         0       0       0       0       0       0       0       0       0
   173 ;;      Temps:          2       0       0       0       0       0       0       0       0
   174 ;;      Totals:         2       0       0       0       0       0       0       0       0
   175 ;;Total ram usage:        2 bytes
   176 ;; Hardware stack levels required when called:    4
   177 ;; This function calls:
   178 ;;		_LCD_Cadena
   179 ;;		_LCD_Caracter
   180 ;;		_LCD_Comando
   181 ;;		_LCD_Init
   182 ;;		_LCD_XY
   183 ;; This function is called by:
   184 ;;		Startup code after reset
   185 ;; This function uses a non-reentrant model
   186 ;;
   187                           
   188                           	psect	text0
   189  0008F0                     __ptext0:
   190                           	callstack 0
   191  0008F0                     _main:
   192                           	callstack 27
   193  0008F0                     
   194                           ;Programa_principal.c: 15:     LCD_Init();
   195  0008F0  ECAA  F004         	call	_LCD_Init	;wreg free
   196                           
   197                           ;Programa_principal.c: 16:     LCD_XY(1,10);
   198  0008F4  0E00               	movlw	0
   199  0008F6  6E07               	movwf	(LCD_XY@x+1)^0,c
   200  0008F8  0E01               	movlw	1
   201  0008FA  6E06               	movwf	LCD_XY@x^0,c
   202  0008FC  0E00               	movlw	0
   203  0008FE  6E09               	movwf	(LCD_XY@y+1)^0,c
   204  000900  0E0A               	movlw	10
   205  000902  6E08               	movwf	LCD_XY@y^0,c
   206  000904  ECF0  F004         	call	_LCD_XY	;wreg free
   207                           
   208                           ;Programa_principal.c: 17:     LCD_Caracter('q');
   209  000908  0E71               	movlw	113
   210  00090A  EC3F  F004         	call	_LCD_Caracter
   211                           
   212                           ;Programa_principal.c: 18:     LCD_XY(0,0);
   213  00090E  0E00               	movlw	0
   214  000910  6E07               	movwf	(LCD_XY@x+1)^0,c
   215  000912  0E00               	movlw	0
   216  000914  6E06               	movwf	LCD_XY@x^0,c
   217  000916  0E00               	movlw	0
   218  000918  6E09               	movwf	(LCD_XY@y+1)^0,c
   219  00091A  0E00               	movlw	0
   220  00091C  6E08               	movwf	LCD_XY@y^0,c
   221  00091E  ECF0  F004         	call	_LCD_XY	;wreg free
   222  000922                     
   223                           ;Programa_principal.c: 19:     LCD_Cadena("Pic18f45");
   224  000922  0E01               	movlw	low STR_1
   225  000924  6E06               	movwf	LCD_Cadena@dat^0,c
   226  000926  0E08               	movlw	high STR_1
   227  000928  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
   228  00092A  ECD5  F004         	call	_LCD_Cadena	;wreg free
   229  00092E                     
   230                           ;Programa_principal.c: 20:     _delay((unsigned long)((500)*(20000000UL/4000.0)));
   231  00092E  0E0D               	movlw	13
   232  000930  6E0B               	movwf	(??_main+1)^0,c
   233  000932  0EAF               	movlw	175
   234  000934  6E0A               	movwf	??_main^0,c
   235  000936  0EB6               	movlw	182
   236  000938                     u57:
   237  000938  2EE8               	decfsz	wreg,f,c
   238  00093A  D7FE               	bra	u57
   239  00093C  2E0A               	decfsz	??_main^0,f,c
   240  00093E  D7FC               	bra	u57
   241  000940  2E0B               	decfsz	(??_main+1)^0,f,c
   242  000942  D7FA               	bra	u57
   243  000944  D000               	nop2	
   244  000946                     
   245                           ;Programa_principal.c: 21:     LCD_Comando(0x01);
   246  000946  0E01               	movlw	1
   247  000948  EC06  F004         	call	_LCD_Comando
   248  00094C                     l42:
   249  00094C  EFA6  F004         	goto	l42
   250  000950  EF1E  F000         	goto	start
   251  000954                     __end_of_main:
   252                           	callstack 0
   253                           
   254 ;; *************** function _LCD_XY *****************
   255 ;; Defined at:
   256 ;;		line 63 in file "LCD_Libreria.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;  x               2    5[COMRAM] int 
   259 ;;  y               2    7[COMRAM] int 
   260 ;; Auto vars:     Size  Location     Type
   261 ;;		None
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg, status,2, status,0, cstack
   266 ;; Tracked objects:
   267 ;;		On entry : 0/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   271 ;;      Params:         4       0       0       0       0       0       0       0       0
   272 ;;      Locals:         0       0       0       0       0       0       0       0       0
   273 ;;      Temps:          0       0       0       0       0       0       0       0       0
   274 ;;      Totals:         4       0       0       0       0       0       0       0       0
   275 ;;Total ram usage:        4 bytes
   276 ;; Hardware stack levels used:    1
   277 ;; Hardware stack levels required when called:    3
   278 ;; This function calls:
   279 ;;		_LCD_Comando
   280 ;; This function is called by:
   281 ;;		_main
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	text1
   286  0009E0                     __ptext1:
   287                           	callstack 0
   288  0009E0                     _LCD_XY:
   289                           	callstack 27
   290  0009E0                     
   291                           ;LCD_Libreria.c: 64:     if(x == 1){
   292  0009E0  0406               	decf	LCD_XY@x^0,w,c
   293  0009E2  1007               	iorwf	(LCD_XY@x+1)^0,w,c
   294  0009E4  A4D8               	btfss	status,2,c
   295  0009E6  EFF7  F004         	goto	u31
   296  0009EA  EFF9  F004         	goto	u30
   297  0009EE                     u31:
   298  0009EE  EFFF  F004         	goto	l853
   299  0009F2                     u30:
   300  0009F2                     
   301                           ;LCD_Libreria.c: 65:         LCD_Comando(0xC0+y);
   302  0009F2  5008               	movf	LCD_XY@y^0,w,c
   303  0009F4  0FC0               	addlw	192
   304  0009F6  EC06  F004         	call	_LCD_Comando
   305                           
   306                           ;LCD_Libreria.c: 66:     }
   307  0009FA  EF03  F005         	goto	l66
   308  0009FE                     l853:
   309                           
   310                           ;LCD_Libreria.c: 68:         LCD_Comando(0x80+y);
   311  0009FE  5008               	movf	LCD_XY@y^0,w,c
   312  000A00  0F80               	addlw	128
   313  000A02  EC06  F004         	call	_LCD_Comando
   314  000A06                     l66:
   315  000A06  0012               	return		;funcret
   316  000A08                     __end_of_LCD_XY:
   317                           	callstack 0
   318                           
   319 ;; *************** function _LCD_Init *****************
   320 ;; Defined at:
   321 ;;		line 6 in file "LCD_Libreria.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, status,2, status,0, cstack
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   335 ;;      Params:         0       0       0       0       0       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0       0       0       0       0
   337 ;;      Temps:          1       0       0       0       0       0       0       0       0
   338 ;;      Totals:         1       0       0       0       0       0       0       0       0
   339 ;;Total ram usage:        1 bytes
   340 ;; Hardware stack levels used:    1
   341 ;; Hardware stack levels required when called:    3
   342 ;; This function calls:
   343 ;;		_LCD_Comando
   344 ;; This function is called by:
   345 ;;		_main
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           	psect	text2
   350  000954                     __ptext2:
   351                           	callstack 0
   352  000954                     _LCD_Init:
   353                           	callstack 27
   354  000954                     
   355                           ;LCD_Libreria.c: 7:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
   356  000954  0E62               	movlw	98
   357  000956  6E06               	movwf	??_LCD_Init^0,c
   358  000958  0E66               	movlw	102
   359  00095A                     u67:
   360  00095A  2EE8               	decfsz	wreg,f,c
   361  00095C  D7FE               	bra	u67
   362  00095E  2E06               	decfsz	??_LCD_Init^0,f,c
   363  000960  D7FC               	bra	u67
   364  000962                     
   365                           ;LCD_Libreria.c: 8:     TRISD = 0x00;
   366  000962  0E00               	movlw	0
   367  000964  6E95               	movwf	149,c	;volatile
   368  000966                     
   369                           ;LCD_Libreria.c: 9:     LCD_Comando(0x30);
   370  000966  0E30               	movlw	48
   371  000968  EC06  F004         	call	_LCD_Comando
   372  00096C                     
   373                           ;LCD_Libreria.c: 10:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   374  00096C  0E21               	movlw	33
   375  00096E  6E06               	movwf	??_LCD_Init^0,c
   376  000970  0E76               	movlw	118
   377  000972                     u77:
   378  000972  2EE8               	decfsz	wreg,f,c
   379  000974  D7FE               	bra	u77
   380  000976  2E06               	decfsz	??_LCD_Init^0,f,c
   381  000978  D7FC               	bra	u77
   382  00097A  D000               	nop2	
   383  00097C                     
   384                           ;LCD_Libreria.c: 11:     LCD_Comando(0x30);
   385  00097C  0E30               	movlw	48
   386  00097E  EC06  F004         	call	_LCD_Comando
   387  000982                     
   388                           ;LCD_Libreria.c: 12:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
   389  000982  0EA6               	movlw	166
   390  000984                     u87:
   391  000984  2EE8               	decfsz	wreg,f,c
   392  000986  D7FE               	bra	u87
   393  000988  D000               	nop2	
   394  00098A                     
   395                           ;LCD_Libreria.c: 13:     LCD_Comando(0x32);
   396  00098A  0E32               	movlw	50
   397  00098C  EC06  F004         	call	_LCD_Comando
   398  000990                     
   399                           ;LCD_Libreria.c: 14:     LCD_Comando(0x28);
   400  000990  0E28               	movlw	40
   401  000992  EC06  F004         	call	_LCD_Comando
   402  000996                     
   403                           ;LCD_Libreria.c: 15:     LCD_Comando(0x0C);
   404  000996  0E0C               	movlw	12
   405  000998  EC06  F004         	call	_LCD_Comando
   406  00099C                     
   407                           ;LCD_Libreria.c: 16:     LCD_Comando(0x01);
   408  00099C  0E01               	movlw	1
   409  00099E  EC06  F004         	call	_LCD_Comando
   410  0009A2                     
   411                           ;LCD_Libreria.c: 17:     LCD_Comando(0x06);
   412  0009A2  0E06               	movlw	6
   413  0009A4  EC06  F004         	call	_LCD_Comando
   414  0009A8  0012               	return		;funcret
   415  0009AA                     __end_of_LCD_Init:
   416                           	callstack 0
   417                           
   418 ;; *************** function _LCD_Comando *****************
   419 ;; Defined at:
   420 ;;		line 20 in file "LCD_Libreria.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;  cmd             1    wreg     unsigned char 
   423 ;; Auto vars:     Size  Location     Type
   424 ;;  cmd             1    4[COMRAM] unsigned char 
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, status,2, status,0
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   434 ;;      Params:         0       0       0       0       0       0       0       0       0
   435 ;;      Locals:         1       0       0       0       0       0       0       0       0
   436 ;;      Temps:          1       0       0       0       0       0       0       0       0
   437 ;;      Totals:         2       0       0       0       0       0       0       0       0
   438 ;;Total ram usage:        2 bytes
   439 ;; Hardware stack levels used:    1
   440 ;; Hardware stack levels required when called:    2
   441 ;; This function calls:
   442 ;;		Nothing
   443 ;; This function is called by:
   444 ;;		_main
   445 ;;		_LCD_Init
   446 ;;		_LCD_XY
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text3
   451  00080C                     __ptext3:
   452                           	callstack 0
   453  00080C                     _LCD_Comando:
   454                           	callstack 27
   455                           
   456                           ;incstack = 0
   457                           ;LCD_Comando@cmd stored from wreg
   458  00080C  6E05               	movwf	LCD_Comando@cmd^0,c
   459  00080E                     
   460                           ;LCD_Libreria.c: 22:     LATD = (LATD&0X0F) | (cmd&0xF0);
   461  00080E  C005  F004         	movff	LCD_Comando@cmd,??_LCD_Comando
   462  000812  0EF0               	movlw	240
   463  000814  1604               	andwf	??_LCD_Comando^0,f,c
   464  000816  508C               	movf	140,w,c	;volatile
   465  000818  0B0F               	andlw	15
   466  00081A  1004               	iorwf	??_LCD_Comando^0,w,c
   467  00081C  6E8C               	movwf	140,c	;volatile
   468  00081E                     
   469                           ;LCD_Libreria.c: 39:     LATDbits.LATD2 = 0;
   470  00081E  948C               	bcf	140,2,c	;volatile
   471  000820                     
   472                           ;LCD_Libreria.c: 40:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   473  000820  0E07               	movlw	7
   474  000822  6E04               	movwf	??_LCD_Comando^0,c
   475  000824  0E7D               	movlw	125
   476  000826                     u97:
   477  000826  2EE8               	decfsz	wreg,f,c
   478  000828  D7FE               	bra	u97
   479  00082A  2E04               	decfsz	??_LCD_Comando^0,f,c
   480  00082C  D7FC               	bra	u97
   481  00082E  F000               	nop	
   482  000830                     
   483                           ;LCD_Libreria.c: 41:     LATDbits.LATD3 = 1;
   484  000830  868C               	bsf	140,3,c	;volatile
   485  000832                     
   486                           ;LCD_Libreria.c: 42:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   487  000832  0E07               	movlw	7
   488  000834  6E04               	movwf	??_LCD_Comando^0,c
   489  000836  0E7D               	movlw	125
   490  000838                     u107:
   491  000838  2EE8               	decfsz	wreg,f,c
   492  00083A  D7FE               	bra	u107
   493  00083C  2E04               	decfsz	??_LCD_Comando^0,f,c
   494  00083E  D7FC               	bra	u107
   495  000840  F000               	nop	
   496  000842                     
   497                           ;LCD_Libreria.c: 43:     LATDbits.LATD3 = 0;
   498  000842  968C               	bcf	140,3,c	;volatile
   499                           
   500                           ;LCD_Libreria.c: 45:     LATD &= 0X0F;
   501  000844  0E0F               	movlw	15
   502  000846  168C               	andwf	140,f,c	;volatile
   503                           
   504                           ;LCD_Libreria.c: 46:     LATD |= ((cmd&0x0F)<<4);
   505  000848  C005  F004         	movff	LCD_Comando@cmd,??_LCD_Comando
   506  00084C  0E0F               	movlw	15
   507  00084E  1604               	andwf	??_LCD_Comando^0,f,c
   508  000850  3804               	swapf	??_LCD_Comando^0,w,c
   509  000852  0BF0               	andlw	240
   510  000854  128C               	iorwf	140,f,c	;volatile
   511  000856                     
   512                           ;LCD_Libreria.c: 56:     LATDbits.LATD2 = 0;
   513  000856  948C               	bcf	140,2,c	;volatile
   514  000858                     
   515                           ;LCD_Libreria.c: 57:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   516  000858  0E07               	movlw	7
   517  00085A  6E04               	movwf	??_LCD_Comando^0,c
   518  00085C  0E7D               	movlw	125
   519  00085E                     u117:
   520  00085E  2EE8               	decfsz	wreg,f,c
   521  000860  D7FE               	bra	u117
   522  000862  2E04               	decfsz	??_LCD_Comando^0,f,c
   523  000864  D7FC               	bra	u117
   524  000866  F000               	nop	
   525  000868                     
   526                           ;LCD_Libreria.c: 58:     LATDbits.LATD3 = 1;
   527  000868  868C               	bsf	140,3,c	;volatile
   528  00086A                     
   529                           ;LCD_Libreria.c: 59:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   530  00086A  0E07               	movlw	7
   531  00086C  6E04               	movwf	??_LCD_Comando^0,c
   532  00086E  0E7D               	movlw	125
   533  000870                     u127:
   534  000870  2EE8               	decfsz	wreg,f,c
   535  000872  D7FE               	bra	u127
   536  000874  2E04               	decfsz	??_LCD_Comando^0,f,c
   537  000876  D7FC               	bra	u127
   538  000878  F000               	nop	
   539  00087A                     
   540                           ;LCD_Libreria.c: 60:     LATDbits.LATD3 = 0;
   541  00087A  968C               	bcf	140,3,c	;volatile
   542  00087C  0012               	return		;funcret
   543  00087E                     __end_of_LCD_Comando:
   544                           	callstack 0
   545                           
   546 ;; *************** function _LCD_Cadena *****************
   547 ;; Defined at:
   548 ;;		line 92 in file "LCD_Libreria.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  dat             2    5[COMRAM] PTR unsigned char 
   551 ;;		 -> STR_1(9), 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   563 ;;      Params:         2       0       0       0       0       0       0       0       0
   564 ;;      Locals:         0       0       0       0       0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0       0       0       0       0
   566 ;;      Totals:         2       0       0       0       0       0       0       0       0
   567 ;;Total ram usage:        2 bytes
   568 ;; Hardware stack levels used:    1
   569 ;; Hardware stack levels required when called:    3
   570 ;; This function calls:
   571 ;;		_LCD_Caracter
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text4
   578  0009AA                     __ptext4:
   579                           	callstack 0
   580  0009AA                     _LCD_Cadena:
   581                           	callstack 27
   582  0009AA                     
   583                           ;LCD_Libreria.c: 95:     while(*dat != '\0'){
   584  0009AA  EFE1  F004         	goto	l861
   585  0009AE                     l857:
   586                           
   587                           ;LCD_Libreria.c: 96:         LCD_Caracter(*dat);
   588  0009AE  C006  FFF6         	movff	LCD_Cadena@dat,tblptrl
   589  0009B2  C007  FFF7         	movff	LCD_Cadena@dat+1,tblptrh
   590  0009B6                     	if	0	;tblptru may be non-zero
   591  0009B6                     	endif
   592  0009B6                     	if	0	;tblptru may be non-zero
   593  0009B6                     	endif
   594  0009B6  0008               	tblrd		*
   595  0009B8  50F5               	movf	tablat,w,c
   596  0009BA  EC3F  F004         	call	_LCD_Caracter
   597  0009BE                     
   598                           ;LCD_Libreria.c: 97:         dat++;
   599  0009BE  4A06               	infsnz	LCD_Cadena@dat^0,f,c
   600  0009C0  2A07               	incf	(LCD_Cadena@dat+1)^0,f,c
   601  0009C2                     l861:
   602                           
   603                           ;LCD_Libreria.c: 95:     while(*dat != '\0'){
   604  0009C2  C006  FFF6         	movff	LCD_Cadena@dat,tblptrl
   605  0009C6  C007  FFF7         	movff	LCD_Cadena@dat+1,tblptrh
   606  0009CA                     	if	0	;tblptru may be non-zero
   607  0009CA                     	endif
   608  0009CA                     	if	0	;tblptru may be non-zero
   609  0009CA                     	endif
   610  0009CA  0008               	tblrd		*
   611  0009CC  50F5               	movf	tablat,w,c
   612  0009CE  0900               	iorlw	0
   613  0009D0  A4D8               	btfss	status,2,c
   614  0009D2  EFED  F004         	goto	u41
   615  0009D6  EFEF  F004         	goto	u40
   616  0009DA                     u41:
   617  0009DA  EFD7  F004         	goto	l857
   618  0009DE                     u40:
   619  0009DE  0012               	return		;funcret
   620  0009E0                     __end_of_LCD_Cadena:
   621                           	callstack 0
   622                           
   623 ;; *************** function _LCD_Caracter *****************
   624 ;; Defined at:
   625 ;;		line 72 in file "LCD_Libreria.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;  data            1    wreg     unsigned char 
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  data            1    4[COMRAM] unsigned char 
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg, status,2, status,0
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   639 ;;      Params:         0       0       0       0       0       0       0       0       0
   640 ;;      Locals:         1       0       0       0       0       0       0       0       0
   641 ;;      Temps:          1       0       0       0       0       0       0       0       0
   642 ;;      Totals:         2       0       0       0       0       0       0       0       0
   643 ;;Total ram usage:        2 bytes
   644 ;; Hardware stack levels used:    1
   645 ;; Hardware stack levels required when called:    2
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_main
   650 ;;		_LCD_Cadena
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text5
   655  00087E                     __ptext5:
   656                           	callstack 0
   657  00087E                     _LCD_Caracter:
   658                           	callstack 28
   659                           
   660                           ;incstack = 0
   661                           ;LCD_Caracter@data stored from wreg
   662  00087E  6E05               	movwf	LCD_Caracter@data^0,c
   663  000880                     
   664                           ;LCD_Libreria.c: 73:     LATD = (LATD&0X0F) | (data&0xF0);
   665  000880  C005  F004         	movff	LCD_Caracter@data,??_LCD_Caracter
   666  000884  0EF0               	movlw	240
   667  000886  1604               	andwf	??_LCD_Caracter^0,f,c
   668  000888  508C               	movf	140,w,c	;volatile
   669  00088A  0B0F               	andlw	15
   670  00088C  1004               	iorwf	??_LCD_Caracter^0,w,c
   671  00088E  6E8C               	movwf	140,c	;volatile
   672  000890                     
   673                           ;LCD_Libreria.c: 75:     LATDbits.LATD2 = 1;
   674  000890  848C               	bsf	140,2,c	;volatile
   675  000892                     
   676                           ;LCD_Libreria.c: 76:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   677  000892  0E07               	movlw	7
   678  000894  6E04               	movwf	??_LCD_Caracter^0,c
   679  000896  0E7D               	movlw	125
   680  000898                     u137:
   681  000898  2EE8               	decfsz	wreg,f,c
   682  00089A  D7FE               	bra	u137
   683  00089C  2E04               	decfsz	??_LCD_Caracter^0,f,c
   684  00089E  D7FC               	bra	u137
   685  0008A0  F000               	nop	
   686  0008A2                     
   687                           ;LCD_Libreria.c: 77:     LATDbits.LATD3 = 1;
   688  0008A2  868C               	bsf	140,3,c	;volatile
   689  0008A4                     
   690                           ;LCD_Libreria.c: 78:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   691  0008A4  0E07               	movlw	7
   692  0008A6  6E04               	movwf	??_LCD_Caracter^0,c
   693  0008A8  0E7D               	movlw	125
   694  0008AA                     u147:
   695  0008AA  2EE8               	decfsz	wreg,f,c
   696  0008AC  D7FE               	bra	u147
   697  0008AE  2E04               	decfsz	??_LCD_Caracter^0,f,c
   698  0008B0  D7FC               	bra	u147
   699  0008B2  F000               	nop	
   700  0008B4                     
   701                           ;LCD_Libreria.c: 79:     LATDbits.LATD3 = 0;
   702  0008B4  968C               	bcf	140,3,c	;volatile
   703                           
   704                           ;LCD_Libreria.c: 81:     LATD &= 0X0F;
   705  0008B6  0E0F               	movlw	15
   706  0008B8  168C               	andwf	140,f,c	;volatile
   707                           
   708                           ;LCD_Libreria.c: 82:     LATD |= ((data&0x0F)<<4);
   709  0008BA  C005  F004         	movff	LCD_Caracter@data,??_LCD_Caracter
   710  0008BE  0E0F               	movlw	15
   711  0008C0  1604               	andwf	??_LCD_Caracter^0,f,c
   712  0008C2  3804               	swapf	??_LCD_Caracter^0,w,c
   713  0008C4  0BF0               	andlw	240
   714  0008C6  128C               	iorwf	140,f,c	;volatile
   715  0008C8                     
   716                           ;LCD_Libreria.c: 84:     LATDbits.LATD2 = 1;
   717  0008C8  848C               	bsf	140,2,c	;volatile
   718  0008CA                     
   719                           ;LCD_Libreria.c: 85:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   720  0008CA  0E07               	movlw	7
   721  0008CC  6E04               	movwf	??_LCD_Caracter^0,c
   722  0008CE  0E7D               	movlw	125
   723  0008D0                     u157:
   724  0008D0  2EE8               	decfsz	wreg,f,c
   725  0008D2  D7FE               	bra	u157
   726  0008D4  2E04               	decfsz	??_LCD_Caracter^0,f,c
   727  0008D6  D7FC               	bra	u157
   728  0008D8  F000               	nop	
   729  0008DA                     
   730                           ;LCD_Libreria.c: 86:     LATDbits.LATD3 = 1;
   731  0008DA  868C               	bsf	140,3,c	;volatile
   732  0008DC                     
   733                           ;LCD_Libreria.c: 87:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   734  0008DC  0E07               	movlw	7
   735  0008DE  6E04               	movwf	??_LCD_Caracter^0,c
   736  0008E0  0E7D               	movlw	125
   737  0008E2                     u167:
   738  0008E2  2EE8               	decfsz	wreg,f,c
   739  0008E4  D7FE               	bra	u167
   740  0008E6  2E04               	decfsz	??_LCD_Caracter^0,f,c
   741  0008E8  D7FC               	bra	u167
   742  0008EA  F000               	nop	
   743  0008EC                     
   744                           ;LCD_Libreria.c: 88:     LATDbits.LATD3 = 0;
   745  0008EC  968C               	bcf	140,3,c	;volatile
   746  0008EE  0012               	return		;funcret
   747  0008F0                     __end_of_LCD_Caracter:
   748                           	callstack 0
   749                           
   750 ;; *************** function _INT1_ISR *****************
   751 ;; Defined at:
   752 ;;		line 30 in file "Interrupcion.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, status,2
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   766 ;;      Params:         0       0       0       0       0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0       0       0       0       0
   768 ;;      Temps:          3       0       0       0       0       0       0       0       0
   769 ;;      Totals:         3       0       0       0       0       0       0       0       0
   770 ;;Total ram usage:        3 bytes
   771 ;; Hardware stack levels used:    1
   772 ;; Hardware stack levels required when called:    1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		Interrupt level 1
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	intcodelo
   781  000018                     __pintcodelo:
   782                           	callstack 0
   783  000018                     _INT1_ISR:
   784                           	callstack 27
   785                           
   786                           ;incstack = 0
   787  000018  800D               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   788  00001A  CFD8 F001          	movff	status,??_INT1_ISR
   789  00001E  CFE8 F002          	movff	wreg,??_INT1_ISR+1
   790  000022  CFE0 F003          	movff	bsr,??_INT1_ISR+2
   791  000026                     
   792                           ;Interrupcion.c: 31:     x = 2;
   793  000026  0E02               	movlw	2
   794  000028  6E0C               	movwf	_x^0,c
   795  00002A                     
   796                           ;Interrupcion.c: 33:     INTCON3bits.INT1F = 0;
   797  00002A  90F0               	bcf	240,0,c	;volatile
   798  00002C  C003  FFE0         	movff	??_INT1_ISR+2,bsr
   799  000030  C002  FFE8         	movff	??_INT1_ISR+1,wreg
   800  000034  C001  FFD8         	movff	??_INT1_ISR,status
   801  000038  900D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   802  00003A  0010               	retfie	
   803  00003C                     __end_of_INT1_ISR:
   804                           	callstack 0
   805                           
   806 ;; *************** function _INT0_ISR *****************
   807 ;; Defined at:
   808 ;;		line 24 in file "Interrupcion.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   822 ;;      Params:         0       0       0       0       0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0       0       0       0       0
   825 ;;      Totals:         0       0       0       0       0       0       0       0       0
   826 ;;Total ram usage:        0 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; This function calls:
   829 ;;		Nothing
   830 ;; This function is called by:
   831 ;;		Interrupt level 2
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	intcode
   836  000008                     __pintcode:
   837                           	callstack 0
   838  000008                     _INT0_ISR:
   839                           	callstack 27
   840                           
   841                           ;incstack = 0
   842  000008  820D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   843  00000A  ED0E  F005         	call	int_func,f	;refresh shadow registers
   844                           
   845                           	psect	intcode_body
   846  000A1C                     __pintcode_body:
   847                           	callstack 27
   848  000A1C                     int_func:
   849                           	callstack 27
   850  000A1C  0006               	pop		; remove dummy address from shadow register refresh
   851  000A1E                     
   852                           ;Interrupcion.c: 25:     x = 1;
   853  000A1E  0E01               	movlw	1
   854  000A20  6E0C               	movwf	_x^0,c
   855  000A22                     
   856                           ;Interrupcion.c: 27:     INTCONbits.INT0IF = 0;
   857  000A22  92F2               	bcf	242,1,c	;volatile
   858  000A24  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   859  000A26  0011               	retfie		f
   860  000A28                     __end_of_INT0_ISR:
   861                           	callstack 0
   862                           
   863                           	psect	rparam
   864  0000                     
   865                           	psect	temp
   866  00000D                     btemp:
   867                           	callstack 0
   868  00000D                     	ds	1
   869  0000                     int$flags	set	btemp
   870  0000                     wtemp8	set	btemp+1
   871  0000                     ttemp5	set	btemp+1
   872  0000                     ttemp6	set	btemp+4
   873  0000                     ttemp7	set	btemp+8
   874                           
   875                           	psect	idloc
   876                           
   877                           ;Config register IDLOC0 @ 0x200000
   878                           ;	unspecified, using default values
   879  200000                     	org	2097152
   880  200000  FF                 	db	255
   881                           
   882                           ;Config register IDLOC1 @ 0x200001
   883                           ;	unspecified, using default values
   884  200001                     	org	2097153
   885  200001  FF                 	db	255
   886                           
   887                           ;Config register IDLOC2 @ 0x200002
   888                           ;	unspecified, using default values
   889  200002                     	org	2097154
   890  200002  FF                 	db	255
   891                           
   892                           ;Config register IDLOC3 @ 0x200003
   893                           ;	unspecified, using default values
   894  200003                     	org	2097155
   895  200003  FF                 	db	255
   896                           
   897                           ;Config register IDLOC4 @ 0x200004
   898                           ;	unspecified, using default values
   899  200004                     	org	2097156
   900  200004  FF                 	db	255
   901                           
   902                           ;Config register IDLOC5 @ 0x200005
   903                           ;	unspecified, using default values
   904  200005                     	org	2097157
   905  200005  FF                 	db	255
   906                           
   907                           ;Config register IDLOC6 @ 0x200006
   908                           ;	unspecified, using default values
   909  200006                     	org	2097158
   910  200006  FF                 	db	255
   911                           
   912                           ;Config register IDLOC7 @ 0x200007
   913                           ;	unspecified, using default values
   914  200007                     	org	2097159
   915  200007  FF                 	db	255
   916                           
   917                           	psect	config
   918                           
   919                           ;Config register CONFIG1L @ 0x300000
   920                           ;	PLL Prescaler Selection bits
   921                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   922                           ;	System Clock Postscaler Selection bits
   923                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   924                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   925                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   926  300000                     	org	3145728
   927  300000  00                 	db	0
   928                           
   929                           ;Config register CONFIG1H @ 0x300001
   930                           ;	Oscillator Selection bits
   931                           ;	FOSC = HS, HS oscillator (HS)
   932                           ;	Fail-Safe Clock Monitor Enable bit
   933                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   934                           ;	Internal/External Oscillator Switchover bit
   935                           ;	IESO = OFF, Oscillator Switchover mode disabled
   936  300001                     	org	3145729
   937  300001  0C                 	db	12
   938                           
   939                           ;Config register CONFIG2L @ 0x300002
   940                           ;	Power-up Timer Enable bit
   941                           ;	PWRT = ON, PWRT enabled
   942                           ;	Brown-out Reset Enable bits
   943                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   944                           ;	Brown-out Reset Voltage bits
   945                           ;	BORV = 3, Minimum setting 2.05V
   946                           ;	USB Voltage Regulator Enable bit
   947                           ;	VREGEN = OFF, USB voltage regulator disabled
   948  300002                     	org	3145730
   949  300002  18                 	db	24
   950                           
   951                           ;Config register CONFIG2H @ 0x300003
   952                           ;	Watchdog Timer Enable bit
   953                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   954                           ;	Watchdog Timer Postscale Select bits
   955                           ;	WDTPS = 32768, 1:32768
   956  300003                     	org	3145731
   957  300003  1E                 	db	30
   958                           
   959                           ; Padding undefined space
   960  300004                     	org	3145732
   961  300004  FF                 	db	255
   962                           
   963                           ;Config register CONFIG3H @ 0x300005
   964                           ;	CCP2 MUX bit
   965                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   966                           ;	PORTB A/D Enable bit
   967                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   968                           ;	Low-Power Timer 1 Oscillator Enable bit
   969                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   970                           ;	MCLR Pin Enable bit
   971                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   972  300005                     	org	3145733
   973  300005  81                 	db	129
   974                           
   975                           ;Config register CONFIG4L @ 0x300006
   976                           ;	Stack Full/Underflow Reset Enable bit
   977                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   978                           ;	Single-Supply ICSP Enable bit
   979                           ;	LVP = ON, Single-Supply ICSP enabled
   980                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   981                           ;	ICPRT = OFF, ICPORT disabled
   982                           ;	Extended Instruction Set Enable bit
   983                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   984                           ;	Background Debugger Enable bit
   985                           ;	DEBUG = 0x1, unprogrammed default
   986  300006                     	org	3145734
   987  300006  84                 	db	132
   988                           
   989                           ; Padding undefined space
   990  300007                     	org	3145735
   991  300007  FF                 	db	255
   992                           
   993                           ;Config register CONFIG5L @ 0x300008
   994                           ;	Code Protection bit
   995                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   996                           ;	Code Protection bit
   997                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   998                           ;	Code Protection bit
   999                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1000                           ;	Code Protection bit
  1001                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1002  300008                     	org	3145736
  1003  300008  0F                 	db	15
  1004                           
  1005                           ;Config register CONFIG5H @ 0x300009
  1006                           ;	Boot Block Code Protection bit
  1007                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1008                           ;	Data EEPROM Code Protection bit
  1009                           ;	CPD = OFF, Data EEPROM is not code-protected
  1010  300009                     	org	3145737
  1011  300009  C0                 	db	192
  1012                           
  1013                           ;Config register CONFIG6L @ 0x30000A
  1014                           ;	Write Protection bit
  1015                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1016                           ;	Write Protection bit
  1017                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1018                           ;	Write Protection bit
  1019                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1020                           ;	Write Protection bit
  1021                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1022  30000A                     	org	3145738
  1023  30000A  0F                 	db	15
  1024                           
  1025                           ;Config register CONFIG6H @ 0x30000B
  1026                           ;	Configuration Register Write Protection bit
  1027                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1028                           ;	Boot Block Write Protection bit
  1029                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1030                           ;	Data EEPROM Write Protection bit
  1031                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1032  30000B                     	org	3145739
  1033  30000B  E0                 	db	224
  1034                           
  1035                           ;Config register CONFIG7L @ 0x30000C
  1036                           ;	Table Read Protection bit
  1037                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1038                           ;	Table Read Protection bit
  1039                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1040                           ;	Table Read Protection bit
  1041                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1042                           ;	Table Read Protection bit
  1043                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1044  30000C                     	org	3145740
  1045  30000C  0F                 	db	15
  1046                           
  1047                           ;Config register CONFIG7H @ 0x30000D
  1048                           ;	Boot Block Table Read Protection bit
  1049                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1050  30000D                     	org	3145741
  1051  30000D  40                 	db	64
  1052                           tosu	equ	0xFFF
  1053                           tosh	equ	0xFFE
  1054                           tosl	equ	0xFFD
  1055                           stkptr	equ	0xFFC
  1056                           pclatu	equ	0xFFB
  1057                           pclath	equ	0xFFA
  1058                           pcl	equ	0xFF9
  1059                           tblptru	equ	0xFF8
  1060                           tblptrh	equ	0xFF7
  1061                           tblptrl	equ	0xFF6
  1062                           tablat	equ	0xFF5
  1063                           prodh	equ	0xFF4
  1064                           prodl	equ	0xFF3
  1065                           indf0	equ	0xFEF
  1066                           postinc0	equ	0xFEE
  1067                           postdec0	equ	0xFED
  1068                           preinc0	equ	0xFEC
  1069                           plusw0	equ	0xFEB
  1070                           fsr0h	equ	0xFEA
  1071                           fsr0l	equ	0xFE9
  1072                           wreg	equ	0xFE8
  1073                           indf1	equ	0xFE7
  1074                           postinc1	equ	0xFE6
  1075                           postdec1	equ	0xFE5
  1076                           preinc1	equ	0xFE4
  1077                           plusw1	equ	0xFE3
  1078                           fsr1h	equ	0xFE2
  1079                           fsr1l	equ	0xFE1
  1080                           bsr	equ	0xFE0
  1081                           indf2	equ	0xFDF
  1082                           postinc2	equ	0xFDE
  1083                           postdec2	equ	0xFDD
  1084                           preinc2	equ	0xFDC
  1085                           plusw2	equ	0xFDB
  1086                           fsr2h	equ	0xFDA
  1087                           fsr2l	equ	0xFD9
  1088                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     11      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_Cadena@dat	PTR unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_LCD_XY
    _LCD_XY->_LCD_Comando
    _LCD_Init->_LCD_Comando
    _LCD_Cadena->_LCD_Caracter

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     641
                                              9 COMRAM     2     2      0
                         _LCD_Cadena
                       _LCD_Caracter
                        _LCD_Comando
                           _LCD_Init
                             _LCD_XY
 ---------------------------------------------------------------------------------
 (1) _LCD_XY                                               4     0      4     400
                                              5 COMRAM     4     0      4
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      30
                                              5 COMRAM     1     1      0
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (2) _LCD_Comando                                          2     2      0      30
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Cadena                                           2     0      2     151
                                              5 COMRAM     2     0      2
                       _LCD_Caracter
 ---------------------------------------------------------------------------------
 (1) _LCD_Caracter                                         2     2      0      30
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT1_ISR                                             3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Cadena
     _LCD_Caracter
   _LCD_Caracter
   _LCD_Comando
   _LCD_Init
     _LCD_Comando
   _LCD_XY
     _LCD_Comando

 _INT1_ISR (ROOT)

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      B       C       1       12.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       C      20        0.0%
DATA                 0      0       C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Feb 08 20:31:13 2021

          ?_LCD_Caracter 0001                        _x 000C             ?_LCD_Comando 0001  
                     l42 094C                       l43 094C                       l61 087C  
                     l58 09A8                       l66 0A06                       l75 09DE  
                     l69 08EE                       u30 09F2                       u31 09EE  
                     u40 09DE                       u41 09DA                       u57 0938  
                     u67 095A                       u77 0972                       u87 0984  
                     u97 0826                       bsr 000FE0                      l801 096C  
                    l811 0996                      l803 097C                      l813 099C  
                    l805 0982                      l751 0880                      l815 09A2  
                    l807 098A                      l761 08B4                      l753 0890  
                    l809 0990                      l771 08EC                      l763 08C8  
                    l755 0892                      l851 09F2                      l765 08CA  
                    l757 08A2                      l861 09C2                      l781 0832  
                    l773 080E                      l853 09FE                      l767 08DA  
                    l759 08A4                      l855 09AA                      l791 086A  
                    l783 0842                      l775 081E                      l863 08F0  
                    l769 08DC                      l857 09AE                      l793 087A  
                    l785 0856                      l777 0820                      l849 09E0  
                    l865 0922                      l859 09BE                      l787 0858  
                    l779 0830                      l795 0954                      l867 092E  
                    l789 0868                      l797 0962                      l869 0946  
                    l799 0966                      u107 0838                      u117 085E  
                    u127 0870                      u137 0898                      u147 08AA  
                    u157 08D0                      u167 08E2                      wreg 000FE8  
                   STR_1 0801                     _LATD 000F8C                     i1l25 002C  
                   i2l20 0A24                     _main 08F0                     btemp 000D  
                   start 003C             ___param_bank 000000           ??_LCD_Caracter 0004  
       __end_of_LCD_Init 09AA         __end_of_INT0_ISR 0A28         __end_of_INT1_ISR 003C  
                  ?_main 0001                    i1l837 0026                    i1l839 002A  
                  i2l833 0A1E                    i2l835 0A22                    _TRISD 000F95  
    __size_of_LCD_Cadena 0036                    tablat 000FF5                    ttemp5 000E  
                  ttemp6 0011                    ttemp7 0015                    status 000FD8  
                  wtemp8 000E          __initialization 0A08             __end_of_main 0954  
          LCD_Cadena@dat 0006                   ??_main 000A            __activetblptr 000001  
                 _LCD_XY 09E0     __size_of_LCD_Comando 0072             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
   __end_of_LCD_Caracter 08F0               __accesstop 0060  __end_of__initialization 0A0A  
              ?_LCD_Init 0001                ?_INT0_ISR 0001                ?_INT1_ISR 0001  
          ___rparam_used 000001             ??_LCD_Cadena 0008           __pcstackCOMRAM 0001  
     __end_of_LCD_Cadena 09E0                  ?_LCD_XY 0006                  LCD_XY@x 0006  
                LCD_XY@y 0008               ??_LCD_Init 0006               ??_INT0_ISR 0001  
             ??_INT1_ISR 0001         LCD_Caracter@data 0005          __size_of_LCD_XY 0028  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0A08                  __ramtop 0800                  __ptext0 08F0  
                __ptext1 09E0                  __ptext2 0954                  __ptext3 080C  
                __ptext4 09AA                  __ptext5 087E    __size_of_LCD_Caracter 0072  
         LCD_Comando@cmd 0005           __pintcode_body 0A1C     end_of_initialization 0A0A  
                int_func 0A1C             _LCD_Caracter 087E                _TRISBbits 000F93  
         __end_of_LCD_XY 0A08        __size_of_LCD_Init 0056        __size_of_INT0_ISR 0A20  
      __size_of_INT1_ISR 0024            ??_LCD_Comando 0004      start_initialization 0A08  
               ??_LCD_XY 000A      __end_of_LCD_Comando 087E              __pbssCOMRAM 000C  
              __pintcode 0008              __pintcodelo 0018              __smallconst 0800  
               _LCD_Init 0954                 _INT0_ISR 0008                 _INT1_ISR 0018  
               _LATDbits 000F8C                 _RCONbits 000FD0              _LCD_Comando 080C  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0800            __size_of_main 0064  
             _LCD_Cadena 09AA                 int$flags 000D               _INTCONbits 000FF2  
               intlevel1 0000                 intlevel2 0000              ?_LCD_Cadena 0006  
