

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
<<<<<<< HEAD
                                                                                               Mon Feb 15 20:46:46 2021
=======
                                                                                               Mon Feb 15 20:44:00 2021
>>>>>>> testing

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 12/02/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     _ADRES	set	4035
    95  0000                     _RCONbits	set	4048
    96  0000                     _INTCON2bits	set	4081
    97  0000                     _INTCON3bits	set	4080
    98  0000                     _INTCONbits	set	4082
    99  0000                     _TRISBbits	set	3987
   100  0000                     _LATDbits	set	3980
   101  0000                     _LATD	set	3980
   102  0000                     _TRISD	set	3989
   103  0000                     _ADCON2bits	set	4032
   104  0000                     _ADCON0bits	set	4034
   105  0000                     _ADCON1bits	set	4033
   106  0000                     _TRISAbits	set	3986
   107                           
   108                           	psect	smallconst
   109  000800                     __psmallconst:
   110                           	callstack 0
   111  000800  00                 	db	0
   112  000801                     STR_1:
   113                           
   114                           ; BSR set to: 0
   115  000801  56                 	db	86	;'V'
   116  000802  6F                 	db	111	;'o'
   117  000803  6C                 	db	108	;'l'
   118  000804  74                 	db	116	;'t'
   119  000805  61                 	db	97	;'a'
   120  000806  6A                 	db	106	;'j'
   121  000807  65                 	db	101	;'e'
   122  000808  3A                 	db	58	;':'
   123  000809  20                 	db	32
   124  00080A  25                 	db	37
   125  00080B  30                 	db	48	;'0'
   126  00080C  2E                 	db	46
   127  00080D  32                 	db	50	;'2'
   128  00080E  66                 	db	102	;'f'
   129  00080F  56                 	db	86	;'V'
   130  000810  00                 	db	0
   131  000811                     STR_5:
   132                           
   133                           ; BSR set to: 0
   134  000811  49                 	db	73	;'I'
   135  000812  4E                 	db	78	;'N'
   136  000813  46                 	db	70	;'F'
   137  000814  00                 	db	0
   138  000815                     STR_9:
   139                           
   140                           ; BSR set to: 0
   141  000815  4E                 	db	78	;'N'
   142  000816  41                 	db	65	;'A'
   143  000817  4E                 	db	78	;'N'
   144  000818  00                 	db	0
   145  000819                     STR_6:
   146                           
   147                           ; BSR set to: 0
   148  000819  69                 	db	105	;'i'
   149  00081A  6E                 	db	110	;'n'
   150  00081B  66                 	db	102	;'f'
   151  00081C  00                 	db	0
   152  00081D                     STR_10:
   153                           
   154                           ; BSR set to: 0
   155  00081D  6E                 	db	110	;'n'
   156  00081E  61                 	db	97	;'a'
   157  00081F  6E                 	db	110	;'n'
   158  000820  00                 	db	0
   159  000821                     STR_13:
   160                           
   161                           ; BSR set to: 0
   162  000821  6C                 	db	108	;'l'
   163  000822  66                 	db	102	;'f'
   164  000823  00                 	db	0
   165  000824  00                 	db	0	; dummy byte at the end
   166  0000                     
   167                           ; #config settings
   168                           
   169                           	psect	cinit
   170  003A2A                     __pcinit:
   171                           	callstack 0
   172  003A2A                     start_initialization:
   173                           	callstack 0
   174  003A2A                     __initialization:
   175                           	callstack 0
   176                           
   177                           ; Clear objects allocated to BANK1 (80 bytes)
   178  003A2A  EE01  F000         	lfsr	0,__pbssBANK1
   179  003A2E  0E50               	movlw	80
   180  003A30                     clear_0:
   181  003A30  6AEE               	clrf	postinc0,c
   182  003A32  06E8               	decf	wreg,f,c
   183  003A34  E1FD               	bnz	clear_0
   184                           
   185                           ; Clear objects allocated to BANK0 (33 bytes)
   186  003A36  EE00  F0BE         	lfsr	0,__pbssBANK0
   187  003A3A  0E21               	movlw	33
   188  003A3C                     clear_1:
   189  003A3C  6AEE               	clrf	postinc0,c
   190  003A3E  06E8               	decf	wreg,f,c
   191  003A40  E1FD               	bnz	clear_1
   192                           
   193                           ; Clear objects allocated to COMRAM (6 bytes)
   194  003A42  6A56               	clrf	(__pbssCOMRAM+5)& (0+255),c
   195  003A44  6A55               	clrf	(__pbssCOMRAM+4)& (0+255),c
   196  003A46  6A54               	clrf	(__pbssCOMRAM+3)& (0+255),c
   197  003A48  6A53               	clrf	(__pbssCOMRAM+2)& (0+255),c
   198  003A4A  6A52               	clrf	(__pbssCOMRAM+1)& (0+255),c
   199  003A4C  6A51               	clrf	__pbssCOMRAM& (0+255),c
   200  003A4E                     end_of_initialization:
   201                           	callstack 0
   202  003A4E                     __end_of__initialization:
   203                           	callstack 0
   204  003A4E  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   205  003A50  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   206  003A52  0E00               	movlw	low (__Lmediumconst shr (0+16))
   207  003A54  6EF8               	movwf	tblptru,c
   208  003A56  0100               	movlb	0
   209  003A58  EFC0  F012         	goto	_main	;jump to C main() function
   210                           
   211                           	psect	bssCOMRAM
   212  000051                     __pbssCOMRAM:
   213                           	callstack 0
   214  000051                     _width:
   215                           	callstack 0
   216  000051                     	ds	2
   217  000053                     _prec:
   218                           	callstack 0
   219  000053                     	ds	2
   220  000055                     _flags:
   221                           	callstack 0
   222  000055                     	ds	2
   223                           
   224                           	psect	bssBANK0
   225  0000BE                     __pbssBANK0:
   226                           	callstack 0
   227  0000BE                     floorf@F524:
   228                           	callstack 0
   229  0000BE                     	ds	4
   230  0000C2                     ___fpclassifyf@F463:
   231                           	callstack 0
   232  0000C2                     	ds	4
   233  0000C6                     _vin:
   234                           	callstack 0
   235  0000C6                     	ds	4
   236  0000CA                     _nout:
   237                           	callstack 0
   238  0000CA                     	ds	2
   239  0000CC                     _x:
   240                           	callstack 0
   241  0000CC                     	ds	1
   242  0000CD                     _datos:
   243                           	callstack 0
   244  0000CD                     	ds	16
   245  0000DD                     _valor_adc:
   246                           	callstack 0
   247  0000DD                     	ds	2
   248                           
   249                           	psect	bssBANK1
   250  000100                     __pbssBANK1:
   251                           	callstack 0
   252  000100                     _dbuf:
   253                           	callstack 0
   254  000100                     	ds	80
   255                           
   256                           	psect	cstackBANK0
   257  000060                     __pcstackBANK0:
   258                           	callstack 0
   259  000060                     efgtoa@ou:
   260                           	callstack 0
   261                           
   262                           ; 4 bytes @ 0x0
   263  000060                     	ds	4
   264  000064                     _efgtoa$1197:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x4
   268  000064                     	ds	2
   269  000066                     _efgtoa$1198:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x6
   273  000066                     	ds	2
   274  000068                     _efgtoa$1203:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x8
   278  000068                     	ds	2
   279  00006A                     _efgtoa$1207:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0xA
   283  00006A                     	ds	2
   284  00006C                     _efgtoa$1208:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0xC
   288  00006C                     	ds	2
   289  00006E                     _efgtoa$1209:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0xE
   293  00006E                     	ds	2
   294  000070                     efgtoa@t:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x10
   298  000070                     	ds	2
   299  000072                     efgtoa@pp:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x12
   303  000072                     	ds	2
   304  000074                     efgtoa@m:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x14
   308  000074                     	ds	2
   309  000076                     efgtoa@ne:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x16
   313  000076                     	ds	2
   314  000078                     efgtoa@d:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x18
   318  000078                     	ds	2
   319  00007A                     efgtoa@sign:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x1A
   323  00007A                     	ds	2
   324  00007C                     efgtoa@p:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x1C
   328  00007C                     	ds	2
   329  00007E                     efgtoa@nmode:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x1E
   333  00007E                     	ds	1
   334  00007F                     efgtoa@w:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x1F
   338  00007F                     	ds	2
   339  000081                     efgtoa@mode:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x21
   343  000081                     	ds	1
   344  000082                     efgtoa@h:
   345                           	callstack 0
   346                           
   347                           ; 4 bytes @ 0x22
   348  000082                     	ds	4
   349  000086                     efgtoa@l:
   350                           	callstack 0
   351                           
   352                           ; 4 bytes @ 0x26
   353  000086                     	ds	4
   354  00008A                     efgtoa@i:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x2A
   358  00008A                     	ds	2
   359  00008C                     efgtoa@g:
   360                           	callstack 0
   361                           
   362                           ; 4 bytes @ 0x2C
   363  00008C                     	ds	4
   364  000090                     efgtoa@e:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x30
   368  000090                     	ds	2
   369  000092                     efgtoa@n:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x32
   373  000092                     	ds	2
   374  000094                     efgtoa@u:
   375                           	callstack 0
   376                           
   377                           ; 4 bytes @ 0x34
   378  000094                     	ds	4
   379  000098                     vfpfcnvrt@done:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x38
   383  000098                     	ds	2
   384  00009A                     _vfpfcnvrt$1223:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x3A
   388  00009A                     	ds	2
   389  00009C                     _vfpfcnvrt$1227:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x3C
   393  00009C                     	ds	2
   394  00009E                     vfpfcnvrt@f:
   395                           	callstack 0
   396                           
   397                           ; 4 bytes @ 0x3E
   398  00009E                     	ds	4
   399  0000A2                     vfpfcnvrt@ct:
   400                           	callstack 0
   401                           
   402                           ; 3 bytes @ 0x42
   403  0000A2                     	ds	3
   404  0000A5                     vfpfcnvrt@c:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0x45
   408  0000A5                     	ds	1
   409  0000A6                     ?_vfprintf:
   410                           	callstack 0
   411  0000A6                     vfprintf@fp:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x46
   415  0000A6                     	ds	2
   416  0000A8                     vfprintf@fmt:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x48
   420  0000A8                     	ds	2
   421  0000AA                     vfprintf@ap:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x4A
   425  0000AA                     	ds	2
   426  0000AC                     ?_sprintf:
   427                           	callstack 0
   428  0000AC                     sprintf@s:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x4C
   432  0000AC                     	ds	2
   433  0000AE                     sprintf@fmt:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x4E
   437  0000AE                     	ds	8
   438  0000B6                     sprintf@ap:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x56
   442  0000B6                     	ds	2
   443  0000B8                     sprintf@f:
   444                           	callstack 0
   445                           
   446                           ; 6 bytes @ 0x58
   447  0000B8                     	ds	6
   448                           
   449                           	psect	cstackCOMRAM
   450  000001                     __pcstackCOMRAM:
   451                           	callstack 0
   452  000001                     ??_INT1_ISR:
   453  000001                     
   454                           ; 1 bytes @ 0x0
   455  000001                     	ds	3
   456  000004                     ??_LCD_Comando:
   457  000004                     ??_LCD_Caracter:
   458  000004                     ?_ADC_Read:
   459                           	callstack 0
   460  000004                     ?_strlen:
   461                           	callstack 0
   462  000004                     ?___fpclassifyf:
   463                           	callstack 0
   464  000004                     ?_isupper:
   465                           	callstack 0
   466  000004                     ?_isdigit:
   467                           	callstack 0
   468  000004                     ?_strncmp:
   469                           	callstack 0
   470  000004                     ?_isspace:
   471                           	callstack 0
   472  000004                     ?___wmul:
   473                           	callstack 0
   474  000004                     ?___awdiv:
   475                           	callstack 0
   476  000004                     ?___awmod:
   477                           	callstack 0
   478  000004                     ?___fladd:
   479                           	callstack 0
   480  000004                     ?___fldiv:
   481                           	callstack 0
   482  000004                     ?___flneg:
   483                           	callstack 0
   484  000004                     ?___fltol:
   485                           	callstack 0
   486  000004                     ?___xxtofl:
   487                           	callstack 0
   488  000004                     ___wmul@multiplier:
   489                           	callstack 0
   490  000004                     ___awdiv@dividend:
   491                           	callstack 0
   492  000004                     ___awmod@dividend:
   493                           	callstack 0
   494  000004                     isdigit@c:
   495                           	callstack 0
   496  000004                     isspace@c:
   497                           	callstack 0
   498  000004                     isupper@c:
   499                           	callstack 0
   500  000004                     fputc@c:
   501                           	callstack 0
   502  000004                     strcpy@dest:
   503                           	callstack 0
   504  000004                     strlen@s:
   505                           	callstack 0
   506  000004                     strncmp@_l:
   507                           	callstack 0
   508  000004                     ___fleq@ff1:
   509                           	callstack 0
   510  000004                     ___flneg@f1:
   511                           	callstack 0
   512  000004                     ___fltol@f1:
   513                           	callstack 0
   514  000004                     ___fladd@b:
   515                           	callstack 0
   516  000004                     ___fldiv@b:
   517                           	callstack 0
   518  000004                     ___xxtofl@val:
   519                           	callstack 0
   520  000004                     ___fpclassifyf@x:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0x3
   524  000004                     	ds	1
   525  000005                     LCD_Comando@cmd:
   526                           	callstack 0
   527  000005                     LCD_Caracter@data:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x4
   531  000005                     	ds	1
   532  000006                     ??_LCD_Init:
   533  000006                     ??_ADC_Read:
   534  000006                     ??_isupper:
   535  000006                     ??_isdigit:
   536  000006                     ??_isspace:
   537  000006                     LCD_XY@x:
   538                           	callstack 0
   539  000006                     LCD_Cadena@dat:
   540                           	callstack 0
   541  000006                     ___wmul@multiplicand:
   542                           	callstack 0
   543  000006                     ___awdiv@divisor:
   544                           	callstack 0
   545  000006                     ___awmod@divisor:
   546                           	callstack 0
   547  000006                     fputc@fp:
   548                           	callstack 0
   549  000006                     strcpy@src:
   550                           	callstack 0
   551  000006                     strlen@a:
   552                           	callstack 0
   553  000006                     strncmp@_r:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x5
   557  000006                     	ds	1
   558  000007                     ADC_Read@ch:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x6
   562  000007                     	ds	1
   563  000008                     ??_fputc:
   564  000008                     ??___fpclassifyf:
   565  000008                     ??_strcpy:
   566  000008                     ??___fltol:
   567  000008                     ??___xxtofl:
   568  000008                     ___awdiv@counter:
   569                           	callstack 0
   570  000008                     ___awmod@counter:
   571                           	callstack 0
   572  000008                     LCD_XY@y:
   573                           	callstack 0
   574  000008                     ___wmul@product:
   575                           	callstack 0
   576  000008                     strncmp@n:
   577                           	callstack 0
   578  000008                     ___fleq@ff2:
   579                           	callstack 0
   580  000008                     ___fladd@a:
   581                           	callstack 0
   582  000008                     ___fldiv@a:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0x7
   586  000008                     	ds	1
   587  000009                     ___awdiv@sign:
   588                           	callstack 0
   589  000009                     ___awmod@sign:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x8
   593  000009                     	ds	1
   594  00000A                     ??_strncmp:
   595  00000A                     ?_tolower:
   596                           	callstack 0
   597  00000A                     _isspace$1292:
   598                           	callstack 0
   599  00000A                     ___awdiv@quotient:
   600                           	callstack 0
   601  00000A                     strcpy@s:
   602                           	callstack 0
   603  00000A                     tolower@c:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x9
   607  00000A                     	ds	1
   608  00000B                     ?_atoi:
   609                           	callstack 0
   610  00000B                     atoi@s:
   611                           	callstack 0
   612  00000B                     strncmp@l:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0xA
   616  00000B                     	ds	1
   617  00000C                     ??___fladd:
   618  00000C                     ??___fldiv:
   619  00000C                     ??_tolower:
   620  00000C                     ??___fleq:
   621  00000C                     ___fltol@sign1:
   622                           	callstack 0
   623  00000C                     ___xxtofl@sign:
   624                           	callstack 0
   625  00000C                     ___fpclassifyf@e:
   626                           	callstack 0
   627  00000C                     strcpy@d:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0xB
   631  00000C                     	ds	1
   632  00000D                     ??_atoi:
   633  00000D                     ___fltol@exp1:
   634                           	callstack 0
   635  00000D                     ___xxtofl@exp:
   636                           	callstack 0
   637  00000D                     fputs@s:
   638                           	callstack 0
   639  00000D                     strncmp@r:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0xC
   643  00000D                     	ds	1
   644  00000E                     ___xxtofl@arg:
   645                           	callstack 0
   646  00000E                     ___fpclassifyf@u:
   647                           	callstack 0
   648                           
   649                           ; 4 bytes @ 0xD
   650  00000E                     	ds	1
   651  00000F                     fputs@fp:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0xE
   655  00000F                     	ds	1
   656  000010                     ___fladd@signs:
   657                           	callstack 0
   658  000010                     _tolower$1356:
   659                           	callstack 0
   660  000010                     ___fldiv@rem:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0xF
   664  000010                     	ds	1
   665  000011                     ___fladd@aexp:
   666                           	callstack 0
   667  000011                     fputs@c:
   668                           	callstack 0
   669  000011                     atoi@neg:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x10
   673  000011                     	ds	1
   674  000012                     ?___flmul:
   675                           	callstack 0
   676  000012                     ___fladd@bexp:
   677                           	callstack 0
   678  000012                     fputs@i:
   679                           	callstack 0
   680  000012                     ___flmul@b:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x11
   684  000012                     	ds	1
   685  000013                     ___fladd@grs:
   686                           	callstack 0
   687  000013                     _atoi$1261:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x12
   691  000013                     	ds	1
   692  000014                     ?_pad:
   693                           	callstack 0
   694  000014                     ___fldiv@sign:
   695                           	callstack 0
   696  000014                     pad@fp:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x13
   700  000014                     	ds	1
   701  000015                     ___fldiv@new_exp:
   702                           	callstack 0
   703  000015                     _atoi$1263:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x14
   707  000015                     	ds	1
   708  000016                     pad@buf:
   709                           	callstack 0
   710  000016                     ___flmul@a:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x15
   714  000016                     	ds	1
   715  000017                     _atoi$1262:
   716                           	callstack 0
   717  000017                     ___fldiv@grs:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x16
   721  000017                     	ds	1
   722  000018                     pad@p:
   723                           	callstack 0
   724  000018                     atoi@n:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x17
   728  000018                     	ds	2
   729  00001A                     ??___flmul:
   730  00001A                     ??_pad:
   731                           
   732                           ; 1 bytes @ 0x19
   733  00001A                     	ds	1
   734  00001B                     ___fldiv@bexp:
   735                           	callstack 0
   736  00001B                     pad@i:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x1A
   740  00001B                     	ds	1
   741  00001C                     ___fldiv@aexp:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0x1B
   745  00001C                     	ds	1
   746  00001D                     ?_floorf:
   747                           	callstack 0
   748  00001D                     pad@w:
   749                           	callstack 0
   750  00001D                     floorf@x:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x1C
   754  00001D                     	ds	1
   755  00001E                     ___flmul@sign:
   756                           	callstack 0
   757                           
   758                           ; 1 bytes @ 0x1D
   759  00001E                     	ds	1
   760  00001F                     ___flmul@grs:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x1E
   764  00001F                     	ds	2
   765  000021                     ??_floorf:
   766                           
   767                           ; 1 bytes @ 0x20
   768  000021                     	ds	2
   769  000023                     ___flmul@aexp:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x22
   773  000023                     	ds	1
   774  000024                     ___flmul@bexp:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x23
   778  000024                     	ds	1
   779  000025                     ___flmul@prod:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x24
   783  000025                     	ds	2
   784  000027                     floorf@m:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x26
   788  000027                     	ds	2
   789  000029                     ___flmul@temp:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x28
   793  000029                     	ds	2
   794  00002B                     ?___flsub:
   795                           	callstack 0
   796  00002B                     floorf@e:
   797                           	callstack 0
   798  00002B                     ___flge@ff1:
   799                           	callstack 0
   800  00002B                     ___flsub@b:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0x2A
   804  00002B                     	ds	2
   805  00002D                     floorf@u:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x2C
   809  00002D                     	ds	2
   810  00002F                     ___flge@ff2:
   811                           	callstack 0
   812  00002F                     ___flsub@a:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x2E
   816  00002F                     	ds	4
   817  000033                     ??___flge:
   818                           
   819                           ; 1 bytes @ 0x32
   820  000033                     	ds	4
   821  000037                     ?_efgtoa:
   822                           	callstack 0
   823  000037                     efgtoa@fp:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x36
   827  000037                     	ds	2
   828  000039                     efgtoa@f:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0x38
   832  000039                     	ds	4
   833  00003D                     efgtoa@c:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x3C
   837  00003D                     	ds	1
   838  00003E                     ??_efgtoa:
   839                           
   840                           ; 1 bytes @ 0x3D
   841  00003E                     	ds	5
   842  000043                     ?_vfpfcnvrt:
   843                           	callstack 0
   844  000043                     vfpfcnvrt@fp:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0x42
   848  000043                     	ds	2
   849  000045                     vfpfcnvrt@fmt:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x44
   853  000045                     	ds	2
   854  000047                     vfpfcnvrt@ap:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x46
   858  000047                     	ds	2
   859  000049                     ??_vfpfcnvrt:
   860                           
   861                           ; 1 bytes @ 0x48
   862  000049                     	ds	4
   863  00004D                     vfprintf@cfmt:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x4C
   867  00004D                     	ds	2
   868  00004F                     ??_main:
   869                           
   870                           ; 1 bytes @ 0x4E
   871  00004F                     	ds	2
   872                           
   873 ;;
   874 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   875 ;;
   876 ;; *************** function _main *****************
   877 ;; Defined at:
   878 ;;		line 23 in file "Programa_principal.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   892 ;;      Params:         0       0       0       0       0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0       0       0       0       0
   894 ;;      Temps:          2       0       0       0       0       0       0       0       0
   895 ;;      Totals:         2       0       0       0       0       0       0       0       0
   896 ;;Total ram usage:        2 bytes
   897 ;; Hardware stack levels required when called:   10
   898 ;; This function calls:
   899 ;;		_ADC_Init
   900 ;;		_ADC_Read
   901 ;;		_Int_Init
   902 ;;		_LCD_Cadena
   903 ;;		_LCD_Init
   904 ;;		_LCD_XY
   905 ;;		___flmul
   906 ;;		___xxtofl
   907 ;;		_sprintf
   908 ;; This function is called by:
   909 ;;		Startup code after reset
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text0
   914  002580                     __ptext0:
   915                           	callstack 0
   916  002580                     _main:
   917                           	callstack 21
   918  002580                     
   919                           ;Programa_principal.c: 24:     TRISAbits.RA1 = 1;
   920  002580  8292               	bsf	146,1,c	;volatile
   921                           
   922                           ;Programa_principal.c: 25:     TRISAbits.RA0 = 1;
   923  002582  8092               	bsf	146,0,c	;volatile
   924  002584                     
   925                           ;Programa_principal.c: 26:     LCD_Init();
   926  002584  ECC3  F01B         	call	_LCD_Init	;wreg free
   927  002588                     
   928                           ;Programa_principal.c: 27:     ADC_Init();
   929  002588  EC6D  F01D         	call	_ADC_Init	;wreg free
   930  00258C                     
   931                           ;Programa_principal.c: 28:     Int_Init();
   932  00258C  EC90  F01D         	call	_Int_Init	;wreg free
   933  002590                     l4114:
   934                           
<<<<<<< HEAD
   935                           ;Programa_principal.c: 30:         if(x == 1){
   936  002590  0100               	movlb	0	; () banked
   937  002592  05CC               	decf	_x& (0+255),w,b
   938  002594  A4D8               	btfss	status,2,c
   939  002596  EFCF  F012         	goto	u4911
   940  00259A  EFD1  F012         	goto	u4910
   941  00259E                     u4911:
   942  00259E  EF29  F013         	goto	l4128
   943  0025A2                     u4910:
   944  0025A2                     
   945                           ; BSR set to: 0
   946                           ;Programa_principal.c: 31:             valor_adc = ADC_Read(0);
   947  0025A2  0E00               	movlw	0
   948  0025A4  EC85  F01C         	call	_ADC_Read
   949  0025A8  C004  F0DD         	movff	?_ADC_Read,_valor_adc
   950  0025AC  C005  F0DE         	movff	?_ADC_Read+1,_valor_adc+1
   951  0025B0                     
   952                           ;Programa_principal.c: 32:             vin = (5.0/1023)*valor_adc;
   953  0025B0  C0DD  F004         	movff	_valor_adc,___xxtofl@val
   954  0025B4  C0DE  F005         	movff	_valor_adc+1,___xxtofl@val+1
   955  0025B8  6A06               	clrf	(___xxtofl@val+2)^0,c
   956  0025BA  6A07               	clrf	(___xxtofl@val+3)^0,c
   957  0025BC  0E00               	movlw	0
   958  0025BE  EC5C  F015         	call	___xxtofl
   959  0025C2  C004  F012         	movff	?___xxtofl,___flmul@b
   960  0025C6  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
   961  0025CA  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
   962  0025CE  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
   963  0025D2  0E0A               	movlw	10
   964  0025D4  6E16               	movwf	___flmul@a^0,c
   965  0025D6  0E28               	movlw	40
   966  0025D8  6E17               	movwf	(___flmul@a+1)^0,c
   967  0025DA  0EA0               	movlw	160
   968  0025DC  6E18               	movwf	(___flmul@a+2)^0,c
   969  0025DE  0E3B               	movlw	59
   970  0025E0  6E19               	movwf	(___flmul@a+3)^0,c
   971  0025E2  ECDE  F00E         	call	___flmul	;wreg free
   972  0025E6  C012  F0C6         	movff	?___flmul,_vin
   973  0025EA  C013  F0C7         	movff	?___flmul+1,_vin+1
   974  0025EE  C014  F0C8         	movff	?___flmul+2,_vin+2
   975  0025F2  C015  F0C9         	movff	?___flmul+3,_vin+3
   976  0025F6                     
   977                           ;Programa_principal.c: 33:             sprintf(datos,"Voltaje: %0.2fV",vin);
   978  0025F6  0ECD               	movlw	low _datos
   979  0025F8  0100               	movlb	0	; () banked
   980  0025FA  6FAC               	movwf	sprintf@s& (0+255),b
   981  0025FC  0E00               	movlw	high _datos
   982  0025FE  6FAD               	movwf	(sprintf@s+1)& (0+255),b
   983  002600  0E01               	movlw	low STR_1
   984  002602  6FAE               	movwf	sprintf@fmt& (0+255),b
   985  002604  0E08               	movlw	high STR_1
   986  002606  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
   987  002608  C0C6  F0B0         	movff	_vin,?_sprintf+4
   988  00260C  C0C7  F0B1         	movff	_vin+1,?_sprintf+5
   989  002610  C0C8  F0B2         	movff	_vin+2,?_sprintf+6
   990  002614  C0C9  F0B3         	movff	_vin+3,?_sprintf+7
   991  002618  ECEE  F01B         	call	_sprintf	;wreg free
   992  00261C                     
   993                           ;Programa_principal.c: 34:             LCD_XY(0,0);
   994  00261C  0E00               	movlw	0
   995  00261E  6E07               	movwf	(LCD_XY@x+1)^0,c
   996  002620  0E00               	movlw	0
   997  002622  6E06               	movwf	LCD_XY@x^0,c
   998  002624  0E00               	movlw	0
   999  002626  6E09               	movwf	(LCD_XY@y+1)^0,c
  1000  002628  0E00               	movlw	0
  1001  00262A  6E08               	movwf	LCD_XY@y^0,c
  1002  00262C  EC46  F01D         	call	_LCD_XY	;wreg free
  1003  002630                     
  1004                           ;Programa_principal.c: 35:             LCD_Cadena(datos);
  1005  002630  0ECD               	movlw	low _datos
  1006  002632  6E06               	movwf	LCD_Cadena@dat^0,c
  1007  002634  0E00               	movlw	high _datos
  1008  002636  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
  1009  002638  EC2E  F01D         	call	_LCD_Cadena	;wreg free
  1010  00263C                     
  1011                           ;Programa_principal.c: 36:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1012  00263C  0E03               	movlw	3
  1013  00263E  6E50               	movwf	(??_main+1)^0,c
  1014  002640  0E8A               	movlw	138
  1015  002642  6E4F               	movwf	??_main^0,c
  1016  002644  0E56               	movlw	86
  1017  002646                     u4977:
  1018  002646  2EE8               	decfsz	wreg,f,c
  1019  002648  D7FE               	bra	u4977
  1020  00264A  2E4F               	decfsz	??_main^0,f,c
  1021  00264C  D7FC               	bra	u4977
  1022  00264E  2E50               	decfsz	(??_main+1)^0,f,c
  1023  002650  D7FA               	bra	u4977
  1024  002652                     l4128:
  1025                           
  1026                           ;Programa_principal.c: 38:         if(x == 2){
  1027  002652  0E02               	movlw	2
  1028  002654  0100               	movlb	0	; () banked
  1029  002656  19CC               	xorwf	_x& (0+255),w,b
  1030  002658  A4D8               	btfss	status,2,c
  1031  00265A  EF31  F013         	goto	u4921
  1032  00265E  EF33  F013         	goto	u4920
  1033  002662                     u4921:
  1034  002662  EF8B  F013         	goto	l4142
  1035  002666                     u4920:
  1036  002666                     
  1037                           ; BSR set to: 0
  1038                           ;Programa_principal.c: 39:             valor_adc = ADC_Read(1);
  1039  002666  0E01               	movlw	1
  1040  002668  EC85  F01C         	call	_ADC_Read
  1041  00266C  C004  F0DD         	movff	?_ADC_Read,_valor_adc
  1042  002670  C005  F0DE         	movff	?_ADC_Read+1,_valor_adc+1
  1043  002674                     
  1044                           ;Programa_principal.c: 40:             vin = (5.0/1023)*valor_adc;
  1045  002674  C0DD  F004         	movff	_valor_adc,___xxtofl@val
  1046  002678  C0DE  F005         	movff	_valor_adc+1,___xxtofl@val+1
  1047  00267C  6A06               	clrf	(___xxtofl@val+2)^0,c
  1048  00267E  6A07               	clrf	(___xxtofl@val+3)^0,c
  1049  002680  0E00               	movlw	0
  1050  002682  EC5C  F015         	call	___xxtofl
  1051  002686  C004  F012         	movff	?___xxtofl,___flmul@b
  1052  00268A  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1053  00268E  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1054  002692  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1055  002696  0E0A               	movlw	10
  1056  002698  6E16               	movwf	___flmul@a^0,c
  1057  00269A  0E28               	movlw	40
  1058  00269C  6E17               	movwf	(___flmul@a+1)^0,c
  1059  00269E  0EA0               	movlw	160
  1060  0026A0  6E18               	movwf	(___flmul@a+2)^0,c
  1061  0026A2  0E3B               	movlw	59
  1062  0026A4  6E19               	movwf	(___flmul@a+3)^0,c
  1063  0026A6  ECDE  F00E         	call	___flmul	;wreg free
  1064  0026AA  C012  F0C6         	movff	?___flmul,_vin
  1065  0026AE  C013  F0C7         	movff	?___flmul+1,_vin+1
  1066  0026B2  C014  F0C8         	movff	?___flmul+2,_vin+2
  1067  0026B6  C015  F0C9         	movff	?___flmul+3,_vin+3
  1068  0026BA                     
  1069                           ;Programa_principal.c: 41:             sprintf(datos,"Voltaje: %0.2fV",vin);
  1070  0026BA  0ECD               	movlw	low _datos
  1071  0026BC  0100               	movlb	0	; () banked
  1072  0026BE  6FAC               	movwf	sprintf@s& (0+255),b
  1073  0026C0  0E00               	movlw	high _datos
  1074  0026C2  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1075  0026C4  0E01               	movlw	low STR_1
  1076  0026C6  6FAE               	movwf	sprintf@fmt& (0+255),b
  1077  0026C8  0E08               	movlw	high STR_1
  1078  0026CA  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1079  0026CC  C0C6  F0B0         	movff	_vin,?_sprintf+4
  1080  0026D0  C0C7  F0B1         	movff	_vin+1,?_sprintf+5
  1081  0026D4  C0C8  F0B2         	movff	_vin+2,?_sprintf+6
  1082  0026D8  C0C9  F0B3         	movff	_vin+3,?_sprintf+7
  1083  0026DC  ECEE  F01B         	call	_sprintf	;wreg free
  1084  0026E0                     
  1085                           ;Programa_principal.c: 42:             LCD_XY(0,0);
  1086  0026E0  0E00               	movlw	0
  1087  0026E2  6E07               	movwf	(LCD_XY@x+1)^0,c
  1088  0026E4  0E00               	movlw	0
  1089  0026E6  6E06               	movwf	LCD_XY@x^0,c
  1090  0026E8  0E00               	movlw	0
  1091  0026EA  6E09               	movwf	(LCD_XY@y+1)^0,c
  1092  0026EC  0E00               	movlw	0
  1093  0026EE  6E08               	movwf	LCD_XY@y^0,c
  1094  0026F0  EC46  F01D         	call	_LCD_XY	;wreg free
  1095  0026F4                     
  1096                           ;Programa_principal.c: 43:             LCD_Cadena(datos);
  1097  0026F4  0ECD               	movlw	low _datos
  1098  0026F6  6E06               	movwf	LCD_Cadena@dat^0,c
  1099  0026F8  0E00               	movlw	high _datos
  1100  0026FA  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
  1101  0026FC  EC2E  F01D         	call	_LCD_Cadena	;wreg free
  1102  002700                     
  1103                           ;Programa_principal.c: 44:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1104  002700  0E03               	movlw	3
  1105  002702  6E50               	movwf	(??_main+1)^0,c
  1106  002704  0E8A               	movlw	138
  1107  002706  6E4F               	movwf	??_main^0,c
  1108  002708  0E56               	movlw	86
  1109  00270A                     u4987:
  1110  00270A  2EE8               	decfsz	wreg,f,c
  1111  00270C  D7FE               	bra	u4987
  1112  00270E  2E4F               	decfsz	??_main^0,f,c
  1113  002710  D7FC               	bra	u4987
  1114  002712  2E50               	decfsz	(??_main+1)^0,f,c
  1115  002714  D7FA               	bra	u4987
  1116  002716                     l4142:
  1117                           
  1118                           ;Programa_principal.c: 46:         if(x == 3){
  1119  002716  0E03               	movlw	3
  1120  002718  0100               	movlb	0	; () banked
  1121  00271A  19CC               	xorwf	_x& (0+255),w,b
  1122  00271C  A4D8               	btfss	status,2,c
  1123  00271E  EF93  F013         	goto	u4931
  1124  002722  EF95  F013         	goto	u4930
  1125  002726                     u4931:
  1126  002726  EFED  F013         	goto	l4156
  1127  00272A                     u4930:
  1128  00272A                     
  1129                           ; BSR set to: 0
  1130                           ;Programa_principal.c: 47:             valor_adc = ADC_Read(0);
  1131  00272A  0E00               	movlw	0
  1132  00272C  EC85  F01C         	call	_ADC_Read
  1133  002730  C004  F0DD         	movff	?_ADC_Read,_valor_adc
  1134  002734  C005  F0DE         	movff	?_ADC_Read+1,_valor_adc+1
  1135  002738                     
  1136                           ;Programa_principal.c: 48:             vin = (5.0/1023)*valor_adc;
  1137  002738  C0DD  F004         	movff	_valor_adc,___xxtofl@val
  1138  00273C  C0DE  F005         	movff	_valor_adc+1,___xxtofl@val+1
  1139  002740  6A06               	clrf	(___xxtofl@val+2)^0,c
  1140  002742  6A07               	clrf	(___xxtofl@val+3)^0,c
  1141  002744  0E00               	movlw	0
  1142  002746  EC5C  F015         	call	___xxtofl
  1143  00274A  C004  F012         	movff	?___xxtofl,___flmul@b
  1144  00274E  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1145  002752  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1146  002756  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1147  00275A  0E0A               	movlw	10
  1148  00275C  6E16               	movwf	___flmul@a^0,c
  1149  00275E  0E28               	movlw	40
  1150  002760  6E17               	movwf	(___flmul@a+1)^0,c
  1151  002762  0EA0               	movlw	160
  1152  002764  6E18               	movwf	(___flmul@a+2)^0,c
  1153  002766  0E3B               	movlw	59
  1154  002768  6E19               	movwf	(___flmul@a+3)^0,c
  1155  00276A  ECDE  F00E         	call	___flmul	;wreg free
  1156  00276E  C012  F0C6         	movff	?___flmul,_vin
  1157  002772  C013  F0C7         	movff	?___flmul+1,_vin+1
  1158  002776  C014  F0C8         	movff	?___flmul+2,_vin+2
  1159  00277A  C015  F0C9         	movff	?___flmul+3,_vin+3
  1160  00277E                     
  1161                           ;Programa_principal.c: 49:             sprintf(datos,"Voltaje: %0.2fV",vin);
  1162  00277E  0ECD               	movlw	low _datos
  1163  002780  0100               	movlb	0	; () banked
  1164  002782  6FAC               	movwf	sprintf@s& (0+255),b
  1165  002784  0E00               	movlw	high _datos
  1166  002786  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1167  002788  0E01               	movlw	low STR_1
  1168  00278A  6FAE               	movwf	sprintf@fmt& (0+255),b
  1169  00278C  0E08               	movlw	high STR_1
  1170  00278E  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1171  002790  C0C6  F0B0         	movff	_vin,?_sprintf+4
  1172  002794  C0C7  F0B1         	movff	_vin+1,?_sprintf+5
  1173  002798  C0C8  F0B2         	movff	_vin+2,?_sprintf+6
  1174  00279C  C0C9  F0B3         	movff	_vin+3,?_sprintf+7
  1175  0027A0  ECEE  F01B         	call	_sprintf	;wreg free
  1176  0027A4                     
  1177                           ;Programa_principal.c: 50:             LCD_XY(0,0);
  1178  0027A4  0E00               	movlw	0
  1179  0027A6  6E07               	movwf	(LCD_XY@x+1)^0,c
  1180  0027A8  0E00               	movlw	0
  1181  0027AA  6E06               	movwf	LCD_XY@x^0,c
  1182  0027AC  0E00               	movlw	0
  1183  0027AE  6E09               	movwf	(LCD_XY@y+1)^0,c
  1184  0027B0  0E00               	movlw	0
  1185  0027B2  6E08               	movwf	LCD_XY@y^0,c
  1186  0027B4  EC46  F01D         	call	_LCD_XY	;wreg free
  1187  0027B8                     
  1188                           ;Programa_principal.c: 51:             LCD_Cadena(datos);
  1189  0027B8  0ECD               	movlw	low _datos
  1190  0027BA  6E06               	movwf	LCD_Cadena@dat^0,c
  1191  0027BC  0E00               	movlw	high _datos
  1192  0027BE  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
  1193  0027C0  EC2E  F01D         	call	_LCD_Cadena	;wreg free
  1194  0027C4                     
  1195                           ;Programa_principal.c: 52:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1196  0027C4  0E03               	movlw	3
  1197  0027C6  6E50               	movwf	(??_main+1)^0,c
  1198  0027C8  0E8A               	movlw	138
  1199  0027CA  6E4F               	movwf	??_main^0,c
  1200  0027CC  0E56               	movlw	86
  1201  0027CE                     u4997:
  1202  0027CE  2EE8               	decfsz	wreg,f,c
  1203  0027D0  D7FE               	bra	u4997
  1204  0027D2  2E4F               	decfsz	??_main^0,f,c
  1205  0027D4  D7FC               	bra	u4997
  1206  0027D6  2E50               	decfsz	(??_main+1)^0,f,c
  1207  0027D8  D7FA               	bra	u4997
  1208  0027DA                     l4156:
  1209                           
  1210                           ;Programa_principal.c: 54:         if(x == 4){
  1211  0027DA  0E04               	movlw	4
  1212  0027DC  0100               	movlb	0	; () banked
  1213  0027DE  19CC               	xorwf	_x& (0+255),w,b
=======
   935                           ;Programa_principal.c: 30:         if(x == 4){
   936  002590  0E04               	movlw	4
   937  002592  0100               	movlb	0	; () banked
   938  002594  19CC               	xorwf	_x& (0+255),w,b
   939  002596  A4D8               	btfss	status,2,c
   940  002598  EFD0  F012         	goto	u4911
   941  00259C  EFD2  F012         	goto	u4910
   942  0025A0                     u4911:
   943  0025A0  EF2A  F013         	goto	l4128
   944  0025A4                     u4910:
   945  0025A4                     
   946                           ; BSR set to: 0
   947                           ;Programa_principal.c: 31:             valor_adc = ADC_Read(0);
   948  0025A4  0E00               	movlw	0
   949  0025A6  EC85  F01C         	call	_ADC_Read
   950  0025AA  C004  F0DD         	movff	?_ADC_Read,_valor_adc
   951  0025AE  C005  F0DE         	movff	?_ADC_Read+1,_valor_adc+1
   952  0025B2                     
   953                           ;Programa_principal.c: 32:             vin = (5.0/1023)*valor_adc;
   954  0025B2  C0DD  F004         	movff	_valor_adc,___xxtofl@val
   955  0025B6  C0DE  F005         	movff	_valor_adc+1,___xxtofl@val+1
   956  0025BA  6A06               	clrf	(___xxtofl@val+2)^0,c
   957  0025BC  6A07               	clrf	(___xxtofl@val+3)^0,c
   958  0025BE  0E00               	movlw	0
   959  0025C0  EC5C  F015         	call	___xxtofl
   960  0025C4  C004  F012         	movff	?___xxtofl,___flmul@b
   961  0025C8  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
   962  0025CC  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
   963  0025D0  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
   964  0025D4  0E0A               	movlw	10
   965  0025D6  6E16               	movwf	___flmul@a^0,c
   966  0025D8  0E28               	movlw	40
   967  0025DA  6E17               	movwf	(___flmul@a+1)^0,c
   968  0025DC  0EA0               	movlw	160
   969  0025DE  6E18               	movwf	(___flmul@a+2)^0,c
   970  0025E0  0E3B               	movlw	59
   971  0025E2  6E19               	movwf	(___flmul@a+3)^0,c
   972  0025E4  ECDE  F00E         	call	___flmul	;wreg free
   973  0025E8  C012  F0C6         	movff	?___flmul,_vin
   974  0025EC  C013  F0C7         	movff	?___flmul+1,_vin+1
   975  0025F0  C014  F0C8         	movff	?___flmul+2,_vin+2
   976  0025F4  C015  F0C9         	movff	?___flmul+3,_vin+3
   977  0025F8                     
   978                           ;Programa_principal.c: 33:             sprintf(datos,"Voltaje: %0.2fV",vin);
   979  0025F8  0ECD               	movlw	low _datos
   980  0025FA  0100               	movlb	0	; () banked
   981  0025FC  6FAC               	movwf	sprintf@s& (0+255),b
   982  0025FE  0E00               	movlw	high _datos
   983  002600  6FAD               	movwf	(sprintf@s+1)& (0+255),b
   984  002602  0E01               	movlw	low STR_1
   985  002604  6FAE               	movwf	sprintf@fmt& (0+255),b
   986  002606  0E08               	movlw	high STR_1
   987  002608  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
   988  00260A  C0C6  F0B0         	movff	_vin,?_sprintf+4
   989  00260E  C0C7  F0B1         	movff	_vin+1,?_sprintf+5
   990  002612  C0C8  F0B2         	movff	_vin+2,?_sprintf+6
   991  002616  C0C9  F0B3         	movff	_vin+3,?_sprintf+7
   992  00261A  ECEE  F01B         	call	_sprintf	;wreg free
   993  00261E                     
   994                           ;Programa_principal.c: 34:             LCD_XY(0,0);
   995  00261E  0E00               	movlw	0
   996  002620  6E07               	movwf	(LCD_XY@x+1)^0,c
   997  002622  0E00               	movlw	0
   998  002624  6E06               	movwf	LCD_XY@x^0,c
   999  002626  0E00               	movlw	0
  1000  002628  6E09               	movwf	(LCD_XY@y+1)^0,c
  1001  00262A  0E00               	movlw	0
  1002  00262C  6E08               	movwf	LCD_XY@y^0,c
  1003  00262E  EC46  F01D         	call	_LCD_XY	;wreg free
  1004  002632                     
  1005                           ;Programa_principal.c: 35:             LCD_Cadena(datos);
  1006  002632  0ECD               	movlw	low _datos
  1007  002634  6E06               	movwf	LCD_Cadena@dat^0,c
  1008  002636  0E00               	movlw	high _datos
  1009  002638  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
  1010  00263A  EC2E  F01D         	call	_LCD_Cadena	;wreg free
  1011  00263E                     
  1012                           ;Programa_principal.c: 36:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1013  00263E  0E03               	movlw	3
  1014  002640  6E50               	movwf	(??_main+1)^0,c
  1015  002642  0E8A               	movlw	138
  1016  002644  6E4F               	movwf	??_main^0,c
  1017  002646  0E56               	movlw	86
  1018  002648                     u4977:
  1019  002648  2EE8               	decfsz	wreg,f,c
  1020  00264A  D7FE               	bra	u4977
  1021  00264C  2E4F               	decfsz	??_main^0,f,c
  1022  00264E  D7FC               	bra	u4977
  1023  002650  2E50               	decfsz	(??_main+1)^0,f,c
  1024  002652  D7FA               	bra	u4977
  1025  002654                     l4128:
  1026                           
  1027                           ;Programa_principal.c: 38:         if(x == 3){
  1028  002654  0E03               	movlw	3
  1029  002656  0100               	movlb	0	; () banked
  1030  002658  19CC               	xorwf	_x& (0+255),w,b
  1031  00265A  A4D8               	btfss	status,2,c
  1032  00265C  EF32  F013         	goto	u4921
  1033  002660  EF34  F013         	goto	u4920
  1034  002664                     u4921:
  1035  002664  EF8C  F013         	goto	l4142
  1036  002668                     u4920:
  1037  002668                     
  1038                           ; BSR set to: 0
  1039                           ;Programa_principal.c: 39:             valor_adc = ADC_Read(1);
  1040  002668  0E01               	movlw	1
  1041  00266A  EC85  F01C         	call	_ADC_Read
  1042  00266E  C004  F0DD         	movff	?_ADC_Read,_valor_adc
  1043  002672  C005  F0DE         	movff	?_ADC_Read+1,_valor_adc+1
  1044  002676                     
  1045                           ;Programa_principal.c: 40:             vin = (5.0/1023)*valor_adc;
  1046  002676  C0DD  F004         	movff	_valor_adc,___xxtofl@val
  1047  00267A  C0DE  F005         	movff	_valor_adc+1,___xxtofl@val+1
  1048  00267E  6A06               	clrf	(___xxtofl@val+2)^0,c
  1049  002680  6A07               	clrf	(___xxtofl@val+3)^0,c
  1050  002682  0E00               	movlw	0
  1051  002684  EC5C  F015         	call	___xxtofl
  1052  002688  C004  F012         	movff	?___xxtofl,___flmul@b
  1053  00268C  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1054  002690  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1055  002694  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1056  002698  0E0A               	movlw	10
  1057  00269A  6E16               	movwf	___flmul@a^0,c
  1058  00269C  0E28               	movlw	40
  1059  00269E  6E17               	movwf	(___flmul@a+1)^0,c
  1060  0026A0  0EA0               	movlw	160
  1061  0026A2  6E18               	movwf	(___flmul@a+2)^0,c
  1062  0026A4  0E3B               	movlw	59
  1063  0026A6  6E19               	movwf	(___flmul@a+3)^0,c
  1064  0026A8  ECDE  F00E         	call	___flmul	;wreg free
  1065  0026AC  C012  F0C6         	movff	?___flmul,_vin
  1066  0026B0  C013  F0C7         	movff	?___flmul+1,_vin+1
  1067  0026B4  C014  F0C8         	movff	?___flmul+2,_vin+2
  1068  0026B8  C015  F0C9         	movff	?___flmul+3,_vin+3
  1069  0026BC                     
  1070                           ;Programa_principal.c: 41:             sprintf(datos,"Voltaje: %0.2fV",vin);
  1071  0026BC  0ECD               	movlw	low _datos
  1072  0026BE  0100               	movlb	0	; () banked
  1073  0026C0  6FAC               	movwf	sprintf@s& (0+255),b
  1074  0026C2  0E00               	movlw	high _datos
  1075  0026C4  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1076  0026C6  0E01               	movlw	low STR_1
  1077  0026C8  6FAE               	movwf	sprintf@fmt& (0+255),b
  1078  0026CA  0E08               	movlw	high STR_1
  1079  0026CC  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1080  0026CE  C0C6  F0B0         	movff	_vin,?_sprintf+4
  1081  0026D2  C0C7  F0B1         	movff	_vin+1,?_sprintf+5
  1082  0026D6  C0C8  F0B2         	movff	_vin+2,?_sprintf+6
  1083  0026DA  C0C9  F0B3         	movff	_vin+3,?_sprintf+7
  1084  0026DE  ECEE  F01B         	call	_sprintf	;wreg free
  1085  0026E2                     
  1086                           ;Programa_principal.c: 42:             LCD_XY(0,0);
  1087  0026E2  0E00               	movlw	0
  1088  0026E4  6E07               	movwf	(LCD_XY@x+1)^0,c
  1089  0026E6  0E00               	movlw	0
  1090  0026E8  6E06               	movwf	LCD_XY@x^0,c
  1091  0026EA  0E00               	movlw	0
  1092  0026EC  6E09               	movwf	(LCD_XY@y+1)^0,c
  1093  0026EE  0E00               	movlw	0
  1094  0026F0  6E08               	movwf	LCD_XY@y^0,c
  1095  0026F2  EC46  F01D         	call	_LCD_XY	;wreg free
  1096  0026F6                     
  1097                           ;Programa_principal.c: 43:             LCD_Cadena(datos);
  1098  0026F6  0ECD               	movlw	low _datos
  1099  0026F8  6E06               	movwf	LCD_Cadena@dat^0,c
  1100  0026FA  0E00               	movlw	high _datos
  1101  0026FC  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
  1102  0026FE  EC2E  F01D         	call	_LCD_Cadena	;wreg free
  1103  002702                     
  1104                           ;Programa_principal.c: 44:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1105  002702  0E03               	movlw	3
  1106  002704  6E50               	movwf	(??_main+1)^0,c
  1107  002706  0E8A               	movlw	138
  1108  002708  6E4F               	movwf	??_main^0,c
  1109  00270A  0E56               	movlw	86
  1110  00270C                     u4987:
  1111  00270C  2EE8               	decfsz	wreg,f,c
  1112  00270E  D7FE               	bra	u4987
  1113  002710  2E4F               	decfsz	??_main^0,f,c
  1114  002712  D7FC               	bra	u4987
  1115  002714  2E50               	decfsz	(??_main+1)^0,f,c
  1116  002716  D7FA               	bra	u4987
  1117  002718                     l4142:
  1118                           
  1119                           ;Programa_principal.c: 46:         if(x == 2){
  1120  002718  0E02               	movlw	2
  1121  00271A  0100               	movlb	0	; () banked
  1122  00271C  19CC               	xorwf	_x& (0+255),w,b
  1123  00271E  A4D8               	btfss	status,2,c
  1124  002720  EF94  F013         	goto	u4931
  1125  002724  EF96  F013         	goto	u4930
  1126  002728                     u4931:
  1127  002728  EFEE  F013         	goto	l4156
  1128  00272C                     u4930:
  1129  00272C                     
  1130                           ; BSR set to: 0
  1131                           ;Programa_principal.c: 47:             valor_adc = ADC_Read(0);
  1132  00272C  0E00               	movlw	0
  1133  00272E  EC85  F01C         	call	_ADC_Read
  1134  002732  C004  F0DD         	movff	?_ADC_Read,_valor_adc
  1135  002736  C005  F0DE         	movff	?_ADC_Read+1,_valor_adc+1
  1136  00273A                     
  1137                           ;Programa_principal.c: 48:             vin = (5.0/1023)*valor_adc;
  1138  00273A  C0DD  F004         	movff	_valor_adc,___xxtofl@val
  1139  00273E  C0DE  F005         	movff	_valor_adc+1,___xxtofl@val+1
  1140  002742  6A06               	clrf	(___xxtofl@val+2)^0,c
  1141  002744  6A07               	clrf	(___xxtofl@val+3)^0,c
  1142  002746  0E00               	movlw	0
  1143  002748  EC5C  F015         	call	___xxtofl
  1144  00274C  C004  F012         	movff	?___xxtofl,___flmul@b
  1145  002750  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1146  002754  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1147  002758  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1148  00275C  0E0A               	movlw	10
  1149  00275E  6E16               	movwf	___flmul@a^0,c
  1150  002760  0E28               	movlw	40
  1151  002762  6E17               	movwf	(___flmul@a+1)^0,c
  1152  002764  0EA0               	movlw	160
  1153  002766  6E18               	movwf	(___flmul@a+2)^0,c
  1154  002768  0E3B               	movlw	59
  1155  00276A  6E19               	movwf	(___flmul@a+3)^0,c
  1156  00276C  ECDE  F00E         	call	___flmul	;wreg free
  1157  002770  C012  F0C6         	movff	?___flmul,_vin
  1158  002774  C013  F0C7         	movff	?___flmul+1,_vin+1
  1159  002778  C014  F0C8         	movff	?___flmul+2,_vin+2
  1160  00277C  C015  F0C9         	movff	?___flmul+3,_vin+3
  1161  002780                     
  1162                           ;Programa_principal.c: 49:             sprintf(datos,"Voltaje: %0.2fV",vin);
  1163  002780  0ECD               	movlw	low _datos
  1164  002782  0100               	movlb	0	; () banked
  1165  002784  6FAC               	movwf	sprintf@s& (0+255),b
  1166  002786  0E00               	movlw	high _datos
  1167  002788  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1168  00278A  0E01               	movlw	low STR_1
  1169  00278C  6FAE               	movwf	sprintf@fmt& (0+255),b
  1170  00278E  0E08               	movlw	high STR_1
  1171  002790  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1172  002792  C0C6  F0B0         	movff	_vin,?_sprintf+4
  1173  002796  C0C7  F0B1         	movff	_vin+1,?_sprintf+5
  1174  00279A  C0C8  F0B2         	movff	_vin+2,?_sprintf+6
  1175  00279E  C0C9  F0B3         	movff	_vin+3,?_sprintf+7
  1176  0027A2  ECEE  F01B         	call	_sprintf	;wreg free
  1177  0027A6                     
  1178                           ;Programa_principal.c: 50:             LCD_XY(0,0);
  1179  0027A6  0E00               	movlw	0
  1180  0027A8  6E07               	movwf	(LCD_XY@x+1)^0,c
  1181  0027AA  0E00               	movlw	0
  1182  0027AC  6E06               	movwf	LCD_XY@x^0,c
  1183  0027AE  0E00               	movlw	0
  1184  0027B0  6E09               	movwf	(LCD_XY@y+1)^0,c
  1185  0027B2  0E00               	movlw	0
  1186  0027B4  6E08               	movwf	LCD_XY@y^0,c
  1187  0027B6  EC46  F01D         	call	_LCD_XY	;wreg free
  1188  0027BA                     
  1189                           ;Programa_principal.c: 51:             LCD_Cadena(datos);
  1190  0027BA  0ECD               	movlw	low _datos
  1191  0027BC  6E06               	movwf	LCD_Cadena@dat^0,c
  1192  0027BE  0E00               	movlw	high _datos
  1193  0027C0  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
  1194  0027C2  EC2E  F01D         	call	_LCD_Cadena	;wreg free
  1195  0027C6                     
  1196                           ;Programa_principal.c: 52:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1197  0027C6  0E03               	movlw	3
  1198  0027C8  6E50               	movwf	(??_main+1)^0,c
  1199  0027CA  0E8A               	movlw	138
  1200  0027CC  6E4F               	movwf	??_main^0,c
  1201  0027CE  0E56               	movlw	86
  1202  0027D0                     u4997:
  1203  0027D0  2EE8               	decfsz	wreg,f,c
  1204  0027D2  D7FE               	bra	u4997
  1205  0027D4  2E4F               	decfsz	??_main^0,f,c
  1206  0027D6  D7FC               	bra	u4997
  1207  0027D8  2E50               	decfsz	(??_main+1)^0,f,c
  1208  0027DA  D7FA               	bra	u4997
  1209  0027DC                     l4156:
  1210                           
  1211                           ;Programa_principal.c: 54:         if(x == 1){
  1212  0027DC  0100               	movlb	0	; () banked
  1213  0027DE  05CC               	decf	_x& (0+255),w,b
>>>>>>> testing
  1214  0027E0  A4D8               	btfss	status,2,c
  1215  0027E2  EFF5  F013         	goto	u4941
  1216  0027E6  EFF7  F013         	goto	u4940
  1217  0027EA                     u4941:
  1218  0027EA  EFC8  F012         	goto	l4114
  1219  0027EE                     u4940:
  1220  0027EE                     
  1221                           ; BSR set to: 0
  1222                           ;Programa_principal.c: 55:             valor_adc = ADC_Read(1);
  1223  0027EE  0E01               	movlw	1
  1224  0027F0  EC85  F01C         	call	_ADC_Read
  1225  0027F4  C004  F0DD         	movff	?_ADC_Read,_valor_adc
  1226  0027F8  C005  F0DE         	movff	?_ADC_Read+1,_valor_adc+1
  1227  0027FC                     
  1228                           ;Programa_principal.c: 56:             vin = (5.0/1023)*valor_adc;
  1229  0027FC  C0DD  F004         	movff	_valor_adc,___xxtofl@val
  1230  002800  C0DE  F005         	movff	_valor_adc+1,___xxtofl@val+1
  1231  002804  6A06               	clrf	(___xxtofl@val+2)^0,c
  1232  002806  6A07               	clrf	(___xxtofl@val+3)^0,c
  1233  002808  0E00               	movlw	0
  1234  00280A  EC5C  F015         	call	___xxtofl
  1235  00280E  C004  F012         	movff	?___xxtofl,___flmul@b
  1236  002812  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1237  002816  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1238  00281A  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1239  00281E  0E0A               	movlw	10
  1240  002820  6E16               	movwf	___flmul@a^0,c
  1241  002822  0E28               	movlw	40
  1242  002824  6E17               	movwf	(___flmul@a+1)^0,c
  1243  002826  0EA0               	movlw	160
  1244  002828  6E18               	movwf	(___flmul@a+2)^0,c
  1245  00282A  0E3B               	movlw	59
  1246  00282C  6E19               	movwf	(___flmul@a+3)^0,c
  1247  00282E  ECDE  F00E         	call	___flmul	;wreg free
  1248  002832  C012  F0C6         	movff	?___flmul,_vin
  1249  002836  C013  F0C7         	movff	?___flmul+1,_vin+1
  1250  00283A  C014  F0C8         	movff	?___flmul+2,_vin+2
  1251  00283E  C015  F0C9         	movff	?___flmul+3,_vin+3
  1252  002842                     
  1253                           ;Programa_principal.c: 57:             sprintf(datos,"Voltaje: %0.2fV",vin);
  1254  002842  0ECD               	movlw	low _datos
  1255  002844  0100               	movlb	0	; () banked
  1256  002846  6FAC               	movwf	sprintf@s& (0+255),b
  1257  002848  0E00               	movlw	high _datos
  1258  00284A  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1259  00284C  0E01               	movlw	low STR_1
  1260  00284E  6FAE               	movwf	sprintf@fmt& (0+255),b
  1261  002850  0E08               	movlw	high STR_1
  1262  002852  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1263  002854  C0C6  F0B0         	movff	_vin,?_sprintf+4
  1264  002858  C0C7  F0B1         	movff	_vin+1,?_sprintf+5
  1265  00285C  C0C8  F0B2         	movff	_vin+2,?_sprintf+6
  1266  002860  C0C9  F0B3         	movff	_vin+3,?_sprintf+7
  1267  002864  ECEE  F01B         	call	_sprintf	;wreg free
  1268  002868                     
  1269                           ;Programa_principal.c: 58:             LCD_XY(0,0);
  1270  002868  0E00               	movlw	0
  1271  00286A  6E07               	movwf	(LCD_XY@x+1)^0,c
  1272  00286C  0E00               	movlw	0
  1273  00286E  6E06               	movwf	LCD_XY@x^0,c
  1274  002870  0E00               	movlw	0
  1275  002872  6E09               	movwf	(LCD_XY@y+1)^0,c
  1276  002874  0E00               	movlw	0
  1277  002876  6E08               	movwf	LCD_XY@y^0,c
  1278  002878  EC46  F01D         	call	_LCD_XY	;wreg free
  1279  00287C                     
  1280                           ;Programa_principal.c: 59:             LCD_Cadena(datos);
  1281  00287C  0ECD               	movlw	low _datos
  1282  00287E  6E06               	movwf	LCD_Cadena@dat^0,c
  1283  002880  0E00               	movlw	high _datos
  1284  002882  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
  1285  002884  EC2E  F01D         	call	_LCD_Cadena	;wreg free
  1286  002888                     
  1287                           ;Programa_principal.c: 60:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1288  002888  0E03               	movlw	3
  1289  00288A  6E50               	movwf	(??_main+1)^0,c
  1290  00288C  0E8A               	movlw	138
  1291  00288E  6E4F               	movwf	??_main^0,c
  1292  002890  0E56               	movlw	86
  1293  002892                     u5007:
  1294  002892  2EE8               	decfsz	wreg,f,c
  1295  002894  D7FE               	bra	u5007
  1296  002896  2E4F               	decfsz	??_main^0,f,c
  1297  002898  D7FC               	bra	u5007
  1298  00289A  2E50               	decfsz	(??_main+1)^0,f,c
  1299  00289C  D7FA               	bra	u5007
  1300  00289E  EFC8  F012         	goto	l4114
  1301  0028A2  EF28  F000         	goto	start
  1302  0028A6                     __end_of_main:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _sprintf *****************
  1306 ;; Defined at:
  1307 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  s               2   76[BANK0 ] PTR unsigned char 
  1310 ;;		 -> datos(16), 
  1311 ;;  fmt             2   78[BANK0 ] PTR const unsigned char 
  1312 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  f               6   88[BANK0 ] struct _IO_FILE
  1315 ;;  ap              2   86[BANK0 ] PTR void [1]
  1316 ;;		 -> ?_sprintf(2), 
  1317 ;;  ret             2    0        int 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  2   76[BANK0 ] int 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1327 ;;      Params:         0       8       0       0       0       0       0       0       0
  1328 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1330 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1331 ;;Total ram usage:       18 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    9
  1334 ;; This function calls:
  1335 ;;		_vfprintf
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text1
  1342  0037DC                     __ptext1:
  1343                           	callstack 0
  1344  0037DC                     _sprintf:
  1345                           	callstack 21
  1346  0037DC  0EB0               	movlw	low (?_sprintf+4)
  1347  0037DE  0100               	movlb	0	; () banked
  1348  0037E0  6FB6               	movwf	sprintf@ap& (0+255),b
  1349  0037E2  0E00               	movlw	high (?_sprintf+4)
  1350  0037E4  6FB7               	movwf	(sprintf@ap+1)& (0+255),b
  1351  0037E6  C0AC  F0B8         	movff	sprintf@s,sprintf@f
  1352  0037EA  C0AD  F0B9         	movff	sprintf@s+1,sprintf@f+1
  1353  0037EE                     
  1354                           ; BSR set to: 0
  1355  0037EE  0E00               	movlw	0
  1356  0037F0  6FBB               	movwf	(sprintf@f+3)& (0+255),b
  1357  0037F2  0E00               	movlw	0
  1358  0037F4  6FBA               	movwf	(sprintf@f+2)& (0+255),b
  1359  0037F6                     
  1360                           ; BSR set to: 0
  1361  0037F6  0E00               	movlw	0
  1362  0037F8  6FBD               	movwf	(sprintf@f+5)& (0+255),b
  1363  0037FA  0E00               	movlw	0
  1364  0037FC  6FBC               	movwf	(sprintf@f+4)& (0+255),b
  1365  0037FE                     
  1366                           ; BSR set to: 0
  1367  0037FE  0EB8               	movlw	low sprintf@f
  1368  003800  6FA6               	movwf	vfprintf@fp& (0+255),b
  1369  003802  0E00               	movlw	high sprintf@f
  1370  003804  6FA7               	movwf	(vfprintf@fp+1)& (0+255),b
  1371  003806  C0AE  F0A8         	movff	sprintf@fmt,vfprintf@fmt
  1372  00380A  C0AF  F0A9         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1373  00380E  0EB6               	movlw	low sprintf@ap
  1374  003810  6FAA               	movwf	vfprintf@ap& (0+255),b
  1375  003812  0E00               	movlw	high sprintf@ap
  1376  003814  6FAB               	movwf	(vfprintf@ap+1)& (0+255),b
  1377  003816  EC34  F01B         	call	_vfprintf	;wreg free
  1378  00381A  0100               	movlb	0	; () banked
  1379  00381C  51BA               	movf	(sprintf@f+2)& (0+255),w,b
  1380  00381E  25AC               	addwf	sprintf@s& (0+255),w,b
  1381  003820  6ED9               	movwf	fsr2l,c
  1382  003822  51BB               	movf	(sprintf@f+3)& (0+255),w,b
  1383  003824  21AD               	addwfc	(sprintf@s+1)& (0+255),w,b
  1384  003826  6EDA               	movwf	fsr2h,c
  1385  003828  0E00               	movlw	0
  1386  00382A  6EDF               	movwf	indf2,c
  1387  00382C                     
  1388                           ; BSR set to: 0
  1389  00382C  0012               	return		;funcret
  1390  00382E                     __end_of_sprintf:
  1391                           	callstack 0
  1392                           
  1393 ;; *************** function _vfprintf *****************
  1394 ;; Defined at:
  1395 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  1398 ;;		 -> sprintf@f(6), 
  1399 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  1400 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  1401 ;;  ap              2   74[BANK0 ] PTR PTR void 
  1402 ;;		 -> sprintf@ap(2), 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  cfmt            2   76[COMRAM] PTR unsigned char 
  1405 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  2   70[BANK0 ] int 
  1408 ;; Registers used:
  1409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1415 ;;      Params:         0       6       0       0       0       0       0       0       0
  1416 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1418 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1419 ;;Total ram usage:        8 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    8
  1422 ;; This function calls:
  1423 ;;		_vfpfcnvrt
  1424 ;; This function is called by:
  1425 ;;		_sprintf
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text2
  1430  003668                     __ptext2:
  1431                           	callstack 0
  1432  003668                     _vfprintf:
  1433                           	callstack 21
  1434  003668                     
  1435                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1436  003668  C0A8  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
  1437  00366C  C0A9  F04E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1438  003670                     
  1439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1440  003670  0E00               	movlw	0
  1441  003672  0100               	movlb	0	; () banked
  1442  003674  6FCB               	movwf	(_nout+1)& (0+255),b
  1443  003676  0E00               	movlw	0
  1444  003678  6FCA               	movwf	_nout& (0+255),b
  1445                           
  1446                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1447  00367A  EF52  F01B         	goto	l3994
  1448  00367E                     l3992:
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1452  00367E  C0A6  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1453  003682  C0A7  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1454  003686  0E4D               	movlw	low vfprintf@cfmt
  1455  003688  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1456  00368A  0E00               	movlw	high vfprintf@cfmt
  1457  00368C  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1458  00368E  C0AA  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1459  003692  C0AB  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1460  003696  ECEC  F009         	call	_vfpfcnvrt	;wreg free
  1461  00369A  5043               	movf	?_vfpfcnvrt^0,w,c
  1462  00369C  0100               	movlb	0	; () banked
  1463  00369E  27CA               	addwf	_nout& (0+255),f,b
  1464  0036A0  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1465  0036A2  23CB               	addwfc	(_nout+1)& (0+255),f,b
  1466  0036A4                     l3994:
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1470  0036A4  C04D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1471  0036A8  C04E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1472  0036AC                     	if	0	;tblptru may be non-zero
  1473  0036AC                     	endif
  1474  0036AC                     	if	0	;tblptru may be non-zero
  1475  0036AC                     	endif
  1476  0036AC  0008               	tblrd		*
  1477  0036AE  50F5               	movf	tablat,w,c
  1478  0036B0  0900               	iorlw	0
  1479  0036B2  A4D8               	btfss	status,2,c
  1480  0036B4  EF5E  F01B         	goto	u4761
  1481  0036B8  EF60  F01B         	goto	u4760
  1482  0036BC                     u4761:
  1483  0036BC  EF3F  F01B         	goto	l3992
  1484  0036C0                     u4760:
  1485  0036C0                     
  1486                           ; BSR set to: 0
  1487                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1488  0036C0  C0CA  F0A6         	movff	_nout,?_vfprintf
  1489  0036C4  C0CB  F0A7         	movff	_nout+1,?_vfprintf+1
  1490  0036C8                     
  1491                           ; BSR set to: 0
  1492  0036C8  0012               	return		;funcret
  1493  0036CA                     __end_of_vfprintf:
  1494                           	callstack 0
  1495                           
  1496 ;; *************** function _vfpfcnvrt *****************
  1497 ;; Defined at:
  1498 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1501 ;;		 -> sprintf@f(6), 
  1502 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1503 ;;		 -> vfprintf@cfmt(2), 
  1504 ;;  ap              2   70[COMRAM] PTR PTR void 
  1505 ;;		 -> sprintf@ap(2), 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  llu             8    0        unsigned long long 
  1508 ;;  ll              8    0        long long 
  1509 ;;  f               4   62[BANK0 ] long long 
  1510 ;;  ct              3   66[BANK0 ] unsigned char [3]
  1511 ;;  vp              3    0        PTR void 
  1512 ;;  cp              3    0        PTR unsigned char 
  1513 ;;  done            2   56[BANK0 ] int 
  1514 ;;  i               2    0        int 
  1515 ;;  c               1   69[BANK0 ] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  2   66[COMRAM] int 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1525 ;;      Params:         6       0       0       0       0       0       0       0       0
  1526 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1527 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1528 ;;      Totals:        10      14       0       0       0       0       0       0       0
  1529 ;;Total ram usage:       24 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    7
  1532 ;; This function calls:
  1533 ;;		_atoi
  1534 ;;		_efgtoa
  1535 ;;		_fputc
  1536 ;;		_isdigit
  1537 ;;		_isupper
  1538 ;;		_strncmp
  1539 ;;		_tolower
  1540 ;; This function is called by:
  1541 ;;		_vfprintf
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	text3
  1546  0013D8                     __ptext3:
  1547                           	callstack 0
  1548  0013D8                     _vfpfcnvrt:
  1549                           	callstack 21
  1550  0013D8                     
  1551                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1552  0013D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1553  0013DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1554  0013E0  CFDE FFF6          	movff	postinc2,tblptrl
  1555  0013E4  CFDD FFF7          	movff	postdec2,tblptrh
  1556  0013E8                     	if	0	;tblptru may be non-zero
  1557  0013E8                     	endif
  1558  0013E8                     	if	0	;tblptru may be non-zero
  1559  0013E8                     	endif
  1560  0013E8  0008               	tblrd		*
  1561  0013EA  50F5               	movf	tablat,w,c
  1562  0013EC  0A25               	xorlw	37
  1563  0013EE  A4D8               	btfss	status,2,c
  1564  0013F0  EFFC  F009         	goto	u4601
  1565  0013F4  EFFE  F009         	goto	u4600
  1566  0013F8                     u4601:
  1567  0013F8  EF62  F00C         	goto	l3926
  1568  0013FC                     u4600:
  1569  0013FC                     
  1570                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1571  0013FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1572  001400  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1573  001404  2ADE               	incf	postinc2,f,c
  1574  001406  0E00               	movlw	0
  1575  001408  22DD               	addwfc	postdec2,f,c
  1576  00140A                     
  1577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1578  00140A  0E00               	movlw	0
  1579  00140C  6E52               	movwf	(_width+1)^0,c
  1580  00140E  0E00               	movlw	0
  1581  001410  6E51               	movwf	_width^0,c
  1582  001412  C051  F055         	movff	_width,_flags
  1583  001416  C052  F056         	movff	_width+1,_flags+1
  1584  00141A                     
  1585                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1586  00141A  6853               	setf	_prec^0,c
  1587  00141C  6854               	setf	(_prec+1)^0,c
  1588  00141E                     
  1589                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  1590  00141E  0E00               	movlw	0
  1591  001420  0100               	movlb	0	; () banked
  1592  001422  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1593  001424  0E00               	movlw	0
  1594  001426  6F98               	movwf	vfpfcnvrt@done& (0+255),b
  1595                           
  1596                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1597  001428  EF5C  F00A         	goto	l3848
  1598  00142C                     l3822:
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  1602  00142C  8055               	bsf	_flags^0,0,c
  1603  00142E                     l3824:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  1607  00142E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1608  001432  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1609  001436  2ADE               	incf	postinc2,f,c
  1610  001438  0E00               	movlw	0
  1611  00143A  22DD               	addwfc	postdec2,f,c
  1612                           
  1613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  1614  00143C  EF5C  F00A         	goto	l3848
  1615  001440                     l3826:
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  1619  001440  8255               	bsf	_flags^0,1,c
  1620  001442  EF17  F00A         	goto	l3824
  1621  001446                     l3830:
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  1625  001446  8455               	bsf	_flags^0,2,c
  1626  001448  EF17  F00A         	goto	l3824
  1627  00144C                     l3834:
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  1631  00144C  8655               	bsf	_flags^0,3,c
  1632  00144E  EF17  F00A         	goto	l3824
  1633  001452                     l3838:
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  1637  001452  8855               	bsf	_flags^0,4,c
  1638  001454  EF17  F00A         	goto	l3824
  1639  001458                     l3842:
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  1643  001458  0E00               	movlw	0
  1644  00145A  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1645  00145C  0E01               	movlw	1
  1646  00145E  6F98               	movwf	vfpfcnvrt@done& (0+255),b
  1647                           
  1648                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  1649  001460  EF5C  F00A         	goto	l3848
  1650  001464                     l3846:
  1651                           
  1652                           ; BSR set to: 0
  1653  001464  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1654  001468  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1655  00146C  CFDE FFF6          	movff	postinc2,tblptrl
  1656  001470  CFDD FFF7          	movff	postdec2,tblptrh
  1657  001474                     	if	0	;tblptru may be non-zero
  1658  001474                     	endif
  1659  001474                     	if	0	;tblptru may be non-zero
  1660  001474                     	endif
  1661  001474  0008               	tblrd		*
  1662  001476  50F5               	movf	tablat,w,c
  1663  001478  6E49               	movwf	??_vfpfcnvrt^0,c
  1664  00147A  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1665                           
  1666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1667                           ; Switch size 1, requested type "simple"
  1668                           ; Number of cases is 1, Range of values is 0 to 0
  1669                           ; switch strategies available:
  1670                           ; Name         Instructions Cycles
  1671                           ; simple_byte            4     3 (average)
  1672                           ;	Chosen strategy is simple_byte
  1673  00147C  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1674  00147E  0A00               	xorlw	0	; case 0
  1675  001480  B4D8               	btfsc	status,2,c
  1676  001482  EF45  F00A         	goto	l4256
  1677  001486  EF2C  F00A         	goto	l3842
  1678  00148A                     l4256:
  1679                           
  1680                           ; BSR set to: 0
  1681                           ; Switch size 1, requested type "simple"
  1682                           ; Number of cases is 5, Range of values is 32 to 48
  1683                           ; switch strategies available:
  1684                           ; Name         Instructions Cycles
  1685                           ; simple_byte           16     9 (average)
  1686                           ;	Chosen strategy is simple_byte
  1687  00148A  5049               	movf	??_vfpfcnvrt^0,w,c
  1688  00148C  0A20               	xorlw	32	; case 32
  1689  00148E  B4D8               	btfsc	status,2,c
  1690  001490  EF26  F00A         	goto	l3834
  1691  001494  0A03               	xorlw	3	; case 35
  1692  001496  B4D8               	btfsc	status,2,c
  1693  001498  EF29  F00A         	goto	l3838
  1694  00149C  0A08               	xorlw	8	; case 43
  1695  00149E  B4D8               	btfsc	status,2,c
  1696  0014A0  EF23  F00A         	goto	l3830
  1697  0014A4  0A06               	xorlw	6	; case 45
  1698  0014A6  B4D8               	btfsc	status,2,c
  1699  0014A8  EF16  F00A         	goto	l3822
  1700  0014AC  0A1D               	xorlw	29	; case 48
  1701  0014AE  B4D8               	btfsc	status,2,c
  1702  0014B0  EF20  F00A         	goto	l3826
  1703  0014B4  EF2C  F00A         	goto	l3842
  1704  0014B8                     l3848:
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1708  0014B8  5198               	movf	vfpfcnvrt@done& (0+255),w,b
  1709  0014BA  1199               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1710  0014BC  B4D8               	btfsc	status,2,c
  1711  0014BE  EF63  F00A         	goto	u4611
  1712  0014C2  EF65  F00A         	goto	u4610
  1713  0014C6                     u4611:
  1714  0014C6  EF32  F00A         	goto	l3846
  1715  0014CA                     u4610:
  1716  0014CA                     
  1717                           ; BSR set to: 0
  1718                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  1719  0014CA  A055               	btfss	_flags^0,0,c
  1720  0014CC  EF6A  F00A         	goto	u4621
  1721  0014D0  EF6C  F00A         	goto	u4620
  1722  0014D4                     u4621:
  1723  0014D4  EF6D  F00A         	goto	l3852
  1724  0014D8                     u4620:
  1725  0014D8                     
  1726                           ; BSR set to: 0
  1727                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  1728  0014D8  9255               	bcf	_flags^0,1,c
  1729  0014DA                     l3852:
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  1733  0014DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1734  0014DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1735  0014E2  CFDE FFF6          	movff	postinc2,tblptrl
  1736  0014E6  CFDD FFF7          	movff	postdec2,tblptrh
  1737  0014EA                     	if	0	;tblptru may be non-zero
  1738  0014EA                     	endif
  1739  0014EA                     	if	0	;tblptru may be non-zero
  1740  0014EA                     	endif
  1741  0014EA  0008               	tblrd		*
  1742  0014EC  50F5               	movf	tablat,w,c
  1743  0014EE  0A2E               	xorlw	46
  1744  0014F0  A4D8               	btfss	status,2,c
  1745  0014F2  EF7D  F00A         	goto	u4631
  1746  0014F6  EF7F  F00A         	goto	u4630
  1747  0014FA                     u4631:
  1748  0014FA  EFFD  F00A         	goto	l3872
  1749  0014FE                     u4630:
  1750  0014FE                     
  1751                           ; BSR set to: 0
  1752                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  1753  0014FE  0E00               	movlw	0
  1754  001500  6E54               	movwf	(_prec+1)^0,c
  1755  001502  0E00               	movlw	0
  1756  001504  6E53               	movwf	_prec^0,c
  1757  001506                     
  1758                           ; BSR set to: 0
  1759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  1760  001506  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1761  00150A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1762  00150E  2ADE               	incf	postinc2,f,c
  1763  001510  0E00               	movlw	0
  1764  001512  22DD               	addwfc	postdec2,f,c
  1765  001514                     
  1766                           ; BSR set to: 0
  1767                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  1768  001514  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1769  001518  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1770  00151C  CFDE FFF6          	movff	postinc2,tblptrl
  1771  001520  CFDD FFF7          	movff	postdec2,tblptrh
  1772  001524                     	if	0	;tblptru may be non-zero
  1773  001524                     	endif
  1774  001524                     	if	0	;tblptru may be non-zero
  1775  001524                     	endif
  1776  001524  0008               	tblrd		*
  1777  001526  50F5               	movf	tablat,w,c
  1778  001528  0A2A               	xorlw	42
  1779  00152A  A4D8               	btfss	status,2,c
  1780  00152C  EF9A  F00A         	goto	u4641
  1781  001530  EF9C  F00A         	goto	u4640
  1782  001534                     u4641:
  1783  001534  EFB9  F00A         	goto	l3862
  1784  001538                     u4640:
  1785  001538                     
  1786                           ; BSR set to: 0
  1787                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  1788  001538  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1789  00153C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1790  001540  2ADE               	incf	postinc2,f,c
  1791  001542  0E00               	movlw	0
  1792  001544  22DD               	addwfc	postdec2,f,c
  1793                           
  1794                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1795  001546  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1796  00154A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1797  00154E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1798  001552  0E02               	movlw	2
  1799  001554  26DE               	addwf	postinc2,f,c
  1800  001556  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1801  00155A  0E00               	movlw	0
  1802  00155C  22DD               	addwfc	postdec2,f,c
  1803  00155E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1804  001562  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1805  001566  CFDE F053          	movff	postinc2,_prec
  1806  00156A  CFDD F054          	movff	postdec2,_prec+1
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  1809  00156E  EFFD  F00A         	goto	l3872
  1810  001572                     l3862:
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  1814  001572  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1815  001576  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1816  00157A  CFDE F00B          	movff	postinc2,atoi@s
  1817  00157E  CFDD F00C          	movff	postdec2,atoi@s+1
  1818  001582  EC36  F016         	call	_atoi	;wreg free
  1819  001586  C00B  F053         	movff	?_atoi,_prec
  1820  00158A  C00C  F054         	movff	?_atoi+1,_prec+1
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1823  00158E  EFD0  F00A         	goto	l3866
  1824  001592                     l3864:
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  1828  001592  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1829  001596  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1830  00159A  2ADE               	incf	postinc2,f,c
  1831  00159C  0E00               	movlw	0
  1832  00159E  22DD               	addwfc	postdec2,f,c
  1833  0015A0                     l3866:
  1834  0015A0  0ED0               	movlw	208
  1835  0015A2  6E49               	movwf	??_vfpfcnvrt^0,c
  1836  0015A4  0EFF               	movlw	255
  1837  0015A6  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1838  0015A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1839  0015AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1840  0015B0  CFDE FFF6          	movff	postinc2,tblptrl
  1841  0015B4  CFDD FFF7          	movff	postdec2,tblptrh
  1842  0015B8                     	if	0	;tblptru may be non-zero
  1843  0015B8                     	endif
  1844  0015B8                     	if	0	;tblptru may be non-zero
  1845  0015B8                     	endif
  1846  0015B8  0008               	tblrd		*
  1847  0015BA  50F5               	movf	tablat,w,c
  1848  0015BC  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  1849  0015BE  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  1850  0015C0  5049               	movf	??_vfpfcnvrt^0,w,c
  1851  0015C2  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1852  0015C4  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1853  0015C6  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1854  0015C8  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  1855  0015CA  E10A               	bnz	u4650
  1856  0015CC  0E0A               	movlw	10
  1857  0015CE  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1858  0015D0  A0D8               	btfss	status,0,c
  1859  0015D2  EFED  F00A         	goto	u4651
  1860  0015D6  EFF0  F00A         	goto	u4650
  1861  0015DA                     u4651:
  1862  0015DA  0E01               	movlw	1
  1863  0015DC  EFF1  F00A         	goto	u4660
  1864  0015E0                     u4650:
  1865  0015E0  0E00               	movlw	0
  1866  0015E2                     u4660:
  1867  0015E2  0100               	movlb	0	; () banked
  1868  0015E4  6F9A               	movwf	_vfpfcnvrt$1223& (0+255),b
  1869  0015E6  6B9B               	clrf	(_vfpfcnvrt$1223+1)& (0+255),b
  1870  0015E8                     
  1871                           ; BSR set to: 0
  1872  0015E8  519A               	movf	_vfpfcnvrt$1223& (0+255),w,b
  1873  0015EA  119B               	iorwf	(_vfpfcnvrt$1223+1)& (0+255),w,b
  1874  0015EC  A4D8               	btfss	status,2,c
  1875  0015EE  EFFB  F00A         	goto	u4671
  1876  0015F2  EFFD  F00A         	goto	u4670
  1877  0015F6                     u4671:
  1878  0015F6  EFC9  F00A         	goto	l3864
  1879  0015FA                     u4670:
  1880  0015FA                     l3872:
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  1884  0015FA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1885  0015FE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1886  001602  CFDE FFF6          	movff	postinc2,tblptrl
  1887  001606  CFDD FFF7          	movff	postdec2,tblptrh
  1888  00160A                     	if	0	;tblptru may be non-zero
  1889  00160A                     	endif
  1890  00160A                     	if	0	;tblptru may be non-zero
  1891  00160A                     	endif
  1892  00160A  0008               	tblrd		*
  1893  00160C  50F5               	movf	tablat,w,c
  1894  00160E  6E0A               	movwf	tolower@c^0,c
  1895  001610  6A0B               	clrf	(tolower@c+1)^0,c
  1896  001612  EC65  F01B         	call	_tolower	;wreg free
  1897  001616  500A               	movf	?_tolower^0,w,c
  1898  001618  0100               	movlb	0	; () banked
  1899  00161A  6FA2               	movwf	vfpfcnvrt@ct& (0+255),b
  1900  00161C                     
  1901                           ; BSR set to: 0
  1902                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  1903  00161C  51A2               	movf	vfpfcnvrt@ct& (0+255),w,b
  1904  00161E  B4D8               	btfsc	status,2,c
  1905  001620  EF14  F00B         	goto	u4681
  1906  001624  EF16  F00B         	goto	u4680
  1907  001628                     u4681:
  1908  001628  EF50  F00B         	goto	l3882
  1909  00162C                     u4680:
  1910  00162C                     
  1911                           ; BSR set to: 0
  1912                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  1913  00162C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1914  001630  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1915  001634  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  1916  001638  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  1917  00163C  0E01               	movlw	1
  1918  00163E  2649               	addwf	??_vfpfcnvrt^0,f,c
  1919  001640  0E00               	movlw	0
  1920  001642  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1921  001644  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1922  001648  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1923  00164C                     	if	0	;tblptru may be non-zero
  1924  00164C                     	endif
  1925  00164C                     	if	0	;tblptru may be non-zero
  1926  00164C                     	endif
  1927  00164C  0008               	tblrd		*
  1928  00164E  50F5               	movf	tablat,w,c
  1929  001650  6E0A               	movwf	tolower@c^0,c
  1930  001652  6A0B               	clrf	(tolower@c+1)^0,c
  1931  001654  EC65  F01B         	call	_tolower	;wreg free
  1932  001658  500A               	movf	?_tolower^0,w,c
  1933  00165A  0100               	movlb	0	; () banked
  1934  00165C  6FA3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1935  00165E                     
  1936                           ; BSR set to: 0
  1937                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  1938  00165E  51A3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1939  001660  B4D8               	btfsc	status,2,c
  1940  001662  EF35  F00B         	goto	u4691
  1941  001666  EF37  F00B         	goto	u4690
  1942  00166A                     u4691:
  1943  00166A  EF50  F00B         	goto	l3882
  1944  00166E                     u4690:
  1945  00166E                     
  1946                           ; BSR set to: 0
  1947                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  1948  00166E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1949  001672  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1950  001676  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  1951  00167A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  1952  00167E  0E02               	movlw	2
  1953  001680  2649               	addwf	??_vfpfcnvrt^0,f,c
  1954  001682  0E00               	movlw	0
  1955  001684  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1956  001686  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1957  00168A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1958  00168E                     	if	0	;tblptru may be non-zero
  1959  00168E                     	endif
  1960  00168E                     	if	0	;tblptru may be non-zero
  1961  00168E                     	endif
  1962  00168E  0008               	tblrd		*
  1963  001690  50F5               	movf	tablat,w,c
  1964  001692  6E0A               	movwf	tolower@c^0,c
  1965  001694  6A0B               	clrf	(tolower@c+1)^0,c
  1966  001696  EC65  F01B         	call	_tolower	;wreg free
  1967  00169A  500A               	movf	?_tolower^0,w,c
  1968  00169C  0100               	movlb	0	; () banked
  1969  00169E  6FA4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1970  0016A0                     l3882:
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  1974  0016A0  0E66               	movlw	102
  1975  0016A2  19A2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1976  0016A4  A4D8               	btfss	status,2,c
  1977  0016A6  EF57  F00B         	goto	u4701
  1978  0016AA  EF59  F00B         	goto	u4700
  1979  0016AE                     u4701:
  1980  0016AE  EF99  F00B         	goto	l3894
  1981  0016B2                     u4700:
  1982  0016B2                     
  1983                           ; BSR set to: 0
  1984                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  1985  0016B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1986  0016B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1987  0016BA  CFDE FFF6          	movff	postinc2,tblptrl
  1988  0016BE  CFDD FFF7          	movff	postdec2,tblptrh
  1989  0016C2                     	if	0	;tblptru may be non-zero
  1990  0016C2                     	endif
  1991  0016C2                     	if	0	;tblptru may be non-zero
  1992  0016C2                     	endif
  1993  0016C2  0008               	tblrd		*
  1994  0016C4  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  1995  0016C8                     
  1996                           ; BSR set to: 0
  1997                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  1998  0016C8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1999  0016CC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2000  0016D0  2ADE               	incf	postinc2,f,c
  2001  0016D2  0E00               	movlw	0
  2002  0016D4  22DD               	addwfc	postdec2,f,c
  2003  0016D6                     
  2004                           ; BSR set to: 0
  2005                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2006  0016D6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2007  0016DA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2008  0016DE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2009  0016E2  0E04               	movlw	4
  2010  0016E4  26DE               	addwf	postinc2,f,c
  2011  0016E6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2012  0016EA  0E00               	movlw	0
  2013  0016EC  22DD               	addwfc	postdec2,f,c
  2014  0016EE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2015  0016F2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2016  0016F6  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  2017  0016FA  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  2018  0016FE  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  2019  001702  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  2020  001706                     l3890:
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  2024  001706  C043  F037         	movff	vfpfcnvrt@fp,efgtoa@fp
  2025  00170A  C044  F038         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2026  00170E  C09E  F039         	movff	vfpfcnvrt@f,efgtoa@f
  2027  001712  C09F  F03A         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2028  001716  C0A0  F03B         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2029  00171A  C0A1  F03C         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2030  00171E  C0A5  F03D         	movff	vfpfcnvrt@c,efgtoa@c
  2031  001722  EC13  F004         	call	_efgtoa	;wreg free
  2032  001726  C037  F043         	movff	?_efgtoa,?_vfpfcnvrt
  2033  00172A  C038  F044         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2034  00172E  EF7D  F00C         	goto	l960
  2035  001732                     l3894:
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2039  001732  0EA2               	movlw	low vfpfcnvrt@ct
  2040  001734  6E04               	movwf	strncmp@_l^0,c
  2041  001736  0E00               	movlw	high vfpfcnvrt@ct
  2042  001738  6E05               	movwf	(strncmp@_l+1)^0,c
  2043  00173A  0E21               	movlw	low STR_13
  2044  00173C  6E06               	movwf	strncmp@_r^0,c
  2045  00173E  0E08               	movlw	high STR_13
  2046  001740  6E07               	movwf	(strncmp@_r+1)^0,c
  2047  001742  0E00               	movlw	0
  2048  001744  6E09               	movwf	(strncmp@n+1)^0,c
  2049  001746  0E02               	movlw	2
  2050  001748  6E08               	movwf	strncmp@n^0,c
  2051  00174A  EC82  F018         	call	_strncmp	;wreg free
  2052  00174E  5004               	movf	?_strncmp^0,w,c
  2053  001750  1005               	iorwf	(?_strncmp+1)^0,w,c
  2054  001752  A4D8               	btfss	status,2,c
  2055  001754  EFAE  F00B         	goto	u4711
  2056  001758  EFB0  F00B         	goto	u4710
  2057  00175C                     u4711:
  2058  00175C  EF2C  F00C         	goto	l3910
  2059  001760                     u4710:
  2060  001760                     
  2061                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2062  001760  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2063  001764  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2064  001768  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  2065  00176C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  2066  001770  0E01               	movlw	1
  2067  001772  2649               	addwf	??_vfpfcnvrt^0,f,c
  2068  001774  0E00               	movlw	0
  2069  001776  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2070  001778  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2071  00177C  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2072  001780                     	if	0	;tblptru may be non-zero
  2073  001780                     	endif
  2074  001780                     	if	0	;tblptru may be non-zero
  2075  001780                     	endif
  2076  001780  0008               	tblrd		*
  2077  001782  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2078  001786  0EBF               	movlw	191
  2079  001788  6E49               	movwf	??_vfpfcnvrt^0,c
  2080  00178A  0EFF               	movlw	255
  2081  00178C  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  2082  00178E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2083  001792  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2084  001796  CFDE FFF6          	movff	postinc2,tblptrl
  2085  00179A  CFDD FFF7          	movff	postdec2,tblptrh
  2086  00179E                     	if	0	;tblptru may be non-zero
  2087  00179E                     	endif
  2088  00179E                     	if	0	;tblptru may be non-zero
  2089  00179E                     	endif
  2090  00179E  0008               	tblrd		*
  2091  0017A0  50F5               	movf	tablat,w,c
  2092  0017A2  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2093  0017A4  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  2094  0017A6  5049               	movf	??_vfpfcnvrt^0,w,c
  2095  0017A8  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2096  0017AA  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2097  0017AC  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2098  0017AE  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2099  0017B0  E10A               	bnz	u4720
  2100  0017B2  0E1A               	movlw	26
  2101  0017B4  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2102  0017B6  A0D8               	btfss	status,0,c
  2103  0017B8  EFE0  F00B         	goto	u4721
  2104  0017BC  EFE3  F00B         	goto	u4720
  2105  0017C0                     u4721:
  2106  0017C0  0E01               	movlw	1
  2107  0017C2  EFE4  F00B         	goto	u4730
  2108  0017C6                     u4720:
  2109  0017C6  0E00               	movlw	0
  2110  0017C8                     u4730:
  2111  0017C8  0100               	movlb	0	; () banked
  2112  0017CA  6F9C               	movwf	_vfpfcnvrt$1227& (0+255),b
  2113  0017CC  6B9D               	clrf	(_vfpfcnvrt$1227+1)& (0+255),b
  2114  0017CE                     
  2115                           ; BSR set to: 0
  2116  0017CE  519C               	movf	_vfpfcnvrt$1227& (0+255),w,b
  2117  0017D0  119D               	iorwf	(_vfpfcnvrt$1227+1)& (0+255),w,b
  2118  0017D2  B4D8               	btfsc	status,2,c
  2119  0017D4  EFEE  F00B         	goto	u4741
  2120  0017D8  EFF0  F00B         	goto	u4740
  2121  0017DC                     u4741:
  2122  0017DC  EF0A  F00C         	goto	l3904
  2123  0017E0                     u4740:
  2124  0017E0                     
  2125                           ; BSR set to: 0
  2126                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2127  0017E0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2128  0017E4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2129  0017E8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2130  0017EC  0E04               	movlw	4
  2131  0017EE  26DE               	addwf	postinc2,f,c
  2132  0017F0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2133  0017F4  0E00               	movlw	0
  2134  0017F6  22DD               	addwfc	postdec2,f,c
  2135  0017F8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2136  0017FC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2137  001800  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  2138  001804  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  2139  001808  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  2140  00180C  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  2141                           
  2142                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  2143  001810  EF22  F00C         	goto	l967
  2144  001814                     l3904:
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2148  001814  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2149  001818  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2150  00181C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2151  001820  0E04               	movlw	4
  2152  001822  26DE               	addwf	postinc2,f,c
  2153  001824  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2154  001828  0E00               	movlw	0
  2155  00182A  22DD               	addwfc	postdec2,f,c
  2156  00182C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2157  001830  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2158  001834  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  2159  001838  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  2160  00183C  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  2161  001840  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  2162  001844                     l967:
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2166  001844  0E02               	movlw	2
  2167  001846  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2168  00184A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2169  00184E  26DE               	addwf	postinc2,f,c
  2170  001850  0E00               	movlw	0
  2171  001852  22DD               	addwfc	postdec2,f,c
  2172  001854  EF83  F00B         	goto	l3890
  2173  001858                     l3910:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2176  001858  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2177  00185C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2178  001860  CFDE FFF6          	movff	postinc2,tblptrl
  2179  001864  CFDD FFF7          	movff	postdec2,tblptrh
  2180  001868                     	if	0	;tblptru may be non-zero
  2181  001868                     	endif
  2182  001868                     	if	0	;tblptru may be non-zero
  2183  001868                     	endif
  2184  001868  0008               	tblrd		*
  2185  00186A  50F5               	movf	tablat,w,c
  2186  00186C  0A25               	xorlw	37
  2187  00186E  A4D8               	btfss	status,2,c
  2188  001870  EF3C  F00C         	goto	u4751
  2189  001874  EF3E  F00C         	goto	u4750
  2190  001878                     u4751:
  2191  001878  EF55  F00C         	goto	l3920
  2192  00187C                     u4750:
  2193  00187C                     
  2194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2195  00187C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2196  001880  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2197  001884  2ADE               	incf	postinc2,f,c
  2198  001886  0E00               	movlw	0
  2199  001888  22DD               	addwfc	postdec2,f,c
  2200  00188A                     
  2201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2202  00188A  0E00               	movlw	0
  2203  00188C  6E05               	movwf	(fputc@c+1)^0,c
  2204  00188E  0E25               	movlw	37
  2205  001890  6E04               	movwf	fputc@c^0,c
  2206  001892  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2207  001896  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2208  00189A  ECED  F018         	call	_fputc	;wreg free
  2209  00189E                     l3916:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2212  00189E  0E00               	movlw	0
  2213  0018A0  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2214  0018A2  0E01               	movlw	1
  2215  0018A4  6E43               	movwf	?_vfpfcnvrt^0,c
  2216  0018A6  EF7D  F00C         	goto	l960
  2217  0018AA                     l3920:
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2220  0018AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2221  0018AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2222  0018B2  2ADE               	incf	postinc2,f,c
  2223  0018B4  0E00               	movlw	0
  2224  0018B6  22DD               	addwfc	postdec2,f,c
  2225  0018B8                     
  2226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2227  0018B8  0E00               	movlw	0
  2228  0018BA  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2229  0018BC  0E00               	movlw	0
  2230  0018BE  6E43               	movwf	?_vfpfcnvrt^0,c
  2231  0018C0  EF7D  F00C         	goto	l960
  2232  0018C4                     l3926:
  2233                           
  2234                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2235  0018C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2236  0018C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2237  0018CC  CFDE FFF6          	movff	postinc2,tblptrl
  2238  0018D0  CFDD FFF7          	movff	postdec2,tblptrh
  2239  0018D4                     	if	0	;tblptru may be non-zero
  2240  0018D4                     	endif
  2241  0018D4                     	if	0	;tblptru may be non-zero
  2242  0018D4                     	endif
  2243  0018D4  0008               	tblrd		*
  2244  0018D6  50F5               	movf	tablat,w,c
  2245  0018D8  6E04               	movwf	fputc@c^0,c
  2246  0018DA  6A05               	clrf	(fputc@c+1)^0,c
  2247  0018DC  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2248  0018E0  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2249  0018E4  ECED  F018         	call	_fputc	;wreg free
  2250  0018E8                     
  2251                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2252  0018E8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2253  0018EC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2254  0018F0  2ADE               	incf	postinc2,f,c
  2255  0018F2  0E00               	movlw	0
  2256  0018F4  22DD               	addwfc	postdec2,f,c
  2257  0018F6  EF4F  F00C         	goto	l3916
  2258  0018FA                     l960:
  2259  0018FA  0012               	return		;funcret
  2260  0018FC                     __end_of_vfpfcnvrt:
  2261                           	callstack 0
  2262                           
  2263 ;; *************** function _strncmp *****************
  2264 ;; Defined at:
  2265 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  _l              2    3[COMRAM] PTR const unsigned char 
  2268 ;;		 -> vfpfcnvrt@ct(3), 
  2269 ;;  _r              2    5[COMRAM] PTR const unsigned char 
  2270 ;;		 -> STR_15(3), 
  2271 ;;  n               2    7[COMRAM] unsigned int 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  r               2   12[COMRAM] PTR const unsigned char 
  2274 ;;		 -> STR_15(3), 
  2275 ;;  l               2   10[COMRAM] PTR const unsigned char 
  2276 ;;		 -> vfpfcnvrt@ct(3), 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  2    3[COMRAM] int 
  2279 ;; Registers used:
  2280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2286 ;;      Params:         6       0       0       0       0       0       0       0       0
  2287 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2288 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2289 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2290 ;;Total ram usage:       11 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    2
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_vfpfcnvrt
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text4
  2301  003104                     __ptext4:
  2302                           	callstack 0
  2303  003104                     _strncmp:
  2304                           	callstack 25
  2305  003104  C004  F00B         	movff	strncmp@_l,strncmp@l
  2306  003108  C005  F00C         	movff	strncmp@_l+1,strncmp@l+1
  2307  00310C  C006  F00D         	movff	strncmp@_r,strncmp@r
  2308  003110  C007  F00E         	movff	strncmp@_r+1,strncmp@r+1
  2309  003114  0608               	decf	strncmp@n^0,f,c
  2310  003116  A0D8               	btfss	status,0,c
  2311  003118  0609               	decf	(strncmp@n+1)^0,f,c
  2312  00311A  2808               	incf	strncmp@n^0,w,c
  2313  00311C  E106               	bnz	u4551
  2314  00311E  2809               	incf	(strncmp@n+1)^0,w,c
  2315  003120  A4D8               	btfss	status,2,c
  2316  003122  EF95  F018         	goto	u4551
  2317  003126  EF97  F018         	goto	u4550
  2318  00312A                     u4551:
  2319  00312A  EFA4  F018         	goto	l3800
  2320  00312E                     u4550:
  2321  00312E  0E00               	movlw	0
  2322  003130  6E05               	movwf	(?_strncmp+1)^0,c
  2323  003132  0E00               	movlw	0
  2324  003134  6E04               	movwf	?_strncmp^0,c
  2325  003136  EFEC  F018         	goto	l1088
  2326  00313A                     l3798:
  2327  00313A  4A0B               	infsnz	strncmp@l^0,f,c
  2328  00313C  2A0C               	incf	(strncmp@l+1)^0,f,c
  2329  00313E  4A0D               	infsnz	strncmp@r^0,f,c
  2330  003140  2A0E               	incf	(strncmp@r+1)^0,f,c
  2331  003142  0608               	decf	strncmp@n^0,f,c
  2332  003144  A0D8               	btfss	status,0,c
  2333  003146  0609               	decf	(strncmp@n+1)^0,f,c
  2334  003148                     l3800:
  2335  003148  C00B  FFD9         	movff	strncmp@l,fsr2l
  2336  00314C  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2337  003150  50DF               	movf	indf2,w,c
  2338  003152  B4D8               	btfsc	status,2,c
  2339  003154  EFAE  F018         	goto	u4561
  2340  003158  EFB0  F018         	goto	u4560
  2341  00315C                     u4561:
  2342  00315C  EFDB  F018         	goto	l3808
  2343  003160                     u4560:
  2344  003160  C00D  FFF6         	movff	strncmp@r,tblptrl
  2345  003164  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2346  003168                     	if	0	;tblptru may be non-zero
  2347  003168                     	endif
  2348  003168                     	if	0	;tblptru may be non-zero
  2349  003168                     	endif
  2350  003168  0008               	tblrd		*
  2351  00316A  50F5               	movf	tablat,w,c
  2352  00316C  0900               	iorlw	0
  2353  00316E  B4D8               	btfsc	status,2,c
  2354  003170  EFBC  F018         	goto	u4571
  2355  003174  EFBE  F018         	goto	u4570
  2356  003178                     u4571:
  2357  003178  EFDB  F018         	goto	l3808
  2358  00317C                     u4570:
  2359  00317C  5008               	movf	strncmp@n^0,w,c
  2360  00317E  1009               	iorwf	(strncmp@n+1)^0,w,c
  2361  003180  B4D8               	btfsc	status,2,c
  2362  003182  EFC5  F018         	goto	u4581
  2363  003186  EFC7  F018         	goto	u4580
  2364  00318A                     u4581:
  2365  00318A  EFDB  F018         	goto	l3808
  2366  00318E                     u4580:
  2367  00318E  C00B  FFD9         	movff	strncmp@l,fsr2l
  2368  003192  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2369  003196  50DF               	movf	indf2,w,c
  2370  003198  6E0A               	movwf	??_strncmp^0,c
  2371  00319A  C00D  FFF6         	movff	strncmp@r,tblptrl
  2372  00319E  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2373  0031A2                     	if	0	;tblptru may be non-zero
  2374  0031A2                     	endif
  2375  0031A2                     	if	0	;tblptru may be non-zero
  2376  0031A2                     	endif
  2377  0031A2  0008               	tblrd		*
  2378  0031A4  50F5               	movf	tablat,w,c
  2379  0031A6  180A               	xorwf	??_strncmp^0,w,c
  2380  0031A8  B4D8               	btfsc	status,2,c
  2381  0031AA  EFD9  F018         	goto	u4591
  2382  0031AE  EFDB  F018         	goto	u4590
  2383  0031B2                     u4591:
  2384  0031B2  EF9D  F018         	goto	l3798
  2385  0031B6                     u4590:
  2386  0031B6                     l3808:
  2387  0031B6  C00B  FFD9         	movff	strncmp@l,fsr2l
  2388  0031BA  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2389  0031BE  50DF               	movf	indf2,w,c
  2390  0031C0  6E0A               	movwf	??_strncmp^0,c
  2391  0031C2  C00D  FFF6         	movff	strncmp@r,tblptrl
  2392  0031C6  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2393  0031CA                     	if	0	;tblptru may be non-zero
  2394  0031CA                     	endif
  2395  0031CA                     	if	0	;tblptru may be non-zero
  2396  0031CA                     	endif
  2397  0031CA  0008               	tblrd		*
  2398  0031CC  50F5               	movf	tablat,w,c
  2399  0031CE  5C0A               	subwf	??_strncmp^0,w,c
  2400  0031D0  6E04               	movwf	?_strncmp^0,c
  2401  0031D2  6A05               	clrf	(?_strncmp+1)^0,c
  2402  0031D4  A0D8               	btfss	status,0,c
  2403  0031D6  0605               	decf	(?_strncmp+1)^0,f,c
  2404  0031D8                     l1088:
  2405  0031D8  0012               	return		;funcret
  2406  0031DA                     __end_of_strncmp:
  2407                           	callstack 0
  2408                           
  2409 ;; *************** function _efgtoa *****************
  2410 ;; Defined at:
  2411 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  fp              2   54[COMRAM] PTR struct _IO_FILE
  2414 ;;		 -> sprintf@f(6), 
  2415 ;;  f               4   56[COMRAM] PTR struct _IO_FILE
  2416 ;;  c               1   60[COMRAM] unsigned char 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  u               4   52[BANK0 ] unsigned char 
  2419 ;;  g               4   44[BANK0 ] unsigned char 
  2420 ;;  l               4   38[BANK0 ] unsigned char 
  2421 ;;  h               4   34[BANK0 ] unsigned char 
  2422 ;;  ou              4    0[BANK0 ] unsigned char 
  2423 ;;  n               2   50[BANK0 ] int 
  2424 ;;  e               2   48[BANK0 ] int 
  2425 ;;  i               2   42[BANK0 ] int 
  2426 ;;  w               2   31[BANK0 ] int 
  2427 ;;  p               2   28[BANK0 ] int 
  2428 ;;  sign            2   26[BANK0 ] int 
  2429 ;;  d               2   24[BANK0 ] int 
  2430 ;;  ne              2   22[BANK0 ] int 
  2431 ;;  m               2   20[BANK0 ] int 
  2432 ;;  pp              2   18[BANK0 ] int 
  2433 ;;  t               2   16[BANK0 ] int 
  2434 ;;  mode            1   33[BANK0 ] unsigned char 
  2435 ;;  nmode           1   30[BANK0 ] unsigned char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  2   54[COMRAM] int 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2445 ;;      Params:         7       0       0       0       0       0       0       0       0
  2446 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2447 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2448 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2449 ;;Total ram usage:       68 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    6
  2452 ;; This function calls:
  2453 ;;		___awdiv
  2454 ;;		___awmod
  2455 ;;		___fladd
  2456 ;;		___fldiv
  2457 ;;		___fleq
  2458 ;;		___flge
  2459 ;;		___flmul
  2460 ;;		___flneg
  2461 ;;		___flsub
  2462 ;;		___fltol
  2463 ;;		___fpclassifyf
  2464 ;;		_floorf
  2465 ;;		_isupper
  2466 ;;		_pad
  2467 ;;		_strcpy
  2468 ;;		_tolower
  2469 ;; This function is called by:
  2470 ;;		_vfpfcnvrt
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text5
  2475  000826                     __ptext5:
  2476                           	callstack 0
  2477  000826                     _efgtoa:
  2478                           	callstack 21
  2479  000826                     
  2480                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  2481  000826  0E00               	movlw	0
  2482  000828  0100               	movlb	0	; () banked
  2483  00082A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2484  00082C  0E00               	movlw	0
  2485  00082E  6F7A               	movwf	efgtoa@sign& (0+255),b
  2486  000830                     
  2487                           ; BSR set to: 0
  2488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  2489  000830  C039  F08C         	movff	efgtoa@f,efgtoa@g
  2490  000834  C03A  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2491  000838  C03B  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2492  00083C  C03C  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2493  000840                     
  2494                           ; BSR set to: 0
  2495                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  2496  000840  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2497  000842  EF27  F004         	goto	u3960
  2498  000846  EF25  F004         	goto	u3961
  2499  00084A                     u3961:
  2500  00084A  EF3D  F004         	goto	l3462
  2501  00084E                     u3960:
  2502  00084E                     
  2503                           ; BSR set to: 0
  2504                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  2505  00084E  0E00               	movlw	0
  2506  000850  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2507  000852  0E01               	movlw	1
  2508  000854  6F7A               	movwf	efgtoa@sign& (0+255),b
  2509  000856                     
  2510                           ; BSR set to: 0
  2511                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  2512  000856  C08C  F004         	movff	efgtoa@g,___flneg@f1
  2513  00085A  C08D  F005         	movff	efgtoa@g+1,___flneg@f1+1
  2514  00085E  C08E  F006         	movff	efgtoa@g+2,___flneg@f1+2
  2515  000862  C08F  F007         	movff	efgtoa@g+3,___flneg@f1+3
  2516  000866  ECC2  F01C         	call	___flneg	;wreg free
  2517  00086A  C004  F08C         	movff	?___flneg,efgtoa@g
  2518  00086E  C005  F08D         	movff	?___flneg+1,efgtoa@g+1
  2519  000872  C006  F08E         	movff	?___flneg+2,efgtoa@g+2
  2520  000876  C007  F08F         	movff	?___flneg+3,efgtoa@g+3
  2521  00087A                     l3462:
  2522                           
  2523                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  2524  00087A  0E00               	movlw	0
  2525  00087C  0100               	movlb	0	; () banked
  2526  00087E  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2527  000880  0E00               	movlw	0
  2528  000882  6F92               	movwf	efgtoa@n& (0+255),b
  2529  000884                     
  2530                           ; BSR set to: 0
  2531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  2532  000884  C051  F07F         	movff	_width,efgtoa@w
  2533  000888  C052  F080         	movff	_width+1,efgtoa@w+1
  2534  00088C                     
  2535                           ; BSR set to: 0
  2536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  2537  00088C  517A               	movf	efgtoa@sign& (0+255),w,b
  2538  00088E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2539  000890  A4D8               	btfss	status,2,c
  2540  000892  EF4D  F004         	goto	u3971
  2541  000896  EF4F  F004         	goto	u3970
  2542  00089A                     u3971:
  2543  00089A  EF56  F004         	goto	l3470
  2544  00089E                     u3970:
  2545  00089E                     
  2546                           ; BSR set to: 0
  2547  00089E  A455               	btfss	_flags^0,2,c
  2548  0008A0  EF54  F004         	goto	u3981
  2549  0008A4  EF56  F004         	goto	u3980
  2550  0008A8                     u3981:
  2551  0008A8  EF70  F004         	goto	l3482
  2552  0008AC                     u3980:
  2553  0008AC                     l3470:
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  2557  0008AC  517A               	movf	efgtoa@sign& (0+255),w,b
  2558  0008AE  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2559  0008B0  A4D8               	btfss	status,2,c
  2560  0008B2  EF5D  F004         	goto	u3991
  2561  0008B6  EF5F  F004         	goto	u3990
  2562  0008BA                     u3991:
  2563  0008BA  EF65  F004         	goto	l3474
  2564  0008BE                     u3990:
  2565  0008BE                     
  2566                           ; BSR set to: 0
  2567  0008BE  0E00               	movlw	0
  2568  0008C0  6F65               	movwf	(_efgtoa$1197+1)& (0+255),b
  2569  0008C2  0E2B               	movlw	43
  2570  0008C4  6F64               	movwf	_efgtoa$1197& (0+255),b
  2571  0008C6  EF69  F004         	goto	l3476
  2572  0008CA                     l3474:
  2573                           
  2574                           ; BSR set to: 0
  2575  0008CA  0E00               	movlw	0
  2576  0008CC  6F65               	movwf	(_efgtoa$1197+1)& (0+255),b
  2577  0008CE  0E2D               	movlw	45
  2578  0008D0  6F64               	movwf	_efgtoa$1197& (0+255),b
  2579  0008D2                     l3476:
  2580                           
  2581                           ; BSR set to: 0
  2582  0008D2  C064  F100         	movff	_efgtoa$1197,_dbuf
  2583  0008D6                     
  2584                           ; BSR set to: 0
  2585                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  2586  0008D6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2587  0008D8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2588  0008DA                     
  2589                           ; BSR set to: 0
  2590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  2591  0008DA  077F               	decf	efgtoa@w& (0+255),f,b
  2592  0008DC  A0D8               	btfss	status,0,c
  2593  0008DE  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2594  0008E0                     l3482:
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2598  0008E0  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  2599  0008E4  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2600  0008E8  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2601  0008EC  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2602  0008F0  EC03  F018         	call	___fpclassifyf	;wreg free
  2603  0008F4  0404               	decf	?___fpclassifyf^0,w,c
  2604  0008F6  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  2605  0008F8  A4D8               	btfss	status,2,c
  2606  0008FA  EF81  F004         	goto	u4001
  2607  0008FE  EF83  F004         	goto	u4000
  2608  000902                     u4001:
  2609  000902  EFDA  F004         	goto	l3500
  2610  000906                     u4000:
  2611  000906  0EBF               	movlw	191
  2612  000908  6E3E               	movwf	??_efgtoa^0,c
  2613  00090A  0EFF               	movlw	255
  2614  00090C  6E3F               	movwf	(??_efgtoa+1)^0,c
  2615  00090E  503D               	movf	efgtoa@c^0,w,c
  2616  000910  6E40               	movwf	(??_efgtoa+2)^0,c
  2617  000912  6A41               	clrf	(??_efgtoa+3)^0,c
  2618  000914  503E               	movf	??_efgtoa^0,w,c
  2619  000916  2640               	addwf	(??_efgtoa+2)^0,f,c
  2620  000918  503F               	movf	(??_efgtoa+1)^0,w,c
  2621  00091A  2241               	addwfc	(??_efgtoa+3)^0,f,c
  2622  00091C  5041               	movf	(??_efgtoa+3)^0,w,c
  2623  00091E  E10A               	bnz	u4010
  2624  000920  0E1A               	movlw	26
  2625  000922  5C40               	subwf	(??_efgtoa+2)^0,w,c
  2626  000924  A0D8               	btfss	status,0,c
  2627  000926  EF97  F004         	goto	u4011
  2628  00092A  EF9A  F004         	goto	u4010
  2629  00092E                     u4011:
  2630  00092E  0E01               	movlw	1
  2631  000930  EF9B  F004         	goto	u4020
  2632  000934                     u4010:
  2633  000934  0E00               	movlw	0
  2634  000936                     u4020:
  2635  000936  0100               	movlb	0	; () banked
  2636  000938  6F66               	movwf	_efgtoa$1198& (0+255),b
  2637  00093A  6B67               	clrf	(_efgtoa$1198+1)& (0+255),b
  2638  00093C                     
  2639                           ; BSR set to: 0
  2640  00093C  5166               	movf	_efgtoa$1198& (0+255),w,b
  2641  00093E  1167               	iorwf	(_efgtoa$1198+1)& (0+255),w,b
  2642  000940  B4D8               	btfsc	status,2,c
  2643  000942  EFA5  F004         	goto	u4031
  2644  000946  EFA7  F004         	goto	u4030
  2645  00094A                     u4031:
  2646  00094A  EFB5  F004         	goto	l3492
  2647  00094E                     u4030:
  2648  00094E                     
  2649                           ; BSR set to: 0
  2650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  2651  00094E  0E00               	movlw	low _dbuf
  2652  000950  2592               	addwf	efgtoa@n& (0+255),w,b
  2653  000952  6E04               	movwf	strcpy@dest^0,c
  2654  000954  0E01               	movlw	high _dbuf
  2655  000956  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2656  000958  6E05               	movwf	(strcpy@dest+1)^0,c
  2657  00095A  0E11               	movlw	low STR_5
  2658  00095C  6E06               	movwf	strcpy@src^0,c
  2659  00095E  0E08               	movlw	high STR_5
  2660  000960  6E07               	movwf	(strcpy@src+1)^0,c
  2661  000962  EC95  F01B         	call	_strcpy	;wreg free
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  2664  000966  EFC1  F004         	goto	l3494
  2665  00096A                     l3492:
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  2669  00096A  0E00               	movlw	low _dbuf
  2670  00096C  2592               	addwf	efgtoa@n& (0+255),w,b
  2671  00096E  6E04               	movwf	strcpy@dest^0,c
  2672  000970  0E01               	movlw	high _dbuf
  2673  000972  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2674  000974  6E05               	movwf	(strcpy@dest+1)^0,c
  2675  000976  0E19               	movlw	low STR_6
  2676  000978  6E06               	movwf	strcpy@src^0,c
  2677  00097A  0E08               	movlw	high STR_6
  2678  00097C  6E07               	movwf	(strcpy@src+1)^0,c
  2679  00097E  EC95  F01B         	call	_strcpy	;wreg free
  2680  000982                     l3494:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2683  000982  0100               	movlb	0	; () banked
  2684  000984  0EFD               	movlw	253
  2685  000986  277F               	addwf	efgtoa@w& (0+255),f,b
  2686  000988  0EFF               	movlw	255
  2687  00098A  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2688  00098C                     l3496:
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2691  00098C  C037  F014         	movff	efgtoa@fp,pad@fp
  2692  000990  C038  F015         	movff	efgtoa@fp+1,pad@fp+1
  2693  000994  0E00               	movlw	low _dbuf
  2694  000996  6E16               	movwf	pad@buf^0,c
  2695  000998  0E01               	movlw	high _dbuf
  2696  00099A  6E17               	movwf	(pad@buf+1)^0,c
  2697  00099C  C07F  F018         	movff	efgtoa@w,pad@p
  2698  0009A0  C080  F019         	movff	efgtoa@w+1,pad@p+1
  2699  0009A4  ECB4  F019         	call	_pad	;wreg free
  2700  0009A8  C014  F037         	movff	?_pad,?_efgtoa
  2701  0009AC  C015  F038         	movff	?_pad+1,?_efgtoa+1
  2702  0009B0  EFEB  F009         	goto	l858
  2703  0009B4                     l3500:
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2706  0009B4  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  2707  0009B8  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2708  0009BC  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2709  0009C0  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2710  0009C4  EC03  F018         	call	___fpclassifyf	;wreg free
  2711  0009C8  5004               	movf	?___fpclassifyf^0,w,c
  2712  0009CA  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  2713  0009CC  A4D8               	btfss	status,2,c
  2714  0009CE  EFEB  F004         	goto	u4041
  2715  0009D2  EFED  F004         	goto	u4040
  2716  0009D6                     u4041:
  2717  0009D6  EF2D  F005         	goto	l3518
  2718  0009DA                     u4040:
  2719  0009DA  0EBF               	movlw	191
  2720  0009DC  6E3E               	movwf	??_efgtoa^0,c
  2721  0009DE  0EFF               	movlw	255
  2722  0009E0  6E3F               	movwf	(??_efgtoa+1)^0,c
  2723  0009E2  503D               	movf	efgtoa@c^0,w,c
  2724  0009E4  6E40               	movwf	(??_efgtoa+2)^0,c
  2725  0009E6  6A41               	clrf	(??_efgtoa+3)^0,c
  2726  0009E8  503E               	movf	??_efgtoa^0,w,c
  2727  0009EA  2640               	addwf	(??_efgtoa+2)^0,f,c
  2728  0009EC  503F               	movf	(??_efgtoa+1)^0,w,c
  2729  0009EE  2241               	addwfc	(??_efgtoa+3)^0,f,c
  2730  0009F0  5041               	movf	(??_efgtoa+3)^0,w,c
  2731  0009F2  E10A               	bnz	u4050
  2732  0009F4  0E1A               	movlw	26
  2733  0009F6  5C40               	subwf	(??_efgtoa+2)^0,w,c
  2734  0009F8  A0D8               	btfss	status,0,c
  2735  0009FA  EF01  F005         	goto	u4051
  2736  0009FE  EF04  F005         	goto	u4050
  2737  000A02                     u4051:
  2738  000A02  0E01               	movlw	1
  2739  000A04  EF05  F005         	goto	u4060
  2740  000A08                     u4050:
  2741  000A08  0E00               	movlw	0
  2742  000A0A                     u4060:
  2743  000A0A  0100               	movlb	0	; () banked
  2744  000A0C  6F68               	movwf	_efgtoa$1203& (0+255),b
  2745  000A0E  6B69               	clrf	(_efgtoa$1203+1)& (0+255),b
  2746  000A10                     
  2747                           ; BSR set to: 0
  2748  000A10  5168               	movf	_efgtoa$1203& (0+255),w,b
  2749  000A12  1169               	iorwf	(_efgtoa$1203+1)& (0+255),w,b
  2750  000A14  B4D8               	btfsc	status,2,c
  2751  000A16  EF0F  F005         	goto	u4071
  2752  000A1A  EF11  F005         	goto	u4070
  2753  000A1E                     u4071:
  2754  000A1E  EF1F  F005         	goto	l3510
  2755  000A22                     u4070:
  2756  000A22                     
  2757                           ; BSR set to: 0
  2758                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  2759  000A22  0E00               	movlw	low _dbuf
  2760  000A24  2592               	addwf	efgtoa@n& (0+255),w,b
  2761  000A26  6E04               	movwf	strcpy@dest^0,c
  2762  000A28  0E01               	movlw	high _dbuf
  2763  000A2A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2764  000A2C  6E05               	movwf	(strcpy@dest+1)^0,c
  2765  000A2E  0E15               	movlw	low STR_9
  2766  000A30  6E06               	movwf	strcpy@src^0,c
  2767  000A32  0E08               	movlw	high STR_9
  2768  000A34  6E07               	movwf	(strcpy@src+1)^0,c
  2769  000A36  EC95  F01B         	call	_strcpy	;wreg free
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  2772  000A3A  EFC1  F004         	goto	l3494
  2773  000A3E                     l3510:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  2777  000A3E  0E00               	movlw	low _dbuf
  2778  000A40  2592               	addwf	efgtoa@n& (0+255),w,b
  2779  000A42  6E04               	movwf	strcpy@dest^0,c
  2780  000A44  0E01               	movlw	high _dbuf
  2781  000A46  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2782  000A48  6E05               	movwf	(strcpy@dest+1)^0,c
  2783  000A4A  0E1D               	movlw	low STR_10
  2784  000A4C  6E06               	movwf	strcpy@src^0,c
  2785  000A4E  0E08               	movlw	high STR_10
  2786  000A50  6E07               	movwf	(strcpy@src+1)^0,c
  2787  000A52  EC95  F01B         	call	_strcpy	;wreg free
  2788  000A56  EFC1  F004         	goto	l3494
  2789  000A5A                     l3518:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  2792  000A5A  0E00               	movlw	0
  2793  000A5C  0100               	movlb	0	; () banked
  2794  000A5E  6F94               	movwf	efgtoa@u& (0+255),b
  2795  000A60  0E00               	movlw	0
  2796  000A62  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2797  000A64  0E80               	movlw	128
  2798  000A66  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2799  000A68  0E3F               	movlw	63
  2800  000A6A  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  2803  000A6C  0E00               	movlw	0
  2804  000A6E  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2805  000A70  0E00               	movlw	0
  2806  000A72  6F90               	movwf	efgtoa@e& (0+255),b
  2807  000A74                     
  2808                           ; BSR set to: 0
  2809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  2810  000A74  C08C  F004         	movff	efgtoa@g,___fleq@ff1
  2811  000A78  C08D  F005         	movff	efgtoa@g+1,___fleq@ff1+1
  2812  000A7C  C08E  F006         	movff	efgtoa@g+2,___fleq@ff1+2
  2813  000A80  C08F  F007         	movff	efgtoa@g+3,___fleq@ff1+3
  2814  000A84  0E00               	movlw	0
  2815  000A86  6E08               	movwf	___fleq@ff2^0,c
  2816  000A88  0E00               	movlw	0
  2817  000A8A  6E09               	movwf	(___fleq@ff2+1)^0,c
  2818  000A8C  0E00               	movlw	0
  2819  000A8E  6E0A               	movwf	(___fleq@ff2+2)^0,c
  2820  000A90  0E00               	movlw	0
  2821  000A92  6E0B               	movwf	(___fleq@ff2+3)^0,c
  2822  000A94  EC6D  F01A         	call	___fleq	;wreg free
  2823  000A98  B0D8               	btfsc	status,0,c
  2824  000A9A  EF51  F005         	goto	u4081
  2825  000A9E  EF53  F005         	goto	u4080
  2826  000AA2                     u4081:
  2827  000AA2  EFD6  F005         	goto	l3536
  2828  000AA6                     u4080:
  2829  000AA6  EF72  F005         	goto	l3528
  2830  000AAA                     l3524:
  2831                           
  2832                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  2833  000AAA  C094  F012         	movff	efgtoa@u,___flmul@b
  2834  000AAE  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  2835  000AB2  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  2836  000AB6  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  2837  000ABA  0E00               	movlw	0
  2838  000ABC  6E16               	movwf	___flmul@a^0,c
  2839  000ABE  0E00               	movlw	0
  2840  000AC0  6E17               	movwf	(___flmul@a+1)^0,c
  2841  000AC2  0E20               	movlw	32
  2842  000AC4  6E18               	movwf	(___flmul@a+2)^0,c
  2843  000AC6  0E41               	movlw	65
  2844  000AC8  6E19               	movwf	(___flmul@a+3)^0,c
  2845  000ACA  ECDE  F00E         	call	___flmul	;wreg free
  2846  000ACE  C012  F094         	movff	?___flmul,efgtoa@u
  2847  000AD2  C013  F095         	movff	?___flmul+1,efgtoa@u+1
  2848  000AD6  C014  F096         	movff	?___flmul+2,efgtoa@u+2
  2849  000ADA  C015  F097         	movff	?___flmul+3,efgtoa@u+3
  2850  000ADE                     
  2851                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  2852  000ADE  0100               	movlb	0	; () banked
  2853  000AE0  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2854  000AE2  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2855  000AE4                     l3528:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  2858  000AE4  C08C  F02B         	movff	efgtoa@g,___flge@ff1
  2859  000AE8  C08D  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  2860  000AEC  C08E  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  2861  000AF0  C08F  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  2862  000AF4  0E00               	movlw	0
  2863  000AF6  6E16               	movwf	___flmul@a^0,c
  2864  000AF8  0E00               	movlw	0
  2865  000AFA  6E17               	movwf	(___flmul@a+1)^0,c
  2866  000AFC  0E20               	movlw	32
  2867  000AFE  6E18               	movwf	(___flmul@a+2)^0,c
  2868  000B00  0E41               	movlw	65
  2869  000B02  6E19               	movwf	(___flmul@a+3)^0,c
  2870  000B04  C094  F012         	movff	efgtoa@u,___flmul@b
  2871  000B08  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  2872  000B0C  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  2873  000B10  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  2874  000B14  ECDE  F00E         	call	___flmul	;wreg free
  2875  000B18  C012  F02F         	movff	?___flmul,___flge@ff2
  2876  000B1C  C013  F030         	movff	?___flmul+1,___flge@ff2+1
  2877  000B20  C014  F031         	movff	?___flmul+2,___flge@ff2+2
  2878  000B24  C015  F032         	movff	?___flmul+3,___flge@ff2+3
  2879  000B28  EC81  F017         	call	___flge	;wreg free
  2880  000B2C  B0D8               	btfsc	status,0,c
  2881  000B2E  EF9B  F005         	goto	u4091
  2882  000B32  EF9D  F005         	goto	u4090
  2883  000B36                     u4091:
  2884  000B36  EF55  F005         	goto	l3524
  2885  000B3A                     u4090:
  2886  000B3A  EFBD  F005         	goto	l3534
  2887  000B3E                     l3530:
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  2890  000B3E  C094  F004         	movff	efgtoa@u,___fldiv@b
  2891  000B42  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  2892  000B46  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  2893  000B4A  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  2894  000B4E  0E00               	movlw	0
  2895  000B50  6E08               	movwf	___fldiv@a^0,c
  2896  000B52  0E00               	movlw	0
  2897  000B54  6E09               	movwf	(___fldiv@a+1)^0,c
  2898  000B56  0E20               	movlw	32
  2899  000B58  6E0A               	movwf	(___fldiv@a+2)^0,c
  2900  000B5A  0E41               	movlw	65
  2901  000B5C  6E0B               	movwf	(___fldiv@a+3)^0,c
  2902  000B5E  ECF3  F010         	call	___fldiv	;wreg free
  2903  000B62  C004  F094         	movff	?___fldiv,efgtoa@u
  2904  000B66  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  2905  000B6A  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  2906  000B6E  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  2907  000B72                     
  2908                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  2909  000B72  0100               	movlb	0	; () banked
  2910  000B74  0790               	decf	efgtoa@e& (0+255),f,b
  2911  000B76  A0D8               	btfss	status,0,c
  2912  000B78  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2913  000B7A                     l3534:
  2914                           
  2915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  2916  000B7A  C08C  F02B         	movff	efgtoa@g,___flge@ff1
  2917  000B7E  C08D  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  2918  000B82  C08E  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  2919  000B86  C08F  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  2920  000B8A  C094  F02F         	movff	efgtoa@u,___flge@ff2
  2921  000B8E  C095  F030         	movff	efgtoa@u+1,___flge@ff2+1
  2922  000B92  C096  F031         	movff	efgtoa@u+2,___flge@ff2+2
  2923  000B96  C097  F032         	movff	efgtoa@u+3,___flge@ff2+3
  2924  000B9A  EC81  F017         	call	___flge	;wreg free
  2925  000B9E  A0D8               	btfss	status,0,c
  2926  000BA0  EFD4  F005         	goto	u4101
  2927  000BA4  EFD6  F005         	goto	u4100
  2928  000BA8                     u4101:
  2929  000BA8  EF9F  F005         	goto	l3530
  2930  000BAC                     u4100:
  2931  000BAC                     l3536:
  2932                           
  2933                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  2934  000BAC  C03D  F00A         	movff	efgtoa@c,tolower@c
  2935  000BB0  6A0B               	clrf	(tolower@c+1)^0,c
  2936  000BB2  EC65  F01B         	call	_tolower	;wreg free
  2937  000BB6  500A               	movf	?_tolower^0,w,c
  2938  000BB8  0100               	movlb	0	; () banked
  2939  000BBA  6F81               	movwf	efgtoa@mode& (0+255),b
  2940  000BBC                     
  2941                           ; BSR set to: 0
  2942                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  2943  000BBC  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  2944  000BC0                     
  2945                           ; BSR set to: 0
  2946                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  2947  000BC0  0E67               	movlw	103
  2948  000BC2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2949  000BC4  A4D8               	btfss	status,2,c
  2950  000BC6  EFE7  F005         	goto	u4111
  2951  000BCA  EFE9  F005         	goto	u4110
  2952  000BCE                     u4111:
  2953  000BCE  EF0F  F006         	goto	l3550
  2954  000BD2                     u4110:
  2955  000BD2                     
  2956                           ; BSR set to: 0
  2957                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  2958  000BD2  5053               	movf	_prec^0,w,c
  2959  000BD4  1054               	iorwf	(_prec+1)^0,w,c
  2960  000BD6  A4D8               	btfss	status,2,c
  2961  000BD8  EFF0  F005         	goto	u4121
  2962  000BDC  EFF2  F005         	goto	u4120
  2963  000BE0                     u4121:
  2964  000BE0  EFF6  F005         	goto	l3546
  2965  000BE4                     u4120:
  2966  000BE4                     
  2967                           ; BSR set to: 0
  2968                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  2969  000BE4  0E00               	movlw	0
  2970  000BE6  6E54               	movwf	(_prec+1)^0,c
  2971  000BE8  0E01               	movlw	1
  2972  000BEA  6E53               	movwf	_prec^0,c
  2973  000BEC                     l3546:
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  2977  000BEC  BE54               	btfsc	(_prec+1)^0,7,c
  2978  000BEE  EF03  F006         	goto	u4130
  2979  000BF2  5054               	movf	(_prec+1)^0,w,c
  2980  000BF4  E106               	bnz	u4131
  2981  000BF6  0453               	decf	_prec^0,w,c
  2982  000BF8  B0D8               	btfsc	status,0,c
  2983  000BFA  EF01  F006         	goto	u4131
  2984  000BFE  EF03  F006         	goto	u4130
  2985  000C02                     u4131:
  2986  000C02  EF09  F006         	goto	l876
  2987  000C06                     u4130:
  2988  000C06                     l3548:
  2989                           
  2990                           ; BSR set to: 0
  2991  000C06  0E00               	movlw	0
  2992  000C08  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2993  000C0A  0E06               	movlw	6
  2994  000C0C  6F7C               	movwf	efgtoa@p& (0+255),b
  2995  000C0E  EF18  F006         	goto	l3556
  2996  000C12                     l876:
  2997                           
  2998                           ; BSR set to: 0
  2999  000C12  C053  F07C         	movff	_prec,efgtoa@p
  3000  000C16  C054  F07D         	movff	_prec+1,efgtoa@p+1
  3001  000C1A  EF18  F006         	goto	l3556
  3002  000C1E                     l3550:
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  3006  000C1E  BE54               	btfsc	(_prec+1)^0,7,c
  3007  000C20  EF14  F006         	goto	u4141
  3008  000C24  EF16  F006         	goto	u4140
  3009  000C28                     u4141:
  3010  000C28  EF03  F006         	goto	l3548
  3011  000C2C                     u4140:
  3012  000C2C  EF09  F006         	goto	l876
  3013  000C30                     l3556:
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  3017  000C30  0E67               	movlw	103
  3018  000C32  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3019  000C34  A4D8               	btfss	status,2,c
  3020  000C36  EF1F  F006         	goto	u4151
  3021  000C3A  EF21  F006         	goto	u4150
  3022  000C3E                     u4151:
  3023  000C3E  EF50  F006         	goto	l3566
  3024  000C42                     u4150:
  3025  000C42                     
  3026                           ; BSR set to: 0
  3027                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3028  000C42  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3029  000C44  EF2F  F006         	goto	u4160
  3030  000C48  0EFC               	movlw	252
  3031  000C4A  5D90               	subwf	efgtoa@e& (0+255),w,b
  3032  000C4C  0EFF               	movlw	255
  3033  000C4E  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3034  000C50  A0D8               	btfss	status,0,c
  3035  000C52  EF2D  F006         	goto	u4161
  3036  000C56  EF2F  F006         	goto	u4160
  3037  000C5A                     u4161:
  3038  000C5A  EF4E  F006         	goto	l3564
  3039  000C5E                     u4160:
  3040  000C5E                     
  3041                           ; BSR set to: 0
  3042  000C5E  0EFF               	movlw	255
  3043  000C60  6E3E               	movwf	??_efgtoa^0,c
  3044  000C62  0EFF               	movlw	255
  3045  000C64  6E3F               	movwf	(??_efgtoa+1)^0,c
  3046  000C66  C07C  F040         	movff	efgtoa@p,??_efgtoa+2
  3047  000C6A  C07D  F041         	movff	efgtoa@p+1,??_efgtoa+3
  3048  000C6E  503E               	movf	??_efgtoa^0,w,c
  3049  000C70  2640               	addwf	(??_efgtoa+2)^0,f,c
  3050  000C72  503F               	movf	(??_efgtoa+1)^0,w,c
  3051  000C74  2241               	addwfc	(??_efgtoa+3)^0,f,c
  3052  000C76  5190               	movf	efgtoa@e& (0+255),w,b
  3053  000C78  5C40               	subwf	(??_efgtoa+2)^0,w,c
  3054  000C7A  5041               	movf	(??_efgtoa+3)^0,w,c
  3055  000C7C  0A80               	xorlw	128
  3056  000C7E  6E42               	movwf	(??_efgtoa+4)^0,c
  3057  000C80  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3058  000C82  0A80               	xorlw	128
  3059  000C84  5842               	subwfb	(??_efgtoa+4)^0,w,c
  3060  000C86  A0D8               	btfss	status,0,c
  3061  000C88  EF48  F006         	goto	u4171
  3062  000C8C  EF4A  F006         	goto	u4170
  3063  000C90                     u4171:
  3064  000C90  EF4E  F006         	goto	l3564
  3065  000C94                     u4170:
  3066  000C94                     
  3067                           ; BSR set to: 0
  3068                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  3069  000C94  0E66               	movlw	102
  3070  000C96  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  3073  000C98  EF50  F006         	goto	l3566
  3074  000C9C                     l3564:
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  3078  000C9C  0E65               	movlw	101
  3079  000C9E  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3080  000CA0                     l3566:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  3084  000CA0  C07C  F074         	movff	efgtoa@p,efgtoa@m
  3085  000CA4  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  3086  000CA8                     
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3089  000CA8  0E67               	movlw	103
  3090  000CAA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3091  000CAC  A4D8               	btfss	status,2,c
  3092  000CAE  EF5B  F006         	goto	u4181
  3093  000CB2  EF5D  F006         	goto	u4180
  3094  000CB6                     u4181:
  3095  000CB6  EF6D  F006         	goto	l3574
  3096  000CBA                     u4180:
  3097  000CBA                     
  3098                           ; BSR set to: 0
  3099  000CBA  0E66               	movlw	102
  3100  000CBC  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3101  000CBE  A4D8               	btfss	status,2,c
  3102  000CC0  EF64  F006         	goto	u4191
  3103  000CC4  EF66  F006         	goto	u4190
  3104  000CC8                     u4191:
  3105  000CC8  EF6F  F006         	goto	l3576
  3106  000CCC                     u4190:
  3107  000CCC                     
  3108                           ; BSR set to: 0
  3109  000CCC  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3110  000CCE  EF6D  F006         	goto	u4200
  3111  000CD2  EF6B  F006         	goto	u4201
  3112  000CD6                     u4201:
  3113  000CD6  EF6F  F006         	goto	l3576
  3114  000CDA                     u4200:
  3115  000CDA                     l3574:
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  3119  000CDA  4B74               	infsnz	efgtoa@m& (0+255),f,b
  3120  000CDC  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  3121  000CDE                     l3576:
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  3125  000CDE  0E66               	movlw	102
  3126  000CE0  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3127  000CE2  A4D8               	btfss	status,2,c
  3128  000CE4  EF76  F006         	goto	u4211
  3129  000CE8  EF78  F006         	goto	u4210
  3130  000CEC                     u4211:
  3131  000CEC  EF98  F006         	goto	l3586
  3132  000CF0                     u4210:
  3133  000CF0                     
  3134                           ; BSR set to: 0
  3135                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  3136  000CF0  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3137  000CF2  EF7F  F006         	goto	u4220
  3138  000CF6  EF7D  F006         	goto	u4221
  3139  000CFA                     u4221:
  3140  000CFA  EF8B  F006         	goto	l3582
  3141  000CFE                     u4220:
  3142  000CFE                     
  3143                           ; BSR set to: 0
  3144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  3145  000CFE  0E00               	movlw	0
  3146  000D00  6F94               	movwf	efgtoa@u& (0+255),b
  3147  000D02  0E00               	movlw	0
  3148  000D04  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3149  000D06  0E80               	movlw	128
  3150  000D08  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3151  000D0A  0E3F               	movlw	63
  3152  000D0C  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3153                           
  3154                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  3155  000D0E  0E00               	movlw	0
  3156  000D10  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3157  000D12  0E00               	movlw	0
  3158  000D14  6F90               	movwf	efgtoa@e& (0+255),b
  3159  000D16                     l3582:
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  3163  000D16  0E67               	movlw	103
  3164  000D18  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3165  000D1A  B4D8               	btfsc	status,2,c
  3166  000D1C  EF92  F006         	goto	u4231
  3167  000D20  EF94  F006         	goto	u4230
  3168  000D24                     u4231:
  3169  000D24  EF98  F006         	goto	l3586
  3170  000D28                     u4230:
  3171  000D28                     
  3172                           ; BSR set to: 0
  3173                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  3174  000D28  5190               	movf	efgtoa@e& (0+255),w,b
  3175  000D2A  2774               	addwf	efgtoa@m& (0+255),f,b
  3176  000D2C  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3177  000D2E  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3178  000D30                     l3586:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  3182  000D30  0E00               	movlw	0
  3183  000D32  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3184  000D34  0E00               	movlw	0
  3185  000D36  6F8A               	movwf	efgtoa@i& (0+255),b
  3186  000D38                     
  3187                           ; BSR set to: 0
  3188                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  3189  000D38  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3190  000D3C  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3191  000D40  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3192  000D44  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3193  000D48                     
  3194                           ; BSR set to: 0
  3195                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  3196  000D48  C094  F060         	movff	efgtoa@u,efgtoa@ou
  3197  000D4C  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  3198  000D50  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  3199  000D54  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  3200                           
  3201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3202  000D58  EF29  F007         	goto	l3600
  3203  000D5C                     l3592:
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  3207  000D5C  C082  F004         	movff	efgtoa@h,___fldiv@b
  3208  000D60  C083  F005         	movff	efgtoa@h+1,___fldiv@b+1
  3209  000D64  C084  F006         	movff	efgtoa@h+2,___fldiv@b+2
  3210  000D68  C085  F007         	movff	efgtoa@h+3,___fldiv@b+3
  3211  000D6C  C094  F008         	movff	efgtoa@u,___fldiv@a
  3212  000D70  C095  F009         	movff	efgtoa@u+1,___fldiv@a+1
  3213  000D74  C096  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  3214  000D78  C097  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  3215  000D7C  ECF3  F010         	call	___fldiv	;wreg free
  3216  000D80  C004  F01D         	movff	?___fldiv,floorf@x
  3217  000D84  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  3218  000D88  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  3219  000D8C  C007  F020         	movff	?___fldiv+3,floorf@x+3
  3220  000D90  EC53  F014         	call	_floorf	;wreg free
  3221  000D94  C01D  F086         	movff	?_floorf,efgtoa@l
  3222  000D98  C01E  F087         	movff	?_floorf+1,efgtoa@l+1
  3223  000D9C  C01F  F088         	movff	?_floorf+2,efgtoa@l+2
  3224  000DA0  C020  F089         	movff	?_floorf+3,efgtoa@l+3
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  3227  000DA4  C086  F004         	movff	efgtoa@l,___fltol@f1
  3228  000DA8  C087  F005         	movff	efgtoa@l+1,___fltol@f1+1
  3229  000DAC  C088  F006         	movff	efgtoa@l+2,___fltol@f1+2
  3230  000DB0  C089  F007         	movff	efgtoa@l+3,___fltol@f1+3
  3231  000DB4  ECFE  F016         	call	___fltol	;wreg free
  3232  000DB8  C004  F078         	movff	?___fltol,efgtoa@d
  3233  000DBC  C005  F079         	movff	?___fltol+1,efgtoa@d+1
  3234  000DC0                     
  3235                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  3236  000DC0  C082  F02B         	movff	efgtoa@h,___flsub@b
  3237  000DC4  C083  F02C         	movff	efgtoa@h+1,___flsub@b+1
  3238  000DC8  C084  F02D         	movff	efgtoa@h+2,___flsub@b+2
  3239  000DCC  C085  F02E         	movff	efgtoa@h+3,___flsub@b+3
  3240  000DD0  C094  F016         	movff	efgtoa@u,___flmul@a
  3241  000DD4  C095  F017         	movff	efgtoa@u+1,___flmul@a+1
  3242  000DD8  C096  F018         	movff	efgtoa@u+2,___flmul@a+2
  3243  000DDC  C097  F019         	movff	efgtoa@u+3,___flmul@a+3
  3244  000DE0  C086  F012         	movff	efgtoa@l,___flmul@b
  3245  000DE4  C087  F013         	movff	efgtoa@l+1,___flmul@b+1
  3246  000DE8  C088  F014         	movff	efgtoa@l+2,___flmul@b+2
  3247  000DEC  C089  F015         	movff	efgtoa@l+3,___flmul@b+3
  3248  000DF0  ECDE  F00E         	call	___flmul	;wreg free
  3249  000DF4  C012  F02F         	movff	?___flmul,___flsub@a
  3250  000DF8  C013  F030         	movff	?___flmul+1,___flsub@a+1
  3251  000DFC  C014  F031         	movff	?___flmul+2,___flsub@a+2
  3252  000E00  C015  F032         	movff	?___flmul+3,___flsub@a+3
  3253  000E04  EC40  F01C         	call	___flsub	;wreg free
  3254  000E08  C02B  F082         	movff	?___flsub,efgtoa@h
  3255  000E0C  C02C  F083         	movff	?___flsub+1,efgtoa@h+1
  3256  000E10  C02D  F084         	movff	?___flsub+2,efgtoa@h+2
  3257  000E14  C02E  F085         	movff	?___flsub+3,efgtoa@h+3
  3258  000E18                     
  3259                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  3260  000E18  C094  F004         	movff	efgtoa@u,___fldiv@b
  3261  000E1C  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  3262  000E20  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  3263  000E24  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  3264  000E28  0E00               	movlw	0
  3265  000E2A  6E08               	movwf	___fldiv@a^0,c
  3266  000E2C  0E00               	movlw	0
  3267  000E2E  6E09               	movwf	(___fldiv@a+1)^0,c
  3268  000E30  0E20               	movlw	32
  3269  000E32  6E0A               	movwf	(___fldiv@a+2)^0,c
  3270  000E34  0E41               	movlw	65
  3271  000E36  6E0B               	movwf	(___fldiv@a+3)^0,c
  3272  000E38  ECF3  F010         	call	___fldiv	;wreg free
  3273  000E3C  C004  F094         	movff	?___fldiv,efgtoa@u
  3274  000E40  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  3275  000E44  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  3276  000E48  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  3277  000E4C                     
  3278                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  3279  000E4C  0100               	movlb	0	; () banked
  3280  000E4E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3281  000E50  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3282  000E52                     l3600:
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3286  000E52  5174               	movf	efgtoa@m& (0+255),w,b
  3287  000E54  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3288  000E56  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3289  000E58  0A80               	xorlw	128
  3290  000E5A  6E3E               	movwf	??_efgtoa^0,c
  3291  000E5C  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3292  000E5E  0A80               	xorlw	128
  3293  000E60  583E               	subwfb	??_efgtoa^0,w,c
  3294  000E62  A0D8               	btfss	status,0,c
  3295  000E64  EF36  F007         	goto	u4241
  3296  000E68  EF38  F007         	goto	u4240
  3297  000E6C                     u4241:
  3298  000E6C  EFAE  F006         	goto	l3592
  3299  000E70                     u4240:
  3300  000E70                     
  3301                           ; BSR set to: 0
  3302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  3303  000E70  C094  F012         	movff	efgtoa@u,___flmul@b
  3304  000E74  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  3305  000E78  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  3306  000E7C  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  3307  000E80  0E00               	movlw	0
  3308  000E82  6E16               	movwf	___flmul@a^0,c
  3309  000E84  0E00               	movlw	0
  3310  000E86  6E17               	movwf	(___flmul@a+1)^0,c
  3311  000E88  0EA0               	movlw	160
  3312  000E8A  6E18               	movwf	(___flmul@a+2)^0,c
  3313  000E8C  0E40               	movlw	64
  3314  000E8E  6E19               	movwf	(___flmul@a+3)^0,c
  3315  000E90  ECDE  F00E         	call	___flmul	;wreg free
  3316  000E94  C012  F086         	movff	?___flmul,efgtoa@l
  3317  000E98  C013  F087         	movff	?___flmul+1,efgtoa@l+1
  3318  000E9C  C014  F088         	movff	?___flmul+2,efgtoa@l+2
  3319  000EA0  C015  F089         	movff	?___flmul+3,efgtoa@l+3
  3320  000EA4                     
  3321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  3322  000EA4  C082  F02B         	movff	efgtoa@h,___flge@ff1
  3323  000EA8  C083  F02C         	movff	efgtoa@h+1,___flge@ff1+1
  3324  000EAC  C084  F02D         	movff	efgtoa@h+2,___flge@ff1+2
  3325  000EB0  C085  F02E         	movff	efgtoa@h+3,___flge@ff1+3
  3326  000EB4  C086  F02F         	movff	efgtoa@l,___flge@ff2
  3327  000EB8  C087  F030         	movff	efgtoa@l+1,___flge@ff2+1
  3328  000EBC  C088  F031         	movff	efgtoa@l+2,___flge@ff2+2
  3329  000EC0  C089  F032         	movff	efgtoa@l+3,___flge@ff2+3
  3330  000EC4  EC81  F017         	call	___flge	;wreg free
  3331  000EC8  B0D8               	btfsc	status,0,c
  3332  000ECA  EF69  F007         	goto	u4251
  3333  000ECE  EF6B  F007         	goto	u4250
  3334  000ED2                     u4251:
  3335  000ED2  EF76  F007         	goto	l3608
  3336  000ED6                     u4250:
  3337  000ED6                     
  3338                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  3339  000ED6  0E00               	movlw	0
  3340  000ED8  0100               	movlb	0	; () banked
  3341  000EDA  6F86               	movwf	efgtoa@l& (0+255),b
  3342  000EDC  0E00               	movlw	0
  3343  000EDE  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3344  000EE0  0E00               	movlw	0
  3345  000EE2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3346  000EE4  0E00               	movlw	0
  3347  000EE6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3348                           
  3349                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  3350  000EE8  EF9F  F007         	goto	l3614
  3351  000EEC                     l3608:
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  3354  000EEC  C082  F004         	movff	efgtoa@h,___fleq@ff1
  3355  000EF0  C083  F005         	movff	efgtoa@h+1,___fleq@ff1+1
  3356  000EF4  C084  F006         	movff	efgtoa@h+2,___fleq@ff1+2
  3357  000EF8  C085  F007         	movff	efgtoa@h+3,___fleq@ff1+3
  3358  000EFC  C086  F008         	movff	efgtoa@l,___fleq@ff2
  3359  000F00  C087  F009         	movff	efgtoa@l+1,___fleq@ff2+1
  3360  000F04  C088  F00A         	movff	efgtoa@l+2,___fleq@ff2+2
  3361  000F08  C089  F00B         	movff	efgtoa@l+3,___fleq@ff2+3
  3362  000F0C  EC6D  F01A         	call	___fleq	;wreg free
  3363  000F10  A0D8               	btfss	status,0,c
  3364  000F12  EF8D  F007         	goto	u4261
  3365  000F16  EF8F  F007         	goto	u4260
  3366  000F1A                     u4261:
  3367  000F1A  EF9F  F007         	goto	l3614
  3368  000F1E                     u4260:
  3369  000F1E  0100               	movlb	0	; () banked
  3370  000F20  B178               	btfsc	efgtoa@d& (0+255),0,b
  3371  000F22  EF95  F007         	goto	u4271
  3372  000F26  EF97  F007         	goto	u4270
  3373  000F2A                     u4271:
  3374  000F2A  EF9F  F007         	goto	l3614
  3375  000F2E                     u4270:
  3376  000F2E                     
  3377                           ; BSR set to: 0
  3378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  3379  000F2E  0E00               	movlw	0
  3380  000F30  6F86               	movwf	efgtoa@l& (0+255),b
  3381  000F32  0E00               	movlw	0
  3382  000F34  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3383  000F36  0E00               	movlw	0
  3384  000F38  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3385  000F3A  0E00               	movlw	0
  3386  000F3C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3387  000F3E                     l3614:
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  3390  000F3E  C08C  F004         	movff	efgtoa@g,___fladd@b
  3391  000F42  C08D  F005         	movff	efgtoa@g+1,___fladd@b+1
  3392  000F46  C08E  F006         	movff	efgtoa@g+2,___fladd@b+2
  3393  000F4A  C08F  F007         	movff	efgtoa@g+3,___fladd@b+3
  3394  000F4E  C086  F008         	movff	efgtoa@l,___fladd@a
  3395  000F52  C087  F009         	movff	efgtoa@l+1,___fladd@a+1
  3396  000F56  C088  F00A         	movff	efgtoa@l+2,___fladd@a+2
  3397  000F5A  C089  F00B         	movff	efgtoa@l+3,___fladd@a+3
  3398  000F5E  EC7E  F00C         	call	___fladd	;wreg free
  3399  000F62  C004  F082         	movff	?___fladd,efgtoa@h
  3400  000F66  C005  F083         	movff	?___fladd+1,efgtoa@h+1
  3401  000F6A  C006  F084         	movff	?___fladd+2,efgtoa@h+2
  3402  000F6E  C007  F085         	movff	?___fladd+3,efgtoa@h+3
  3403  000F72                     
  3404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  3405  000F72  C060  F094         	movff	efgtoa@ou,efgtoa@u
  3406  000F76  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3407  000F7A  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3408  000F7E  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3409  000F82                     
  3410                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3411  000F82  0E65               	movlw	101
  3412  000F84  0100               	movlb	0	; () banked
  3413  000F86  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3414  000F88  B4D8               	btfsc	status,2,c
  3415  000F8A  EFC9  F007         	goto	u4281
  3416  000F8E  EFCB  F007         	goto	u4280
  3417  000F92                     u4281:
  3418  000F92  EFD1  F007         	goto	l3622
  3419  000F96                     u4280:
  3420  000F96                     
  3421                           ; BSR set to: 0
  3422  000F96  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3423  000F9A  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3424  000F9E  EFD5  F007         	goto	l902
  3425  000FA2                     l3622:
  3426                           
  3427                           ; BSR set to: 0
  3428  000FA2  0E00               	movlw	0
  3429  000FA4  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3430  000FA6  0E00               	movlw	0
  3431  000FA8  6F76               	movwf	efgtoa@ne& (0+255),b
  3432  000FAA                     l902:
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  3436  000FAA  0E00               	movlw	0
  3437  000FAC  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3438  000FAE  0E00               	movlw	0
  3439  000FB0  6F72               	movwf	efgtoa@pp& (0+255),b
  3440                           
  3441                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  3442  000FB2  0E00               	movlw	0
  3443  000FB4  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3444  000FB6  0E00               	movlw	0
  3445  000FB8  6F70               	movwf	efgtoa@t& (0+255),b
  3446                           
  3447                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  3448  000FBA  0E00               	movlw	0
  3449  000FBC  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3450  000FBE  0E00               	movlw	0
  3451  000FC0  6F8A               	movwf	efgtoa@i& (0+255),b
  3452                           
  3453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3454  000FC2  EFD1  F008         	goto	l3672
  3455  000FC6                     l3624:
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  3459  000FC6  C082  F004         	movff	efgtoa@h,___fldiv@b
  3460  000FCA  C083  F005         	movff	efgtoa@h+1,___fldiv@b+1
  3461  000FCE  C084  F006         	movff	efgtoa@h+2,___fldiv@b+2
  3462  000FD2  C085  F007         	movff	efgtoa@h+3,___fldiv@b+3
  3463  000FD6  C094  F008         	movff	efgtoa@u,___fldiv@a
  3464  000FDA  C095  F009         	movff	efgtoa@u+1,___fldiv@a+1
  3465  000FDE  C096  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  3466  000FE2  C097  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  3467  000FE6  ECF3  F010         	call	___fldiv	;wreg free
  3468  000FEA  C004  F01D         	movff	?___fldiv,floorf@x
  3469  000FEE  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  3470  000FF2  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  3471  000FF6  C007  F020         	movff	?___fldiv+3,floorf@x+3
  3472  000FFA  EC53  F014         	call	_floorf	;wreg free
  3473  000FFE  C01D  F086         	movff	?_floorf,efgtoa@l
  3474  001002  C01E  F087         	movff	?_floorf+1,efgtoa@l+1
  3475  001006  C01F  F088         	movff	?_floorf+2,efgtoa@l+2
  3476  00100A  C020  F089         	movff	?_floorf+3,efgtoa@l+3
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  3479  00100E  C086  F004         	movff	efgtoa@l,___fltol@f1
  3480  001012  C087  F005         	movff	efgtoa@l+1,___fltol@f1+1
  3481  001016  C088  F006         	movff	efgtoa@l+2,___fltol@f1+2
  3482  00101A  C089  F007         	movff	efgtoa@l+3,___fltol@f1+3
  3483  00101E  ECFE  F016         	call	___fltol	;wreg free
  3484  001022  C004  F078         	movff	?___fltol,efgtoa@d
  3485  001026  C005  F079         	movff	?___fltol+1,efgtoa@d+1
  3486  00102A                     
  3487                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3488  00102A  B855               	btfsc	_flags^0,4,c
  3489  00102C  EF1A  F008         	goto	u4291
  3490  001030  EF1C  F008         	goto	u4290
  3491  001034                     u4291:
  3492  001034  EF3A  F008         	goto	l3636
  3493  001038                     u4290:
  3494  001038  0100               	movlb	0	; () banked
  3495  00103A  5178               	movf	efgtoa@d& (0+255),w,b
  3496  00103C  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3497  00103E  A4D8               	btfss	status,2,c
  3498  001040  EF24  F008         	goto	u4301
  3499  001044  EF26  F008         	goto	u4300
  3500  001048                     u4301:
  3501  001048  EF3A  F008         	goto	l3636
  3502  00104C                     u4300:
  3503  00104C                     
  3504                           ; BSR set to: 0
  3505  00104C  0E67               	movlw	103
  3506  00104E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3507  001050  A4D8               	btfss	status,2,c
  3508  001052  EF2D  F008         	goto	u4311
  3509  001056  EF2F  F008         	goto	u4310
  3510  00105A                     u4311:
  3511  00105A  EF3A  F008         	goto	l3636
  3512  00105E                     u4310:
  3513  00105E                     
  3514                           ; BSR set to: 0
  3515  00105E  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3516  001060  EF36  F008         	goto	u4320
  3517  001064  EF34  F008         	goto	u4321
  3518  001068                     u4321:
  3519  001068  EF3A  F008         	goto	l3636
  3520  00106C                     u4320:
  3521  00106C                     
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  3524  00106C  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3525  00106E  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3526                           
  3527                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  3528  001070  EF85  F008         	goto	l3664
  3529  001074                     l3636:
  3530                           
  3531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  3532  001074  0100               	movlb	0	; () banked
  3533  001076  5172               	movf	efgtoa@pp& (0+255),w,b
  3534  001078  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3535  00107A  A4D8               	btfss	status,2,c
  3536  00107C  EF42  F008         	goto	u4331
  3537  001080  EF44  F008         	goto	u4330
  3538  001084                     u4331:
  3539  001084  EF6E  F008         	goto	l3656
  3540  001088                     u4330:
  3541  001088                     
  3542                           ; BSR set to: 0
  3543  001088  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3544  00108A  EF4B  F008         	goto	u4340
  3545  00108E  EF49  F008         	goto	u4341
  3546  001092                     u4341:
  3547  001092  EF6E  F008         	goto	l3656
  3548  001096                     u4340:
  3549  001096                     
  3550                           ; BSR set to: 0
  3551                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  3552  001096  0E00               	movlw	low _dbuf
  3553  001098  2592               	addwf	efgtoa@n& (0+255),w,b
  3554  00109A  6ED9               	movwf	fsr2l,c
  3555  00109C  0E01               	movlw	high _dbuf
  3556  00109E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3557  0010A0  6EDA               	movwf	fsr2h,c
  3558  0010A2  0E2E               	movlw	46
  3559  0010A4  6EDF               	movwf	indf2,c
  3560  0010A6                     
  3561                           ; BSR set to: 0
  3562  0010A6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3563  0010A8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3564  0010AA                     
  3565                           ; BSR set to: 0
  3566                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  3567  0010AA  077F               	decf	efgtoa@w& (0+255),f,b
  3568  0010AC  A0D8               	btfss	status,0,c
  3569  0010AE  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3570  0010B0                     
  3571                           ; BSR set to: 0
  3572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  3573  0010B0  0E00               	movlw	0
  3574  0010B2  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3575  0010B4  0E01               	movlw	1
  3576  0010B6  6F72               	movwf	efgtoa@pp& (0+255),b
  3577  0010B8  EF6E  F008         	goto	l3656
  3578  0010BC                     l3648:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  3582  0010BC  0E00               	movlw	low _dbuf
  3583  0010BE  2592               	addwf	efgtoa@n& (0+255),w,b
  3584  0010C0  6ED9               	movwf	fsr2l,c
  3585  0010C2  0E01               	movlw	high _dbuf
  3586  0010C4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3587  0010C6  6EDA               	movwf	fsr2h,c
  3588  0010C8  0E30               	movlw	48
  3589  0010CA  6EDF               	movwf	indf2,c
  3590  0010CC                     
  3591                           ; BSR set to: 0
  3592  0010CC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3593  0010CE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3594  0010D0                     
  3595                           ; BSR set to: 0
  3596                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  3597  0010D0  077F               	decf	efgtoa@w& (0+255),f,b
  3598  0010D2  A0D8               	btfss	status,0,c
  3599  0010D4  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3600  0010D6                     
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  3603  0010D6  0770               	decf	efgtoa@t& (0+255),f,b
  3604  0010D8  A0D8               	btfss	status,0,c
  3605  0010DA  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3606  0010DC                     l3656:
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  3610  0010DC  5170               	movf	efgtoa@t& (0+255),w,b
  3611  0010DE  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3612  0010E0  A4D8               	btfss	status,2,c
  3613  0010E2  EF75  F008         	goto	u4351
  3614  0010E6  EF77  F008         	goto	u4350
  3615  0010EA                     u4351:
  3616  0010EA  EF5E  F008         	goto	l3648
  3617  0010EE                     u4350:
  3618  0010EE                     
  3619                           ; BSR set to: 0
  3620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  3621  0010EE  0E00               	movlw	low _dbuf
  3622  0010F0  2592               	addwf	efgtoa@n& (0+255),w,b
  3623  0010F2  6ED9               	movwf	fsr2l,c
  3624  0010F4  0E01               	movlw	high _dbuf
  3625  0010F6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3626  0010F8  6EDA               	movwf	fsr2h,c
  3627  0010FA  5178               	movf	efgtoa@d& (0+255),w,b
  3628  0010FC  0F30               	addlw	48
  3629  0010FE  6EDF               	movwf	indf2,c
  3630  001100                     
  3631                           ; BSR set to: 0
  3632  001100  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3633  001102  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3634  001104                     
  3635                           ; BSR set to: 0
  3636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  3637  001104  077F               	decf	efgtoa@w& (0+255),f,b
  3638  001106  A0D8               	btfss	status,0,c
  3639  001108  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3640  00110A                     l3664:
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  3644  00110A  C082  F02B         	movff	efgtoa@h,___flsub@b
  3645  00110E  C083  F02C         	movff	efgtoa@h+1,___flsub@b+1
  3646  001112  C084  F02D         	movff	efgtoa@h+2,___flsub@b+2
  3647  001116  C085  F02E         	movff	efgtoa@h+3,___flsub@b+3
  3648  00111A  C094  F016         	movff	efgtoa@u,___flmul@a
  3649  00111E  C095  F017         	movff	efgtoa@u+1,___flmul@a+1
  3650  001122  C096  F018         	movff	efgtoa@u+2,___flmul@a+2
  3651  001126  C097  F019         	movff	efgtoa@u+3,___flmul@a+3
  3652  00112A  C086  F012         	movff	efgtoa@l,___flmul@b
  3653  00112E  C087  F013         	movff	efgtoa@l+1,___flmul@b+1
  3654  001132  C088  F014         	movff	efgtoa@l+2,___flmul@b+2
  3655  001136  C089  F015         	movff	efgtoa@l+3,___flmul@b+3
  3656  00113A  ECDE  F00E         	call	___flmul	;wreg free
  3657  00113E  C012  F02F         	movff	?___flmul,___flsub@a
  3658  001142  C013  F030         	movff	?___flmul+1,___flsub@a+1
  3659  001146  C014  F031         	movff	?___flmul+2,___flsub@a+2
  3660  00114A  C015  F032         	movff	?___flmul+3,___flsub@a+3
  3661  00114E  EC40  F01C         	call	___flsub	;wreg free
  3662  001152  C02B  F082         	movff	?___flsub,efgtoa@h
  3663  001156  C02C  F083         	movff	?___flsub+1,efgtoa@h+1
  3664  00115A  C02D  F084         	movff	?___flsub+2,efgtoa@h+2
  3665  00115E  C02E  F085         	movff	?___flsub+3,efgtoa@h+3
  3666  001162                     
  3667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  3668  001162  C094  F004         	movff	efgtoa@u,___fldiv@b
  3669  001166  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  3670  00116A  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  3671  00116E  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  3672  001172  0E00               	movlw	0
  3673  001174  6E08               	movwf	___fldiv@a^0,c
  3674  001176  0E00               	movlw	0
  3675  001178  6E09               	movwf	(___fldiv@a+1)^0,c
  3676  00117A  0E20               	movlw	32
  3677  00117C  6E0A               	movwf	(___fldiv@a+2)^0,c
  3678  00117E  0E41               	movlw	65
  3679  001180  6E0B               	movwf	(___fldiv@a+3)^0,c
  3680  001182  ECF3  F010         	call	___fldiv	;wreg free
  3681  001186  C004  F094         	movff	?___fldiv,efgtoa@u
  3682  00118A  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  3683  00118E  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  3684  001192  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  3685  001196                     
  3686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  3687  001196  0100               	movlb	0	; () banked
  3688  001198  0776               	decf	efgtoa@ne& (0+255),f,b
  3689  00119A  A0D8               	btfss	status,0,c
  3690  00119C  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3691  00119E                     
  3692                           ; BSR set to: 0
  3693                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  3694  00119E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3695  0011A0  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3696  0011A2                     l3672:
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3700  0011A2  5174               	movf	efgtoa@m& (0+255),w,b
  3701  0011A4  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3702  0011A6  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3703  0011A8  0A80               	xorlw	128
  3704  0011AA  6E3E               	movwf	??_efgtoa^0,c
  3705  0011AC  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3706  0011AE  0A80               	xorlw	128
  3707  0011B0  583E               	subwfb	??_efgtoa^0,w,c
  3708  0011B2  B0D8               	btfsc	status,0,c
  3709  0011B4  EFDE  F008         	goto	u4361
  3710  0011B8  EFE0  F008         	goto	u4360
  3711  0011BC                     u4361:
  3712  0011BC  EFEE  F008         	goto	l3676
  3713  0011C0                     u4360:
  3714  0011C0                     
  3715                           ; BSR set to: 0
  3716  0011C0  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3717  0011C2  EFEC  F008         	goto	u4371
  3718  0011C6  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3719  0011C8  E109               	bnz	u4370
  3720  0011CA  0E4B               	movlw	75
  3721  0011CC  5D92               	subwf	efgtoa@n& (0+255),w,b
  3722  0011CE  A0D8               	btfss	status,0,c
  3723  0011D0  EFEC  F008         	goto	u4371
  3724  0011D4  EFEE  F008         	goto	u4370
  3725  0011D8                     u4371:
  3726  0011D8  EFE3  F007         	goto	l3624
  3727  0011DC                     u4370:
  3728  0011DC                     l3676:
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3732  0011DC  5172               	movf	efgtoa@pp& (0+255),w,b
  3733  0011DE  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3734  0011E0  A4D8               	btfss	status,2,c
  3735  0011E2  EFF5  F008         	goto	u4381
  3736  0011E6  EFF7  F008         	goto	u4380
  3737  0011EA                     u4381:
  3738  0011EA  EF08  F009         	goto	l3684
  3739  0011EE                     u4380:
  3740  0011EE                     
  3741                           ; BSR set to: 0
  3742  0011EE  A855               	btfss	_flags^0,4,c
  3743  0011F0  EFFC  F008         	goto	u4391
  3744  0011F4  EFFE  F008         	goto	u4390
  3745  0011F8                     u4391:
  3746  0011F8  EF08  F009         	goto	l3684
  3747  0011FC                     u4390:
  3748  0011FC                     
  3749                           ; BSR set to: 0
  3750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  3751  0011FC  0E00               	movlw	low _dbuf
  3752  0011FE  2592               	addwf	efgtoa@n& (0+255),w,b
  3753  001200  6ED9               	movwf	fsr2l,c
  3754  001202  0E01               	movlw	high _dbuf
  3755  001204  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3756  001206  6EDA               	movwf	fsr2h,c
  3757  001208  0E2E               	movlw	46
  3758  00120A  6EDF               	movwf	indf2,c
  3759  00120C                     
  3760                           ; BSR set to: 0
  3761  00120C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3762  00120E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3763  001210                     l3684:
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  3767  001210  0E00               	movlw	low _dbuf
  3768  001212  2592               	addwf	efgtoa@n& (0+255),w,b
  3769  001214  6ED9               	movwf	fsr2l,c
  3770  001216  0E01               	movlw	high _dbuf
  3771  001218  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3772  00121A  6EDA               	movwf	fsr2h,c
  3773  00121C  0E00               	movlw	0
  3774  00121E  6EDF               	movwf	indf2,c
  3775  001220                     
  3776                           ; BSR set to: 0
  3777                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  3778  001220  0E65               	movlw	101
  3779  001222  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3780  001224  A4D8               	btfss	status,2,c
  3781  001226  EF17  F009         	goto	u4401
  3782  00122A  EF19  F009         	goto	u4400
  3783  00122E                     u4401:
  3784  00122E  EFC6  F004         	goto	l3496
  3785  001232                     u4400:
  3786  001232                     
  3787                           ; BSR set to: 0
  3788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  3789  001232  0E00               	movlw	0
  3790  001234  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3791  001236  0E4F               	movlw	79
  3792  001238  6F8A               	movwf	efgtoa@i& (0+255),b
  3793  00123A                     
  3794                           ; BSR set to: 0
  3795                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  3796  00123A  0E00               	movlw	low _dbuf
  3797  00123C  258A               	addwf	efgtoa@i& (0+255),w,b
  3798  00123E  6ED9               	movwf	fsr2l,c
  3799  001240  0E01               	movlw	high _dbuf
  3800  001242  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3801  001244  6EDA               	movwf	fsr2h,c
  3802  001246  0E00               	movlw	0
  3803  001248  6EDF               	movwf	indf2,c
  3804  00124A                     
  3805                           ; BSR set to: 0
  3806                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  3807  00124A  0E00               	movlw	0
  3808  00124C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3809  00124E  0E00               	movlw	0
  3810  001250  6F7A               	movwf	efgtoa@sign& (0+255),b
  3811  001252                     
  3812                           ; BSR set to: 0
  3813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  3814  001252  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3815  001254  EF30  F009         	goto	u4410
  3816  001258  EF2E  F009         	goto	u4411
  3817  00125C                     u4411:
  3818  00125C  EF38  F009         	goto	l3700
  3819  001260                     u4410:
  3820  001260                     
  3821                           ; BSR set to: 0
  3822                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  3823  001260  0E00               	movlw	0
  3824  001262  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3825  001264  0E01               	movlw	1
  3826  001266  6F7A               	movwf	efgtoa@sign& (0+255),b
  3827  001268                     
  3828                           ; BSR set to: 0
  3829                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  3830  001268  6D90               	negf	efgtoa@e& (0+255),b
  3831  00126A  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3832  00126C  B0D8               	btfsc	status,0,c
  3833  00126E  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3834  001270                     l3700:
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  3838  001270  0E00               	movlw	0
  3839  001272  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3840  001274  0E02               	movlw	2
  3841  001276  6F7C               	movwf	efgtoa@p& (0+255),b
  3842                           
  3843                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3844  001278  EF69  F009         	goto	l3712
  3845  00127C                     l3702:
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  3849  00127C  078A               	decf	efgtoa@i& (0+255),f,b
  3850  00127E  A0D8               	btfss	status,0,c
  3851  001280  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3852  001282                     
  3853                           ; BSR set to: 0
  3854                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  3855  001282  0E00               	movlw	low _dbuf
  3856  001284  258A               	addwf	efgtoa@i& (0+255),w,b
  3857  001286  6ED9               	movwf	fsr2l,c
  3858  001288  0E01               	movlw	high _dbuf
  3859  00128A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3860  00128C  6EDA               	movwf	fsr2h,c
  3861  00128E  C090  F004         	movff	efgtoa@e,___awmod@dividend
  3862  001292  C091  F005         	movff	efgtoa@e+1,___awmod@dividend+1
  3863  001296  0E00               	movlw	0
  3864  001298  6E07               	movwf	(___awmod@divisor+1)^0,c
  3865  00129A  0E0A               	movlw	10
  3866  00129C  6E06               	movwf	___awmod@divisor^0,c
  3867  00129E  EC15  F01A         	call	___awmod	;wreg free
  3868  0012A2  5004               	movf	?___awmod^0,w,c
  3869  0012A4  0F30               	addlw	48
  3870  0012A6  6EDF               	movwf	indf2,c
  3871  0012A8                     
  3872                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  3873  0012A8  C090  F004         	movff	efgtoa@e,___awdiv@dividend
  3874  0012AC  C091  F005         	movff	efgtoa@e+1,___awdiv@dividend+1
  3875  0012B0  0E00               	movlw	0
  3876  0012B2  6E07               	movwf	(___awdiv@divisor+1)^0,c
  3877  0012B4  0E0A               	movlw	10
  3878  0012B6  6E06               	movwf	___awdiv@divisor^0,c
  3879  0012B8  EC52  F019         	call	___awdiv	;wreg free
  3880  0012BC  C004  F090         	movff	?___awdiv,efgtoa@e
  3881  0012C0  C005  F091         	movff	?___awdiv+1,efgtoa@e+1
  3882  0012C4                     
  3883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  3884  0012C4  0100               	movlb	0	; () banked
  3885  0012C6  077C               	decf	efgtoa@p& (0+255),f,b
  3886  0012C8  A0D8               	btfss	status,0,c
  3887  0012CA  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3888  0012CC                     
  3889                           ; BSR set to: 0
  3890                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  3891  0012CC  077F               	decf	efgtoa@w& (0+255),f,b
  3892  0012CE  A0D8               	btfss	status,0,c
  3893  0012D0  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3894  0012D2                     l3712:
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3898  0012D2  5190               	movf	efgtoa@e& (0+255),w,b
  3899  0012D4  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3900  0012D6  A4D8               	btfss	status,2,c
  3901  0012D8  EF70  F009         	goto	u4421
  3902  0012DC  EF72  F009         	goto	u4420
  3903  0012E0                     u4421:
  3904  0012E0  EF3E  F009         	goto	l3702
  3905  0012E4                     u4420:
  3906  0012E4                     
  3907                           ; BSR set to: 0
  3908  0012E4  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3909  0012E6  EF7F  F009         	goto	u4430
  3910  0012EA  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3911  0012EC  E106               	bnz	u4431
  3912  0012EE  057C               	decf	efgtoa@p& (0+255),w,b
  3913  0012F0  B0D8               	btfsc	status,0,c
  3914  0012F2  EF7D  F009         	goto	u4431
  3915  0012F6  EF7F  F009         	goto	u4430
  3916  0012FA                     u4431:
  3917  0012FA  EF3E  F009         	goto	l3702
  3918  0012FE                     u4430:
  3919  0012FE                     
  3920                           ; BSR set to: 0
  3921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  3922  0012FE  078A               	decf	efgtoa@i& (0+255),f,b
  3923  001300  A0D8               	btfss	status,0,c
  3924  001302  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3925  001304                     
  3926                           ; BSR set to: 0
  3927                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  3928  001304  517A               	movf	efgtoa@sign& (0+255),w,b
  3929  001306  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3930  001308  A4D8               	btfss	status,2,c
  3931  00130A  EF89  F009         	goto	u4441
  3932  00130E  EF8B  F009         	goto	u4440
  3933  001312                     u4441:
  3934  001312  EF91  F009         	goto	l3722
  3935  001316                     u4440:
  3936  001316                     
  3937                           ; BSR set to: 0
  3938  001316  0E00               	movlw	0
  3939  001318  6F6B               	movwf	(_efgtoa$1207+1)& (0+255),b
  3940  00131A  0E2B               	movlw	43
  3941  00131C  6F6A               	movwf	_efgtoa$1207& (0+255),b
  3942  00131E  EF95  F009         	goto	l3724
  3943  001322                     l3722:
  3944                           
  3945                           ; BSR set to: 0
  3946  001322  0E00               	movlw	0
  3947  001324  6F6B               	movwf	(_efgtoa$1207+1)& (0+255),b
  3948  001326  0E2D               	movlw	45
  3949  001328  6F6A               	movwf	_efgtoa$1207& (0+255),b
  3950  00132A                     l3724:
  3951                           
  3952                           ; BSR set to: 0
  3953  00132A  0E00               	movlw	low _dbuf
  3954  00132C  258A               	addwf	efgtoa@i& (0+255),w,b
  3955  00132E  6ED9               	movwf	fsr2l,c
  3956  001330  0E01               	movlw	high _dbuf
  3957  001332  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3958  001334  6EDA               	movwf	fsr2h,c
  3959  001336  C06A  FFDF         	movff	_efgtoa$1207,indf2
  3960  00133A                     
  3961                           ; BSR set to: 0
  3962                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  3963  00133A  077F               	decf	efgtoa@w& (0+255),f,b
  3964  00133C  A0D8               	btfss	status,0,c
  3965  00133E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3966  001340                     
  3967                           ; BSR set to: 0
  3968                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3969  001340  078A               	decf	efgtoa@i& (0+255),f,b
  3970  001342  A0D8               	btfss	status,0,c
  3971  001344  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3972  001346                     
  3973                           ; BSR set to: 0
  3974  001346  0EBF               	movlw	191
  3975  001348  6E3E               	movwf	??_efgtoa^0,c
  3976  00134A  0EFF               	movlw	255
  3977  00134C  6E3F               	movwf	(??_efgtoa+1)^0,c
  3978  00134E  503D               	movf	efgtoa@c^0,w,c
  3979  001350  6E40               	movwf	(??_efgtoa+2)^0,c
  3980  001352  6A41               	clrf	(??_efgtoa+3)^0,c
  3981  001354  503E               	movf	??_efgtoa^0,w,c
  3982  001356  2640               	addwf	(??_efgtoa+2)^0,f,c
  3983  001358  503F               	movf	(??_efgtoa+1)^0,w,c
  3984  00135A  2241               	addwfc	(??_efgtoa+3)^0,f,c
  3985  00135C  5041               	movf	(??_efgtoa+3)^0,w,c
  3986  00135E  E10A               	bnz	u4450
  3987  001360  0E1A               	movlw	26
  3988  001362  5C40               	subwf	(??_efgtoa+2)^0,w,c
  3989  001364  A0D8               	btfss	status,0,c
  3990  001366  EFB7  F009         	goto	u4451
  3991  00136A  EFBA  F009         	goto	u4450
  3992  00136E                     u4451:
  3993  00136E  0E01               	movlw	1
  3994  001370  EFBB  F009         	goto	u4460
  3995  001374                     u4450:
  3996  001374  0E00               	movlw	0
  3997  001376                     u4460:
  3998  001376  6F6E               	movwf	_efgtoa$1209& (0+255),b
  3999  001378  6B6F               	clrf	(_efgtoa$1209+1)& (0+255),b
  4000  00137A                     
  4001                           ; BSR set to: 0
  4002  00137A  516E               	movf	_efgtoa$1209& (0+255),w,b
  4003  00137C  116F               	iorwf	(_efgtoa$1209+1)& (0+255),w,b
  4004  00137E  A4D8               	btfss	status,2,c
  4005  001380  EFC4  F009         	goto	u4471
  4006  001384  EFC6  F009         	goto	u4470
  4007  001388                     u4471:
  4008  001388  EFCC  F009         	goto	l3738
  4009  00138C                     u4470:
  4010  00138C                     
  4011                           ; BSR set to: 0
  4012  00138C  0E00               	movlw	0
  4013  00138E  6F6D               	movwf	(_efgtoa$1208+1)& (0+255),b
  4014  001390  0E65               	movlw	101
  4015  001392  6F6C               	movwf	_efgtoa$1208& (0+255),b
  4016  001394  EFD0  F009         	goto	l3740
  4017  001398                     l3738:
  4018                           
  4019                           ; BSR set to: 0
  4020  001398  0E00               	movlw	0
  4021  00139A  6F6D               	movwf	(_efgtoa$1208+1)& (0+255),b
  4022  00139C  0E45               	movlw	69
  4023  00139E  6F6C               	movwf	_efgtoa$1208& (0+255),b
  4024  0013A0                     l3740:
  4025                           
  4026                           ; BSR set to: 0
  4027  0013A0  0E00               	movlw	low _dbuf
  4028  0013A2  258A               	addwf	efgtoa@i& (0+255),w,b
  4029  0013A4  6ED9               	movwf	fsr2l,c
  4030  0013A6  0E01               	movlw	high _dbuf
  4031  0013A8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4032  0013AA  6EDA               	movwf	fsr2h,c
  4033  0013AC  C06C  FFDF         	movff	_efgtoa$1208,indf2
  4034  0013B0                     
  4035                           ; BSR set to: 0
  4036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  4037  0013B0  077F               	decf	efgtoa@w& (0+255),f,b
  4038  0013B2  A0D8               	btfss	status,0,c
  4039  0013B4  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4040  0013B6                     
  4041                           ; BSR set to: 0
  4042                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4043  0013B6  0E00               	movlw	low _dbuf
  4044  0013B8  2592               	addwf	efgtoa@n& (0+255),w,b
  4045  0013BA  6E04               	movwf	strcpy@dest^0,c
  4046  0013BC  0E01               	movlw	high _dbuf
  4047  0013BE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4048  0013C0  6E05               	movwf	(strcpy@dest+1)^0,c
  4049  0013C2  0E00               	movlw	low _dbuf
  4050  0013C4  258A               	addwf	efgtoa@i& (0+255),w,b
  4051  0013C6  6E06               	movwf	strcpy@src^0,c
  4052  0013C8  0E01               	movlw	high _dbuf
  4053  0013CA  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4054  0013CC  6E07               	movwf	(strcpy@src+1)^0,c
  4055  0013CE  EC95  F01B         	call	_strcpy	;wreg free
  4056  0013D2  EFC6  F004         	goto	l3496
  4057  0013D6                     l858:
  4058  0013D6  0012               	return		;funcret
  4059  0013D8                     __end_of_efgtoa:
  4060                           	callstack 0
  4061                           
  4062 ;; *************** function _tolower *****************
  4063 ;; Defined at:
  4064 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  c               2    9[COMRAM] int 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  2    9[COMRAM] int 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4078 ;;      Params:         2       0       0       0       0       0       0       0       0
  4079 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4080 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4081 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4082 ;;Total ram usage:        8 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    3
  4085 ;; This function calls:
  4086 ;;		_isupper
  4087 ;; This function is called by:
  4088 ;;		_efgtoa
  4089 ;;		_vfpfcnvrt
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text6
  4094  0036CA                     __ptext6:
  4095                           	callstack 0
  4096  0036CA                     _tolower:
  4097                           	callstack 24
  4098  0036CA  0EBF               	movlw	191
  4099  0036CC  6E0C               	movwf	??_tolower^0,c
  4100  0036CE  0EFF               	movlw	255
  4101  0036D0  6E0D               	movwf	(??_tolower+1)^0,c
  4102  0036D2  C00A  F00E         	movff	tolower@c,??_tolower+2
  4103  0036D6  C00B  F00F         	movff	tolower@c+1,??_tolower+3
  4104  0036DA  500C               	movf	??_tolower^0,w,c
  4105  0036DC  260E               	addwf	(??_tolower+2)^0,f,c
  4106  0036DE  500D               	movf	(??_tolower+1)^0,w,c
  4107  0036E0  220F               	addwfc	(??_tolower+3)^0,f,c
  4108  0036E2  500F               	movf	(??_tolower+3)^0,w,c
  4109  0036E4  E10A               	bnz	u3790
  4110  0036E6  0E1A               	movlw	26
  4111  0036E8  5C0E               	subwf	(??_tolower+2)^0,w,c
  4112  0036EA  A0D8               	btfss	status,0,c
  4113  0036EC  EF7A  F01B         	goto	u3791
  4114  0036F0  EF7D  F01B         	goto	u3790
  4115  0036F4                     u3791:
  4116  0036F4  0E01               	movlw	1
  4117  0036F6  EF7E  F01B         	goto	u3800
  4118  0036FA                     u3790:
  4119  0036FA  0E00               	movlw	0
  4120  0036FC                     u3800:
  4121  0036FC  6E10               	movwf	_tolower$1356^0,c
  4122  0036FE  6A11               	clrf	(_tolower$1356+1)^0,c
  4123  003700  5010               	movf	_tolower$1356^0,w,c
  4124  003702  1011               	iorwf	(_tolower$1356+1)^0,w,c
  4125  003704  B4D8               	btfsc	status,2,c
  4126  003706  EF87  F01B         	goto	u3811
  4127  00370A  EF89  F01B         	goto	u3810
  4128  00370E                     u3811:
  4129  00370E  EF90  F01B         	goto	l1098
  4130  003712                     u3810:
  4131  003712  0E20               	movlw	32
  4132  003714  100A               	iorwf	tolower@c^0,w,c
  4133  003716  6E0A               	movwf	?_tolower^0,c
  4134  003718  500B               	movf	(tolower@c+1)^0,w,c
  4135  00371A  6E0B               	movwf	(?_tolower+1)^0,c
  4136  00371C  EF94  F01B         	goto	l1103
  4137  003720                     l1098:
  4138  003720  C00A  F00A         	movff	tolower@c,?_tolower
  4139  003724  C00B  F00B         	movff	tolower@c+1,?_tolower+1
  4140  003728                     l1103:
  4141  003728  0012               	return		;funcret
  4142  00372A                     __end_of_tolower:
  4143                           	callstack 0
  4144                           
  4145 ;; *************** function _isupper *****************
  4146 ;; Defined at:
  4147 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  c               2    3[COMRAM] int 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  2    3[COMRAM] int 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2, status,0
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4161 ;;      Params:         2       0       0       0       0       0       0       0       0
  4162 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4163 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4164 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4165 ;;Total ram usage:        6 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    2
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_efgtoa
  4172 ;;		_vfpfcnvrt
  4173 ;;		_tolower
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           	psect	text7
  4178  00394C                     __ptext7:
  4179                           	callstack 0
  4180  00394C                     _isupper:
  4181                           	callstack 24
  4182  00394C  0EBF               	movlw	191
  4183  00394E  6E06               	movwf	??_isupper^0,c
  4184  003950  0EFF               	movlw	255
  4185  003952  6E07               	movwf	(??_isupper+1)^0,c
  4186  003954  C004  F008         	movff	isupper@c,??_isupper+2
  4187  003958  C005  F009         	movff	isupper@c+1,??_isupper+3
  4188  00395C  5006               	movf	??_isupper^0,w,c
  4189  00395E  2608               	addwf	(??_isupper+2)^0,f,c
  4190  003960  5007               	movf	(??_isupper+1)^0,w,c
  4191  003962  2209               	addwfc	(??_isupper+3)^0,f,c
  4192  003964  5009               	movf	(??_isupper+3)^0,w,c
  4193  003966  E10A               	bnz	u2940
  4194  003968  0E1A               	movlw	26
  4195  00396A  5C08               	subwf	(??_isupper+2)^0,w,c
  4196  00396C  A0D8               	btfss	status,0,c
  4197  00396E  EFBB  F01C         	goto	u2941
  4198  003972  EFBE  F01C         	goto	u2940
  4199  003976                     u2941:
  4200  003976  0E01               	movlw	1
  4201  003978  EFBF  F01C         	goto	u2950
  4202  00397C                     u2940:
  4203  00397C  0E00               	movlw	0
  4204  00397E                     u2950:
  4205  00397E  6E04               	movwf	?_isupper^0,c
  4206  003980  6A05               	clrf	(?_isupper+1)^0,c
  4207  003982  0012               	return		;funcret
  4208  003984                     __end_of_isupper:
  4209                           	callstack 0
  4210                           
  4211 ;; *************** function _strcpy *****************
  4212 ;; Defined at:
  4213 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  dest            2    3[COMRAM] PTR unsigned char 
  4216 ;;		 -> dbuf(80), 
  4217 ;;  src             2    5[COMRAM] PTR const unsigned char 
  4218 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4219 ;;		 -> dbuf(80), 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  d               2   11[COMRAM] PTR unsigned char 
  4222 ;;		 -> dbuf(80), 
  4223 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4224 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4225 ;;		 -> dbuf(80), 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  2    3[COMRAM] PTR unsigned char 
  4228 ;; Registers used:
  4229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4235 ;;      Params:         4       0       0       0       0       0       0       0       0
  4236 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4237 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4238 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4239 ;;Total ram usage:       10 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:    2
  4242 ;; This function calls:
  4243 ;;		Nothing
  4244 ;; This function is called by:
  4245 ;;		_efgtoa
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           	psect	text8
  4250  00372A                     __ptext8:
  4251                           	callstack 0
  4252  00372A                     _strcpy:
  4253                           	callstack 24
  4254  00372A  C006  F00A         	movff	strcpy@src,strcpy@s
  4255  00372E  C007  F00B         	movff	strcpy@src+1,strcpy@s+1
  4256  003732  C004  F00C         	movff	strcpy@dest,strcpy@d
  4257  003736  C005  F00D         	movff	strcpy@dest+1,strcpy@d+1
  4258  00373A                     l3396:
  4259  00373A  500A               	movf	strcpy@s^0,w,c
  4260  00373C  6E08               	movwf	??_strcpy^0,c
  4261  00373E  500B               	movf	(strcpy@s+1)^0,w,c
  4262  003740  6E09               	movwf	(??_strcpy+1)^0,c
  4263  003742  4A0A               	infsnz	strcpy@s^0,f,c
  4264  003744  2A0B               	incf	(strcpy@s+1)^0,f,c
  4265  003746  C008  FFF6         	movff	??_strcpy,tblptrl
  4266  00374A  C009  FFF7         	movff	??_strcpy+1,tblptrh
  4267  00374E  6AF8               	clrf	tblptru,c
  4268  003750  C00C  FFD9         	movff	strcpy@d,fsr2l
  4269  003754  C00D  FFDA         	movff	strcpy@d+1,fsr2h
  4270  003758  4A0C               	infsnz	strcpy@d^0,f,c
  4271  00375A  2A0D               	incf	(strcpy@d+1)^0,f,c
  4272  00375C  0E07               	movlw	(high __ramtop+-1)
  4273  00375E  64F7               	cpfsgt	tblptrh,c
  4274  003760  D003               	bra	u3777
  4275  003762  0008               	tblrd		*
  4276  003764  50F5               	movf	tablat,w,c
  4277  003766  D005               	bra	u3770
  4278  003768                     u3777:
  4279  003768  CFF6 FFE1          	movff	tblptrl,fsr1l
  4280  00376C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4281  003770  50E7               	movf	indf1,w,c
  4282  003772                     u3770:
  4283  003772  6EDF               	movwf	indf2,c
  4284  003774  50DF               	movf	indf2,w,c
  4285  003776  A4D8               	btfss	status,2,c
  4286  003778  EFC0  F01B         	goto	u3781
  4287  00377C  EFC2  F01B         	goto	u3780
  4288  003780                     u3781:
  4289  003780  EF9D  F01B         	goto	l3396
  4290  003784                     u3780:
  4291  003784  0012               	return		;funcret
  4292  003786                     __end_of_strcpy:
  4293                           	callstack 0
  4294                           
  4295 ;; *************** function _pad *****************
  4296 ;; Defined at:
  4297 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  4300 ;;		 -> sprintf@f(6), 
  4301 ;;  buf             2   21[COMRAM] PTR unsigned char 
  4302 ;;		 -> dbuf(80), 
  4303 ;;  p               2   23[COMRAM] int 
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;  w               2   28[COMRAM] int 
  4306 ;;  i               2   26[COMRAM] int 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  2   19[COMRAM] int 
  4309 ;; Registers used:
  4310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4316 ;;      Params:         6       0       0       0       0       0       0       0       0
  4317 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4318 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4319 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4320 ;;Total ram usage:       11 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    5
  4323 ;; This function calls:
  4324 ;;		_fputc
  4325 ;;		_fputs
  4326 ;;		_strlen
  4327 ;; This function is called by:
  4328 ;;		_efgtoa
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text9
  4333  003368                     __ptext9:
  4334                           	callstack 0
  4335  003368                     _pad:
  4336                           	callstack 21
  4337  003368                     
  4338                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4339  003368  A055               	btfss	_flags^0,0,c
  4340  00336A  EFB9  F019         	goto	u3661
  4341  00336E  EFBB  F019         	goto	u3660
  4342  003372                     u3661:
  4343  003372  EFC5  F019         	goto	l3354
  4344  003376                     u3660:
  4345  003376                     
  4346                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4347  003376  C016  F00D         	movff	pad@buf,fputs@s
  4348  00337A  C017  F00E         	movff	pad@buf+1,fputs@s+1
  4349  00337E  C014  F00F         	movff	pad@fp,fputs@fp
  4350  003382  C015  F010         	movff	pad@fp+1,fputs@fp+1
  4351  003386  EC63  F01C         	call	_fputs	;wreg free
  4352  00338A                     l3354:
  4353                           
  4354                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4355  00338A  BE19               	btfsc	(pad@p+1)^0,7,c
  4356  00338C  EFCA  F019         	goto	u3671
  4357  003390  EFCC  F019         	goto	u3670
  4358  003394                     u3671:
  4359  003394  EFD2  F019         	goto	l3358
  4360  003398                     u3670:
  4361  003398  C018  F01D         	movff	pad@p,pad@w
  4362  00339C  C019  F01E         	movff	pad@p+1,pad@w+1
  4363  0033A0  EFD6  F019         	goto	l835
  4364  0033A4                     l3358:
  4365  0033A4  0E00               	movlw	0
  4366  0033A6  6E1E               	movwf	(pad@w+1)^0,c
  4367  0033A8  0E00               	movlw	0
  4368  0033AA  6E1D               	movwf	pad@w^0,c
  4369  0033AC                     l835:
  4370                           
  4371                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4372  0033AC  0E00               	movlw	0
  4373  0033AE  6E1C               	movwf	(pad@i+1)^0,c
  4374  0033B0  0E00               	movlw	0
  4375  0033B2  6E1B               	movwf	pad@i^0,c
  4376                           
  4377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4378  0033B4  EFE8  F019         	goto	l3364
  4379  0033B8                     l3360:
  4380                           
  4381                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4382  0033B8  0E00               	movlw	0
  4383  0033BA  6E05               	movwf	(fputc@c+1)^0,c
  4384  0033BC  0E20               	movlw	32
  4385  0033BE  6E04               	movwf	fputc@c^0,c
  4386  0033C0  C014  F006         	movff	pad@fp,fputc@fp
  4387  0033C4  C015  F007         	movff	pad@fp+1,fputc@fp+1
  4388  0033C8  ECED  F018         	call	_fputc	;wreg free
  4389  0033CC                     
  4390                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4391  0033CC  4A1B               	infsnz	pad@i^0,f,c
  4392  0033CE  2A1C               	incf	(pad@i+1)^0,f,c
  4393  0033D0                     l3364:
  4394                           
  4395                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4396  0033D0  501D               	movf	pad@w^0,w,c
  4397  0033D2  5C1B               	subwf	pad@i^0,w,c
  4398  0033D4  501C               	movf	(pad@i+1)^0,w,c
  4399  0033D6  0A80               	xorlw	128
  4400  0033D8  6E1A               	movwf	??_pad^0,c
  4401  0033DA  501E               	movf	(pad@w+1)^0,w,c
  4402  0033DC  0A80               	xorlw	128
  4403  0033DE  581A               	subwfb	??_pad^0,w,c
  4404  0033E0  A0D8               	btfss	status,0,c
  4405  0033E2  EFF5  F019         	goto	u3681
  4406  0033E6  EFF7  F019         	goto	u3680
  4407  0033EA                     u3681:
  4408  0033EA  EFDC  F019         	goto	l3360
  4409  0033EE                     u3680:
  4410  0033EE                     
  4411                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4412  0033EE  B055               	btfsc	_flags^0,0,c
  4413  0033F0  EFFC  F019         	goto	u3691
  4414  0033F4  EFFE  F019         	goto	u3690
  4415  0033F8                     u3691:
  4416  0033F8  EF08  F01A         	goto	l3368
  4417  0033FC                     u3690:
  4418  0033FC                     
  4419                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4420  0033FC  C016  F00D         	movff	pad@buf,fputs@s
  4421  003400  C017  F00E         	movff	pad@buf+1,fputs@s+1
  4422  003404  C014  F00F         	movff	pad@fp,fputs@fp
  4423  003408  C015  F010         	movff	pad@fp+1,fputs@fp+1
  4424  00340C  EC63  F01C         	call	_fputs	;wreg free
  4425  003410                     l3368:
  4426                           
  4427                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  4428  003410  C016  F004         	movff	pad@buf,strlen@s
  4429  003414  C017  F005         	movff	pad@buf+1,strlen@s+1
  4430  003418  ECFA  F01C         	call	_strlen	;wreg free
  4431  00341C  501D               	movf	pad@w^0,w,c
  4432  00341E  2404               	addwf	?_strlen^0,w,c
  4433  003420  6E14               	movwf	?_pad^0,c
  4434  003422  501E               	movf	(pad@w+1)^0,w,c
  4435  003424  2005               	addwfc	(?_strlen+1)^0,w,c
  4436  003426  6E15               	movwf	(?_pad+1)^0,c
  4437  003428  0012               	return		;funcret
  4438  00342A                     __end_of_pad:
  4439                           	callstack 0
  4440                           
  4441 ;; *************** function _strlen *****************
  4442 ;; Defined at:
  4443 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  s               2    3[COMRAM] PTR const unsigned char 
  4446 ;;		 -> dbuf(80), 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;  a               2    5[COMRAM] PTR const unsigned char 
  4449 ;;		 -> dbuf(80), 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  2    3[COMRAM] unsigned int 
  4452 ;; Registers used:
  4453 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4459 ;;      Params:         2       0       0       0       0       0       0       0       0
  4460 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4462 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4463 ;;Total ram usage:        4 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:    2
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_pad
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text10
  4474  0039F4                     __ptext10:
  4475                           	callstack 0
  4476  0039F4                     _strlen:
  4477                           	callstack 23
  4478  0039F4  C004  F006         	movff	strlen@s,strlen@a
  4479  0039F8  C005  F007         	movff	strlen@s+1,strlen@a+1
  4480  0039FC  EF02  F01D         	goto	l2890
  4481  003A00                     l2888:
  4482  003A00  4A04               	infsnz	strlen@s^0,f,c
  4483  003A02  2A05               	incf	(strlen@s+1)^0,f,c
  4484  003A04                     l2890:
  4485  003A04  C004  FFD9         	movff	strlen@s,fsr2l
  4486  003A08  C005  FFDA         	movff	strlen@s+1,fsr2h
  4487  003A0C  50DF               	movf	indf2,w,c
  4488  003A0E  A4D8               	btfss	status,2,c
  4489  003A10  EF0C  F01D         	goto	u2931
  4490  003A14  EF0E  F01D         	goto	u2930
  4491  003A18                     u2931:
  4492  003A18  EF00  F01D         	goto	l2888
  4493  003A1C                     u2930:
  4494  003A1C  5006               	movf	strlen@a^0,w,c
  4495  003A1E  5C04               	subwf	strlen@s^0,w,c
  4496  003A20  6E04               	movwf	?_strlen^0,c
  4497  003A22  5007               	movf	(strlen@a+1)^0,w,c
  4498  003A24  5805               	subwfb	(strlen@s+1)^0,w,c
  4499  003A26  6E05               	movwf	(?_strlen+1)^0,c
  4500  003A28  0012               	return		;funcret
  4501  003A2A                     __end_of_strlen:
  4502                           	callstack 0
  4503                           
  4504 ;; *************** function _fputs *****************
  4505 ;; Defined at:
  4506 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  s               2   12[COMRAM] PTR const unsigned char 
  4509 ;;		 -> dbuf(80), 
  4510 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  4511 ;;		 -> sprintf@f(6), 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  i               2   17[COMRAM] int 
  4514 ;;  c               1   16[COMRAM] unsigned char 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  2   12[COMRAM] int 
  4517 ;; Registers used:
  4518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4524 ;;      Params:         4       0       0       0       0       0       0       0       0
  4525 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4527 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4528 ;;Total ram usage:        7 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    4
  4531 ;; This function calls:
  4532 ;;		_fputc
  4533 ;; This function is called by:
  4534 ;;		_pad
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           	psect	text11
  4539  0038C6                     __ptext11:
  4540                           	callstack 0
  4541  0038C6                     _fputs:
  4542                           	callstack 21
  4543  0038C6  0E00               	movlw	0
  4544  0038C8  6E13               	movwf	(fputs@i+1)^0,c
  4545  0038CA  0E00               	movlw	0
  4546  0038CC  6E12               	movwf	fputs@i^0,c
  4547  0038CE  EF74  F01C         	goto	l2884
  4548  0038D2                     l2880:
  4549  0038D2  C011  F004         	movff	fputs@c,fputc@c
  4550  0038D6  6A05               	clrf	(fputc@c+1)^0,c
  4551  0038D8  C00F  F006         	movff	fputs@fp,fputc@fp
  4552  0038DC  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  4553  0038E0  ECED  F018         	call	_fputc	;wreg free
  4554  0038E4  4A12               	infsnz	fputs@i^0,f,c
  4555  0038E6  2A13               	incf	(fputs@i+1)^0,f,c
  4556  0038E8                     l2884:
  4557  0038E8  5012               	movf	fputs@i^0,w,c
  4558  0038EA  240D               	addwf	fputs@s^0,w,c
  4559  0038EC  6ED9               	movwf	fsr2l,c
  4560  0038EE  5013               	movf	(fputs@i+1)^0,w,c
  4561  0038F0  200E               	addwfc	(fputs@s+1)^0,w,c
  4562  0038F2  6EDA               	movwf	fsr2h,c
  4563  0038F4  50DF               	movf	indf2,w,c
  4564  0038F6  6E11               	movwf	fputs@c^0,c
  4565  0038F8  5011               	movf	fputs@c^0,w,c
  4566  0038FA  A4D8               	btfss	status,2,c
  4567  0038FC  EF82  F01C         	goto	u2921
  4568  003900  EF84  F01C         	goto	u2920
  4569  003904                     u2921:
  4570  003904  EF69  F01C         	goto	l2880
  4571  003908                     u2920:
  4572  003908  0012               	return		;funcret
  4573  00390A                     __end_of_fputs:
  4574                           	callstack 0
  4575                           
  4576 ;; *************** function _fputc *****************
  4577 ;; Defined at:
  4578 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  c               2    3[COMRAM] int 
  4581 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  4582 ;;		 -> sprintf@f(6), 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;		None
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  2    3[COMRAM] int 
  4587 ;; Registers used:
  4588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4594 ;;      Params:         4       0       0       0       0       0       0       0       0
  4595 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4596 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4597 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4598 ;;Total ram usage:        9 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    3
  4601 ;; This function calls:
  4602 ;;		_putch
  4603 ;; This function is called by:
  4604 ;;		_pad
  4605 ;;		_vfpfcnvrt
  4606 ;;		_fputs
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text12
  4611  0031DA                     __ptext12:
  4612                           	callstack 0
  4613  0031DA                     _fputc:
  4614                           	callstack 24
  4615  0031DA  5006               	movf	fputc@fp^0,w,c
  4616  0031DC  1007               	iorwf	(fputc@fp+1)^0,w,c
  4617  0031DE  B4D8               	btfsc	status,2,c
  4618  0031E0  EFF4  F018         	goto	u2491
  4619  0031E4  EFF6  F018         	goto	u2490
  4620  0031E8                     u2491:
  4621  0031E8  EFFF  F018         	goto	l2666
  4622  0031EC                     u2490:
  4623  0031EC  5006               	movf	fputc@fp^0,w,c
  4624  0031EE  1007               	iorwf	(fputc@fp+1)^0,w,c
  4625  0031F0  A4D8               	btfss	status,2,c
  4626  0031F2  EFFD  F018         	goto	u2501
  4627  0031F6  EFFF  F018         	goto	u2500
  4628  0031FA                     u2501:
  4629  0031FA  EF04  F019         	goto	l2668
  4630  0031FE                     u2500:
  4631  0031FE                     l2666:
  4632  0031FE  5004               	movf	fputc@c^0,w,c
  4633  003200  EC9D  F01D         	call	_putch
  4634  003204  EF51  F019         	goto	l1061
  4635  003208                     l2668:
  4636  003208  EE20 F004          	lfsr	2,4
  4637  00320C  5006               	movf	fputc@fp^0,w,c
  4638  00320E  26D9               	addwf	fsr2l,f,c
  4639  003210  5007               	movf	(fputc@fp+1)^0,w,c
  4640  003212  22DA               	addwfc	fsr2h,f,c
  4641  003214  50DE               	movf	postinc2,w,c
  4642  003216  10DE               	iorwf	postinc2,w,c
  4643  003218  B4D8               	btfsc	status,2,c
  4644  00321A  EF11  F019         	goto	u2511
  4645  00321E  EF13  F019         	goto	u2510
  4646  003222                     u2511:
  4647  003222  EF2E  F019         	goto	l2672
  4648  003226                     u2510:
  4649  003226  EE20 F004          	lfsr	2,4
  4650  00322A  5006               	movf	fputc@fp^0,w,c
  4651  00322C  26D9               	addwf	fsr2l,f,c
  4652  00322E  5007               	movf	(fputc@fp+1)^0,w,c
  4653  003230  22DA               	addwfc	fsr2h,f,c
  4654  003232  EE10 F002          	lfsr	1,2
  4655  003236  5006               	movf	fputc@fp^0,w,c
  4656  003238  26E1               	addwf	fsr1l,f,c
  4657  00323A  5007               	movf	(fputc@fp+1)^0,w,c
  4658  00323C  22E2               	addwfc	fsr1h,f,c
  4659  00323E  50DE               	movf	postinc2,w,c
  4660  003240  5CE6               	subwf	postinc1,w,c
  4661  003242  50E6               	movf	postinc1,w,c
  4662  003244  0A80               	xorlw	128
  4663  003246  6E0C               	movwf	(??_fputc+4)^0,c
  4664  003248  50DE               	movf	postinc2,w,c
  4665  00324A  0A80               	xorlw	128
  4666  00324C  580C               	subwfb	(??_fputc+4)^0,w,c
  4667  00324E  B0D8               	btfsc	status,0,c
  4668  003250  EF2C  F019         	goto	u2521
  4669  003254  EF2E  F019         	goto	u2520
  4670  003258                     u2521:
  4671  003258  EF51  F019         	goto	l1061
  4672  00325C                     u2520:
  4673  00325C                     l2672:
  4674  00325C  EE20 F002          	lfsr	2,2
  4675  003260  5006               	movf	fputc@fp^0,w,c
  4676  003262  26D9               	addwf	fsr2l,f,c
  4677  003264  5007               	movf	(fputc@fp+1)^0,w,c
  4678  003266  22DA               	addwfc	fsr2h,f,c
  4679  003268  CFDE F008          	movff	postinc2,??_fputc
  4680  00326C  CFDD F009          	movff	postdec2,??_fputc+1
  4681  003270  C006  FFD9         	movff	fputc@fp,fsr2l
  4682  003274  C007  FFDA         	movff	fputc@fp+1,fsr2h
  4683  003278  CFDE F00A          	movff	postinc2,??_fputc+2
  4684  00327C  CFDD F00B          	movff	postdec2,??_fputc+3
  4685  003280  5008               	movf	??_fputc^0,w,c
  4686  003282  240A               	addwf	(??_fputc+2)^0,w,c
  4687  003284  6ED9               	movwf	fsr2l,c
  4688  003286  5009               	movf	(??_fputc+1)^0,w,c
  4689  003288  200B               	addwfc	(??_fputc+3)^0,w,c
  4690  00328A  6EDA               	movwf	fsr2h,c
  4691  00328C  C004  FFDF         	movff	fputc@c,indf2
  4692  003290  EE20 F002          	lfsr	2,2
  4693  003294  5006               	movf	fputc@fp^0,w,c
  4694  003296  26D9               	addwf	fsr2l,f,c
  4695  003298  5007               	movf	(fputc@fp+1)^0,w,c
  4696  00329A  22DA               	addwfc	fsr2h,f,c
  4697  00329C  2ADE               	incf	postinc2,f,c
  4698  00329E  0E00               	movlw	0
  4699  0032A0  22DD               	addwfc	postdec2,f,c
  4700  0032A2                     l1061:
  4701  0032A2  0012               	return		;funcret
  4702  0032A4                     __end_of_fputc:
  4703                           	callstack 0
  4704                           
  4705 ;; *************** function _putch *****************
  4706 ;; Defined at:
  4707 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  c               1    wreg     unsigned char 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  c               1    0[COMRAM] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4724 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4725 ;;Total ram usage:        0 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    2
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_fputc
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text13
  4736  003B3A                     __ptext13:
  4737                           	callstack 0
  4738  003B3A                     _putch:
  4739                           	callstack 24
  4740  003B3A  0012               	return		;funcret
  4741  003B3C                     __end_of_putch:
  4742                           	callstack 0
  4743                           
  4744 ;; *************** function _floorf *****************
  4745 ;; Defined at:
  4746 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  x               4   28[COMRAM] float 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  u               4   44[COMRAM] struct .
  4751 ;;  m               4   38[COMRAM] unsigned long 
  4752 ;;  e               2   42[COMRAM] int 
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  4   28[COMRAM] float 
  4755 ;; Registers used:
  4756 ;;		wreg, status,2, status,0
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4762 ;;      Params:         4       0       0       0       0       0       0       0       0
  4763 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4764 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4765 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4766 ;;Total ram usage:       20 bytes
  4767 ;; Hardware stack levels used:    1
  4768 ;; Hardware stack levels required when called:    2
  4769 ;; This function calls:
  4770 ;;		Nothing
  4771 ;; This function is called by:
  4772 ;;		_efgtoa
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           	psect	text14
  4777  0028A6                     __ptext14:
  4778                           	callstack 0
  4779  0028A6                     _floorf:
  4780                           	callstack 24
  4781  0028A6  C0BE  F02D         	movff	floorf@F524,floorf@u
  4782  0028AA  C0BF  F02E         	movff	floorf@F524+1,floorf@u+1
  4783  0028AE  C0C0  F02F         	movff	floorf@F524+2,floorf@u+2
  4784  0028B2  C0C1  F030         	movff	floorf@F524+3,floorf@u+3
  4785  0028B6  C01D  F02D         	movff	floorf@x,floorf@u
  4786  0028BA  C01E  F02E         	movff	floorf@x+1,floorf@u+1
  4787  0028BE  C01F  F02F         	movff	floorf@x+2,floorf@u+2
  4788  0028C2  C020  F030         	movff	floorf@x+3,floorf@u+3
  4789  0028C6  0E81               	movlw	129
  4790  0028C8  6E21               	movwf	??_floorf^0,c
  4791  0028CA  0EFF               	movlw	255
  4792  0028CC  6E22               	movwf	(??_floorf+1)^0,c
  4793  0028CE  C02D  F023         	movff	floorf@u,??_floorf+2
  4794  0028D2  C02E  F024         	movff	floorf@u+1,??_floorf+3
  4795  0028D6  C02F  F025         	movff	floorf@u+2,??_floorf+4
  4796  0028DA  C030  F026         	movff	floorf@u+3,??_floorf+5
  4797  0028DE  0E18               	movlw	24
  4798  0028E0  EF77  F014         	goto	u3820
  4799  0028E4                     u3825:
  4800  0028E4  90D8               	bcf	status,0,c
  4801  0028E6  3226               	rrcf	(??_floorf+5)^0,f,c
  4802  0028E8  3225               	rrcf	(??_floorf+4)^0,f,c
  4803  0028EA  3224               	rrcf	(??_floorf+3)^0,f,c
  4804  0028EC  3223               	rrcf	(??_floorf+2)^0,f,c
  4805  0028EE                     u3820:
  4806  0028EE  2EE8               	decfsz	wreg,f,c
  4807  0028F0  EF72  F014         	goto	u3825
  4808  0028F4  5023               	movf	(??_floorf+2)^0,w,c
  4809  0028F6  2421               	addwf	??_floorf^0,w,c
  4810  0028F8  6E2B               	movwf	floorf@e^0,c
  4811  0028FA  0E00               	movlw	0
  4812  0028FC  2022               	addwfc	(??_floorf+1)^0,w,c
  4813  0028FE  6E2C               	movwf	(floorf@e+1)^0,c
  4814  002900  BE2C               	btfsc	(floorf@e+1)^0,7,c
  4815  002902  EF8C  F014         	goto	u3831
  4816  002906  502C               	movf	(floorf@e+1)^0,w,c
  4817  002908  E109               	bnz	u3830
  4818  00290A  0E17               	movlw	23
  4819  00290C  5C2B               	subwf	floorf@e^0,w,c
  4820  00290E  A0D8               	btfss	status,0,c
  4821  002910  EF8C  F014         	goto	u3831
  4822  002914  EF8E  F014         	goto	u3830
  4823  002918                     u3831:
  4824  002918  EF98  F014         	goto	l3414
  4825  00291C                     u3830:
  4826  00291C                     l3412:
  4827  00291C  C01D  F01D         	movff	floorf@x,?_floorf
  4828  002920  C01E  F01E         	movff	floorf@x+1,?_floorf+1
  4829  002924  C01F  F01F         	movff	floorf@x+2,?_floorf+2
  4830  002928  C020  F020         	movff	floorf@x+3,?_floorf+3
  4831  00292C  EF5B  F015         	goto	l1022
  4832  002930                     l3414:
  4833  002930  BE2C               	btfsc	(floorf@e+1)^0,7,c
  4834  002932  EF9D  F014         	goto	u3841
  4835  002936  EF9F  F014         	goto	u3840
  4836  00293A                     u3841:
  4837  00293A  EF0F  F015         	goto	l3424
  4838  00293E                     u3840:
  4839  00293E  C02B  F021         	movff	floorf@e,??_floorf
  4840  002942  0EFF               	movlw	255
  4841  002944  6E22               	movwf	(??_floorf+1)^0,c
  4842  002946  0EFF               	movlw	255
  4843  002948  6E23               	movwf	(??_floorf+2)^0,c
  4844  00294A  0E7F               	movlw	127
  4845  00294C  6E24               	movwf	(??_floorf+3)^0,c
  4846  00294E  0E00               	movlw	0
  4847  002950  6E25               	movwf	(??_floorf+4)^0,c
  4848  002952                     u3855:
  4849  002952  6621               	tstfsz	??_floorf^0,c
  4850  002954  EFAE  F014         	goto	u3856
  4851  002958  EFB6  F014         	goto	u3857
  4852  00295C                     u3856:
  4853  00295C  3425               	rlcf	(??_floorf+4)^0,w,c
  4854  00295E  3225               	rrcf	(??_floorf+4)^0,f,c
  4855  002960  3224               	rrcf	(??_floorf+3)^0,f,c
  4856  002962  3223               	rrcf	(??_floorf+2)^0,f,c
  4857  002964  3222               	rrcf	(??_floorf+1)^0,f,c
  4858  002966  2E21               	decfsz	??_floorf^0,f,c
  4859  002968  EFA9  F014         	goto	u3855
  4860  00296C                     u3857:
  4861  00296C  C022  F027         	movff	??_floorf+1,floorf@m
  4862  002970  C023  F028         	movff	??_floorf+2,floorf@m+1
  4863  002974  C024  F029         	movff	??_floorf+3,floorf@m+2
  4864  002978  C025  F02A         	movff	??_floorf+4,floorf@m+3
  4865  00297C  5027               	movf	floorf@m^0,w,c
  4866  00297E  142D               	andwf	floorf@u^0,w,c
  4867  002980  6E21               	movwf	??_floorf^0,c
  4868  002982  5028               	movf	(floorf@m+1)^0,w,c
  4869  002984  142E               	andwf	(floorf@u+1)^0,w,c
  4870  002986  6E22               	movwf	(??_floorf+1)^0,c
  4871  002988  5029               	movf	(floorf@m+2)^0,w,c
  4872  00298A  142F               	andwf	(floorf@u+2)^0,w,c
  4873  00298C  6E23               	movwf	(??_floorf+2)^0,c
  4874  00298E  502A               	movf	(floorf@m+3)^0,w,c
  4875  002990  1430               	andwf	(floorf@u+3)^0,w,c
  4876  002992  6E24               	movwf	(??_floorf+3)^0,c
  4877  002994  5021               	movf	??_floorf^0,w,c
  4878  002996  1022               	iorwf	(??_floorf+1)^0,w,c
  4879  002998  1023               	iorwf	(??_floorf+2)^0,w,c
  4880  00299A  1024               	iorwf	(??_floorf+3)^0,w,c
  4881  00299C  A4D8               	btfss	status,2,c
  4882  00299E  EFD3  F014         	goto	u3861
  4883  0029A2  EFD5  F014         	goto	u3860
  4884  0029A6                     u3861:
  4885  0029A6  EFD7  F014         	goto	l3420
  4886  0029AA                     u3860:
  4887  0029AA  EF8E  F014         	goto	l3412
  4888  0029AE                     l3420:
  4889  0029AE  C02D  F021         	movff	floorf@u,??_floorf
  4890  0029B2  C02E  F022         	movff	floorf@u+1,??_floorf+1
  4891  0029B6  C02F  F023         	movff	floorf@u+2,??_floorf+2
  4892  0029BA  C030  F024         	movff	floorf@u+3,??_floorf+3
  4893  0029BE  0E20               	movlw	32
  4894  0029C0  EFE7  F014         	goto	u3870
  4895  0029C4                     u3875:
  4896  0029C4  90D8               	bcf	status,0,c
  4897  0029C6  3224               	rrcf	(??_floorf+3)^0,f,c
  4898  0029C8  3223               	rrcf	(??_floorf+2)^0,f,c
  4899  0029CA  3222               	rrcf	(??_floorf+1)^0,f,c
  4900  0029CC  3221               	rrcf	??_floorf^0,f,c
  4901  0029CE                     u3870:
  4902  0029CE  2EE8               	decfsz	wreg,f,c
  4903  0029D0  EFE2  F014         	goto	u3875
  4904  0029D4  5021               	movf	??_floorf^0,w,c
  4905  0029D6  1022               	iorwf	(??_floorf+1)^0,w,c
  4906  0029D8  1023               	iorwf	(??_floorf+2)^0,w,c
  4907  0029DA  1024               	iorwf	(??_floorf+3)^0,w,c
  4908  0029DC  B4D8               	btfsc	status,2,c
  4909  0029DE  EFF3  F014         	goto	u3881
  4910  0029E2  EFF5  F014         	goto	u3880
  4911  0029E6                     u3881:
  4912  0029E6  EFFD  F014         	goto	l1025
  4913  0029EA                     u3880:
  4914  0029EA  5027               	movf	floorf@m^0,w,c
  4915  0029EC  262D               	addwf	floorf@u^0,f,c
  4916  0029EE  5028               	movf	(floorf@m+1)^0,w,c
  4917  0029F0  222E               	addwfc	(floorf@u+1)^0,f,c
  4918  0029F2  5029               	movf	(floorf@m+2)^0,w,c
  4919  0029F4  222F               	addwfc	(floorf@u+2)^0,f,c
  4920  0029F6  502A               	movf	(floorf@m+3)^0,w,c
  4921  0029F8  2230               	addwfc	(floorf@u+3)^0,f,c
  4922  0029FA                     l1025:
  4923  0029FA  1C27               	comf	floorf@m^0,w,c
  4924  0029FC  6E21               	movwf	??_floorf^0,c
  4925  0029FE  1C28               	comf	(floorf@m+1)^0,w,c
  4926  002A00  6E22               	movwf	(??_floorf+1)^0,c
  4927  002A02  1C29               	comf	(floorf@m+2)^0,w,c
  4928  002A04  6E23               	movwf	(??_floorf+2)^0,c
  4929  002A06  1C2A               	comf	(floorf@m+3)^0,w,c
  4930  002A08  6E24               	movwf	(??_floorf+3)^0,c
  4931  002A0A  5021               	movf	??_floorf^0,w,c
  4932  002A0C  162D               	andwf	floorf@u^0,f,c
  4933  002A0E  5022               	movf	(??_floorf+1)^0,w,c
  4934  002A10  162E               	andwf	(floorf@u+1)^0,f,c
  4935  002A12  5023               	movf	(??_floorf+2)^0,w,c
  4936  002A14  162F               	andwf	(floorf@u+2)^0,f,c
  4937  002A16  5024               	movf	(??_floorf+3)^0,w,c
  4938  002A18  1630               	andwf	(floorf@u+3)^0,f,c
  4939  002A1A  EF53  F015         	goto	l3432
  4940  002A1E                     l3424:
  4941  002A1E  C02D  F021         	movff	floorf@u,??_floorf
  4942  002A22  C02E  F022         	movff	floorf@u+1,??_floorf+1
  4943  002A26  C02F  F023         	movff	floorf@u+2,??_floorf+2
  4944  002A2A  C030  F024         	movff	floorf@u+3,??_floorf+3
  4945  002A2E  0E20               	movlw	32
  4946  002A30  EF1F  F015         	goto	u3890
  4947  002A34                     u3895:
  4948  002A34  90D8               	bcf	status,0,c
  4949  002A36  3224               	rrcf	(??_floorf+3)^0,f,c
  4950  002A38  3223               	rrcf	(??_floorf+2)^0,f,c
  4951  002A3A  3222               	rrcf	(??_floorf+1)^0,f,c
  4952  002A3C  3221               	rrcf	??_floorf^0,f,c
  4953  002A3E                     u3890:
  4954  002A3E  2EE8               	decfsz	wreg,f,c
  4955  002A40  EF1A  F015         	goto	u3895
  4956  002A44  5021               	movf	??_floorf^0,w,c
  4957  002A46  1022               	iorwf	(??_floorf+1)^0,w,c
  4958  002A48  1023               	iorwf	(??_floorf+2)^0,w,c
  4959  002A4A  1024               	iorwf	(??_floorf+3)^0,w,c
  4960  002A4C  A4D8               	btfss	status,2,c
  4961  002A4E  EF2B  F015         	goto	u3901
  4962  002A52  EF2D  F015         	goto	u3900
  4963  002A56                     u3901:
  4964  002A56  EF37  F015         	goto	l3428
  4965  002A5A                     u3900:
  4966  002A5A  0E00               	movlw	0
  4967  002A5C  6E2D               	movwf	floorf@u^0,c
  4968  002A5E  0E00               	movlw	0
  4969  002A60  6E2E               	movwf	(floorf@u+1)^0,c
  4970  002A62  0E00               	movlw	0
  4971  002A64  6E2F               	movwf	(floorf@u+2)^0,c
  4972  002A66  0E00               	movlw	0
  4973  002A68  6E30               	movwf	(floorf@u+3)^0,c
  4974  002A6A  EF53  F015         	goto	l3432
  4975  002A6E                     l3428:
  4976  002A6E  90D8               	bcf	status,0,c
  4977  002A70  342D               	rlcf	floorf@u^0,w,c
  4978  002A72  6E21               	movwf	??_floorf^0,c
  4979  002A74  342E               	rlcf	(floorf@u+1)^0,w,c
  4980  002A76  6E22               	movwf	(??_floorf+1)^0,c
  4981  002A78  342F               	rlcf	(floorf@u+2)^0,w,c
  4982  002A7A  6E23               	movwf	(??_floorf+2)^0,c
  4983  002A7C  3430               	rlcf	(floorf@u+3)^0,w,c
  4984  002A7E  6E24               	movwf	(??_floorf+3)^0,c
  4985  002A80  5021               	movf	??_floorf^0,w,c
  4986  002A82  1022               	iorwf	(??_floorf+1)^0,w,c
  4987  002A84  1023               	iorwf	(??_floorf+2)^0,w,c
  4988  002A86  1024               	iorwf	(??_floorf+3)^0,w,c
  4989  002A88  B4D8               	btfsc	status,2,c
  4990  002A8A  EF49  F015         	goto	u3911
  4991  002A8E  EF4B  F015         	goto	u3910
  4992  002A92                     u3911:
  4993  002A92  EF53  F015         	goto	l3432
  4994  002A96                     u3910:
  4995  002A96  0E00               	movlw	0
  4996  002A98  6E2D               	movwf	floorf@u^0,c
  4997  002A9A  0E00               	movlw	0
  4998  002A9C  6E2E               	movwf	(floorf@u+1)^0,c
  4999  002A9E  0E80               	movlw	128
  5000  002AA0  6E2F               	movwf	(floorf@u+2)^0,c
  5001  002AA2  0EBF               	movlw	191
  5002  002AA4  6E30               	movwf	(floorf@u+3)^0,c
  5003  002AA6                     l3432:
  5004  002AA6  C02D  F01D         	movff	floorf@u,?_floorf
  5005  002AAA  C02E  F01E         	movff	floorf@u+1,?_floorf+1
  5006  002AAE  C02F  F01F         	movff	floorf@u+2,?_floorf+2
  5007  002AB2  C030  F020         	movff	floorf@u+3,?_floorf+3
  5008  002AB6                     l1022:
  5009  002AB6  0012               	return		;funcret
  5010  002AB8                     __end_of_floorf:
  5011                           	callstack 0
  5012                           
  5013 ;; *************** function ___fpclassifyf *****************
  5014 ;; Defined at:
  5015 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  x               4    3[COMRAM] float 
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;  u               4   13[COMRAM] struct .
  5020 ;;  e               2   11[COMRAM] int 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  2    3[COMRAM] int 
  5023 ;; Registers used:
  5024 ;;		wreg, status,2, status,0
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5030 ;;      Params:         4       0       0       0       0       0       0       0       0
  5031 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5032 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5033 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5034 ;;Total ram usage:       14 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; Hardware stack levels required when called:    2
  5037 ;; This function calls:
  5038 ;;		Nothing
  5039 ;; This function is called by:
  5040 ;;		_efgtoa
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           	psect	text15
  5045  003006                     __ptext15:
  5046                           	callstack 0
  5047  003006                     ___fpclassifyf:
  5048                           	callstack 24
  5049  003006  C0C2  F00E         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5050  00300A  C0C3  F00F         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5051  00300E  C0C4  F010         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5052  003012  C0C5  F011         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5053  003016  C004  F00E         	movff	___fpclassifyf@x,___fpclassifyf@u
  5054  00301A  C005  F00F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5055  00301E  C006  F010         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5056  003022  C007  F011         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5057  003026  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  5058  00302A  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5059  00302E  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5060  003032  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5061  003036  0E18               	movlw	24
  5062  003038  EF23  F018         	goto	u3700
  5063  00303C                     u3705:
  5064  00303C  90D8               	bcf	status,0,c
  5065  00303E  320B               	rrcf	(??___fpclassifyf+3)^0,f,c
  5066  003040  320A               	rrcf	(??___fpclassifyf+2)^0,f,c
  5067  003042  3209               	rrcf	(??___fpclassifyf+1)^0,f,c
  5068  003044  3208               	rrcf	??___fpclassifyf^0,f,c
  5069  003046                     u3700:
  5070  003046  2EE8               	decfsz	wreg,f,c
  5071  003048  EF1E  F018         	goto	u3705
  5072  00304C  5008               	movf	??___fpclassifyf^0,w,c
  5073  00304E  6E0C               	movwf	___fpclassifyf@e^0,c
  5074  003050  6A0D               	clrf	(___fpclassifyf@e+1)^0,c
  5075  003052  500C               	movf	___fpclassifyf@e^0,w,c
  5076  003054  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5077  003056  A4D8               	btfss	status,2,c
  5078  003058  EF30  F018         	goto	u3711
  5079  00305C  EF32  F018         	goto	u3710
  5080  003060                     u3711:
  5081  003060  EF52  F018         	goto	l3384
  5082  003064                     u3710:
  5083  003064  90D8               	bcf	status,0,c
  5084  003066  340E               	rlcf	___fpclassifyf@u^0,w,c
  5085  003068  6E08               	movwf	??___fpclassifyf^0,c
  5086  00306A  340F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5087  00306C  6E09               	movwf	(??___fpclassifyf+1)^0,c
  5088  00306E  3410               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5089  003070  6E0A               	movwf	(??___fpclassifyf+2)^0,c
  5090  003072  3411               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5091  003074  6E0B               	movwf	(??___fpclassifyf+3)^0,c
  5092  003076  5008               	movf	??___fpclassifyf^0,w,c
  5093  003078  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  5094  00307A  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  5095  00307C  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  5096  00307E  A4D8               	btfss	status,2,c
  5097  003080  EF44  F018         	goto	u3721
  5098  003084  EF46  F018         	goto	u3720
  5099  003088                     u3721:
  5100  003088  EF4C  F018         	goto	l3380
  5101  00308C                     u3720:
  5102  00308C  0E00               	movlw	0
  5103  00308E  6E05               	movwf	(?___fpclassifyf+1)^0,c
  5104  003090  0E02               	movlw	2
  5105  003092  6E04               	movwf	?___fpclassifyf^0,c
  5106  003094  EF81  F018         	goto	l984
  5107  003098                     l3380:
  5108  003098  0E00               	movlw	0
  5109  00309A  6E05               	movwf	(?___fpclassifyf+1)^0,c
  5110  00309C  0E03               	movlw	3
  5111  00309E  6E04               	movwf	?___fpclassifyf^0,c
  5112  0030A0  EF81  F018         	goto	l984
  5113  0030A4                     l3384:
  5114  0030A4  280C               	incf	___fpclassifyf@e^0,w,c
  5115  0030A6  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5116  0030A8  A4D8               	btfss	status,2,c
  5117  0030AA  EF59  F018         	goto	u3731
  5118  0030AE  EF5B  F018         	goto	u3730
  5119  0030B2                     u3731:
  5120  0030B2  EF7D  F018         	goto	l3390
  5121  0030B6                     u3730:
  5122  0030B6  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  5123  0030BA  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5124  0030BE  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5125  0030C2  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5126  0030C6  0E09               	movlw	9
  5127  0030C8                     u3745:
  5128  0030C8  90D8               	bcf	status,0,c
  5129  0030CA  3608               	rlcf	??___fpclassifyf^0,f,c
  5130  0030CC  3609               	rlcf	(??___fpclassifyf+1)^0,f,c
  5131  0030CE  360A               	rlcf	(??___fpclassifyf+2)^0,f,c
  5132  0030D0  360B               	rlcf	(??___fpclassifyf+3)^0,f,c
  5133  0030D2  2EE8               	decfsz	wreg,f,c
  5134  0030D4  EF64  F018         	goto	u3745
  5135  0030D8  5008               	movf	??___fpclassifyf^0,w,c
  5136  0030DA  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  5137  0030DC  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  5138  0030DE  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  5139  0030E0  B4D8               	btfsc	status,2,c
  5140  0030E2  EF75  F018         	goto	u3751
  5141  0030E6  EF78  F018         	goto	u3750
  5142  0030EA                     u3751:
  5143  0030EA  0E01               	movlw	1
  5144  0030EC  EF79  F018         	goto	u3760
  5145  0030F0                     u3750:
  5146  0030F0  0E00               	movlw	0
  5147  0030F2                     u3760:
  5148  0030F2  6E04               	movwf	?___fpclassifyf^0,c
  5149  0030F4  6A05               	clrf	(?___fpclassifyf+1)^0,c
  5150  0030F6  EF81  F018         	goto	l984
  5151  0030FA                     l3390:
  5152  0030FA  0E00               	movlw	0
  5153  0030FC  6E05               	movwf	(?___fpclassifyf+1)^0,c
  5154  0030FE  0E04               	movlw	4
  5155  003100  6E04               	movwf	?___fpclassifyf^0,c
  5156  003102                     l984:
  5157  003102  0012               	return		;funcret
  5158  003104                     __end_of___fpclassifyf:
  5159                           	callstack 0
  5160                           
  5161 ;; *************** function ___fltol *****************
  5162 ;; Defined at:
  5163 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  f1              4    3[COMRAM] int 
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;  exp1            1   12[COMRAM] unsigned char 
  5168 ;;  sign1           1   11[COMRAM] unsigned char 
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  4    3[COMRAM] long 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5178 ;;      Params:         4       0       0       0       0       0       0       0       0
  5179 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5180 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5181 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5182 ;;Total ram usage:       10 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; Hardware stack levels required when called:    2
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_efgtoa
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           	psect	text16
  5193  002DFC                     __ptext16:
  5194                           	callstack 0
  5195  002DFC                     ___fltol:
  5196                           	callstack 24
  5197  002DFC  3406               	rlcf	(___fltol@f1+2)^0,w,c
  5198  002DFE  3407               	rlcf	(___fltol@f1+3)^0,w,c
  5199  002E00  6E0D               	movwf	___fltol@exp1^0,c
  5200  002E02  500D               	movf	___fltol@exp1^0,w,c
  5201  002E04  A4D8               	btfss	status,2,c
  5202  002E06  EF07  F017         	goto	u3591
  5203  002E0A  EF09  F017         	goto	u3590
  5204  002E0E                     u3591:
  5205  002E0E  EF13  F017         	goto	l3312
  5206  002E12                     u3590:
  5207  002E12                     l3308:
  5208  002E12  0E00               	movlw	0
  5209  002E14  6E04               	movwf	?___fltol^0,c
  5210  002E16  0E00               	movlw	0
  5211  002E18  6E05               	movwf	(?___fltol+1)^0,c
  5212  002E1A  0E00               	movlw	0
  5213  002E1C  6E06               	movwf	(?___fltol+2)^0,c
  5214  002E1E  0E00               	movlw	0
  5215  002E20  6E07               	movwf	(?___fltol+3)^0,c
  5216  002E22  EF80  F017         	goto	l413
  5217  002E26                     l3312:
  5218  002E26  C004  F008         	movff	___fltol@f1,??___fltol
  5219  002E2A  C005  F009         	movff	___fltol@f1+1,??___fltol+1
  5220  002E2E  C006  F00A         	movff	___fltol@f1+2,??___fltol+2
  5221  002E32  C007  F00B         	movff	___fltol@f1+3,??___fltol+3
  5222  002E36  0E20               	movlw	32
  5223  002E38  EF23  F017         	goto	u3600
  5224  002E3C                     u3605:
  5225  002E3C  90D8               	bcf	status,0,c
  5226  002E3E  320B               	rrcf	(??___fltol+3)^0,f,c
  5227  002E40  320A               	rrcf	(??___fltol+2)^0,f,c
  5228  002E42  3209               	rrcf	(??___fltol+1)^0,f,c
  5229  002E44  3208               	rrcf	??___fltol^0,f,c
  5230  002E46                     u3600:
  5231  002E46  2EE8               	decfsz	wreg,f,c
  5232  002E48  EF1E  F017         	goto	u3605
  5233  002E4C  5008               	movf	??___fltol^0,w,c
  5234  002E4E  6E0C               	movwf	___fltol@sign1^0,c
  5235  002E50  8E06               	bsf	(___fltol@f1+2)^0,7,c
  5236  002E52  0EFF               	movlw	255
  5237  002E54  1604               	andwf	___fltol@f1^0,f,c
  5238  002E56  0EFF               	movlw	255
  5239  002E58  1605               	andwf	(___fltol@f1+1)^0,f,c
  5240  002E5A  0EFF               	movlw	255
  5241  002E5C  1606               	andwf	(___fltol@f1+2)^0,f,c
  5242  002E5E  0E00               	movlw	0
  5243  002E60  1607               	andwf	(___fltol@f1+3)^0,f,c
  5244  002E62  0E96               	movlw	150
  5245  002E64  5E0D               	subwf	___fltol@exp1^0,f,c
  5246  002E66  BE0D               	btfsc	___fltol@exp1^0,7,c
  5247  002E68  EF3A  F017         	goto	u3610
  5248  002E6C  EF38  F017         	goto	u3611
  5249  002E70                     u3611:
  5250  002E70  EF50  F017         	goto	l3332
  5251  002E74                     u3610:
  5252  002E74  500D               	movf	___fltol@exp1^0,w,c
  5253  002E76  0A80               	xorlw	128
  5254  002E78  0F97               	addlw	151
  5255  002E7A  B0D8               	btfsc	status,0,c
  5256  002E7C  EF42  F017         	goto	u3621
  5257  002E80  EF44  F017         	goto	u3620
  5258  002E84                     u3621:
  5259  002E84  EF46  F017         	goto	l3328
  5260  002E88                     u3620:
  5261  002E88  EF09  F017         	goto	l3308
  5262  002E8C                     l3328:
  5263  002E8C  90D8               	bcf	status,0,c
  5264  002E8E  3207               	rrcf	(___fltol@f1+3)^0,f,c
  5265  002E90  3206               	rrcf	(___fltol@f1+2)^0,f,c
  5266  002E92  3205               	rrcf	(___fltol@f1+1)^0,f,c
  5267  002E94  3204               	rrcf	___fltol@f1^0,f,c
  5268  002E96  3E0D               	incfsz	___fltol@exp1^0,f,c
  5269  002E98  EF46  F017         	goto	l3328
  5270  002E9C  EF68  F017         	goto	l3342
  5271  002EA0                     l3332:
  5272  002EA0  0E1F               	movlw	31
  5273  002EA2  640D               	cpfsgt	___fltol@exp1^0,c
  5274  002EA4  EF56  F017         	goto	u3631
  5275  002EA8  EF58  F017         	goto	u3630
  5276  002EAC                     u3631:
  5277  002EAC  EF60  F017         	goto	l3340
  5278  002EB0                     u3630:
  5279  002EB0  EF09  F017         	goto	l3308
  5280  002EB4                     l3338:
  5281  002EB4  90D8               	bcf	status,0,c
  5282  002EB6  3604               	rlcf	___fltol@f1^0,f,c
  5283  002EB8  3605               	rlcf	(___fltol@f1+1)^0,f,c
  5284  002EBA  3606               	rlcf	(___fltol@f1+2)^0,f,c
  5285  002EBC  3607               	rlcf	(___fltol@f1+3)^0,f,c
  5286  002EBE  060D               	decf	___fltol@exp1^0,f,c
  5287  002EC0                     l3340:
  5288  002EC0  500D               	movf	___fltol@exp1^0,w,c
  5289  002EC2  A4D8               	btfss	status,2,c
  5290  002EC4  EF66  F017         	goto	u3641
  5291  002EC8  EF68  F017         	goto	u3640
  5292  002ECC                     u3641:
  5293  002ECC  EF5A  F017         	goto	l3338
  5294  002ED0                     u3640:
  5295  002ED0                     l3342:
  5296  002ED0  500C               	movf	___fltol@sign1^0,w,c
  5297  002ED2  B4D8               	btfsc	status,2,c
  5298  002ED4  EF6E  F017         	goto	u3651
  5299  002ED8  EF70  F017         	goto	u3650
  5300  002EDC                     u3651:
  5301  002EDC  EF78  F017         	goto	l3346
  5302  002EE0                     u3650:
  5303  002EE0  1E07               	comf	(___fltol@f1+3)^0,f,c
  5304  002EE2  1E06               	comf	(___fltol@f1+2)^0,f,c
  5305  002EE4  1E05               	comf	(___fltol@f1+1)^0,f,c
  5306  002EE6  6C04               	negf	___fltol@f1^0,c
  5307  002EE8  0E00               	movlw	0
  5308  002EEA  2205               	addwfc	(___fltol@f1+1)^0,f,c
  5309  002EEC  2206               	addwfc	(___fltol@f1+2)^0,f,c
  5310  002EEE  2207               	addwfc	(___fltol@f1+3)^0,f,c
  5311  002EF0                     l3346:
  5312  002EF0  C004  F004         	movff	___fltol@f1,?___fltol
  5313  002EF4  C005  F005         	movff	___fltol@f1+1,?___fltol+1
  5314  002EF8  C006  F006         	movff	___fltol@f1+2,?___fltol+2
  5315  002EFC  C007  F007         	movff	___fltol@f1+3,?___fltol+3
  5316  002F00                     l413:
  5317  002F00  0012               	return		;funcret
  5318  002F02                     __end_of___fltol:
  5319                           	callstack 0
  5320                           
  5321 ;; *************** function ___flsub *****************
  5322 ;; Defined at:
  5323 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  b               4   42[COMRAM] long 
  5326 ;;  a               4   46[COMRAM] long 
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;		None
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  4   42[COMRAM] long 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2, status,0, cstack
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5338 ;;      Params:         8       0       0       0       0       0       0       0       0
  5339 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5340 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5341 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5342 ;;Total ram usage:        8 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    3
  5345 ;; This function calls:
  5346 ;;		___fladd
  5347 ;; This function is called by:
  5348 ;;		_efgtoa
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text17
  5353  003880                     __ptext17:
  5354                           	callstack 0
  5355  003880                     ___flsub:
  5356                           	callstack 23
  5357  003880  0E00               	movlw	0
  5358  003882  1A2F               	xorwf	___flsub@a^0,f,c
  5359  003884  0E00               	movlw	0
  5360  003886  1A30               	xorwf	(___flsub@a+1)^0,f,c
  5361  003888  0E00               	movlw	0
  5362  00388A  1A31               	xorwf	(___flsub@a+2)^0,f,c
  5363  00388C  0E80               	movlw	128
  5364  00388E  1A32               	xorwf	(___flsub@a+3)^0,f,c
  5365  003890  C02B  F004         	movff	___flsub@b,___fladd@b
  5366  003894  C02C  F005         	movff	___flsub@b+1,___fladd@b+1
  5367  003898  C02D  F006         	movff	___flsub@b+2,___fladd@b+2
  5368  00389C  C02E  F007         	movff	___flsub@b+3,___fladd@b+3
  5369  0038A0  C02F  F008         	movff	___flsub@a,___fladd@a
  5370  0038A4  C030  F009         	movff	___flsub@a+1,___fladd@a+1
  5371  0038A8  C031  F00A         	movff	___flsub@a+2,___fladd@a+2
  5372  0038AC  C032  F00B         	movff	___flsub@a+3,___fladd@a+3
  5373  0038B0  EC7E  F00C         	call	___fladd	;wreg free
  5374  0038B4  C004  F02B         	movff	?___fladd,?___flsub
  5375  0038B8  C005  F02C         	movff	?___fladd+1,?___flsub+1
  5376  0038BC  C006  F02D         	movff	?___fladd+2,?___flsub+2
  5377  0038C0  C007  F02E         	movff	?___fladd+3,?___flsub+3
  5378  0038C4  0012               	return		;funcret
  5379  0038C6                     __end_of___flsub:
  5380                           	callstack 0
  5381                           
  5382 ;; *************** function ___fladd *****************
  5383 ;; Defined at:
  5384 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;  b               4    3[COMRAM] long 
  5387 ;;  a               4    7[COMRAM] long 
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;  grs             1   18[COMRAM] unsigned char 
  5390 ;;  bexp            1   17[COMRAM] unsigned char 
  5391 ;;  aexp            1   16[COMRAM] unsigned char 
  5392 ;;  signs           1   15[COMRAM] unsigned char 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  4    3[COMRAM] unsigned char 
  5395 ;; Registers used:
  5396 ;;		wreg, status,2, status,0
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5402 ;;      Params:         8       0       0       0       0       0       0       0       0
  5403 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5404 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5405 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5406 ;;Total ram usage:       16 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:    2
  5409 ;; This function calls:
  5410 ;;		Nothing
  5411 ;; This function is called by:
  5412 ;;		___flsub
  5413 ;;		_efgtoa
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text18
  5418  0018FC                     __ptext18:
  5419                           	callstack 0
  5420  0018FC                     ___fladd:
  5421                           	callstack 23
  5422  0018FC  5007               	movf	(___fladd@b+3)^0,w,c
  5423  0018FE  0B80               	andlw	128
  5424  001900  6E10               	movwf	___fladd@signs^0,c
  5425  001902  5007               	movf	(___fladd@b+3)^0,w,c
  5426  001904  2407               	addwf	(___fladd@b+3)^0,w,c
  5427  001906  6E12               	movwf	___fladd@bexp^0,c
  5428  001908  AE06               	btfss	(___fladd@b+2)^0,7,c
  5429  00190A  EF89  F00C         	goto	u2531
  5430  00190E  EF8B  F00C         	goto	u2530
  5431  001912                     u2531:
  5432  001912  EF8C  F00C         	goto	l2682
  5433  001916                     u2530:
  5434  001916  8012               	bsf	___fladd@bexp^0,0,c
  5435  001918                     l2682:
  5436  001918  5012               	movf	___fladd@bexp^0,w,c
  5437  00191A  B4D8               	btfsc	status,2,c
  5438  00191C  EF92  F00C         	goto	u2541
  5439  001920  EF94  F00C         	goto	u2540
  5440  001924                     u2541:
  5441  001924  EFA9  F00C         	goto	l2692
  5442  001928                     u2540:
  5443  001928  2812               	incf	___fladd@bexp^0,w,c
  5444  00192A  A4D8               	btfss	status,2,c
  5445  00192C  EF9A  F00C         	goto	u2551
  5446  001930  EF9C  F00C         	goto	u2550
  5447  001934                     u2551:
  5448  001934  EFA4  F00C         	goto	l2688
  5449  001938                     u2550:
  5450  001938  0E00               	movlw	0
  5451  00193A  6E04               	movwf	___fladd@b^0,c
  5452  00193C  0E00               	movlw	0
  5453  00193E  6E05               	movwf	(___fladd@b+1)^0,c
  5454  001940  0E00               	movlw	0
  5455  001942  6E06               	movwf	(___fladd@b+2)^0,c
  5456  001944  0E00               	movlw	0
  5457  001946  6E07               	movwf	(___fladd@b+3)^0,c
  5458  001948                     l2688:
  5459  001948  8E06               	bsf	(___fladd@b+2)^0,7,c
  5460  00194A  0E00               	movlw	0
  5461  00194C  6E07               	movwf	(___fladd@b+3)^0,c
  5462  00194E  EFB1  F00C         	goto	l2694
  5463  001952                     l2692:
  5464  001952  0E00               	movlw	0
  5465  001954  6E04               	movwf	___fladd@b^0,c
  5466  001956  0E00               	movlw	0
  5467  001958  6E05               	movwf	(___fladd@b+1)^0,c
  5468  00195A  0E00               	movlw	0
  5469  00195C  6E06               	movwf	(___fladd@b+2)^0,c
  5470  00195E  0E00               	movlw	0
  5471  001960  6E07               	movwf	(___fladd@b+3)^0,c
  5472  001962                     l2694:
  5473  001962  500B               	movf	(___fladd@a+3)^0,w,c
  5474  001964  0B80               	andlw	128
  5475  001966  6E11               	movwf	___fladd@aexp^0,c
  5476  001968  5010               	movf	___fladd@signs^0,w,c
  5477  00196A  1811               	xorwf	___fladd@aexp^0,w,c
  5478  00196C  B4D8               	btfsc	status,2,c
  5479  00196E  EFBB  F00C         	goto	u2561
  5480  001972  EFBD  F00C         	goto	u2560
  5481  001976                     u2561:
  5482  001976  EFBE  F00C         	goto	l2700
  5483  00197A                     u2560:
  5484  00197A  8C10               	bsf	___fladd@signs^0,6,c
  5485  00197C                     l2700:
  5486  00197C  500B               	movf	(___fladd@a+3)^0,w,c
  5487  00197E  240B               	addwf	(___fladd@a+3)^0,w,c
  5488  001980  6E11               	movwf	___fladd@aexp^0,c
  5489  001982  AE0A               	btfss	(___fladd@a+2)^0,7,c
  5490  001984  EFC6  F00C         	goto	u2571
  5491  001988  EFC8  F00C         	goto	u2570
  5492  00198C                     u2571:
  5493  00198C  EFC9  F00C         	goto	l2706
  5494  001990                     u2570:
  5495  001990  8011               	bsf	___fladd@aexp^0,0,c
  5496  001992                     l2706:
  5497  001992  5011               	movf	___fladd@aexp^0,w,c
  5498  001994  B4D8               	btfsc	status,2,c
  5499  001996  EFCF  F00C         	goto	u2581
  5500  00199A  EFD1  F00C         	goto	u2580
  5501  00199E                     u2581:
  5502  00199E  EFE6  F00C         	goto	l2716
  5503  0019A2                     u2580:
  5504  0019A2  2811               	incf	___fladd@aexp^0,w,c
  5505  0019A4  A4D8               	btfss	status,2,c
  5506  0019A6  EFD7  F00C         	goto	u2591
  5507  0019AA  EFD9  F00C         	goto	u2590
  5508  0019AE                     u2591:
  5509  0019AE  EFE1  F00C         	goto	l2712
  5510  0019B2                     u2590:
  5511  0019B2  0E00               	movlw	0
  5512  0019B4  6E08               	movwf	___fladd@a^0,c
  5513  0019B6  0E00               	movlw	0
  5514  0019B8  6E09               	movwf	(___fladd@a+1)^0,c
  5515  0019BA  0E00               	movlw	0
  5516  0019BC  6E0A               	movwf	(___fladd@a+2)^0,c
  5517  0019BE  0E00               	movlw	0
  5518  0019C0  6E0B               	movwf	(___fladd@a+3)^0,c
  5519  0019C2                     l2712:
  5520  0019C2  8E0A               	bsf	(___fladd@a+2)^0,7,c
  5521  0019C4  0E00               	movlw	0
  5522  0019C6  6E0B               	movwf	(___fladd@a+3)^0,c
  5523  0019C8  EFEE  F00C         	goto	l2718
  5524  0019CC                     l2716:
  5525  0019CC  0E00               	movlw	0
  5526  0019CE  6E08               	movwf	___fladd@a^0,c
  5527  0019D0  0E00               	movlw	0
  5528  0019D2  6E09               	movwf	(___fladd@a+1)^0,c
  5529  0019D4  0E00               	movlw	0
  5530  0019D6  6E0A               	movwf	(___fladd@a+2)^0,c
  5531  0019D8  0E00               	movlw	0
  5532  0019DA  6E0B               	movwf	(___fladd@a+3)^0,c
  5533  0019DC                     l2718:
  5534  0019DC  5012               	movf	___fladd@bexp^0,w,c
  5535  0019DE  5C11               	subwf	___fladd@aexp^0,w,c
  5536  0019E0  B0D8               	btfsc	status,0,c
  5537  0019E2  EFF5  F00C         	goto	u2601
  5538  0019E6  EFF7  F00C         	goto	u2600
  5539  0019EA                     u2601:
  5540  0019EA  EF1E  F00D         	goto	l2754
  5541  0019EE                     u2600:
  5542  0019EE  AC10               	btfss	___fladd@signs^0,6,c
  5543  0019F0  EFFC  F00C         	goto	u2611
  5544  0019F4  EFFE  F00C         	goto	u2610
  5545  0019F8                     u2611:
  5546  0019F8  EF00  F00D         	goto	l2724
  5547  0019FC                     u2610:
  5548  0019FC  0E80               	movlw	128
  5549  0019FE  1A10               	xorwf	___fladd@signs^0,f,c
  5550  001A00                     l2724:
  5551  001A00  C012  F013         	movff	___fladd@bexp,___fladd@grs
  5552  001A04  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  5553  001A08  C013  F011         	movff	___fladd@grs,___fladd@aexp
  5554  001A0C  C004  F013         	movff	___fladd@b,___fladd@grs
  5555  001A10  C008  F004         	movff	___fladd@a,___fladd@b
  5556  001A14  C013  F008         	movff	___fladd@grs,___fladd@a
  5557  001A18  C005  F013         	movff	___fladd@b+1,___fladd@grs
  5558  001A1C  C009  F005         	movff	___fladd@a+1,___fladd@b+1
  5559  001A20  C013  F009         	movff	___fladd@grs,___fladd@a+1
  5560  001A24  C006  F013         	movff	___fladd@b+2,___fladd@grs
  5561  001A28  C00A  F006         	movff	___fladd@a+2,___fladd@b+2
  5562  001A2C  C013  F00A         	movff	___fladd@grs,___fladd@a+2
  5563  001A30  C007  F013         	movff	___fladd@b+3,___fladd@grs
  5564  001A34  C00B  F007         	movff	___fladd@a+3,___fladd@b+3
  5565  001A38  C013  F00B         	movff	___fladd@grs,___fladd@a+3
  5566  001A3C                     l2754:
  5567  001A3C  0E00               	movlw	0
  5568  001A3E  6E13               	movwf	___fladd@grs^0,c
  5569  001A40  5012               	movf	___fladd@bexp^0,w,c
  5570  001A42  C011  F00C         	movff	___fladd@aexp,??___fladd
  5571  001A46  6A0D               	clrf	(??___fladd+1)^0,c
  5572  001A48  5E0C               	subwf	??___fladd^0,f,c
  5573  001A4A  0E00               	movlw	0
  5574  001A4C  5A0D               	subwfb	(??___fladd+1)^0,f,c
  5575  001A4E  BE0D               	btfsc	(??___fladd+1)^0,7,c
  5576  001A50  EF33  F00D         	goto	u2621
  5577  001A54  500D               	movf	(??___fladd+1)^0,w,c
  5578  001A56  E109               	bnz	u2620
  5579  001A58  0E1A               	movlw	26
  5580  001A5A  5C0C               	subwf	??___fladd^0,w,c
  5581  001A5C  A0D8               	btfss	status,0,c
  5582  001A5E  EF33  F00D         	goto	u2621
  5583  001A62  EF35  F00D         	goto	u2620
  5584  001A66                     u2621:
  5585  001A66  EF6C  F00D         	goto	l645
  5586  001A6A                     u2620:
  5587  001A6A  5004               	movf	___fladd@b^0,w,c
  5588  001A6C  1005               	iorwf	(___fladd@b+1)^0,w,c
  5589  001A6E  1006               	iorwf	(___fladd@b+2)^0,w,c
  5590  001A70  1007               	iorwf	(___fladd@b+3)^0,w,c
  5591  001A72  A4D8               	btfss	status,2,c
  5592  001A74  EF3E  F00D         	goto	u2631
  5593  001A78  EF41  F00D         	goto	u2630
  5594  001A7C                     u2631:
  5595  001A7C  0E01               	movlw	1
  5596  001A7E  EF42  F00D         	goto	u2640
  5597  001A82                     u2630:
  5598  001A82  0E00               	movlw	0
  5599  001A84                     u2640:
  5600  001A84  6E13               	movwf	___fladd@grs^0,c
  5601  001A86  0E00               	movlw	0
  5602  001A88  6E04               	movwf	___fladd@b^0,c
  5603  001A8A  0E00               	movlw	0
  5604  001A8C  6E05               	movwf	(___fladd@b+1)^0,c
  5605  001A8E  0E00               	movlw	0
  5606  001A90  6E06               	movwf	(___fladd@b+2)^0,c
  5607  001A92  0E00               	movlw	0
  5608  001A94  6E07               	movwf	(___fladd@b+3)^0,c
  5609  001A96  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  5610  001A9A  EF75  F00D         	goto	l644
  5611  001A9E                     l646:
  5612  001A9E  A013               	btfss	___fladd@grs^0,0,c
  5613  001AA0  EF54  F00D         	goto	u2651
  5614  001AA4  EF56  F00D         	goto	u2650
  5615  001AA8                     u2651:
  5616  001AA8  EF5C  F00D         	goto	l2766
  5617  001AAC                     u2650:
  5618  001AAC  90D8               	bcf	status,0,c
  5619  001AAE  3013               	rrcf	___fladd@grs^0,w,c
  5620  001AB0  0901               	iorlw	1
  5621  001AB2  6E13               	movwf	___fladd@grs^0,c
  5622  001AB4  EF5E  F00D         	goto	l2768
  5623  001AB8                     l2766:
  5624  001AB8  90D8               	bcf	status,0,c
  5625  001ABA  3213               	rrcf	___fladd@grs^0,f,c
  5626  001ABC                     l2768:
  5627  001ABC  A004               	btfss	___fladd@b^0,0,c
  5628  001ABE  EF63  F00D         	goto	u2661
  5629  001AC2  EF65  F00D         	goto	u2660
  5630  001AC6                     u2661:
  5631  001AC6  EF66  F00D         	goto	l2772
  5632  001ACA                     u2660:
  5633  001ACA  8E13               	bsf	___fladd@grs^0,7,c
  5634  001ACC                     l2772:
  5635  001ACC  3407               	rlcf	(___fladd@b+3)^0,w,c
  5636  001ACE  3207               	rrcf	(___fladd@b+3)^0,f,c
  5637  001AD0  3206               	rrcf	(___fladd@b+2)^0,f,c
  5638  001AD2  3205               	rrcf	(___fladd@b+1)^0,f,c
  5639  001AD4  3204               	rrcf	___fladd@b^0,f,c
  5640  001AD6  2A12               	incf	___fladd@bexp^0,f,c
  5641  001AD8                     l645:
  5642  001AD8  5011               	movf	___fladd@aexp^0,w,c
  5643  001ADA  5C12               	subwf	___fladd@bexp^0,w,c
  5644  001ADC  A0D8               	btfss	status,0,c
  5645  001ADE  EF73  F00D         	goto	u2671
  5646  001AE2  EF75  F00D         	goto	u2670
  5647  001AE6                     u2671:
  5648  001AE6  EF4F  F00D         	goto	l646
  5649  001AEA                     u2670:
  5650  001AEA                     l644:
  5651  001AEA  BC10               	btfsc	___fladd@signs^0,6,c
  5652  001AEC  EF7A  F00D         	goto	u2681
  5653  001AF0  EF7C  F00D         	goto	u2680
  5654  001AF4                     u2681:
  5655  001AF4  EFBC  F00D         	goto	l2800
  5656  001AF8                     u2680:
  5657  001AF8  5012               	movf	___fladd@bexp^0,w,c
  5658  001AFA  A4D8               	btfss	status,2,c
  5659  001AFC  EF82  F00D         	goto	u2691
  5660  001B00  EF84  F00D         	goto	u2690
  5661  001B04                     u2691:
  5662  001B04  EF8E  F00D         	goto	l2782
  5663  001B08                     u2690:
  5664  001B08  0E00               	movlw	0
  5665  001B0A  6E04               	movwf	?___fladd^0,c
  5666  001B0C  0E00               	movlw	0
  5667  001B0E  6E05               	movwf	(?___fladd+1)^0,c
  5668  001B10  0E00               	movlw	0
  5669  001B12  6E06               	movwf	(?___fladd+2)^0,c
  5670  001B14  0E00               	movlw	0
  5671  001B16  6E07               	movwf	(?___fladd+3)^0,c
  5672  001B18  EFDD  F00E         	goto	l653
  5673  001B1C                     l2782:
  5674  001B1C  5008               	movf	___fladd@a^0,w,c
  5675  001B1E  2604               	addwf	___fladd@b^0,f,c
  5676  001B20  5009               	movf	(___fladd@a+1)^0,w,c
  5677  001B22  2205               	addwfc	(___fladd@b+1)^0,f,c
  5678  001B24  500A               	movf	(___fladd@a+2)^0,w,c
  5679  001B26  2206               	addwfc	(___fladd@b+2)^0,f,c
  5680  001B28  500B               	movf	(___fladd@a+3)^0,w,c
  5681  001B2A  2207               	addwfc	(___fladd@b+3)^0,f,c
  5682  001B2C  A007               	btfss	(___fladd@b+3)^0,0,c
  5683  001B2E  EF9B  F00D         	goto	u2701
  5684  001B32  EF9D  F00D         	goto	u2700
  5685  001B36                     u2701:
  5686  001B36  EF49  F00E         	goto	l2836
  5687  001B3A                     u2700:
  5688  001B3A  A013               	btfss	___fladd@grs^0,0,c
  5689  001B3C  EFA2  F00D         	goto	u2711
  5690  001B40  EFA4  F00D         	goto	u2710
  5691  001B44                     u2711:
  5692  001B44  EFAA  F00D         	goto	l2790
  5693  001B48                     u2710:
  5694  001B48  90D8               	bcf	status,0,c
  5695  001B4A  3013               	rrcf	___fladd@grs^0,w,c
  5696  001B4C  0901               	iorlw	1
  5697  001B4E  6E13               	movwf	___fladd@grs^0,c
  5698  001B50  EFAC  F00D         	goto	l2792
  5699  001B54                     l2790:
  5700  001B54  90D8               	bcf	status,0,c
  5701  001B56  3213               	rrcf	___fladd@grs^0,f,c
  5702  001B58                     l2792:
  5703  001B58  A004               	btfss	___fladd@b^0,0,c
  5704  001B5A  EFB1  F00D         	goto	u2721
  5705  001B5E  EFB3  F00D         	goto	u2720
  5706  001B62                     u2721:
  5707  001B62  EFB4  F00D         	goto	l2796
  5708  001B66                     u2720:
  5709  001B66  8E13               	bsf	___fladd@grs^0,7,c
  5710  001B68                     l2796:
  5711  001B68  3407               	rlcf	(___fladd@b+3)^0,w,c
  5712  001B6A  3207               	rrcf	(___fladd@b+3)^0,f,c
  5713  001B6C  3206               	rrcf	(___fladd@b+2)^0,f,c
  5714  001B6E  3205               	rrcf	(___fladd@b+1)^0,f,c
  5715  001B70  3204               	rrcf	___fladd@b^0,f,c
  5716  001B72  2A12               	incf	___fladd@bexp^0,f,c
  5717  001B74  EF49  F00E         	goto	l2836
  5718  001B78                     l2800:
  5719  001B78  5008               	movf	___fladd@a^0,w,c
  5720  001B7A  5C04               	subwf	___fladd@b^0,w,c
  5721  001B7C  5009               	movf	(___fladd@a+1)^0,w,c
  5722  001B7E  5805               	subwfb	(___fladd@b+1)^0,w,c
  5723  001B80  500A               	movf	(___fladd@a+2)^0,w,c
  5724  001B82  5806               	subwfb	(___fladd@b+2)^0,w,c
  5725  001B84  5007               	movf	(___fladd@b+3)^0,w,c
  5726  001B86  0A80               	xorlw	128
  5727  001B88  6E0C               	movwf	??___fladd^0,c
  5728  001B8A  500B               	movf	(___fladd@a+3)^0,w,c
  5729  001B8C  0A80               	xorlw	128
  5730  001B8E  580C               	subwfb	??___fladd^0,w,c
  5731  001B90  B0D8               	btfsc	status,0,c
  5732  001B92  EFCD  F00D         	goto	u2731
  5733  001B96  EFCF  F00D         	goto	u2730
  5734  001B9A                     u2731:
  5735  001B9A  EFFA  F00D         	goto	l2810
  5736  001B9E                     u2730:
  5737  001B9E  5004               	movf	___fladd@b^0,w,c
  5738  001BA0  5C08               	subwf	___fladd@a^0,w,c
  5739  001BA2  6E0C               	movwf	??___fladd^0,c
  5740  001BA4  5005               	movf	(___fladd@b+1)^0,w,c
  5741  001BA6  5809               	subwfb	(___fladd@a+1)^0,w,c
  5742  001BA8  6E0D               	movwf	(??___fladd+1)^0,c
  5743  001BAA  5006               	movf	(___fladd@b+2)^0,w,c
  5744  001BAC  580A               	subwfb	(___fladd@a+2)^0,w,c
  5745  001BAE  6E0E               	movwf	(??___fladd+2)^0,c
  5746  001BB0  5007               	movf	(___fladd@b+3)^0,w,c
  5747  001BB2  580B               	subwfb	(___fladd@a+3)^0,w,c
  5748  001BB4  6E0F               	movwf	(??___fladd+3)^0,c
  5749  001BB6  0EFF               	movlw	255
  5750  001BB8  240C               	addwf	??___fladd^0,w,c
  5751  001BBA  6E04               	movwf	___fladd@b^0,c
  5752  001BBC  0EFF               	movlw	255
  5753  001BBE  200D               	addwfc	(??___fladd+1)^0,w,c
  5754  001BC0  6E05               	movwf	(___fladd@b+1)^0,c
  5755  001BC2  0EFF               	movlw	255
  5756  001BC4  200E               	addwfc	(??___fladd+2)^0,w,c
  5757  001BC6  6E06               	movwf	(___fladd@b+2)^0,c
  5758  001BC8  0EFF               	movlw	255
  5759  001BCA  200F               	addwfc	(??___fladd+3)^0,w,c
  5760  001BCC  6E07               	movwf	(___fladd@b+3)^0,c
  5761  001BCE  0E80               	movlw	128
  5762  001BD0  1A10               	xorwf	___fladd@signs^0,f,c
  5763  001BD2  6C13               	negf	___fladd@grs^0,c
  5764  001BD4  5013               	movf	___fladd@grs^0,w,c
  5765  001BD6  A4D8               	btfss	status,2,c
  5766  001BD8  EFF0  F00D         	goto	u2741
  5767  001BDC  EFF2  F00D         	goto	u2740
  5768  001BE0                     u2741:
  5769  001BE0  EF02  F00E         	goto	l661
  5770  001BE4                     u2740:
  5771  001BE4  0E01               	movlw	1
  5772  001BE6  2604               	addwf	___fladd@b^0,f,c
  5773  001BE8  0E00               	movlw	0
  5774  001BEA  2205               	addwfc	(___fladd@b+1)^0,f,c
  5775  001BEC  2206               	addwfc	(___fladd@b+2)^0,f,c
  5776  001BEE  2207               	addwfc	(___fladd@b+3)^0,f,c
  5777  001BF0  EF02  F00E         	goto	l661
  5778  001BF4                     l2810:
  5779  001BF4  5008               	movf	___fladd@a^0,w,c
  5780  001BF6  5E04               	subwf	___fladd@b^0,f,c
  5781  001BF8  5009               	movf	(___fladd@a+1)^0,w,c
  5782  001BFA  5A05               	subwfb	(___fladd@b+1)^0,f,c
  5783  001BFC  500A               	movf	(___fladd@a+2)^0,w,c
  5784  001BFE  5A06               	subwfb	(___fladd@b+2)^0,f,c
  5785  001C00  500B               	movf	(___fladd@a+3)^0,w,c
  5786  001C02  5A07               	subwfb	(___fladd@b+3)^0,f,c
  5787  001C04                     l661:
  5788  001C04  5004               	movf	___fladd@b^0,w,c
  5789  001C06  1005               	iorwf	(___fladd@b+1)^0,w,c
  5790  001C08  1006               	iorwf	(___fladd@b+2)^0,w,c
  5791  001C0A  1007               	iorwf	(___fladd@b+3)^0,w,c
  5792  001C0C  A4D8               	btfss	status,2,c
  5793  001C0E  EF0B  F00E         	goto	u2751
  5794  001C12  EF0D  F00E         	goto	u2750
  5795  001C16                     u2751:
  5796  001C16  EF42  F00E         	goto	l2834
  5797  001C1A                     u2750:
  5798  001C1A  5013               	movf	___fladd@grs^0,w,c
  5799  001C1C  A4D8               	btfss	status,2,c
  5800  001C1E  EF13  F00E         	goto	u2761
  5801  001C22  EF15  F00E         	goto	u2760
  5802  001C26                     u2761:
  5803  001C26  EF42  F00E         	goto	l2834
  5804  001C2A                     u2760:
  5805  001C2A  0E00               	movlw	0
  5806  001C2C  6E04               	movwf	?___fladd^0,c
  5807  001C2E  0E00               	movlw	0
  5808  001C30  6E05               	movwf	(?___fladd+1)^0,c
  5809  001C32  0E00               	movlw	0
  5810  001C34  6E06               	movwf	(?___fladd+2)^0,c
  5811  001C36  0E00               	movlw	0
  5812  001C38  6E07               	movwf	(?___fladd+3)^0,c
  5813  001C3A  EFDD  F00E         	goto	l653
  5814  001C3E                     l2818:
  5815  001C3E  90D8               	bcf	status,0,c
  5816  001C40  3604               	rlcf	___fladd@b^0,f,c
  5817  001C42  3605               	rlcf	(___fladd@b+1)^0,f,c
  5818  001C44  3606               	rlcf	(___fladd@b+2)^0,f,c
  5819  001C46  3607               	rlcf	(___fladd@b+3)^0,f,c
  5820  001C48  AE13               	btfss	___fladd@grs^0,7,c
  5821  001C4A  EF29  F00E         	goto	u2771
  5822  001C4E  EF2B  F00E         	goto	u2770
  5823  001C52                     u2771:
  5824  001C52  EF2C  F00E         	goto	l2824
  5825  001C56                     u2770:
  5826  001C56  8004               	bsf	___fladd@b^0,0,c
  5827  001C58                     l2824:
  5828  001C58  A013               	btfss	___fladd@grs^0,0,c
  5829  001C5A  EF31  F00E         	goto	u2781
  5830  001C5E  EF33  F00E         	goto	u2780
  5831  001C62                     u2781:
  5832  001C62  EF37  F00E         	goto	l2828
  5833  001C66                     u2780:
  5834  001C66  80D8               	bsf	status,0,c
  5835  001C68  3613               	rlcf	___fladd@grs^0,f,c
  5836  001C6A  EF39  F00E         	goto	l2830
  5837  001C6E                     l2828:
  5838  001C6E  90D8               	bcf	status,0,c
  5839  001C70  3613               	rlcf	___fladd@grs^0,f,c
  5840  001C72                     l2830:
  5841  001C72  5012               	movf	___fladd@bexp^0,w,c
  5842  001C74  B4D8               	btfsc	status,2,c
  5843  001C76  EF3F  F00E         	goto	u2791
  5844  001C7A  EF41  F00E         	goto	u2790
  5845  001C7E                     u2791:
  5846  001C7E  EF42  F00E         	goto	l2834
  5847  001C82                     u2790:
  5848  001C82  0612               	decf	___fladd@bexp^0,f,c
  5849  001C84                     l2834:
  5850  001C84  AE06               	btfss	(___fladd@b+2)^0,7,c
  5851  001C86  EF47  F00E         	goto	u2801
  5852  001C8A  EF49  F00E         	goto	u2800
  5853  001C8E                     u2801:
  5854  001C8E  EF1F  F00E         	goto	l2818
  5855  001C92                     u2800:
  5856  001C92                     l2836:
  5857  001C92  0E00               	movlw	0
  5858  001C94  6E11               	movwf	___fladd@aexp^0,c
  5859  001C96  AE13               	btfss	___fladd@grs^0,7,c
  5860  001C98  EF50  F00E         	goto	u2811
  5861  001C9C  EF52  F00E         	goto	u2810
  5862  001CA0                     u2811:
  5863  001CA0  EF6A  F00E         	goto	l670
  5864  001CA4                     u2810:
  5865  001CA4  C013  F00C         	movff	___fladd@grs,??___fladd
  5866  001CA8  0E7F               	movlw	127
  5867  001CAA  160C               	andwf	??___fladd^0,f,c
  5868  001CAC  B4D8               	btfsc	status,2,c
  5869  001CAE  EF5B  F00E         	goto	u2821
  5870  001CB2  EF5D  F00E         	goto	u2820
  5871  001CB6                     u2821:
  5872  001CB6  EF61  F00E         	goto	l671
  5873  001CBA                     u2820:
  5874  001CBA                     l2842:
  5875  001CBA  0E01               	movlw	1
  5876  001CBC  6E11               	movwf	___fladd@aexp^0,c
  5877  001CBE  EF6A  F00E         	goto	l670
  5878  001CC2                     l671:
  5879  001CC2  A004               	btfss	___fladd@b^0,0,c
  5880  001CC4  EF66  F00E         	goto	u2831
  5881  001CC8  EF68  F00E         	goto	u2830
  5882  001CCC                     u2831:
  5883  001CCC  EF6A  F00E         	goto	l670
  5884  001CD0                     u2830:
  5885  001CD0  EF5D  F00E         	goto	l2842
  5886  001CD4                     l670:
  5887  001CD4  5011               	movf	___fladd@aexp^0,w,c
  5888  001CD6  B4D8               	btfsc	status,2,c
  5889  001CD8  EF70  F00E         	goto	u2841
  5890  001CDC  EF72  F00E         	goto	u2840
  5891  001CE0                     u2841:
  5892  001CE0  EF9D  F00E         	goto	l2854
  5893  001CE4                     u2840:
  5894  001CE4  0E01               	movlw	1
  5895  001CE6  2604               	addwf	___fladd@b^0,f,c
  5896  001CE8  0E00               	movlw	0
  5897  001CEA  2205               	addwfc	(___fladd@b+1)^0,f,c
  5898  001CEC  2206               	addwfc	(___fladd@b+2)^0,f,c
  5899  001CEE  2207               	addwfc	(___fladd@b+3)^0,f,c
  5900  001CF0  A007               	btfss	(___fladd@b+3)^0,0,c
  5901  001CF2  EF7D  F00E         	goto	u2851
  5902  001CF6  EF7F  F00E         	goto	u2850
  5903  001CFA                     u2851:
  5904  001CFA  EF9D  F00E         	goto	l2854
  5905  001CFE                     u2850:
  5906  001CFE  C004  F00C         	movff	___fladd@b,??___fladd
  5907  001D02  C005  F00D         	movff	___fladd@b+1,??___fladd+1
  5908  001D06  C006  F00E         	movff	___fladd@b+2,??___fladd+2
  5909  001D0A  C007  F00F         	movff	___fladd@b+3,??___fladd+3
  5910  001D0E  340F               	rlcf	(??___fladd+3)^0,w,c
  5911  001D10  320F               	rrcf	(??___fladd+3)^0,f,c
  5912  001D12  320E               	rrcf	(??___fladd+2)^0,f,c
  5913  001D14  320D               	rrcf	(??___fladd+1)^0,f,c
  5914  001D16  320C               	rrcf	??___fladd^0,f,c
  5915  001D18  C00C  F004         	movff	??___fladd,___fladd@b
  5916  001D1C  C00D  F005         	movff	??___fladd+1,___fladd@b+1
  5917  001D20  C00E  F006         	movff	??___fladd+2,___fladd@b+2
  5918  001D24  C00F  F007         	movff	??___fladd+3,___fladd@b+3
  5919  001D28  2812               	incf	___fladd@bexp^0,w,c
  5920  001D2A  B4D8               	btfsc	status,2,c
  5921  001D2C  EF9A  F00E         	goto	u2861
  5922  001D30  EF9C  F00E         	goto	u2860
  5923  001D34                     u2861:
  5924  001D34  EF9D  F00E         	goto	l2854
  5925  001D38                     u2860:
  5926  001D38  2A12               	incf	___fladd@bexp^0,f,c
  5927  001D3A                     l2854:
  5928  001D3A  2812               	incf	___fladd@bexp^0,w,c
  5929  001D3C  B4D8               	btfsc	status,2,c
  5930  001D3E  EFA3  F00E         	goto	u2871
  5931  001D42  EFA5  F00E         	goto	u2870
  5932  001D46                     u2871:
  5933  001D46  EFAD  F00E         	goto	l2858
  5934  001D4A                     u2870:
  5935  001D4A  5012               	movf	___fladd@bexp^0,w,c
  5936  001D4C  A4D8               	btfss	status,2,c
  5937  001D4E  EFAB  F00E         	goto	u2881
  5938  001D52  EFAD  F00E         	goto	u2880
  5939  001D56                     u2881:
  5940  001D56  EFBF  F00E         	goto	l2862
  5941  001D5A                     u2880:
  5942  001D5A                     l2858:
  5943  001D5A  0E00               	movlw	0
  5944  001D5C  6E04               	movwf	___fladd@b^0,c
  5945  001D5E  0E00               	movlw	0
  5946  001D60  6E05               	movwf	(___fladd@b+1)^0,c
  5947  001D62  0E00               	movlw	0
  5948  001D64  6E06               	movwf	(___fladd@b+2)^0,c
  5949  001D66  0E00               	movlw	0
  5950  001D68  6E07               	movwf	(___fladd@b+3)^0,c
  5951  001D6A  5012               	movf	___fladd@bexp^0,w,c
  5952  001D6C  A4D8               	btfss	status,2,c
  5953  001D6E  EFBB  F00E         	goto	u2891
  5954  001D72  EFBD  F00E         	goto	u2890
  5955  001D76                     u2891:
  5956  001D76  EFBF  F00E         	goto	l2862
  5957  001D7A                     u2890:
  5958  001D7A  0E00               	movlw	0
  5959  001D7C  6E10               	movwf	___fladd@signs^0,c
  5960  001D7E                     l2862:
  5961  001D7E  A012               	btfss	___fladd@bexp^0,0,c
  5962  001D80  EFC4  F00E         	goto	u2901
  5963  001D84  EFC6  F00E         	goto	u2900
  5964  001D88                     u2901:
  5965  001D88  EFC9  F00E         	goto	l2866
  5966  001D8C                     u2900:
  5967  001D8C  8E06               	bsf	(___fladd@b+2)^0,7,c
  5968  001D8E  EFCA  F00E         	goto	l2868
  5969  001D92                     l2866:
  5970  001D92  9E06               	bcf	(___fladd@b+2)^0,7,c
  5971  001D94                     l2868:
  5972  001D94  90D8               	bcf	status,0,c
  5973  001D96  3012               	rrcf	___fladd@bexp^0,w,c
  5974  001D98  6E07               	movwf	(___fladd@b+3)^0,c
  5975  001D9A  AE10               	btfss	___fladd@signs^0,7,c
  5976  001D9C  EFD2  F00E         	goto	u2911
  5977  001DA0  EFD4  F00E         	goto	u2910
  5978  001DA4                     u2911:
  5979  001DA4  EFD5  F00E         	goto	l2874
  5980  001DA8                     u2910:
  5981  001DA8  8E07               	bsf	(___fladd@b+3)^0,7,c
  5982  001DAA                     l2874:
  5983  001DAA  C004  F004         	movff	___fladd@b,?___fladd
  5984  001DAE  C005  F005         	movff	___fladd@b+1,?___fladd+1
  5985  001DB2  C006  F006         	movff	___fladd@b+2,?___fladd+2
  5986  001DB6  C007  F007         	movff	___fladd@b+3,?___fladd+3
  5987  001DBA                     l653:
  5988  001DBA  0012               	return		;funcret
  5989  001DBC                     __end_of___fladd:
  5990                           	callstack 0
  5991                           
  5992 ;; *************** function ___flneg *****************
  5993 ;; Defined at:
  5994 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  f1              4    3[COMRAM] unsigned char 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;		None
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  4    3[COMRAM] unsigned char 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6008 ;;      Params:         4       0       0       0       0       0       0       0       0
  6009 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6011 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6012 ;;Total ram usage:        4 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:    2
  6015 ;; This function calls:
  6016 ;;		Nothing
  6017 ;; This function is called by:
  6018 ;;		_efgtoa
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           	psect	text19
  6023  003984                     __ptext19:
  6024                           	callstack 0
  6025  003984                     ___flneg:
  6026                           	callstack 24
  6027  003984  5004               	movf	___flneg@f1^0,w,c
  6028  003986  1005               	iorwf	(___flneg@f1+1)^0,w,c
  6029  003988  1006               	iorwf	(___flneg@f1+2)^0,w,c
  6030  00398A  1007               	iorwf	(___flneg@f1+3)^0,w,c
  6031  00398C  B4D8               	btfsc	status,2,c
  6032  00398E  EFCB  F01C         	goto	u3581
  6033  003992  EFCD  F01C         	goto	u3580
  6034  003996                     u3581:
  6035  003996  EFD5  F01C         	goto	l3302
  6036  00399A                     u3580:
  6037  00399A  0E00               	movlw	0
  6038  00399C  1A04               	xorwf	___flneg@f1^0,f,c
  6039  00399E  0E00               	movlw	0
  6040  0039A0  1A05               	xorwf	(___flneg@f1+1)^0,f,c
  6041  0039A2  0E00               	movlw	0
  6042  0039A4  1A06               	xorwf	(___flneg@f1+2)^0,f,c
  6043  0039A6  0E80               	movlw	128
  6044  0039A8  1A07               	xorwf	(___flneg@f1+3)^0,f,c
  6045  0039AA                     l3302:
  6046  0039AA  C004  F004         	movff	___flneg@f1,?___flneg
  6047  0039AE  C005  F005         	movff	___flneg@f1+1,?___flneg+1
  6048  0039B2  C006  F006         	movff	___flneg@f1+2,?___flneg+2
  6049  0039B6  C007  F007         	movff	___flneg@f1+3,?___flneg+3
  6050  0039BA  0012               	return		;funcret
  6051  0039BC                     __end_of___flneg:
  6052                           	callstack 0
  6053                           
  6054 ;; *************** function ___flmul *****************
  6055 ;; Defined at:
  6056 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;  b               4   17[COMRAM] unsigned char 
  6059 ;;  a               4   21[COMRAM] unsigned char 
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;  prod            4   36[COMRAM] struct .
  6062 ;;  grs             4   30[COMRAM] unsigned long 
  6063 ;;  temp            2   40[COMRAM] struct .
  6064 ;;  bexp            1   35[COMRAM] unsigned char 
  6065 ;;  aexp            1   34[COMRAM] unsigned char 
  6066 ;;  sign            1   29[COMRAM] unsigned char 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  4   17[COMRAM] unsigned char 
  6069 ;; Registers used:
  6070 ;;		wreg, status,2, status,0, prodl, prodh
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6076 ;;      Params:         8       0       0       0       0       0       0       0       0
  6077 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6078 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6079 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6080 ;;Total ram usage:       25 bytes
  6081 ;; Hardware stack levels used:    1
  6082 ;; Hardware stack levels required when called:    2
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_main
  6087 ;;		_efgtoa
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           	psect	text20
  6092  001DBC                     __ptext20:
  6093                           	callstack 0
  6094  001DBC                     ___flmul:
  6095                           	callstack 24
  6096  001DBC  5015               	movf	(___flmul@b+3)^0,w,c
  6097  001DBE  0B80               	andlw	128
  6098  001DC0  6E1E               	movwf	___flmul@sign^0,c
  6099  001DC2  5015               	movf	(___flmul@b+3)^0,w,c
  6100  001DC4  2415               	addwf	(___flmul@b+3)^0,w,c
  6101  001DC6  6E24               	movwf	___flmul@bexp^0,c
  6102  001DC8  AE14               	btfss	(___flmul@b+2)^0,7,c
  6103  001DCA  EFE9  F00E         	goto	u3191
  6104  001DCE  EFEB  F00E         	goto	u3190
  6105  001DD2                     u3191:
  6106  001DD2  EFEC  F00E         	goto	l3050
  6107  001DD6                     u3190:
  6108  001DD6  8024               	bsf	___flmul@bexp^0,0,c
  6109  001DD8                     l3050:
  6110  001DD8  5024               	movf	___flmul@bexp^0,w,c
  6111  001DDA  B4D8               	btfsc	status,2,c
  6112  001DDC  EFF2  F00E         	goto	u3201
  6113  001DE0  EFF4  F00E         	goto	u3200
  6114  001DE4                     u3201:
  6115  001DE4  EF07  F00F         	goto	l3058
  6116  001DE8                     u3200:
  6117  001DE8  2824               	incf	___flmul@bexp^0,w,c
  6118  001DEA  A4D8               	btfss	status,2,c
  6119  001DEC  EFFA  F00E         	goto	u3211
  6120  001DF0  EFFC  F00E         	goto	u3210
  6121  001DF4                     u3211:
  6122  001DF4  EF04  F00F         	goto	l3056
  6123  001DF8                     u3210:
  6124  001DF8  0E00               	movlw	0
  6125  001DFA  6E12               	movwf	___flmul@b^0,c
  6126  001DFC  0E00               	movlw	0
  6127  001DFE  6E13               	movwf	(___flmul@b+1)^0,c
  6128  001E00  0E00               	movlw	0
  6129  001E02  6E14               	movwf	(___flmul@b+2)^0,c
  6130  001E04  0E00               	movlw	0
  6131  001E06  6E15               	movwf	(___flmul@b+3)^0,c
  6132  001E08                     l3056:
  6133  001E08  8E14               	bsf	(___flmul@b+2)^0,7,c
  6134  001E0A  EF0F  F00F         	goto	l3060
  6135  001E0E                     l3058:
  6136  001E0E  0E00               	movlw	0
  6137  001E10  6E12               	movwf	___flmul@b^0,c
  6138  001E12  0E00               	movlw	0
  6139  001E14  6E13               	movwf	(___flmul@b+1)^0,c
  6140  001E16  0E00               	movlw	0
  6141  001E18  6E14               	movwf	(___flmul@b+2)^0,c
  6142  001E1A  0E00               	movlw	0
  6143  001E1C  6E15               	movwf	(___flmul@b+3)^0,c
  6144  001E1E                     l3060:
  6145  001E1E  5019               	movf	(___flmul@a+3)^0,w,c
  6146  001E20  0B80               	andlw	128
  6147  001E22  1A1E               	xorwf	___flmul@sign^0,f,c
  6148  001E24  5019               	movf	(___flmul@a+3)^0,w,c
  6149  001E26  2419               	addwf	(___flmul@a+3)^0,w,c
  6150  001E28  6E23               	movwf	___flmul@aexp^0,c
  6151  001E2A  AE18               	btfss	(___flmul@a+2)^0,7,c
  6152  001E2C  EF1A  F00F         	goto	u3221
  6153  001E30  EF1C  F00F         	goto	u3220
  6154  001E34                     u3221:
  6155  001E34  EF1D  F00F         	goto	l3068
  6156  001E38                     u3220:
  6157  001E38  8023               	bsf	___flmul@aexp^0,0,c
  6158  001E3A                     l3068:
  6159  001E3A  5023               	movf	___flmul@aexp^0,w,c
  6160  001E3C  B4D8               	btfsc	status,2,c
  6161  001E3E  EF23  F00F         	goto	u3231
  6162  001E42  EF25  F00F         	goto	u3230
  6163  001E46                     u3231:
  6164  001E46  EF38  F00F         	goto	l3076
  6165  001E4A                     u3230:
  6166  001E4A  2823               	incf	___flmul@aexp^0,w,c
  6167  001E4C  A4D8               	btfss	status,2,c
  6168  001E4E  EF2B  F00F         	goto	u3241
  6169  001E52  EF2D  F00F         	goto	u3240
  6170  001E56                     u3241:
  6171  001E56  EF35  F00F         	goto	l3074
  6172  001E5A                     u3240:
  6173  001E5A  0E00               	movlw	0
  6174  001E5C  6E16               	movwf	___flmul@a^0,c
  6175  001E5E  0E00               	movlw	0
  6176  001E60  6E17               	movwf	(___flmul@a+1)^0,c
  6177  001E62  0E00               	movlw	0
  6178  001E64  6E18               	movwf	(___flmul@a+2)^0,c
  6179  001E66  0E00               	movlw	0
  6180  001E68  6E19               	movwf	(___flmul@a+3)^0,c
  6181  001E6A                     l3074:
  6182  001E6A  8E18               	bsf	(___flmul@a+2)^0,7,c
  6183  001E6C  EF40  F00F         	goto	l730
  6184  001E70                     l3076:
  6185  001E70  0E00               	movlw	0
  6186  001E72  6E16               	movwf	___flmul@a^0,c
  6187  001E74  0E00               	movlw	0
  6188  001E76  6E17               	movwf	(___flmul@a+1)^0,c
  6189  001E78  0E00               	movlw	0
  6190  001E7A  6E18               	movwf	(___flmul@a+2)^0,c
  6191  001E7C  0E00               	movlw	0
  6192  001E7E  6E19               	movwf	(___flmul@a+3)^0,c
  6193  001E80                     l730:
  6194  001E80  5023               	movf	___flmul@aexp^0,w,c
  6195  001E82  B4D8               	btfsc	status,2,c
  6196  001E84  EF46  F00F         	goto	u3251
  6197  001E88  EF48  F00F         	goto	u3250
  6198  001E8C                     u3251:
  6199  001E8C  EF50  F00F         	goto	l3080
  6200  001E90                     u3250:
  6201  001E90  5024               	movf	___flmul@bexp^0,w,c
  6202  001E92  A4D8               	btfss	status,2,c
  6203  001E94  EF4E  F00F         	goto	u3261
  6204  001E98  EF50  F00F         	goto	u3260
  6205  001E9C                     u3261:
  6206  001E9C  EF5A  F00F         	goto	l3084
  6207  001EA0                     u3260:
  6208  001EA0                     l3080:
  6209  001EA0  0E00               	movlw	0
  6210  001EA2  6E12               	movwf	?___flmul^0,c
  6211  001EA4  0E00               	movlw	0
  6212  001EA6  6E13               	movwf	(?___flmul+1)^0,c
  6213  001EA8  0E00               	movlw	0
  6214  001EAA  6E14               	movwf	(?___flmul+2)^0,c
  6215  001EAC  0E00               	movlw	0
  6216  001EAE  6E15               	movwf	(?___flmul+3)^0,c
  6217  001EB0  EFF2  F010         	goto	l734
  6218  001EB4                     l3084:
  6219  001EB4  5018               	movf	(___flmul@a+2)^0,w,c
  6220  001EB6  0212               	mulwf	___flmul@b^0,c
  6221  001EB8  CFF3 F029          	movff	prodl,___flmul@temp
  6222  001EBC  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6223  001EC0  5029               	movf	___flmul@temp^0,w,c
  6224  001EC2  6E1F               	movwf	___flmul@grs^0,c
  6225  001EC4  6A20               	clrf	(___flmul@grs+1)^0,c
  6226  001EC6  6A21               	clrf	(___flmul@grs+2)^0,c
  6227  001EC8  6A22               	clrf	(___flmul@grs+3)^0,c
  6228  001ECA  502A               	movf	(___flmul@temp+1)^0,w,c
  6229  001ECC  6E25               	movwf	___flmul@prod^0,c
  6230  001ECE  6A26               	clrf	(___flmul@prod+1)^0,c
  6231  001ED0  6A27               	clrf	(___flmul@prod+2)^0,c
  6232  001ED2  6A28               	clrf	(___flmul@prod+3)^0,c
  6233  001ED4  5017               	movf	(___flmul@a+1)^0,w,c
  6234  001ED6  0213               	mulwf	(___flmul@b+1)^0,c
  6235  001ED8  CFF3 F029          	movff	prodl,___flmul@temp
  6236  001EDC  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6237  001EE0  5029               	movf	___flmul@temp^0,w,c
  6238  001EE2  261F               	addwf	___flmul@grs^0,f,c
  6239  001EE4  0E00               	movlw	0
  6240  001EE6  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6241  001EE8  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6242  001EEA  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6243  001EEC  502A               	movf	(___flmul@temp+1)^0,w,c
  6244  001EEE  2625               	addwf	___flmul@prod^0,f,c
  6245  001EF0  0E00               	movlw	0
  6246  001EF2  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6247  001EF4  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6248  001EF6  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6249  001EF8  5016               	movf	___flmul@a^0,w,c
  6250  001EFA  0214               	mulwf	(___flmul@b+2)^0,c
  6251  001EFC  CFF3 F029          	movff	prodl,___flmul@temp
  6252  001F00  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6253  001F04  5029               	movf	___flmul@temp^0,w,c
  6254  001F06  261F               	addwf	___flmul@grs^0,f,c
  6255  001F08  0E00               	movlw	0
  6256  001F0A  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6257  001F0C  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6258  001F0E  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6259  001F10  502A               	movf	(___flmul@temp+1)^0,w,c
  6260  001F12  2625               	addwf	___flmul@prod^0,f,c
  6261  001F14  0E00               	movlw	0
  6262  001F16  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6263  001F18  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6264  001F1A  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6265  001F1C  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  6266  001F20  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  6267  001F24  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  6268  001F28  6A1F               	clrf	___flmul@grs^0,c
  6269  001F2A  5016               	movf	___flmul@a^0,w,c
  6270  001F2C  0213               	mulwf	(___flmul@b+1)^0,c
  6271  001F2E  CFF3 F029          	movff	prodl,___flmul@temp
  6272  001F32  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6273  001F36  5029               	movf	___flmul@temp^0,w,c
  6274  001F38  261F               	addwf	___flmul@grs^0,f,c
  6275  001F3A  502A               	movf	(___flmul@temp+1)^0,w,c
  6276  001F3C  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6277  001F3E  0E00               	movlw	0
  6278  001F40  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6279  001F42  0E00               	movlw	0
  6280  001F44  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6281  001F46  5017               	movf	(___flmul@a+1)^0,w,c
  6282  001F48  0212               	mulwf	___flmul@b^0,c
  6283  001F4A  CFF3 F029          	movff	prodl,___flmul@temp
  6284  001F4E  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6285  001F52  5029               	movf	___flmul@temp^0,w,c
  6286  001F54  261F               	addwf	___flmul@grs^0,f,c
  6287  001F56  502A               	movf	(___flmul@temp+1)^0,w,c
  6288  001F58  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6289  001F5A  0E00               	movlw	0
  6290  001F5C  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6291  001F5E  0E00               	movlw	0
  6292  001F60  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6293  001F62  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  6294  001F66  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  6295  001F6A  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  6296  001F6E  6A1F               	clrf	___flmul@grs^0,c
  6297  001F70  5016               	movf	___flmul@a^0,w,c
  6298  001F72  0212               	mulwf	___flmul@b^0,c
  6299  001F74  CFF3 F029          	movff	prodl,___flmul@temp
  6300  001F78  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6301  001F7C  5029               	movf	___flmul@temp^0,w,c
  6302  001F7E  261F               	addwf	___flmul@grs^0,f,c
  6303  001F80  502A               	movf	(___flmul@temp+1)^0,w,c
  6304  001F82  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6305  001F84  0E00               	movlw	0
  6306  001F86  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6307  001F88  0E00               	movlw	0
  6308  001F8A  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6309  001F8C  5018               	movf	(___flmul@a+2)^0,w,c
  6310  001F8E  0213               	mulwf	(___flmul@b+1)^0,c
  6311  001F90  CFF3 F029          	movff	prodl,___flmul@temp
  6312  001F94  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6313  001F98  5029               	movf	___flmul@temp^0,w,c
  6314  001F9A  2625               	addwf	___flmul@prod^0,f,c
  6315  001F9C  502A               	movf	(___flmul@temp+1)^0,w,c
  6316  001F9E  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6317  001FA0  0E00               	movlw	0
  6318  001FA2  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6319  001FA4  0E00               	movlw	0
  6320  001FA6  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6321  001FA8  5017               	movf	(___flmul@a+1)^0,w,c
  6322  001FAA  0214               	mulwf	(___flmul@b+2)^0,c
  6323  001FAC  CFF3 F029          	movff	prodl,___flmul@temp
  6324  001FB0  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6325  001FB4  5029               	movf	___flmul@temp^0,w,c
  6326  001FB6  2625               	addwf	___flmul@prod^0,f,c
  6327  001FB8  502A               	movf	(___flmul@temp+1)^0,w,c
  6328  001FBA  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6329  001FBC  0E00               	movlw	0
  6330  001FBE  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6331  001FC0  0E00               	movlw	0
  6332  001FC2  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6333  001FC4  5018               	movf	(___flmul@a+2)^0,w,c
  6334  001FC6  0214               	mulwf	(___flmul@b+2)^0,c
  6335  001FC8  CFF3 F029          	movff	prodl,___flmul@temp
  6336  001FCC  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6337  001FD0  5029               	movf	___flmul@temp^0,w,c
  6338  001FD2  6E1A               	movwf	??___flmul^0,c
  6339  001FD4  502A               	movf	(___flmul@temp+1)^0,w,c
  6340  001FD6  6E1B               	movwf	(??___flmul+1)^0,c
  6341  001FD8  6A1C               	clrf	(??___flmul+2)^0,c
  6342  001FDA  6A1D               	clrf	(??___flmul+3)^0,c
  6343  001FDC  C01C  F01D         	movff	??___flmul+2,??___flmul+3
  6344  001FE0  C01B  F01C         	movff	??___flmul+1,??___flmul+2
  6345  001FE4  C01A  F01B         	movff	??___flmul,??___flmul+1
  6346  001FE8  6A1A               	clrf	??___flmul^0,c
  6347  001FEA  501A               	movf	??___flmul^0,w,c
  6348  001FEC  2625               	addwf	___flmul@prod^0,f,c
  6349  001FEE  501B               	movf	(??___flmul+1)^0,w,c
  6350  001FF0  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6351  001FF2  501C               	movf	(??___flmul+2)^0,w,c
  6352  001FF4  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6353  001FF6  501D               	movf	(??___flmul+3)^0,w,c
  6354  001FF8  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6355  001FFA  C01F  F01A         	movff	___flmul@grs,??___flmul
  6356  001FFE  C020  F01B         	movff	___flmul@grs+1,??___flmul+1
  6357  002002  C021  F01C         	movff	___flmul@grs+2,??___flmul+2
  6358  002006  C022  F01D         	movff	___flmul@grs+3,??___flmul+3
  6359  00200A  0E19               	movlw	25
  6360  00200C  EF0D  F010         	goto	u3270
  6361  002010                     u3275:
  6362  002010  90D8               	bcf	status,0,c
  6363  002012  321D               	rrcf	(??___flmul+3)^0,f,c
  6364  002014  321C               	rrcf	(??___flmul+2)^0,f,c
  6365  002016  321B               	rrcf	(??___flmul+1)^0,f,c
  6366  002018  321A               	rrcf	??___flmul^0,f,c
  6367  00201A                     u3270:
  6368  00201A  2EE8               	decfsz	wreg,f,c
  6369  00201C  EF08  F010         	goto	u3275
  6370  002020  501A               	movf	??___flmul^0,w,c
  6371  002022  2625               	addwf	___flmul@prod^0,f,c
  6372  002024  501B               	movf	(??___flmul+1)^0,w,c
  6373  002026  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6374  002028  501C               	movf	(??___flmul+2)^0,w,c
  6375  00202A  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6376  00202C  501D               	movf	(??___flmul+3)^0,w,c
  6377  00202E  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6378  002030  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  6379  002034  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  6380  002038  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  6381  00203C  6A1F               	clrf	___flmul@grs^0,c
  6382  00203E  5023               	movf	___flmul@aexp^0,w,c
  6383  002040  C024  F01A         	movff	___flmul@bexp,??___flmul
  6384  002044  6A1B               	clrf	(??___flmul+1)^0,c
  6385  002046  261A               	addwf	??___flmul^0,f,c
  6386  002048  0E00               	movlw	0
  6387  00204A  221B               	addwfc	(??___flmul+1)^0,f,c
  6388  00204C  0E82               	movlw	130
  6389  00204E  241A               	addwf	??___flmul^0,w,c
  6390  002050  6E29               	movwf	___flmul@temp^0,c
  6391  002052  0EFF               	movlw	255
  6392  002054  201B               	addwfc	(??___flmul+1)^0,w,c
  6393  002056  6E2A               	movwf	(___flmul@temp+1)^0,c
  6394  002058  EF43  F010         	goto	l3132
  6395  00205C                     l3126:
  6396  00205C  90D8               	bcf	status,0,c
  6397  00205E  3625               	rlcf	___flmul@prod^0,f,c
  6398  002060  3626               	rlcf	(___flmul@prod+1)^0,f,c
  6399  002062  3627               	rlcf	(___flmul@prod+2)^0,f,c
  6400  002064  3628               	rlcf	(___flmul@prod+3)^0,f,c
  6401  002066  AE22               	btfss	(___flmul@grs+3)^0,7,c
  6402  002068  EF38  F010         	goto	u3281
  6403  00206C  EF3A  F010         	goto	u3280
  6404  002070                     u3281:
  6405  002070  EF3B  F010         	goto	l737
  6406  002074                     u3280:
  6407  002074  8025               	bsf	___flmul@prod^0,0,c
  6408  002076                     l737:
  6409  002076  90D8               	bcf	status,0,c
  6410  002078  361F               	rlcf	___flmul@grs^0,f,c
  6411  00207A  3620               	rlcf	(___flmul@grs+1)^0,f,c
  6412  00207C  3621               	rlcf	(___flmul@grs+2)^0,f,c
  6413  00207E  3622               	rlcf	(___flmul@grs+3)^0,f,c
  6414  002080  0629               	decf	___flmul@temp^0,f,c
  6415  002082  A0D8               	btfss	status,0,c
  6416  002084  062A               	decf	(___flmul@temp+1)^0,f,c
  6417  002086                     l3132:
  6418  002086  AE27               	btfss	(___flmul@prod+2)^0,7,c
  6419  002088  EF48  F010         	goto	u3291
  6420  00208C  EF4A  F010         	goto	u3290
  6421  002090                     u3291:
  6422  002090  EF2E  F010         	goto	l3126
  6423  002094                     u3290:
  6424  002094  0E00               	movlw	0
  6425  002096  6E23               	movwf	___flmul@aexp^0,c
  6426  002098  AE22               	btfss	(___flmul@grs+3)^0,7,c
  6427  00209A  EF51  F010         	goto	u3301
  6428  00209E  EF53  F010         	goto	u3300
  6429  0020A2                     u3301:
  6430  0020A2  EF77  F010         	goto	l739
  6431  0020A6                     u3300:
  6432  0020A6  0EFF               	movlw	255
  6433  0020A8  141F               	andwf	___flmul@grs^0,w,c
  6434  0020AA  6E1A               	movwf	??___flmul^0,c
  6435  0020AC  0EFF               	movlw	255
  6436  0020AE  1420               	andwf	(___flmul@grs+1)^0,w,c
  6437  0020B0  6E1B               	movwf	(??___flmul+1)^0,c
  6438  0020B2  0EFF               	movlw	255
  6439  0020B4  1421               	andwf	(___flmul@grs+2)^0,w,c
  6440  0020B6  6E1C               	movwf	(??___flmul+2)^0,c
  6441  0020B8  0E7F               	movlw	127
  6442  0020BA  1422               	andwf	(___flmul@grs+3)^0,w,c
  6443  0020BC  6E1D               	movwf	(??___flmul+3)^0,c
  6444  0020BE  501A               	movf	??___flmul^0,w,c
  6445  0020C0  101B               	iorwf	(??___flmul+1)^0,w,c
  6446  0020C2  101C               	iorwf	(??___flmul+2)^0,w,c
  6447  0020C4  101D               	iorwf	(??___flmul+3)^0,w,c
  6448  0020C6  B4D8               	btfsc	status,2,c
  6449  0020C8  EF68  F010         	goto	u3311
  6450  0020CC  EF6A  F010         	goto	u3310
  6451  0020D0                     u3311:
  6452  0020D0  EF6E  F010         	goto	l740
  6453  0020D4                     u3310:
  6454  0020D4                     l3140:
  6455  0020D4  0E01               	movlw	1
  6456  0020D6  6E23               	movwf	___flmul@aexp^0,c
  6457  0020D8  EF77  F010         	goto	l739
  6458  0020DC                     l740:
  6459  0020DC  A025               	btfss	___flmul@prod^0,0,c
  6460  0020DE  EF73  F010         	goto	u3321
  6461  0020E2  EF75  F010         	goto	u3320
  6462  0020E6                     u3321:
  6463  0020E6  EF77  F010         	goto	l739
  6464  0020EA                     u3320:
  6465  0020EA  EF6A  F010         	goto	l3140
  6466  0020EE                     l739:
  6467  0020EE  5023               	movf	___flmul@aexp^0,w,c
  6468  0020F0  B4D8               	btfsc	status,2,c
  6469  0020F2  EF7D  F010         	goto	u3331
  6470  0020F6  EF7F  F010         	goto	u3330
  6471  0020FA                     u3331:
  6472  0020FA  EFA3  F010         	goto	l3152
  6473  0020FE                     u3330:
  6474  0020FE  0E01               	movlw	1
  6475  002100  2625               	addwf	___flmul@prod^0,f,c
  6476  002102  0E00               	movlw	0
  6477  002104  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6478  002106  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6479  002108  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6480  00210A  A028               	btfss	(___flmul@prod+3)^0,0,c
  6481  00210C  EF8A  F010         	goto	u3341
  6482  002110  EF8C  F010         	goto	u3340
  6483  002114                     u3341:
  6484  002114  EFA3  F010         	goto	l3152
  6485  002118                     u3340:
  6486  002118  C025  F01A         	movff	___flmul@prod,??___flmul
  6487  00211C  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
  6488  002120  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
  6489  002124  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
  6490  002128  341D               	rlcf	(??___flmul+3)^0,w,c
  6491  00212A  321D               	rrcf	(??___flmul+3)^0,f,c
  6492  00212C  321C               	rrcf	(??___flmul+2)^0,f,c
  6493  00212E  321B               	rrcf	(??___flmul+1)^0,f,c
  6494  002130  321A               	rrcf	??___flmul^0,f,c
  6495  002132  C01A  F025         	movff	??___flmul,___flmul@prod
  6496  002136  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
  6497  00213A  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
  6498  00213E  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
  6499  002142  4A29               	infsnz	___flmul@temp^0,f,c
  6500  002144  2A2A               	incf	(___flmul@temp+1)^0,f,c
  6501  002146                     l3152:
  6502  002146  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  6503  002148  EFAE  F010         	goto	u3351
  6504  00214C  502A               	movf	(___flmul@temp+1)^0,w,c
  6505  00214E  E108               	bnz	u3350
  6506  002150  2829               	incf	___flmul@temp^0,w,c
  6507  002152  A0D8               	btfss	status,0,c
  6508  002154  EFAE  F010         	goto	u3351
  6509  002158  EFB0  F010         	goto	u3350
  6510  00215C                     u3351:
  6511  00215C  EFBA  F010         	goto	l3156
  6512  002160                     u3350:
  6513  002160  0E00               	movlw	0
  6514  002162  6E25               	movwf	___flmul@prod^0,c
  6515  002164  0E00               	movlw	0
  6516  002166  6E26               	movwf	(___flmul@prod+1)^0,c
  6517  002168  0E80               	movlw	128
  6518  00216A  6E27               	movwf	(___flmul@prod+2)^0,c
  6519  00216C  0E7F               	movlw	127
  6520  00216E  6E28               	movwf	(___flmul@prod+3)^0,c
  6521  002170  EFE8  F010         	goto	l3168
  6522  002174                     l3156:
  6523  002174  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  6524  002176  EFC7  F010         	goto	u3360
  6525  00217A  502A               	movf	(___flmul@temp+1)^0,w,c
  6526  00217C  E106               	bnz	u3361
  6527  00217E  0429               	decf	___flmul@temp^0,w,c
  6528  002180  B0D8               	btfsc	status,0,c
  6529  002182  EFC5  F010         	goto	u3361
  6530  002186  EFC7  F010         	goto	u3360
  6531  00218A                     u3361:
  6532  00218A  EFD3  F010         	goto	l747
  6533  00218E                     u3360:
  6534  00218E  0E00               	movlw	0
  6535  002190  6E25               	movwf	___flmul@prod^0,c
  6536  002192  0E00               	movlw	0
  6537  002194  6E26               	movwf	(___flmul@prod+1)^0,c
  6538  002196  0E00               	movlw	0
  6539  002198  6E27               	movwf	(___flmul@prod+2)^0,c
  6540  00219A  0E00               	movlw	0
  6541  00219C  6E28               	movwf	(___flmul@prod+3)^0,c
  6542  00219E  0E00               	movlw	0
  6543  0021A0  6E1E               	movwf	___flmul@sign^0,c
  6544  0021A2  EFE8  F010         	goto	l3168
  6545  0021A6                     l747:
  6546  0021A6  C029  F024         	movff	___flmul@temp,___flmul@bexp
  6547  0021AA  0EFF               	movlw	255
  6548  0021AC  1625               	andwf	___flmul@prod^0,f,c
  6549  0021AE  0EFF               	movlw	255
  6550  0021B0  1626               	andwf	(___flmul@prod+1)^0,f,c
  6551  0021B2  0E7F               	movlw	127
  6552  0021B4  1627               	andwf	(___flmul@prod+2)^0,f,c
  6553  0021B6  0E00               	movlw	0
  6554  0021B8  1628               	andwf	(___flmul@prod+3)^0,f,c
  6555  0021BA  A024               	btfss	___flmul@bexp^0,0,c
  6556  0021BC  EFE2  F010         	goto	u3371
  6557  0021C0  EFE4  F010         	goto	u3370
  6558  0021C4                     u3371:
  6559  0021C4  EFE5  F010         	goto	l3166
  6560  0021C8                     u3370:
  6561  0021C8  8E27               	bsf	(___flmul@prod+2)^0,7,c
  6562  0021CA                     l3166:
  6563  0021CA  90D8               	bcf	status,0,c
  6564  0021CC  3024               	rrcf	___flmul@bexp^0,w,c
  6565  0021CE  6E28               	movwf	(___flmul@prod+3)^0,c
  6566  0021D0                     l3168:
  6567  0021D0  501E               	movf	___flmul@sign^0,w,c
  6568  0021D2  1228               	iorwf	(___flmul@prod+3)^0,f,c
  6569  0021D4  C025  F012         	movff	___flmul@prod,?___flmul
  6570  0021D8  C026  F013         	movff	___flmul@prod+1,?___flmul+1
  6571  0021DC  C027  F014         	movff	___flmul@prod+2,?___flmul+2
  6572  0021E0  C028  F015         	movff	___flmul@prod+3,?___flmul+3
  6573  0021E4                     l734:
  6574  0021E4  0012               	return		;funcret
  6575  0021E6                     __end_of___flmul:
  6576                           	callstack 0
  6577                           
  6578 ;; *************** function ___flge *****************
  6579 ;; Defined at:
  6580 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;  ff1             4   42[COMRAM] unsigned char 
  6583 ;;  ff2             4   46[COMRAM] unsigned char 
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;		None
  6586 ;; Return value:  Size  Location     Type
  6587 ;;		None               void
  6588 ;; Registers used:
  6589 ;;		wreg, status,2, status,0
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6595 ;;      Params:         8       0       0       0       0       0       0       0       0
  6596 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6597 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6598 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6599 ;;Total ram usage:       12 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:    2
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		_efgtoa
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text21
  6610  002F02                     __ptext21:
  6611                           	callstack 0
  6612  002F02                     ___flge:
  6613                           	callstack 24
  6614  002F02  0E00               	movlw	0
  6615  002F04  142B               	andwf	___flge@ff1^0,w,c
  6616  002F06  6E33               	movwf	??___flge^0,c
  6617  002F08  0E00               	movlw	0
  6618  002F0A  142C               	andwf	(___flge@ff1+1)^0,w,c
  6619  002F0C  6E34               	movwf	(??___flge+1)^0,c
  6620  002F0E  0E80               	movlw	128
  6621  002F10  142D               	andwf	(___flge@ff1+2)^0,w,c
  6622  002F12  6E35               	movwf	(??___flge+2)^0,c
  6623  002F14  0E7F               	movlw	127
  6624  002F16  142E               	andwf	(___flge@ff1+3)^0,w,c
  6625  002F18  6E36               	movwf	(??___flge+3)^0,c
  6626  002F1A  5033               	movf	??___flge^0,w,c
  6627  002F1C  1034               	iorwf	(??___flge+1)^0,w,c
  6628  002F1E  1035               	iorwf	(??___flge+2)^0,w,c
  6629  002F20  1036               	iorwf	(??___flge+3)^0,w,c
  6630  002F22  A4D8               	btfss	status,2,c
  6631  002F24  EF96  F017         	goto	u3531
  6632  002F28  EF98  F017         	goto	u3530
  6633  002F2C                     u3531:
  6634  002F2C  EFA0  F017         	goto	l3280
  6635  002F30                     u3530:
  6636  002F30  0E00               	movlw	0
  6637  002F32  6E2B               	movwf	___flge@ff1^0,c
  6638  002F34  0E00               	movlw	0
  6639  002F36  6E2C               	movwf	(___flge@ff1+1)^0,c
  6640  002F38  0E00               	movlw	0
  6641  002F3A  6E2D               	movwf	(___flge@ff1+2)^0,c
  6642  002F3C  0E00               	movlw	0
  6643  002F3E  6E2E               	movwf	(___flge@ff1+3)^0,c
  6644  002F40                     l3280:
  6645  002F40  0E00               	movlw	0
  6646  002F42  142F               	andwf	___flge@ff2^0,w,c
  6647  002F44  6E33               	movwf	??___flge^0,c
  6648  002F46  0E00               	movlw	0
  6649  002F48  1430               	andwf	(___flge@ff2+1)^0,w,c
  6650  002F4A  6E34               	movwf	(??___flge+1)^0,c
  6651  002F4C  0E80               	movlw	128
  6652  002F4E  1431               	andwf	(___flge@ff2+2)^0,w,c
  6653  002F50  6E35               	movwf	(??___flge+2)^0,c
  6654  002F52  0E7F               	movlw	127
  6655  002F54  1432               	andwf	(___flge@ff2+3)^0,w,c
  6656  002F56  6E36               	movwf	(??___flge+3)^0,c
  6657  002F58  5033               	movf	??___flge^0,w,c
  6658  002F5A  1034               	iorwf	(??___flge+1)^0,w,c
  6659  002F5C  1035               	iorwf	(??___flge+2)^0,w,c
  6660  002F5E  1036               	iorwf	(??___flge+3)^0,w,c
  6661  002F60  A4D8               	btfss	status,2,c
  6662  002F62  EFB5  F017         	goto	u3541
  6663  002F66  EFB7  F017         	goto	u3540
  6664  002F6A                     u3541:
  6665  002F6A  EFBF  F017         	goto	l3284
  6666  002F6E                     u3540:
  6667  002F6E  0E00               	movlw	0
  6668  002F70  6E2F               	movwf	___flge@ff2^0,c
  6669  002F72  0E00               	movlw	0
  6670  002F74  6E30               	movwf	(___flge@ff2+1)^0,c
  6671  002F76  0E00               	movlw	0
  6672  002F78  6E31               	movwf	(___flge@ff2+2)^0,c
  6673  002F7A  0E00               	movlw	0
  6674  002F7C  6E32               	movwf	(___flge@ff2+3)^0,c
  6675  002F7E                     l3284:
  6676  002F7E  AE2E               	btfss	(___flge@ff1+3)^0,7,c
  6677  002F80  EFC4  F017         	goto	u3551
  6678  002F84  EFC6  F017         	goto	u3550
  6679  002F88                     u3551:
  6680  002F88  EFCF  F017         	goto	l3288
  6681  002F8C                     u3550:
  6682  002F8C  6C2B               	negf	___flge@ff1^0,c
  6683  002F8E  1E2C               	comf	(___flge@ff1+1)^0,f,c
  6684  002F90  B0D8               	btfsc	status,0,c
  6685  002F92  2A2C               	incf	(___flge@ff1+1)^0,f,c
  6686  002F94  1E2D               	comf	(___flge@ff1+2)^0,f,c
  6687  002F96  B0D8               	btfsc	status,0,c
  6688  002F98  2A2D               	incf	(___flge@ff1+2)^0,f,c
  6689  002F9A  0E80               	movlw	128
  6690  002F9C  562E               	subfwb	(___flge@ff1+3)^0,f,c
  6691  002F9E                     l3288:
  6692  002F9E  AE32               	btfss	(___flge@ff2+3)^0,7,c
  6693  002FA0  EFD4  F017         	goto	u3561
  6694  002FA4  EFD6  F017         	goto	u3560
  6695  002FA8                     u3561:
  6696  002FA8  EFDF  F017         	goto	l381
  6697  002FAC                     u3560:
  6698  002FAC  6C2F               	negf	___flge@ff2^0,c
  6699  002FAE  1E30               	comf	(___flge@ff2+1)^0,f,c
  6700  002FB0  B0D8               	btfsc	status,0,c
  6701  002FB2  2A30               	incf	(___flge@ff2+1)^0,f,c
  6702  002FB4  1E31               	comf	(___flge@ff2+2)^0,f,c
  6703  002FB6  B0D8               	btfsc	status,0,c
  6704  002FB8  2A31               	incf	(___flge@ff2+2)^0,f,c
  6705  002FBA  0E80               	movlw	128
  6706  002FBC  5632               	subfwb	(___flge@ff2+3)^0,f,c
  6707  002FBE                     l381:
  6708  002FBE  0E00               	movlw	0
  6709  002FC0  1A2B               	xorwf	___flge@ff1^0,f,c
  6710  002FC2  0E00               	movlw	0
  6711  002FC4  1A2C               	xorwf	(___flge@ff1+1)^0,f,c
  6712  002FC6  0E00               	movlw	0
  6713  002FC8  1A2D               	xorwf	(___flge@ff1+2)^0,f,c
  6714  002FCA  0E80               	movlw	128
  6715  002FCC  1A2E               	xorwf	(___flge@ff1+3)^0,f,c
  6716  002FCE  0E00               	movlw	0
  6717  002FD0  1A2F               	xorwf	___flge@ff2^0,f,c
  6718  002FD2  0E00               	movlw	0
  6719  002FD4  1A30               	xorwf	(___flge@ff2+1)^0,f,c
  6720  002FD6  0E00               	movlw	0
  6721  002FD8  1A31               	xorwf	(___flge@ff2+2)^0,f,c
  6722  002FDA  0E80               	movlw	128
  6723  002FDC  1A32               	xorwf	(___flge@ff2+3)^0,f,c
  6724  002FDE  502F               	movf	___flge@ff2^0,w,c
  6725  002FE0  5C2B               	subwf	___flge@ff1^0,w,c
  6726  002FE2  5030               	movf	(___flge@ff2+1)^0,w,c
  6727  002FE4  582C               	subwfb	(___flge@ff1+1)^0,w,c
  6728  002FE6  5031               	movf	(___flge@ff2+2)^0,w,c
  6729  002FE8  582D               	subwfb	(___flge@ff1+2)^0,w,c
  6730  002FEA  5032               	movf	(___flge@ff2+3)^0,w,c
  6731  002FEC  582E               	subwfb	(___flge@ff1+3)^0,w,c
  6732  002FEE  B0D8               	btfsc	status,0,c
  6733  002FF0  EFFC  F017         	goto	u3571
  6734  002FF4  EFFE  F017         	goto	u3570
  6735  002FF8                     u3571:
  6736  002FF8  EF01  F018         	goto	l3294
  6737  002FFC                     u3570:
  6738  002FFC  90D8               	bcf	status,0,c
  6739  002FFE  EF02  F018         	goto	l386
  6740  003002                     l3294:
  6741  003002  80D8               	bsf	status,0,c
  6742  003004                     l386:
  6743  003004  0012               	return		;funcret
  6744  003006                     __end_of___flge:
  6745                           	callstack 0
  6746                           
  6747 ;; *************** function ___fleq *****************
  6748 ;; Defined at:
  6749 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  ff1             4    3[COMRAM] unsigned char 
  6752 ;;  ff2             4    7[COMRAM] unsigned char 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;		None
  6755 ;; Return value:  Size  Location     Type
  6756 ;;		None               void
  6757 ;; Registers used:
  6758 ;;		wreg, status,2, status,0
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6764 ;;      Params:         8       0       0       0       0       0       0       0       0
  6765 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6766 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6767 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6768 ;;Total ram usage:       12 bytes
  6769 ;; Hardware stack levels used:    1
  6770 ;; Hardware stack levels required when called:    2
  6771 ;; This function calls:
  6772 ;;		Nothing
  6773 ;; This function is called by:
  6774 ;;		_efgtoa
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           	psect	text22
  6779  0034DA                     __ptext22:
  6780                           	callstack 0
  6781  0034DA                     ___fleq:
  6782                           	callstack 24
  6783  0034DA  0E00               	movlw	0
  6784  0034DC  1404               	andwf	___fleq@ff1^0,w,c
  6785  0034DE  6E0C               	movwf	??___fleq^0,c
  6786  0034E0  0E00               	movlw	0
  6787  0034E2  1405               	andwf	(___fleq@ff1+1)^0,w,c
  6788  0034E4  6E0D               	movwf	(??___fleq+1)^0,c
  6789  0034E6  0E80               	movlw	128
  6790  0034E8  1406               	andwf	(___fleq@ff1+2)^0,w,c
  6791  0034EA  6E0E               	movwf	(??___fleq+2)^0,c
  6792  0034EC  0E7F               	movlw	127
  6793  0034EE  1407               	andwf	(___fleq@ff1+3)^0,w,c
  6794  0034F0  6E0F               	movwf	(??___fleq+3)^0,c
  6795  0034F2  500C               	movf	??___fleq^0,w,c
  6796  0034F4  100D               	iorwf	(??___fleq+1)^0,w,c
  6797  0034F6  100E               	iorwf	(??___fleq+2)^0,w,c
  6798  0034F8  100F               	iorwf	(??___fleq+3)^0,w,c
  6799  0034FA  A4D8               	btfss	status,2,c
  6800  0034FC  EF82  F01A         	goto	u3501
  6801  003500  EF84  F01A         	goto	u3500
  6802  003504                     u3501:
  6803  003504  EF8C  F01A         	goto	l3264
  6804  003508                     u3500:
  6805  003508  0E00               	movlw	0
  6806  00350A  6E04               	movwf	___fleq@ff1^0,c
  6807  00350C  0E00               	movlw	0
  6808  00350E  6E05               	movwf	(___fleq@ff1+1)^0,c
  6809  003510  0E00               	movlw	0
  6810  003512  6E06               	movwf	(___fleq@ff1+2)^0,c
  6811  003514  0E00               	movlw	0
  6812  003516  6E07               	movwf	(___fleq@ff1+3)^0,c
  6813  003518                     l3264:
  6814  003518  0E00               	movlw	0
  6815  00351A  1408               	andwf	___fleq@ff2^0,w,c
  6816  00351C  6E0C               	movwf	??___fleq^0,c
  6817  00351E  0E00               	movlw	0
  6818  003520  1409               	andwf	(___fleq@ff2+1)^0,w,c
  6819  003522  6E0D               	movwf	(??___fleq+1)^0,c
  6820  003524  0E80               	movlw	128
  6821  003526  140A               	andwf	(___fleq@ff2+2)^0,w,c
  6822  003528  6E0E               	movwf	(??___fleq+2)^0,c
  6823  00352A  0E7F               	movlw	127
  6824  00352C  140B               	andwf	(___fleq@ff2+3)^0,w,c
  6825  00352E  6E0F               	movwf	(??___fleq+3)^0,c
  6826  003530  500C               	movf	??___fleq^0,w,c
  6827  003532  100D               	iorwf	(??___fleq+1)^0,w,c
  6828  003534  100E               	iorwf	(??___fleq+2)^0,w,c
  6829  003536  100F               	iorwf	(??___fleq+3)^0,w,c
  6830  003538  A4D8               	btfss	status,2,c
  6831  00353A  EFA1  F01A         	goto	u3511
  6832  00353E  EFA3  F01A         	goto	u3510
  6833  003542                     u3511:
  6834  003542  EFAB  F01A         	goto	l3268
  6835  003546                     u3510:
  6836  003546  0E00               	movlw	0
  6837  003548  6E08               	movwf	___fleq@ff2^0,c
  6838  00354A  0E00               	movlw	0
  6839  00354C  6E09               	movwf	(___fleq@ff2+1)^0,c
  6840  00354E  0E00               	movlw	0
  6841  003550  6E0A               	movwf	(___fleq@ff2+2)^0,c
  6842  003552  0E00               	movlw	0
  6843  003554  6E0B               	movwf	(___fleq@ff2+3)^0,c
  6844  003556                     l3268:
  6845  003556  5008               	movf	___fleq@ff2^0,w,c
  6846  003558  1804               	xorwf	___fleq@ff1^0,w,c
  6847  00355A  E10F               	bnz	u3520
  6848  00355C  5009               	movf	(___fleq@ff2+1)^0,w,c
  6849  00355E  1805               	xorwf	(___fleq@ff1+1)^0,w,c
  6850  003560  E10C               	bnz	u3520
  6851  003562  500A               	movf	(___fleq@ff2+2)^0,w,c
  6852  003564  1806               	xorwf	(___fleq@ff1+2)^0,w,c
  6853  003566  E109               	bnz	u3520
  6854  003568  500B               	movf	(___fleq@ff2+3)^0,w,c
  6855  00356A  1807               	xorwf	(___fleq@ff1+3)^0,w,c
  6856  00356C  B4D8               	btfsc	status,2,c
  6857  00356E  EFBB  F01A         	goto	u3521
  6858  003572  EFBD  F01A         	goto	u3520
  6859  003576                     u3521:
  6860  003576  EFC0  F01A         	goto	l3272
  6861  00357A                     u3520:
  6862  00357A  90D8               	bcf	status,0,c
  6863  00357C  EFC1  F01A         	goto	l375
  6864  003580                     l3272:
  6865  003580  80D8               	bsf	status,0,c
  6866  003582                     l375:
  6867  003582  0012               	return		;funcret
  6868  003584                     __end_of___fleq:
  6869                           	callstack 0
  6870                           
  6871 ;; *************** function ___fldiv *****************
  6872 ;; Defined at:
  6873 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;  b               4    3[COMRAM] unsigned char 
  6876 ;;  a               4    7[COMRAM] unsigned char 
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;  grs             4   22[COMRAM] unsigned long 
  6879 ;;  rem             4   15[COMRAM] unsigned long 
  6880 ;;  new_exp         2   20[COMRAM] short 
  6881 ;;  aexp            1   27[COMRAM] unsigned char 
  6882 ;;  bexp            1   26[COMRAM] unsigned char 
  6883 ;;  sign            1   19[COMRAM] unsigned char 
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  4    3[COMRAM] unsigned char 
  6886 ;; Registers used:
  6887 ;;		wreg, status,2, status,0
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6893 ;;      Params:         8       0       0       0       0       0       0       0       0
  6894 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6895 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6896 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6897 ;;Total ram usage:       25 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; Hardware stack levels required when called:    2
  6900 ;; This function calls:
  6901 ;;		Nothing
  6902 ;; This function is called by:
  6903 ;;		_efgtoa
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text23
  6908  0021E6                     __ptext23:
  6909                           	callstack 0
  6910  0021E6                     ___fldiv:
  6911                           	callstack 24
  6912  0021E6  5007               	movf	(___fldiv@b+3)^0,w,c
  6913  0021E8  0B80               	andlw	128
  6914  0021EA  6E14               	movwf	___fldiv@sign^0,c
  6915  0021EC  5007               	movf	(___fldiv@b+3)^0,w,c
  6916  0021EE  2407               	addwf	(___fldiv@b+3)^0,w,c
  6917  0021F0  6E1B               	movwf	___fldiv@bexp^0,c
  6918  0021F2  AE06               	btfss	(___fldiv@b+2)^0,7,c
  6919  0021F4  EFFE  F010         	goto	u2961
  6920  0021F8  EF00  F011         	goto	u2960
  6921  0021FC                     u2961:
  6922  0021FC  EF01  F011         	goto	l2912
  6923  002200                     u2960:
  6924  002200  801B               	bsf	___fldiv@bexp^0,0,c
  6925  002202                     l2912:
  6926  002202  501B               	movf	___fldiv@bexp^0,w,c
  6927  002204  B4D8               	btfsc	status,2,c
  6928  002206  EF07  F011         	goto	u2971
  6929  00220A  EF09  F011         	goto	u2970
  6930  00220E                     u2971:
  6931  00220E  EF1E  F011         	goto	l2922
  6932  002212                     u2970:
  6933  002212  281B               	incf	___fldiv@bexp^0,w,c
  6934  002214  A4D8               	btfss	status,2,c
  6935  002216  EF0F  F011         	goto	u2981
  6936  00221A  EF11  F011         	goto	u2980
  6937  00221E                     u2981:
  6938  00221E  EF19  F011         	goto	l2918
  6939  002222                     u2980:
  6940  002222  0E00               	movlw	0
  6941  002224  6E04               	movwf	___fldiv@b^0,c
  6942  002226  0E00               	movlw	0
  6943  002228  6E05               	movwf	(___fldiv@b+1)^0,c
  6944  00222A  0E00               	movlw	0
  6945  00222C  6E06               	movwf	(___fldiv@b+2)^0,c
  6946  00222E  0E00               	movlw	0
  6947  002230  6E07               	movwf	(___fldiv@b+3)^0,c
  6948  002232                     l2918:
  6949  002232  8E06               	bsf	(___fldiv@b+2)^0,7,c
  6950  002234  0E00               	movlw	0
  6951  002236  6E07               	movwf	(___fldiv@b+3)^0,c
  6952  002238  EF26  F011         	goto	l2924
  6953  00223C                     l2922:
  6954  00223C  0E00               	movlw	0
  6955  00223E  6E04               	movwf	___fldiv@b^0,c
  6956  002240  0E00               	movlw	0
  6957  002242  6E05               	movwf	(___fldiv@b+1)^0,c
  6958  002244  0E00               	movlw	0
  6959  002246  6E06               	movwf	(___fldiv@b+2)^0,c
  6960  002248  0E00               	movlw	0
  6961  00224A  6E07               	movwf	(___fldiv@b+3)^0,c
  6962  00224C                     l2924:
  6963  00224C  500B               	movf	(___fldiv@a+3)^0,w,c
  6964  00224E  0B80               	andlw	128
  6965  002250  1A14               	xorwf	___fldiv@sign^0,f,c
  6966  002252  500B               	movf	(___fldiv@a+3)^0,w,c
  6967  002254  240B               	addwf	(___fldiv@a+3)^0,w,c
  6968  002256  6E1C               	movwf	___fldiv@aexp^0,c
  6969  002258  AE0A               	btfss	(___fldiv@a+2)^0,7,c
  6970  00225A  EF31  F011         	goto	u2991
  6971  00225E  EF33  F011         	goto	u2990
  6972  002262                     u2991:
  6973  002262  EF34  F011         	goto	l2932
  6974  002266                     u2990:
  6975  002266  801C               	bsf	___fldiv@aexp^0,0,c
  6976  002268                     l2932:
  6977  002268  501C               	movf	___fldiv@aexp^0,w,c
  6978  00226A  B4D8               	btfsc	status,2,c
  6979  00226C  EF3A  F011         	goto	u3001
  6980  002270  EF3C  F011         	goto	u3000
  6981  002274                     u3001:
  6982  002274  EF51  F011         	goto	l2942
  6983  002278                     u3000:
  6984  002278  281C               	incf	___fldiv@aexp^0,w,c
  6985  00227A  A4D8               	btfss	status,2,c
  6986  00227C  EF42  F011         	goto	u3011
  6987  002280  EF44  F011         	goto	u3010
  6988  002284                     u3011:
  6989  002284  EF4C  F011         	goto	l2938
  6990  002288                     u3010:
  6991  002288  0E00               	movlw	0
  6992  00228A  6E08               	movwf	___fldiv@a^0,c
  6993  00228C  0E00               	movlw	0
  6994  00228E  6E09               	movwf	(___fldiv@a+1)^0,c
  6995  002290  0E00               	movlw	0
  6996  002292  6E0A               	movwf	(___fldiv@a+2)^0,c
  6997  002294  0E00               	movlw	0
  6998  002296  6E0B               	movwf	(___fldiv@a+3)^0,c
  6999  002298                     l2938:
  7000  002298  8E0A               	bsf	(___fldiv@a+2)^0,7,c
  7001  00229A  0E00               	movlw	0
  7002  00229C  6E0B               	movwf	(___fldiv@a+3)^0,c
  7003  00229E  EF59  F011         	goto	l2944
  7004  0022A2                     l2942:
  7005  0022A2  0E00               	movlw	0
  7006  0022A4  6E08               	movwf	___fldiv@a^0,c
  7007  0022A6  0E00               	movlw	0
  7008  0022A8  6E09               	movwf	(___fldiv@a+1)^0,c
  7009  0022AA  0E00               	movlw	0
  7010  0022AC  6E0A               	movwf	(___fldiv@a+2)^0,c
  7011  0022AE  0E00               	movlw	0
  7012  0022B0  6E0B               	movwf	(___fldiv@a+3)^0,c
  7013  0022B2                     l2944:
  7014  0022B2  5008               	movf	___fldiv@a^0,w,c
  7015  0022B4  1009               	iorwf	(___fldiv@a+1)^0,w,c
  7016  0022B6  100A               	iorwf	(___fldiv@a+2)^0,w,c
  7017  0022B8  100B               	iorwf	(___fldiv@a+3)^0,w,c
  7018  0022BA  A4D8               	btfss	status,2,c
  7019  0022BC  EF62  F011         	goto	u3021
  7020  0022C0  EF64  F011         	goto	u3020
  7021  0022C4                     u3021:
  7022  0022C4  EF7C  F011         	goto	l2956
  7023  0022C8                     u3020:
  7024  0022C8  0E00               	movlw	0
  7025  0022CA  6E04               	movwf	___fldiv@b^0,c
  7026  0022CC  0E00               	movlw	0
  7027  0022CE  6E05               	movwf	(___fldiv@b+1)^0,c
  7028  0022D0  0E00               	movlw	0
  7029  0022D2  6E06               	movwf	(___fldiv@b+2)^0,c
  7030  0022D4  0E00               	movlw	0
  7031  0022D6  6E07               	movwf	(___fldiv@b+3)^0,c
  7032  0022D8  0E80               	movlw	128
  7033  0022DA  1206               	iorwf	(___fldiv@b+2)^0,f,c
  7034  0022DC  0E7F               	movlw	127
  7035  0022DE  1207               	iorwf	(___fldiv@b+3)^0,f,c
  7036  0022E0                     l2950:
  7037  0022E0  5014               	movf	___fldiv@sign^0,w,c
  7038  0022E2  1207               	iorwf	(___fldiv@b+3)^0,f,c
  7039  0022E4  C004  F004         	movff	___fldiv@b,?___fldiv
  7040  0022E8  C005  F005         	movff	___fldiv@b+1,?___fldiv+1
  7041  0022EC  C006  F006         	movff	___fldiv@b+2,?___fldiv+2
  7042  0022F0  C007  F007         	movff	___fldiv@b+3,?___fldiv+3
  7043  0022F4  EFBF  F012         	goto	l698
  7044  0022F8                     l2956:
  7045  0022F8  501B               	movf	___fldiv@bexp^0,w,c
  7046  0022FA  A4D8               	btfss	status,2,c
  7047  0022FC  EF82  F011         	goto	u3031
  7048  002300  EF84  F011         	goto	u3030
  7049  002304                     u3031:
  7050  002304  EF8E  F011         	goto	l2964
  7051  002308                     u3030:
  7052  002308  0E00               	movlw	0
  7053  00230A  6E04               	movwf	?___fldiv^0,c
  7054  00230C  0E00               	movlw	0
  7055  00230E  6E05               	movwf	(?___fldiv+1)^0,c
  7056  002310  0E00               	movlw	0
  7057  002312  6E06               	movwf	(?___fldiv+2)^0,c
  7058  002314  0E00               	movlw	0
  7059  002316  6E07               	movwf	(?___fldiv+3)^0,c
  7060  002318  EFBF  F012         	goto	l698
  7061  00231C                     l2964:
  7062  00231C  501C               	movf	___fldiv@aexp^0,w,c
  7063  00231E  C01B  F00C         	movff	___fldiv@bexp,??___fldiv
  7064  002322  6A0D               	clrf	(??___fldiv+1)^0,c
  7065  002324  5E0C               	subwf	??___fldiv^0,f,c
  7066  002326  0E00               	movlw	0
  7067  002328  5A0D               	subwfb	(??___fldiv+1)^0,f,c
  7068  00232A  0E7F               	movlw	127
  7069  00232C  240C               	addwf	??___fldiv^0,w,c
  7070  00232E  6E15               	movwf	___fldiv@new_exp^0,c
  7071  002330  0E00               	movlw	0
  7072  002332  200D               	addwfc	(??___fldiv+1)^0,w,c
  7073  002334  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  7074  002336  C004  F010         	movff	___fldiv@b,___fldiv@rem
  7075  00233A  C005  F011         	movff	___fldiv@b+1,___fldiv@rem+1
  7076  00233E  C006  F012         	movff	___fldiv@b+2,___fldiv@rem+2
  7077  002342  C007  F013         	movff	___fldiv@b+3,___fldiv@rem+3
  7078  002346  0E00               	movlw	0
  7079  002348  6E04               	movwf	___fldiv@b^0,c
  7080  00234A  0E00               	movlw	0
  7081  00234C  6E05               	movwf	(___fldiv@b+1)^0,c
  7082  00234E  0E00               	movlw	0
  7083  002350  6E06               	movwf	(___fldiv@b+2)^0,c
  7084  002352  0E00               	movlw	0
  7085  002354  6E07               	movwf	(___fldiv@b+3)^0,c
  7086  002356  0E00               	movlw	0
  7087  002358  6E17               	movwf	___fldiv@grs^0,c
  7088  00235A  0E00               	movlw	0
  7089  00235C  6E18               	movwf	(___fldiv@grs+1)^0,c
  7090  00235E  0E00               	movlw	0
  7091  002360  6E19               	movwf	(___fldiv@grs+2)^0,c
  7092  002362  0E00               	movlw	0
  7093  002364  6E1A               	movwf	(___fldiv@grs+3)^0,c
  7094  002366  0E00               	movlw	0
  7095  002368  6E1C               	movwf	___fldiv@aexp^0,c
  7096  00236A  EFEF  F011         	goto	l700
  7097  00236E                     l2974:
  7098  00236E  501C               	movf	___fldiv@aexp^0,w,c
  7099  002370  B4D8               	btfsc	status,2,c
  7100  002372  EFBD  F011         	goto	u3041
  7101  002376  EFBF  F011         	goto	u3040
  7102  00237A                     u3041:
  7103  00237A  EFD6  F011         	goto	l2982
  7104  00237E                     u3040:
  7105  00237E  90D8               	bcf	status,0,c
  7106  002380  3610               	rlcf	___fldiv@rem^0,f,c
  7107  002382  3611               	rlcf	(___fldiv@rem+1)^0,f,c
  7108  002384  3612               	rlcf	(___fldiv@rem+2)^0,f,c
  7109  002386  3613               	rlcf	(___fldiv@rem+3)^0,f,c
  7110  002388  90D8               	bcf	status,0,c
  7111  00238A  3604               	rlcf	___fldiv@b^0,f,c
  7112  00238C  3605               	rlcf	(___fldiv@b+1)^0,f,c
  7113  00238E  3606               	rlcf	(___fldiv@b+2)^0,f,c
  7114  002390  3607               	rlcf	(___fldiv@b+3)^0,f,c
  7115  002392  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  7116  002394  EFCE  F011         	goto	u3051
  7117  002398  EFD0  F011         	goto	u3050
  7118  00239C                     u3051:
  7119  00239C  EFD1  F011         	goto	l703
  7120  0023A0                     u3050:
  7121  0023A0  8004               	bsf	___fldiv@b^0,0,c
  7122  0023A2                     l703:
  7123  0023A2  90D8               	bcf	status,0,c
  7124  0023A4  3617               	rlcf	___fldiv@grs^0,f,c
  7125  0023A6  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  7126  0023A8  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  7127  0023AA  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  7128  0023AC                     l2982:
  7129  0023AC  5008               	movf	___fldiv@a^0,w,c
  7130  0023AE  5C10               	subwf	___fldiv@rem^0,w,c
  7131  0023B0  5009               	movf	(___fldiv@a+1)^0,w,c
  7132  0023B2  5811               	subwfb	(___fldiv@rem+1)^0,w,c
  7133  0023B4  500A               	movf	(___fldiv@a+2)^0,w,c
  7134  0023B6  5812               	subwfb	(___fldiv@rem+2)^0,w,c
  7135  0023B8  500B               	movf	(___fldiv@a+3)^0,w,c
  7136  0023BA  5813               	subwfb	(___fldiv@rem+3)^0,w,c
  7137  0023BC  A0D8               	btfss	status,0,c
  7138  0023BE  EFE3  F011         	goto	u3061
  7139  0023C2  EFE5  F011         	goto	u3060
  7140  0023C6                     u3061:
  7141  0023C6  EFEE  F011         	goto	l2988
  7142  0023CA                     u3060:
  7143  0023CA  8C1A               	bsf	(___fldiv@grs+3)^0,6,c
  7144  0023CC  5008               	movf	___fldiv@a^0,w,c
  7145  0023CE  5E10               	subwf	___fldiv@rem^0,f,c
  7146  0023D0  5009               	movf	(___fldiv@a+1)^0,w,c
  7147  0023D2  5A11               	subwfb	(___fldiv@rem+1)^0,f,c
  7148  0023D4  500A               	movf	(___fldiv@a+2)^0,w,c
  7149  0023D6  5A12               	subwfb	(___fldiv@rem+2)^0,f,c
  7150  0023D8  500B               	movf	(___fldiv@a+3)^0,w,c
  7151  0023DA  5A13               	subwfb	(___fldiv@rem+3)^0,f,c
  7152  0023DC                     l2988:
  7153  0023DC  2A1C               	incf	___fldiv@aexp^0,f,c
  7154  0023DE                     l700:
  7155  0023DE  0E19               	movlw	25
  7156  0023E0  641C               	cpfsgt	___fldiv@aexp^0,c
  7157  0023E2  EFF5  F011         	goto	u3071
  7158  0023E6  EFF7  F011         	goto	u3070
  7159  0023EA                     u3071:
  7160  0023EA  EFB7  F011         	goto	l2974
  7161  0023EE                     u3070:
  7162  0023EE  5010               	movf	___fldiv@rem^0,w,c
  7163  0023F0  1011               	iorwf	(___fldiv@rem+1)^0,w,c
  7164  0023F2  1012               	iorwf	(___fldiv@rem+2)^0,w,c
  7165  0023F4  1013               	iorwf	(___fldiv@rem+3)^0,w,c
  7166  0023F6  B4D8               	btfsc	status,2,c
  7167  0023F8  EF00  F012         	goto	u3081
  7168  0023FC  EF02  F012         	goto	u3080
  7169  002400                     u3081:
  7170  002400  EF1A  F012         	goto	l3000
  7171  002404                     u3080:
  7172  002404  8017               	bsf	___fldiv@grs^0,0,c
  7173  002406  EF1A  F012         	goto	l3000
  7174  00240A                     l2994:
  7175  00240A  90D8               	bcf	status,0,c
  7176  00240C  3604               	rlcf	___fldiv@b^0,f,c
  7177  00240E  3605               	rlcf	(___fldiv@b+1)^0,f,c
  7178  002410  3606               	rlcf	(___fldiv@b+2)^0,f,c
  7179  002412  3607               	rlcf	(___fldiv@b+3)^0,f,c
  7180  002414  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  7181  002416  EF0F  F012         	goto	u3091
  7182  00241A  EF11  F012         	goto	u3090
  7183  00241E                     u3091:
  7184  00241E  EF12  F012         	goto	l709
  7185  002422                     u3090:
  7186  002422  8004               	bsf	___fldiv@b^0,0,c
  7187  002424                     l709:
  7188  002424  90D8               	bcf	status,0,c
  7189  002426  3617               	rlcf	___fldiv@grs^0,f,c
  7190  002428  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  7191  00242A  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  7192  00242C  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  7193  00242E  0615               	decf	___fldiv@new_exp^0,f,c
  7194  002430  A0D8               	btfss	status,0,c
  7195  002432  0616               	decf	(___fldiv@new_exp+1)^0,f,c
  7196  002434                     l3000:
  7197  002434  AE06               	btfss	(___fldiv@b+2)^0,7,c
  7198  002436  EF1F  F012         	goto	u3101
  7199  00243A  EF21  F012         	goto	u3100
  7200  00243E                     u3101:
  7201  00243E  EF05  F012         	goto	l2994
  7202  002442                     u3100:
  7203  002442  0E00               	movlw	0
  7204  002444  6E1C               	movwf	___fldiv@aexp^0,c
  7205  002446  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  7206  002448  EF28  F012         	goto	u3111
  7207  00244C  EF2A  F012         	goto	u3110
  7208  002450                     u3111:
  7209  002450  EF4E  F012         	goto	l711
  7210  002454                     u3110:
  7211  002454  0EFF               	movlw	255
  7212  002456  1417               	andwf	___fldiv@grs^0,w,c
  7213  002458  6E0C               	movwf	??___fldiv^0,c
  7214  00245A  0EFF               	movlw	255
  7215  00245C  1418               	andwf	(___fldiv@grs+1)^0,w,c
  7216  00245E  6E0D               	movwf	(??___fldiv+1)^0,c
  7217  002460  0EFF               	movlw	255
  7218  002462  1419               	andwf	(___fldiv@grs+2)^0,w,c
  7219  002464  6E0E               	movwf	(??___fldiv+2)^0,c
  7220  002466  0E7F               	movlw	127
  7221  002468  141A               	andwf	(___fldiv@grs+3)^0,w,c
  7222  00246A  6E0F               	movwf	(??___fldiv+3)^0,c
  7223  00246C  500C               	movf	??___fldiv^0,w,c
  7224  00246E  100D               	iorwf	(??___fldiv+1)^0,w,c
  7225  002470  100E               	iorwf	(??___fldiv+2)^0,w,c
  7226  002472  100F               	iorwf	(??___fldiv+3)^0,w,c
  7227  002474  B4D8               	btfsc	status,2,c
  7228  002476  EF3F  F012         	goto	u3121
  7229  00247A  EF41  F012         	goto	u3120
  7230  00247E                     u3121:
  7231  00247E  EF45  F012         	goto	l712
  7232  002482                     u3120:
  7233  002482                     l3008:
  7234  002482  0E01               	movlw	1
  7235  002484  6E1C               	movwf	___fldiv@aexp^0,c
  7236  002486  EF4E  F012         	goto	l711
  7237  00248A                     l712:
  7238  00248A  A004               	btfss	___fldiv@b^0,0,c
  7239  00248C  EF4A  F012         	goto	u3131
  7240  002490  EF4C  F012         	goto	u3130
  7241  002494                     u3131:
  7242  002494  EF4E  F012         	goto	l711
  7243  002498                     u3130:
  7244  002498  EF41  F012         	goto	l3008
  7245  00249C                     l711:
  7246  00249C  501C               	movf	___fldiv@aexp^0,w,c
  7247  00249E  B4D8               	btfsc	status,2,c
  7248  0024A0  EF54  F012         	goto	u3141
  7249  0024A4  EF56  F012         	goto	u3140
  7250  0024A8                     u3141:
  7251  0024A8  EF7A  F012         	goto	l3020
  7252  0024AC                     u3140:
  7253  0024AC  0E01               	movlw	1
  7254  0024AE  2604               	addwf	___fldiv@b^0,f,c
  7255  0024B0  0E00               	movlw	0
  7256  0024B2  2205               	addwfc	(___fldiv@b+1)^0,f,c
  7257  0024B4  2206               	addwfc	(___fldiv@b+2)^0,f,c
  7258  0024B6  2207               	addwfc	(___fldiv@b+3)^0,f,c
  7259  0024B8  A007               	btfss	(___fldiv@b+3)^0,0,c
  7260  0024BA  EF61  F012         	goto	u3151
  7261  0024BE  EF63  F012         	goto	u3150
  7262  0024C2                     u3151:
  7263  0024C2  EF7A  F012         	goto	l3020
  7264  0024C6                     u3150:
  7265  0024C6  C004  F00C         	movff	___fldiv@b,??___fldiv
  7266  0024CA  C005  F00D         	movff	___fldiv@b+1,??___fldiv+1
  7267  0024CE  C006  F00E         	movff	___fldiv@b+2,??___fldiv+2
  7268  0024D2  C007  F00F         	movff	___fldiv@b+3,??___fldiv+3
  7269  0024D6  340F               	rlcf	(??___fldiv+3)^0,w,c
  7270  0024D8  320F               	rrcf	(??___fldiv+3)^0,f,c
  7271  0024DA  320E               	rrcf	(??___fldiv+2)^0,f,c
  7272  0024DC  320D               	rrcf	(??___fldiv+1)^0,f,c
  7273  0024DE  320C               	rrcf	??___fldiv^0,f,c
  7274  0024E0  C00C  F004         	movff	??___fldiv,___fldiv@b
  7275  0024E4  C00D  F005         	movff	??___fldiv+1,___fldiv@b+1
  7276  0024E8  C00E  F006         	movff	??___fldiv+2,___fldiv@b+2
  7277  0024EC  C00F  F007         	movff	??___fldiv+3,___fldiv@b+3
  7278  0024F0  4A15               	infsnz	___fldiv@new_exp^0,f,c
  7279  0024F2  2A16               	incf	(___fldiv@new_exp+1)^0,f,c
  7280  0024F4                     l3020:
  7281  0024F4  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7282  0024F6  EF85  F012         	goto	u3161
  7283  0024FA  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  7284  0024FC  E108               	bnz	u3160
  7285  0024FE  2815               	incf	___fldiv@new_exp^0,w,c
  7286  002500  A0D8               	btfss	status,0,c
  7287  002502  EF85  F012         	goto	u3161
  7288  002506  EF87  F012         	goto	u3160
  7289  00250A                     u3161:
  7290  00250A  EF92  F012         	goto	l3024
  7291  00250E                     u3160:
  7292  00250E  0E00               	movlw	0
  7293  002510  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  7294  002512  6815               	setf	___fldiv@new_exp^0,c
  7295  002514  0E00               	movlw	0
  7296  002516  6E04               	movwf	___fldiv@b^0,c
  7297  002518  0E00               	movlw	0
  7298  00251A  6E05               	movwf	(___fldiv@b+1)^0,c
  7299  00251C  0E00               	movlw	0
  7300  00251E  6E06               	movwf	(___fldiv@b+2)^0,c
  7301  002520  0E00               	movlw	0
  7302  002522  6E07               	movwf	(___fldiv@b+3)^0,c
  7303  002524                     l3024:
  7304  002524  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7305  002526  EF9F  F012         	goto	u3170
  7306  00252A  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  7307  00252C  E106               	bnz	u3171
  7308  00252E  0415               	decf	___fldiv@new_exp^0,w,c
  7309  002530  B0D8               	btfsc	status,0,c
  7310  002532  EF9D  F012         	goto	u3171
  7311  002536  EF9F  F012         	goto	u3170
  7312  00253A                     u3171:
  7313  00253A  EFAD  F012         	goto	l3028
  7314  00253E                     u3170:
  7315  00253E  0E00               	movlw	0
  7316  002540  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  7317  002542  0E00               	movlw	0
  7318  002544  6E15               	movwf	___fldiv@new_exp^0,c
  7319  002546  0E00               	movlw	0
  7320  002548  6E04               	movwf	___fldiv@b^0,c
  7321  00254A  0E00               	movlw	0
  7322  00254C  6E05               	movwf	(___fldiv@b+1)^0,c
  7323  00254E  0E00               	movlw	0
  7324  002550  6E06               	movwf	(___fldiv@b+2)^0,c
  7325  002552  0E00               	movlw	0
  7326  002554  6E07               	movwf	(___fldiv@b+3)^0,c
  7327  002556  0E00               	movlw	0
  7328  002558  6E14               	movwf	___fldiv@sign^0,c
  7329  00255A                     l3028:
  7330  00255A  C015  F01B         	movff	___fldiv@new_exp,___fldiv@bexp
  7331  00255E  A01B               	btfss	___fldiv@bexp^0,0,c
  7332  002560  EFB4  F012         	goto	u3181
  7333  002564  EFB6  F012         	goto	u3180
  7334  002568                     u3181:
  7335  002568  EFB9  F012         	goto	l3034
  7336  00256C                     u3180:
  7337  00256C  8E06               	bsf	(___fldiv@b+2)^0,7,c
  7338  00256E  EFBA  F012         	goto	l3036
  7339  002572                     l3034:
  7340  002572  9E06               	bcf	(___fldiv@b+2)^0,7,c
  7341  002574                     l3036:
  7342  002574  90D8               	bcf	status,0,c
  7343  002576  301B               	rrcf	___fldiv@bexp^0,w,c
  7344  002578  6E07               	movwf	(___fldiv@b+3)^0,c
  7345  00257A  EF70  F011         	goto	l2950
  7346  00257E                     l698:
  7347  00257E  0012               	return		;funcret
  7348  002580                     __end_of___fldiv:
  7349                           	callstack 0
  7350                           
  7351 ;; *************** function ___awmod *****************
  7352 ;; Defined at:
  7353 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;  dividend        2    3[COMRAM] int 
  7356 ;;  divisor         2    5[COMRAM] int 
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;  sign            1    8[COMRAM] unsigned char 
  7359 ;;  counter         1    7[COMRAM] unsigned char 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  2    3[COMRAM] int 
  7362 ;; Registers used:
  7363 ;;		wreg, status,2, status,0
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7369 ;;      Params:         4       0       0       0       0       0       0       0       0
  7370 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7371 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7372 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7373 ;;Total ram usage:        6 bytes
  7374 ;; Hardware stack levels used:    1
  7375 ;; Hardware stack levels required when called:    2
  7376 ;; This function calls:
  7377 ;;		Nothing
  7378 ;; This function is called by:
  7379 ;;		_efgtoa
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           	psect	text24
  7384  00342A                     __ptext24:
  7385                           	callstack 0
  7386  00342A                     ___awmod:
  7387                           	callstack 24
  7388  00342A  0E00               	movlw	0
  7389  00342C  6E09               	movwf	___awmod@sign^0,c
  7390  00342E  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  7391  003430  EF1E  F01A         	goto	u3440
  7392  003434  EF1C  F01A         	goto	u3441
  7393  003438                     u3441:
  7394  003438  EF24  F01A         	goto	l3232
  7395  00343C                     u3440:
  7396  00343C  6C04               	negf	___awmod@dividend^0,c
  7397  00343E  1E05               	comf	(___awmod@dividend+1)^0,f,c
  7398  003440  B0D8               	btfsc	status,0,c
  7399  003442  2A05               	incf	(___awmod@dividend+1)^0,f,c
  7400  003444  0E01               	movlw	1
  7401  003446  6E09               	movwf	___awmod@sign^0,c
  7402  003448                     l3232:
  7403  003448  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  7404  00344A  EF2B  F01A         	goto	u3450
  7405  00344E  EF29  F01A         	goto	u3451
  7406  003452                     u3451:
  7407  003452  EF2F  F01A         	goto	l3236
  7408  003456                     u3450:
  7409  003456  6C06               	negf	___awmod@divisor^0,c
  7410  003458  1E07               	comf	(___awmod@divisor+1)^0,f,c
  7411  00345A  B0D8               	btfsc	status,0,c
  7412  00345C  2A07               	incf	(___awmod@divisor+1)^0,f,c
  7413  00345E                     l3236:
  7414  00345E  5006               	movf	___awmod@divisor^0,w,c
  7415  003460  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  7416  003462  B4D8               	btfsc	status,2,c
  7417  003464  EF36  F01A         	goto	u3461
  7418  003468  EF38  F01A         	goto	u3460
  7419  00346C                     u3461:
  7420  00346C  EF5C  F01A         	goto	l3252
  7421  003470                     u3460:
  7422  003470  0E01               	movlw	1
  7423  003472  6E08               	movwf	___awmod@counter^0,c
  7424  003474  EF40  F01A         	goto	l3242
  7425  003478                     l3240:
  7426  003478  90D8               	bcf	status,0,c
  7427  00347A  3606               	rlcf	___awmod@divisor^0,f,c
  7428  00347C  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  7429  00347E  2A08               	incf	___awmod@counter^0,f,c
  7430  003480                     l3242:
  7431  003480  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  7432  003482  EF45  F01A         	goto	u3471
  7433  003486  EF47  F01A         	goto	u3470
  7434  00348A                     u3471:
  7435  00348A  EF3C  F01A         	goto	l3240
  7436  00348E                     u3470:
  7437  00348E                     l3244:
  7438  00348E  5006               	movf	___awmod@divisor^0,w,c
  7439  003490  5C04               	subwf	___awmod@dividend^0,w,c
  7440  003492  5007               	movf	(___awmod@divisor+1)^0,w,c
  7441  003494  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  7442  003496  A0D8               	btfss	status,0,c
  7443  003498  EF50  F01A         	goto	u3481
  7444  00349C  EF52  F01A         	goto	u3480
  7445  0034A0                     u3481:
  7446  0034A0  EF56  F01A         	goto	l3248
  7447  0034A4                     u3480:
  7448  0034A4  5006               	movf	___awmod@divisor^0,w,c
  7449  0034A6  5E04               	subwf	___awmod@dividend^0,f,c
  7450  0034A8  5007               	movf	(___awmod@divisor+1)^0,w,c
  7451  0034AA  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  7452  0034AC                     l3248:
  7453  0034AC  90D8               	bcf	status,0,c
  7454  0034AE  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  7455  0034B0  3206               	rrcf	___awmod@divisor^0,f,c
  7456  0034B2  2E08               	decfsz	___awmod@counter^0,f,c
  7457  0034B4  EF47  F01A         	goto	l3244
  7458  0034B8                     l3252:
  7459  0034B8  5009               	movf	___awmod@sign^0,w,c
  7460  0034BA  B4D8               	btfsc	status,2,c
  7461  0034BC  EF62  F01A         	goto	u3491
  7462  0034C0  EF64  F01A         	goto	u3490
  7463  0034C4                     u3491:
  7464  0034C4  EF68  F01A         	goto	l3256
  7465  0034C8                     u3490:
  7466  0034C8  6C04               	negf	___awmod@dividend^0,c
  7467  0034CA  1E05               	comf	(___awmod@dividend+1)^0,f,c
  7468  0034CC  B0D8               	btfsc	status,0,c
  7469  0034CE  2A05               	incf	(___awmod@dividend+1)^0,f,c
  7470  0034D0                     l3256:
  7471  0034D0  C004  F004         	movff	___awmod@dividend,?___awmod
  7472  0034D4  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  7473  0034D8  0012               	return		;funcret
  7474  0034DA                     __end_of___awmod:
  7475                           	callstack 0
  7476                           
  7477 ;; *************** function ___awdiv *****************
  7478 ;; Defined at:
  7479 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;  dividend        2    3[COMRAM] int 
  7482 ;;  divisor         2    5[COMRAM] int 
  7483 ;; Auto vars:     Size  Location     Type
  7484 ;;  quotient        2    9[COMRAM] int 
  7485 ;;  sign            1    8[COMRAM] unsigned char 
  7486 ;;  counter         1    7[COMRAM] unsigned char 
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  2    3[COMRAM] int 
  7489 ;; Registers used:
  7490 ;;		wreg, status,2, status,0
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7496 ;;      Params:         4       0       0       0       0       0       0       0       0
  7497 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7499 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7500 ;;Total ram usage:        8 bytes
  7501 ;; Hardware stack levels used:    1
  7502 ;; Hardware stack levels required when called:    2
  7503 ;; This function calls:
  7504 ;;		Nothing
  7505 ;; This function is called by:
  7506 ;;		_efgtoa
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           	psect	text25
  7511  0032A4                     __ptext25:
  7512                           	callstack 0
  7513  0032A4                     ___awdiv:
  7514                           	callstack 24
  7515  0032A4  0E00               	movlw	0
  7516  0032A6  6E09               	movwf	___awdiv@sign^0,c
  7517  0032A8  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  7518  0032AA  EF5B  F019         	goto	u3380
  7519  0032AE  EF59  F019         	goto	u3381
  7520  0032B2                     u3381:
  7521  0032B2  EF61  F019         	goto	l3188
  7522  0032B6                     u3380:
  7523  0032B6  6C06               	negf	___awdiv@divisor^0,c
  7524  0032B8  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  7525  0032BA  B0D8               	btfsc	status,0,c
  7526  0032BC  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  7527  0032BE  0E01               	movlw	1
  7528  0032C0  6E09               	movwf	___awdiv@sign^0,c
  7529  0032C2                     l3188:
  7530  0032C2  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  7531  0032C4  EF68  F019         	goto	u3390
  7532  0032C8  EF66  F019         	goto	u3391
  7533  0032CC                     u3391:
  7534  0032CC  EF6E  F019         	goto	l3194
  7535  0032D0                     u3390:
  7536  0032D0  6C04               	negf	___awdiv@dividend^0,c
  7537  0032D2  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  7538  0032D4  B0D8               	btfsc	status,0,c
  7539  0032D6  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  7540  0032D8  0E01               	movlw	1
  7541  0032DA  1A09               	xorwf	___awdiv@sign^0,f,c
  7542  0032DC                     l3194:
  7543  0032DC  0E00               	movlw	0
  7544  0032DE  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  7545  0032E0  0E00               	movlw	0
  7546  0032E2  6E0A               	movwf	___awdiv@quotient^0,c
  7547  0032E4  5006               	movf	___awdiv@divisor^0,w,c
  7548  0032E6  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  7549  0032E8  B4D8               	btfsc	status,2,c
  7550  0032EA  EF79  F019         	goto	u3401
  7551  0032EE  EF7B  F019         	goto	u3400
  7552  0032F2                     u3401:
  7553  0032F2  EFA3  F019         	goto	l3216
  7554  0032F6                     u3400:
  7555  0032F6  0E01               	movlw	1
  7556  0032F8  6E08               	movwf	___awdiv@counter^0,c
  7557  0032FA  EF83  F019         	goto	l3202
  7558  0032FE                     l3200:
  7559  0032FE  90D8               	bcf	status,0,c
  7560  003300  3606               	rlcf	___awdiv@divisor^0,f,c
  7561  003302  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  7562  003304  2A08               	incf	___awdiv@counter^0,f,c
  7563  003306                     l3202:
  7564  003306  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  7565  003308  EF88  F019         	goto	u3411
  7566  00330C  EF8A  F019         	goto	u3410
  7567  003310                     u3411:
  7568  003310  EF7F  F019         	goto	l3200
  7569  003314                     u3410:
  7570  003314                     l3204:
  7571  003314  90D8               	bcf	status,0,c
  7572  003316  360A               	rlcf	___awdiv@quotient^0,f,c
  7573  003318  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  7574  00331A  5006               	movf	___awdiv@divisor^0,w,c
  7575  00331C  5C04               	subwf	___awdiv@dividend^0,w,c
  7576  00331E  5007               	movf	(___awdiv@divisor+1)^0,w,c
  7577  003320  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  7578  003322  A0D8               	btfss	status,0,c
  7579  003324  EF96  F019         	goto	u3421
  7580  003328  EF98  F019         	goto	u3420
  7581  00332C                     u3421:
  7582  00332C  EF9D  F019         	goto	l3212
  7583  003330                     u3420:
  7584  003330  5006               	movf	___awdiv@divisor^0,w,c
  7585  003332  5E04               	subwf	___awdiv@dividend^0,f,c
  7586  003334  5007               	movf	(___awdiv@divisor+1)^0,w,c
  7587  003336  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  7588  003338  800A               	bsf	___awdiv@quotient^0,0,c
  7589  00333A                     l3212:
  7590  00333A  90D8               	bcf	status,0,c
  7591  00333C  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  7592  00333E  3206               	rrcf	___awdiv@divisor^0,f,c
  7593  003340  2E08               	decfsz	___awdiv@counter^0,f,c
  7594  003342  EF8A  F019         	goto	l3204
  7595  003346                     l3216:
  7596  003346  5009               	movf	___awdiv@sign^0,w,c
  7597  003348  B4D8               	btfsc	status,2,c
  7598  00334A  EFA9  F019         	goto	u3431
  7599  00334E  EFAB  F019         	goto	u3430
  7600  003352                     u3431:
  7601  003352  EFAF  F019         	goto	l3220
  7602  003356                     u3430:
  7603  003356  6C0A               	negf	___awdiv@quotient^0,c
  7604  003358  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  7605  00335A  B0D8               	btfsc	status,0,c
  7606  00335C  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  7607  00335E                     l3220:
  7608  00335E  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  7609  003362  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  7610  003366  0012               	return		;funcret
  7611  003368                     __end_of___awdiv:
  7612                           	callstack 0
  7613                           
  7614 ;; *************** function _atoi *****************
  7615 ;; Defined at:
  7616 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  7617 ;; Parameters:    Size  Location     Type
  7618 ;;  s               2   10[COMRAM] PTR const unsigned char 
  7619 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;  n               2   23[COMRAM] int 
  7622 ;;  neg             2   16[COMRAM] int 
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  2   10[COMRAM] int 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7632 ;;      Params:         2       0       0       0       0       0       0       0       0
  7633 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7634 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7635 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7636 ;;Total ram usage:       15 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:    3
  7639 ;; This function calls:
  7640 ;;		___wmul
  7641 ;;		_isdigit
  7642 ;;		_isspace
  7643 ;; This function is called by:
  7644 ;;		_vfpfcnvrt
  7645 ;; This function uses a non-reentrant model
  7646 ;;
  7647                           
  7648                           	psect	text26
  7649  002C6C                     __ptext26:
  7650                           	callstack 0
  7651  002C6C                     _atoi:
  7652                           	callstack 24
  7653  002C6C  0E00               	movlw	0
  7654  002C6E  6E19               	movwf	(atoi@n+1)^0,c
  7655  002C70  0E00               	movlw	0
  7656  002C72  6E18               	movwf	atoi@n^0,c
  7657  002C74  0E00               	movlw	0
  7658  002C76  6E12               	movwf	(atoi@neg+1)^0,c
  7659  002C78  0E00               	movlw	0
  7660  002C7A  6E11               	movwf	atoi@neg^0,c
  7661  002C7C  EF42  F016         	goto	l3754
  7662  002C80                     l3752:
  7663  002C80  4A0B               	infsnz	atoi@s^0,f,c
  7664  002C82  2A0C               	incf	(atoi@s+1)^0,f,c
  7665  002C84                     l3754:
  7666  002C84  0E01               	movlw	1
  7667  002C86  6E17               	movwf	_atoi$1262^0,c
  7668  002C88  C00B  FFF6         	movff	atoi@s,tblptrl
  7669  002C8C  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7670  002C90                     	if	0	;tblptru may be non-zero
  7671  002C90                     	endif
  7672  002C90                     	if	0	;tblptru may be non-zero
  7673  002C90                     	endif
  7674  002C90  0008               	tblrd		*
  7675  002C92  50F5               	movf	tablat,w,c
  7676  002C94  0A20               	xorlw	32
  7677  002C96  B4D8               	btfsc	status,2,c
  7678  002C98  EF50  F016         	goto	u4481
  7679  002C9C  EF52  F016         	goto	u4480
  7680  002CA0                     u4481:
  7681  002CA0  EF6F  F016         	goto	l3762
  7682  002CA4                     u4480:
  7683  002CA4  0EF7               	movlw	247
  7684  002CA6  6E0D               	movwf	??_atoi^0,c
  7685  002CA8  0EFF               	movlw	255
  7686  002CAA  6E0E               	movwf	(??_atoi+1)^0,c
  7687  002CAC  C00B  FFF6         	movff	atoi@s,tblptrl
  7688  002CB0  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7689  002CB4                     	if	0	;tblptru may be non-zero
  7690  002CB4                     	endif
  7691  002CB4                     	if	0	;tblptru may be non-zero
  7692  002CB4                     	endif
  7693  002CB4  0008               	tblrd		*
  7694  002CB6  50F5               	movf	tablat,w,c
  7695  002CB8  6E0F               	movwf	(??_atoi+2)^0,c
  7696  002CBA  6A10               	clrf	(??_atoi+3)^0,c
  7697  002CBC  500D               	movf	??_atoi^0,w,c
  7698  002CBE  260F               	addwf	(??_atoi+2)^0,f,c
  7699  002CC0  500E               	movf	(??_atoi+1)^0,w,c
  7700  002CC2  2210               	addwfc	(??_atoi+3)^0,f,c
  7701  002CC4  5010               	movf	(??_atoi+3)^0,w,c
  7702  002CC6  E109               	bnz	u4490
  7703  002CC8  0E05               	movlw	5
  7704  002CCA  5C0F               	subwf	(??_atoi+2)^0,w,c
  7705  002CCC  A0D8               	btfss	status,0,c
  7706  002CCE  EF6B  F016         	goto	u4491
  7707  002CD2  EF6D  F016         	goto	u4490
  7708  002CD6                     u4491:
  7709  002CD6  EF6F  F016         	goto	l3762
  7710  002CDA                     u4490:
  7711  002CDA  0E00               	movlw	0
  7712  002CDC  6E17               	movwf	_atoi$1262^0,c
  7713  002CDE                     l3762:
  7714  002CDE  C017  F013         	movff	_atoi$1262,_atoi$1261
  7715  002CE2  6A14               	clrf	(_atoi$1261+1)^0,c
  7716  002CE4  5013               	movf	_atoi$1261^0,w,c
  7717  002CE6  1014               	iorwf	(_atoi$1261+1)^0,w,c
  7718  002CE8  A4D8               	btfss	status,2,c
  7719  002CEA  EF79  F016         	goto	u4501
  7720  002CEE  EF7B  F016         	goto	u4500
  7721  002CF2                     u4501:
  7722  002CF2  EF40  F016         	goto	l3752
  7723  002CF6                     u4500:
  7724  002CF6  EF85  F016         	goto	l3772
  7725  002CFA                     l3768:
  7726  002CFA  0E00               	movlw	0
  7727  002CFC  6E12               	movwf	(atoi@neg+1)^0,c
  7728  002CFE  0E01               	movlw	1
  7729  002D00  6E11               	movwf	atoi@neg^0,c
  7730  002D02                     l3770:
  7731  002D02  4A0B               	infsnz	atoi@s^0,f,c
  7732  002D04  2A0C               	incf	(atoi@s+1)^0,f,c
  7733  002D06  EFBA  F016         	goto	l3778
  7734  002D0A                     l3772:
  7735  002D0A  C00B  FFF6         	movff	atoi@s,tblptrl
  7736  002D0E  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7737  002D12                     	if	0	;tblptru may be non-zero
  7738  002D12                     	endif
  7739  002D12                     	if	0	;tblptru may be non-zero
  7740  002D12                     	endif
  7741  002D12  0008               	tblrd		*
  7742  002D14  50F5               	movf	tablat,w,c
  7743  002D16  6E0D               	movwf	??_atoi^0,c
  7744  002D18  6A0E               	clrf	(??_atoi+1)^0,c
  7745                           
  7746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7747                           ; Switch size 1, requested type "simple"
  7748                           ; Number of cases is 1, Range of values is 0 to 0
  7749                           ; switch strategies available:
  7750                           ; Name         Instructions Cycles
  7751                           ; simple_byte            4     3 (average)
  7752                           ;	Chosen strategy is simple_byte
  7753  002D1A  500E               	movf	(??_atoi+1)^0,w,c
  7754  002D1C  0A00               	xorlw	0	; case 0
  7755  002D1E  B4D8               	btfsc	status,2,c
  7756  002D20  EF94  F016         	goto	l4258
  7757  002D24  EFBA  F016         	goto	l3778
  7758  002D28                     l4258:
  7759                           
  7760                           ; Switch size 1, requested type "simple"
  7761                           ; Number of cases is 2, Range of values is 43 to 45
  7762                           ; switch strategies available:
  7763                           ; Name         Instructions Cycles
  7764                           ; simple_byte            7     4 (average)
  7765                           ;	Chosen strategy is simple_byte
  7766  002D28  500D               	movf	??_atoi^0,w,c
  7767  002D2A  0A2B               	xorlw	43	; case 43
  7768  002D2C  B4D8               	btfsc	status,2,c
  7769  002D2E  EF81  F016         	goto	l3770
  7770  002D32  0A06               	xorlw	6	; case 45
  7771  002D34  B4D8               	btfsc	status,2,c
  7772  002D36  EF7D  F016         	goto	l3768
  7773  002D3A  EFBA  F016         	goto	l3778
  7774  002D3E                     l3774:
  7775  002D3E  C018  F004         	movff	atoi@n,___wmul@multiplier
  7776  002D42  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  7777  002D46  0E00               	movlw	0
  7778  002D48  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  7779  002D4A  0E0A               	movlw	10
  7780  002D4C  6E06               	movwf	___wmul@multiplicand^0,c
  7781  002D4E  EC5A  F01D         	call	___wmul	;wreg free
  7782  002D52  C00B  FFF6         	movff	atoi@s,tblptrl
  7783  002D56  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7784  002D5A                     	if	0	;tblptru may be non-zero
  7785  002D5A                     	endif
  7786  002D5A                     	if	0	;tblptru may be non-zero
  7787  002D5A                     	endif
  7788  002D5A  0008               	tblrd		*
  7789  002D5C  50F5               	movf	tablat,w,c
  7790  002D5E  5E04               	subwf	?___wmul^0,f,c
  7791  002D60  0E00               	movlw	0
  7792  002D62  5A05               	subwfb	(?___wmul+1)^0,f,c
  7793  002D64  0E30               	movlw	48
  7794  002D66  2404               	addwf	?___wmul^0,w,c
  7795  002D68  6E18               	movwf	atoi@n^0,c
  7796  002D6A  0E00               	movlw	0
  7797  002D6C  2005               	addwfc	(?___wmul+1)^0,w,c
  7798  002D6E  6E19               	movwf	(atoi@n+1)^0,c
  7799  002D70  EF81  F016         	goto	l3770
  7800  002D74                     l3778:
  7801  002D74  0ED0               	movlw	208
  7802  002D76  6E0D               	movwf	??_atoi^0,c
  7803  002D78  0EFF               	movlw	255
  7804  002D7A  6E0E               	movwf	(??_atoi+1)^0,c
  7805  002D7C  C00B  FFF6         	movff	atoi@s,tblptrl
  7806  002D80  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7807  002D84                     	if	0	;tblptru may be non-zero
  7808  002D84                     	endif
  7809  002D84                     	if	0	;tblptru may be non-zero
  7810  002D84                     	endif
  7811  002D84  0008               	tblrd		*
  7812  002D86  50F5               	movf	tablat,w,c
  7813  002D88  6E0F               	movwf	(??_atoi+2)^0,c
  7814  002D8A  6A10               	clrf	(??_atoi+3)^0,c
  7815  002D8C  500D               	movf	??_atoi^0,w,c
  7816  002D8E  260F               	addwf	(??_atoi+2)^0,f,c
  7817  002D90  500E               	movf	(??_atoi+1)^0,w,c
  7818  002D92  2210               	addwfc	(??_atoi+3)^0,f,c
  7819  002D94  5010               	movf	(??_atoi+3)^0,w,c
  7820  002D96  E10A               	bnz	u4510
  7821  002D98  0E0A               	movlw	10
  7822  002D9A  5C0F               	subwf	(??_atoi+2)^0,w,c
  7823  002D9C  A0D8               	btfss	status,0,c
  7824  002D9E  EFD3  F016         	goto	u4511
  7825  002DA2  EFD6  F016         	goto	u4510
  7826  002DA6                     u4511:
  7827  002DA6  0E01               	movlw	1
  7828  002DA8  EFD7  F016         	goto	u4520
  7829  002DAC                     u4510:
  7830  002DAC  0E00               	movlw	0
  7831  002DAE                     u4520:
  7832  002DAE  6E15               	movwf	_atoi$1263^0,c
  7833  002DB0  6A16               	clrf	(_atoi$1263+1)^0,c
  7834  002DB2  5015               	movf	_atoi$1263^0,w,c
  7835  002DB4  1016               	iorwf	(_atoi$1263+1)^0,w,c
  7836  002DB6  A4D8               	btfss	status,2,c
  7837  002DB8  EFE0  F016         	goto	u4531
  7838  002DBC  EFE2  F016         	goto	u4530
  7839  002DC0                     u4531:
  7840  002DC0  EF9F  F016         	goto	l3774
  7841  002DC4                     u4530:
  7842  002DC4  5011               	movf	atoi@neg^0,w,c
  7843  002DC6  1012               	iorwf	(atoi@neg+1)^0,w,c
  7844  002DC8  A4D8               	btfss	status,2,c
  7845  002DCA  EFE9  F016         	goto	u4541
  7846  002DCE  EFEB  F016         	goto	u4540
  7847  002DD2                     u4541:
  7848  002DD2  EFF9  F016         	goto	l1013
  7849  002DD6                     u4540:
  7850  002DD6  C018  F00D         	movff	atoi@n,??_atoi
  7851  002DDA  C019  F00E         	movff	atoi@n+1,??_atoi+1
  7852  002DDE  1E0D               	comf	??_atoi^0,f,c
  7853  002DE0  1E0E               	comf	(??_atoi+1)^0,f,c
  7854  002DE2  4A0D               	infsnz	??_atoi^0,f,c
  7855  002DE4  2A0E               	incf	(??_atoi+1)^0,f,c
  7856  002DE6  C00D  F00B         	movff	??_atoi,?_atoi
  7857  002DEA  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  7858  002DEE  EFFD  F016         	goto	l1016
  7859  002DF2                     l1013:
  7860  002DF2  C018  F00B         	movff	atoi@n,?_atoi
  7861  002DF6  C019  F00C         	movff	atoi@n+1,?_atoi+1
  7862  002DFA                     l1016:
  7863  002DFA  0012               	return		;funcret
  7864  002DFC                     __end_of_atoi:
  7865                           	callstack 0
  7866                           
  7867 ;; *************** function _isspace *****************
  7868 ;; Defined at:
  7869 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  c               2    3[COMRAM] int 
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;		None
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  2    3[COMRAM] int 
  7876 ;; Registers used:
  7877 ;;		wreg, status,2, status,0
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7883 ;;      Params:         2       0       0       0       0       0       0       0       0
  7884 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7885 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7886 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7887 ;;Total ram usage:        7 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:    2
  7890 ;; This function calls:
  7891 ;;		Nothing
  7892 ;; This function is called by:
  7893 ;;		_atoi
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text27
  7898  00382E                     __ptext27:
  7899                           	callstack 0
  7900  00382E                     _isspace:
  7901                           	callstack 24
  7902  00382E  0E01               	movlw	1
  7903  003830  6E0A               	movwf	_isspace$1292^0,c
  7904  003832  0E20               	movlw	32
  7905  003834  1804               	xorwf	isspace@c^0,w,c
  7906  003836  1005               	iorwf	(isspace@c+1)^0,w,c
  7907  003838  B4D8               	btfsc	status,2,c
  7908  00383A  EF21  F01C         	goto	u3941
  7909  00383E  EF23  F01C         	goto	u3940
  7910  003842                     u3941:
  7911  003842  EF3C  F01C         	goto	l3448
  7912  003846                     u3940:
  7913  003846  0EF7               	movlw	247
  7914  003848  6E06               	movwf	??_isspace^0,c
  7915  00384A  0EFF               	movlw	255
  7916  00384C  6E07               	movwf	(??_isspace+1)^0,c
  7917  00384E  C004  F008         	movff	isspace@c,??_isspace+2
  7918  003852  C005  F009         	movff	isspace@c+1,??_isspace+3
  7919  003856  5006               	movf	??_isspace^0,w,c
  7920  003858  2608               	addwf	(??_isspace+2)^0,f,c
  7921  00385A  5007               	movf	(??_isspace+1)^0,w,c
  7922  00385C  2209               	addwfc	(??_isspace+3)^0,f,c
  7923  00385E  5009               	movf	(??_isspace+3)^0,w,c
  7924  003860  E109               	bnz	u3950
  7925  003862  0E05               	movlw	5
  7926  003864  5C08               	subwf	(??_isspace+2)^0,w,c
  7927  003866  A0D8               	btfss	status,0,c
  7928  003868  EF38  F01C         	goto	u3951
  7929  00386C  EF3A  F01C         	goto	u3950
  7930  003870                     u3951:
  7931  003870  EF3C  F01C         	goto	l3448
  7932  003874                     u3950:
  7933  003874  0E00               	movlw	0
  7934  003876  6E0A               	movwf	_isspace$1292^0,c
  7935  003878                     l3448:
  7936  003878  C00A  F004         	movff	_isspace$1292,?_isspace
  7937  00387C  6A05               	clrf	(?_isspace+1)^0,c
  7938  00387E  0012               	return		;funcret
  7939  003880                     __end_of_isspace:
  7940                           	callstack 0
  7941                           
  7942 ;; *************** function _isdigit *****************
  7943 ;; Defined at:
  7944 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;  c               2    3[COMRAM] int 
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;		None
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  2    3[COMRAM] int 
  7951 ;; Registers used:
  7952 ;;		wreg, status,2, status,0
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7958 ;;      Params:         2       0       0       0       0       0       0       0       0
  7959 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7960 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7961 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7962 ;;Total ram usage:        6 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    2
  7965 ;; This function calls:
  7966 ;;		Nothing
  7967 ;; This function is called by:
  7968 ;;		_vfpfcnvrt
  7969 ;;		_atoi
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           	psect	text28
  7974  0039BC                     __ptext28:
  7975                           	callstack 0
  7976  0039BC                     _isdigit:
  7977                           	callstack 25
  7978  0039BC  0ED0               	movlw	208
  7979  0039BE  6E06               	movwf	??_isdigit^0,c
  7980  0039C0  0EFF               	movlw	255
  7981  0039C2  6E07               	movwf	(??_isdigit+1)^0,c
  7982  0039C4  C004  F008         	movff	isdigit@c,??_isdigit+2
  7983  0039C8  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  7984  0039CC  5006               	movf	??_isdigit^0,w,c
  7985  0039CE  2608               	addwf	(??_isdigit+2)^0,f,c
  7986  0039D0  5007               	movf	(??_isdigit+1)^0,w,c
  7987  0039D2  2209               	addwfc	(??_isdigit+3)^0,f,c
  7988  0039D4  5009               	movf	(??_isdigit+3)^0,w,c
  7989  0039D6  E10A               	bnz	u3920
  7990  0039D8  0E0A               	movlw	10
  7991  0039DA  5C08               	subwf	(??_isdigit+2)^0,w,c
  7992  0039DC  A0D8               	btfss	status,0,c
  7993  0039DE  EFF3  F01C         	goto	u3921
  7994  0039E2  EFF6  F01C         	goto	u3920
  7995  0039E6                     u3921:
  7996  0039E6  0E01               	movlw	1
  7997  0039E8  EFF7  F01C         	goto	u3930
  7998  0039EC                     u3920:
  7999  0039EC  0E00               	movlw	0
  8000  0039EE                     u3930:
  8001  0039EE  6E04               	movwf	?_isdigit^0,c
  8002  0039F0  6A05               	clrf	(?_isdigit+1)^0,c
  8003  0039F2  0012               	return		;funcret
  8004  0039F4                     __end_of_isdigit:
  8005                           	callstack 0
  8006                           
  8007 ;; *************** function ___wmul *****************
  8008 ;; Defined at:
  8009 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  8010 ;; Parameters:    Size  Location     Type
  8011 ;;  multiplier      2    3[COMRAM] unsigned int 
  8012 ;;  multiplicand    2    5[COMRAM] unsigned int 
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;  product         2    7[COMRAM] unsigned int 
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  2    3[COMRAM] unsigned int 
  8017 ;; Registers used:
  8018 ;;		wreg, status,2, status,0, prodl, prodh
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8024 ;;      Params:         4       0       0       0       0       0       0       0       0
  8025 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8027 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8028 ;;Total ram usage:        6 bytes
  8029 ;; Hardware stack levels used:    1
  8030 ;; Hardware stack levels required when called:    2
  8031 ;; This function calls:
  8032 ;;		Nothing
  8033 ;; This function is called by:
  8034 ;;		_atoi
  8035 ;; This function uses a non-reentrant model
  8036 ;;
  8037                           
  8038                           	psect	text29
  8039  003AB4                     __ptext29:
  8040                           	callstack 0
  8041  003AB4                     ___wmul:
  8042                           	callstack 24
  8043  003AB4  5004               	movf	___wmul@multiplier^0,w,c
  8044  003AB6  0206               	mulwf	___wmul@multiplicand^0,c
  8045  003AB8  CFF3 F008          	movff	prodl,___wmul@product
  8046  003ABC  CFF4 F009          	movff	prodh,___wmul@product+1
  8047  003AC0  5004               	movf	___wmul@multiplier^0,w,c
  8048  003AC2  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  8049  003AC4  50F3               	movf	243,w,c
  8050  003AC6  2609               	addwf	(___wmul@product+1)^0,f,c
  8051  003AC8  5005               	movf	(___wmul@multiplier+1)^0,w,c
  8052  003ACA  0206               	mulwf	___wmul@multiplicand^0,c
  8053  003ACC  50F3               	movf	243,w,c
  8054  003ACE  2609               	addwf	(___wmul@product+1)^0,f,c
  8055  003AD0  C008  F004         	movff	___wmul@product,?___wmul
  8056  003AD4  C009  F005         	movff	___wmul@product+1,?___wmul+1
  8057  003AD8  0012               	return		;funcret
  8058  003ADA                     __end_of___wmul:
  8059                           	callstack 0
  8060                           
  8061 ;; *************** function ___xxtofl *****************
  8062 ;; Defined at:
  8063 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;  sign            1    wreg     unsigned char 
  8066 ;;  val             4    3[COMRAM] long 
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;  sign            1   11[COMRAM] unsigned char 
  8069 ;;  arg             4   13[COMRAM] unsigned long 
  8070 ;;  exp             1   12[COMRAM] unsigned char 
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  4    3[COMRAM] unsigned char 
  8073 ;; Registers used:
  8074 ;;		wreg, status,2, status,0
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8080 ;;      Params:         4       0       0       0       0       0       0       0       0
  8081 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8082 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8083 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8084 ;;Total ram usage:       14 bytes
  8085 ;; Hardware stack levels used:    1
  8086 ;; Hardware stack levels required when called:    2
  8087 ;; This function calls:
  8088 ;;		Nothing
  8089 ;; This function is called by:
  8090 ;;		_main
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094                           	psect	text30
  8095  002AB8                     __ptext30:
  8096                           	callstack 0
  8097  002AB8                     ___xxtofl:
  8098                           	callstack 28
  8099                           
  8100                           ;incstack = 0
  8101                           ;___xxtofl@sign stored from wreg
  8102  002AB8  6E0C               	movwf	___xxtofl@sign^0,c
  8103  002ABA  500C               	movf	___xxtofl@sign^0,w,c
  8104  002ABC  B4D8               	btfsc	status,2,c
  8105  002ABE  EF63  F015         	goto	u4811
  8106  002AC2  EF65  F015         	goto	u4810
  8107  002AC6                     u4811:
  8108  002AC6  EF87  F015         	goto	l771
  8109  002ACA                     u4810:
  8110  002ACA  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  8111  002ACC  EF6C  F015         	goto	u4820
  8112  002AD0  EF6A  F015         	goto	u4821
  8113  002AD4                     u4821:
  8114  002AD4  EF87  F015         	goto	l771
  8115  002AD8                     u4820:
  8116  002AD8  C004  F008         	movff	___xxtofl@val,??___xxtofl
  8117  002ADC  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
  8118  002AE0  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
  8119  002AE4  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
  8120  002AE8  1E08               	comf	??___xxtofl^0,f,c
  8121  002AEA  1E09               	comf	(??___xxtofl+1)^0,f,c
  8122  002AEC  1E0A               	comf	(??___xxtofl+2)^0,f,c
  8123  002AEE  1E0B               	comf	(??___xxtofl+3)^0,f,c
  8124  002AF0  2A08               	incf	??___xxtofl^0,f,c
  8125  002AF2  0E00               	movlw	0
  8126  002AF4  2209               	addwfc	(??___xxtofl+1)^0,f,c
  8127  002AF6  220A               	addwfc	(??___xxtofl+2)^0,f,c
  8128  002AF8  220B               	addwfc	(??___xxtofl+3)^0,f,c
  8129  002AFA  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
  8130  002AFE  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
  8131  002B02  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
  8132  002B06  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
  8133  002B0A  EF8F  F015         	goto	l4066
  8134  002B0E                     l771:
  8135  002B0E  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
  8136  002B12  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8137  002B16  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8138  002B1A  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8139  002B1E                     l4066:
  8140  002B1E  5004               	movf	___xxtofl@val^0,w,c
  8141  002B20  1005               	iorwf	(___xxtofl@val+1)^0,w,c
  8142  002B22  1006               	iorwf	(___xxtofl@val+2)^0,w,c
  8143  002B24  1007               	iorwf	(___xxtofl@val+3)^0,w,c
  8144  002B26  A4D8               	btfss	status,2,c
  8145  002B28  EF98  F015         	goto	u4831
  8146  002B2C  EF9A  F015         	goto	u4830
  8147  002B30                     u4831:
  8148  002B30  EFA4  F015         	goto	l4072
  8149  002B34                     u4830:
  8150  002B34  0E00               	movlw	0
  8151  002B36  6E04               	movwf	?___xxtofl^0,c
  8152  002B38  0E00               	movlw	0
  8153  002B3A  6E05               	movwf	(?___xxtofl+1)^0,c
  8154  002B3C  0E00               	movlw	0
  8155  002B3E  6E06               	movwf	(?___xxtofl+2)^0,c
  8156  002B40  0E00               	movlw	0
  8157  002B42  6E07               	movwf	(?___xxtofl+3)^0,c
  8158  002B44  EF35  F016         	goto	l774
  8159  002B48                     l4072:
  8160  002B48  0E96               	movlw	150
  8161  002B4A  6E0D               	movwf	___xxtofl@exp^0,c
  8162  002B4C  EFAE  F015         	goto	l4076
  8163  002B50                     l4074:
  8164  002B50  2A0D               	incf	___xxtofl@exp^0,f,c
  8165  002B52  90D8               	bcf	status,0,c
  8166  002B54  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  8167  002B56  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  8168  002B58  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  8169  002B5A  320E               	rrcf	___xxtofl@arg^0,f,c
  8170  002B5C                     l4076:
  8171  002B5C  0E00               	movlw	0
  8172  002B5E  140E               	andwf	___xxtofl@arg^0,w,c
  8173  002B60  6E08               	movwf	??___xxtofl^0,c
  8174  002B62  0E00               	movlw	0
  8175  002B64  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  8176  002B66  6E09               	movwf	(??___xxtofl+1)^0,c
  8177  002B68  0E00               	movlw	0
  8178  002B6A  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  8179  002B6C  6E0A               	movwf	(??___xxtofl+2)^0,c
  8180  002B6E  0EFE               	movlw	254
  8181  002B70  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  8182  002B72  6E0B               	movwf	(??___xxtofl+3)^0,c
  8183  002B74  5008               	movf	??___xxtofl^0,w,c
  8184  002B76  1009               	iorwf	(??___xxtofl+1)^0,w,c
  8185  002B78  100A               	iorwf	(??___xxtofl+2)^0,w,c
  8186  002B7A  100B               	iorwf	(??___xxtofl+3)^0,w,c
  8187  002B7C  A4D8               	btfss	status,2,c
  8188  002B7E  EFC3  F015         	goto	u4841
  8189  002B82  EFC5  F015         	goto	u4840
  8190  002B86                     u4841:
  8191  002B86  EFA8  F015         	goto	l4074
  8192  002B8A                     u4840:
  8193  002B8A  EFD3  F015         	goto	l778
  8194  002B8E                     l4078:
  8195  002B8E  2A0D               	incf	___xxtofl@exp^0,f,c
  8196  002B90  0E01               	movlw	1
  8197  002B92  260E               	addwf	___xxtofl@arg^0,f,c
  8198  002B94  0E00               	movlw	0
  8199  002B96  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
  8200  002B98  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
  8201  002B9A  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
  8202  002B9C  90D8               	bcf	status,0,c
  8203  002B9E  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  8204  002BA0  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  8205  002BA2  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  8206  002BA4  320E               	rrcf	___xxtofl@arg^0,f,c
  8207  002BA6                     l778:
  8208  002BA6  0E00               	movlw	0
  8209  002BA8  140E               	andwf	___xxtofl@arg^0,w,c
  8210  002BAA  6E08               	movwf	??___xxtofl^0,c
  8211  002BAC  0E00               	movlw	0
  8212  002BAE  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  8213  002BB0  6E09               	movwf	(??___xxtofl+1)^0,c
  8214  002BB2  0E00               	movlw	0
  8215  002BB4  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  8216  002BB6  6E0A               	movwf	(??___xxtofl+2)^0,c
  8217  002BB8  0EFF               	movlw	255
  8218  002BBA  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  8219  002BBC  6E0B               	movwf	(??___xxtofl+3)^0,c
  8220  002BBE  5008               	movf	??___xxtofl^0,w,c
  8221  002BC0  1009               	iorwf	(??___xxtofl+1)^0,w,c
  8222  002BC2  100A               	iorwf	(??___xxtofl+2)^0,w,c
  8223  002BC4  100B               	iorwf	(??___xxtofl+3)^0,w,c
  8224  002BC6  A4D8               	btfss	status,2,c
  8225  002BC8  EFE8  F015         	goto	u4851
  8226  002BCC  EFEA  F015         	goto	u4850
  8227  002BD0                     u4851:
  8228  002BD0  EFC7  F015         	goto	l4078
  8229  002BD4                     u4850:
  8230  002BD4  EFF2  F015         	goto	l4086
  8231  002BD8                     l4084:
  8232  002BD8  060D               	decf	___xxtofl@exp^0,f,c
  8233  002BDA  90D8               	bcf	status,0,c
  8234  002BDC  360E               	rlcf	___xxtofl@arg^0,f,c
  8235  002BDE  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
  8236  002BE0  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
  8237  002BE2  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
  8238  002BE4                     l4086:
  8239  002BE4  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
  8240  002BE6  EFF7  F015         	goto	u4861
  8241  002BEA  EFF9  F015         	goto	u4860
  8242  002BEE                     u4861:
  8243  002BEE  EF01  F016         	goto	l785
  8244  002BF2                     u4860:
  8245  002BF2  0E02               	movlw	2
  8246  002BF4  600D               	cpfslt	___xxtofl@exp^0,c
  8247  002BF6  EFFF  F015         	goto	u4871
  8248  002BFA  EF01  F016         	goto	u4870
  8249  002BFE                     u4871:
  8250  002BFE  EFEC  F015         	goto	l4084
  8251  002C02                     u4870:
  8252  002C02                     l785:
  8253  002C02  B00D               	btfsc	___xxtofl@exp^0,0,c
  8254  002C04  EF06  F016         	goto	u4881
  8255  002C08  EF08  F016         	goto	u4880
  8256  002C0C                     u4881:
  8257  002C0C  EF09  F016         	goto	l4092
  8258  002C10                     u4880:
  8259  002C10  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
  8260  002C12                     l4092:
  8261  002C12  90D8               	bcf	status,0,c
  8262  002C14  320D               	rrcf	___xxtofl@exp^0,f,c
  8263  002C16  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
  8264  002C1A  6A09               	clrf	(??___xxtofl+1)^0,c
  8265  002C1C  6A0A               	clrf	(??___xxtofl+2)^0,c
  8266  002C1E  6A0B               	clrf	(??___xxtofl+3)^0,c
  8267  002C20  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
  8268  002C24  6A0A               	clrf	(??___xxtofl+2)^0,c
  8269  002C26  6A09               	clrf	(??___xxtofl+1)^0,c
  8270  002C28  6A08               	clrf	??___xxtofl^0,c
  8271  002C2A  5008               	movf	??___xxtofl^0,w,c
  8272  002C2C  120E               	iorwf	___xxtofl@arg^0,f,c
  8273  002C2E  5009               	movf	(??___xxtofl+1)^0,w,c
  8274  002C30  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
  8275  002C32  500A               	movf	(??___xxtofl+2)^0,w,c
  8276  002C34  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
  8277  002C36  500B               	movf	(??___xxtofl+3)^0,w,c
  8278  002C38  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
  8279  002C3A  500C               	movf	___xxtofl@sign^0,w,c
  8280  002C3C  B4D8               	btfsc	status,2,c
  8281  002C3E  EF23  F016         	goto	u4891
  8282  002C42  EF25  F016         	goto	u4890
  8283  002C46                     u4891:
  8284  002C46  EF2D  F016         	goto	l4102
  8285  002C4A                     u4890:
  8286  002C4A  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  8287  002C4C  EF2C  F016         	goto	u4900
  8288  002C50  EF2A  F016         	goto	u4901
  8289  002C54                     u4901:
  8290  002C54  EF2D  F016         	goto	l4102
  8291  002C58                     u4900:
  8292  002C58  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
  8293  002C5A                     l4102:
  8294  002C5A  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
  8295  002C5E  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
  8296  002C62  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
  8297  002C66  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
  8298  002C6A                     l774:
  8299  002C6A  0012               	return		;funcret
  8300  002C6C                     __end_of___xxtofl:
  8301                           	callstack 0
  8302                           
  8303 ;; *************** function _LCD_XY *****************
  8304 ;; Defined at:
  8305 ;;		line 63 in file "LCD_Libreria.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;  x               2    5[COMRAM] int 
  8308 ;;  y               2    7[COMRAM] int 
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;		None
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  1    wreg      void 
  8313 ;; Registers used:
  8314 ;;		wreg, status,2, status,0, cstack
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8320 ;;      Params:         4       0       0       0       0       0       0       0       0
  8321 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8323 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8324 ;;Total ram usage:        4 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; Hardware stack levels required when called:    3
  8327 ;; This function calls:
  8328 ;;		_LCD_Comando
  8329 ;; This function is called by:
  8330 ;;		_main
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           	psect	text31
  8335  003A8C                     __ptext31:
  8336                           	callstack 0
  8337  003A8C                     _LCD_XY:
  8338                           	callstack 27
  8339  003A8C                     
  8340                           ;LCD_Libreria.c: 64:     if(x == 1){
  8341  003A8C  0406               	decf	LCD_XY@x^0,w,c
  8342  003A8E  1007               	iorwf	(LCD_XY@x+1)^0,w,c
  8343  003A90  A4D8               	btfss	status,2,c
  8344  003A92  EF4D  F01D         	goto	u4791
  8345  003A96  EF4F  F01D         	goto	u4790
  8346  003A9A                     u4791:
  8347  003A9A  EF55  F01D         	goto	l4050
  8348  003A9E                     u4790:
  8349  003A9E                     
  8350                           ;LCD_Libreria.c: 65:         LCD_Comando(0xC0+y);
  8351  003A9E  5008               	movf	LCD_XY@y^0,w,c
  8352  003AA0  0FC0               	addlw	192
  8353  003AA2  ECC2  F01A         	call	_LCD_Comando
  8354                           
  8355                           ;LCD_Libreria.c: 66:     }
  8356  003AA6  EF59  F01D         	goto	l77
  8357  003AAA                     l4050:
  8358                           
  8359                           ;LCD_Libreria.c: 68:         LCD_Comando(0x80+y);
  8360  003AAA  5008               	movf	LCD_XY@y^0,w,c
  8361  003AAC  0F80               	addlw	128
  8362  003AAE  ECC2  F01A         	call	_LCD_Comando
  8363  003AB2                     l77:
  8364  003AB2  0012               	return		;funcret
  8365  003AB4                     __end_of_LCD_XY:
  8366                           	callstack 0
  8367                           
  8368 ;; *************** function _LCD_Init *****************
  8369 ;; Defined at:
  8370 ;;		line 6 in file "LCD_Libreria.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  1    wreg      void 
  8377 ;; Registers used:
  8378 ;;		wreg, status,2, status,0, cstack
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8384 ;;      Params:         0       0       0       0       0       0       0       0       0
  8385 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8386 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8387 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8388 ;;Total ram usage:        1 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; Hardware stack levels required when called:    3
  8391 ;; This function calls:
  8392 ;;		_LCD_Comando
  8393 ;; This function is called by:
  8394 ;;		_main
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text32
  8399  003786                     __ptext32:
  8400                           	callstack 0
  8401  003786                     _LCD_Init:
  8402                           	callstack 27
  8403  003786                     
  8404                           ;LCD_Libreria.c: 7:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
  8405  003786  0E62               	movlw	98
  8406  003788  6E06               	movwf	??_LCD_Init^0,c
  8407  00378A  0E66               	movlw	102
  8408  00378C                     u5017:
  8409  00378C  2EE8               	decfsz	wreg,f,c
  8410  00378E  D7FE               	bra	u5017
  8411  003790  2E06               	decfsz	??_LCD_Init^0,f,c
  8412  003792  D7FC               	bra	u5017
  8413  003794                     
  8414                           ;LCD_Libreria.c: 8:     TRISD = 0x00;
  8415  003794  0E00               	movlw	0
  8416  003796  6E95               	movwf	149,c	;volatile
  8417  003798                     
  8418                           ;LCD_Libreria.c: 9:     LCD_Comando(0x30);
  8419  003798  0E30               	movlw	48
  8420  00379A  ECC2  F01A         	call	_LCD_Comando
  8421  00379E                     
  8422                           ;LCD_Libreria.c: 10:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8423  00379E  0E21               	movlw	33
  8424  0037A0  6E06               	movwf	??_LCD_Init^0,c
  8425  0037A2  0E76               	movlw	118
  8426  0037A4                     u5027:
  8427  0037A4  2EE8               	decfsz	wreg,f,c
  8428  0037A6  D7FE               	bra	u5027
  8429  0037A8  2E06               	decfsz	??_LCD_Init^0,f,c
  8430  0037AA  D7FC               	bra	u5027
  8431  0037AC  D000               	nop2	
  8432  0037AE                     
  8433                           ;LCD_Libreria.c: 11:     LCD_Comando(0x30);
  8434  0037AE  0E30               	movlw	48
  8435  0037B0  ECC2  F01A         	call	_LCD_Comando
  8436  0037B4                     
  8437                           ;LCD_Libreria.c: 12:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  8438  0037B4  0EA6               	movlw	166
  8439  0037B6                     u5037:
  8440  0037B6  2EE8               	decfsz	wreg,f,c
  8441  0037B8  D7FE               	bra	u5037
  8442  0037BA  D000               	nop2	
  8443  0037BC                     
  8444                           ;LCD_Libreria.c: 13:     LCD_Comando(0x32);
  8445  0037BC  0E32               	movlw	50
  8446  0037BE  ECC2  F01A         	call	_LCD_Comando
  8447  0037C2                     
  8448                           ;LCD_Libreria.c: 14:     LCD_Comando(0x28);
  8449  0037C2  0E28               	movlw	40
  8450  0037C4  ECC2  F01A         	call	_LCD_Comando
  8451  0037C8                     
  8452                           ;LCD_Libreria.c: 15:     LCD_Comando(0x0C);
  8453  0037C8  0E0C               	movlw	12
  8454  0037CA  ECC2  F01A         	call	_LCD_Comando
  8455  0037CE                     
  8456                           ;LCD_Libreria.c: 16:     LCD_Comando(0x01);
  8457  0037CE  0E01               	movlw	1
  8458  0037D0  ECC2  F01A         	call	_LCD_Comando
  8459  0037D4                     
  8460                           ;LCD_Libreria.c: 17:     LCD_Comando(0x06);
  8461  0037D4  0E06               	movlw	6
  8462  0037D6  ECC2  F01A         	call	_LCD_Comando
  8463  0037DA  0012               	return		;funcret
  8464  0037DC                     __end_of_LCD_Init:
  8465                           	callstack 0
  8466                           
  8467 ;; *************** function _LCD_Comando *****************
  8468 ;; Defined at:
  8469 ;;		line 20 in file "LCD_Libreria.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;  cmd             1    wreg     unsigned char 
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;  cmd             1    4[COMRAM] unsigned char 
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  1    wreg      void 
  8476 ;; Registers used:
  8477 ;;		wreg, status,2, status,0
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8483 ;;      Params:         0       0       0       0       0       0       0       0       0
  8484 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8485 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8486 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8487 ;;Total ram usage:        2 bytes
  8488 ;; Hardware stack levels used:    1
  8489 ;; Hardware stack levels required when called:    2
  8490 ;; This function calls:
  8491 ;;		Nothing
  8492 ;; This function is called by:
  8493 ;;		_LCD_Init
  8494 ;;		_LCD_XY
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498                           	psect	text33
  8499  003584                     __ptext33:
  8500                           	callstack 0
  8501  003584                     _LCD_Comando:
  8502                           	callstack 27
  8503                           
  8504                           ;incstack = 0
  8505                           ;LCD_Comando@cmd stored from wreg
  8506  003584  6E05               	movwf	LCD_Comando@cmd^0,c
  8507  003586                     
  8508                           ;LCD_Libreria.c: 22:     LATD = (LATD&0X0F) | (cmd&0xF0);
  8509  003586  C005  F004         	movff	LCD_Comando@cmd,??_LCD_Comando
  8510  00358A  0EF0               	movlw	240
  8511  00358C  1604               	andwf	??_LCD_Comando^0,f,c
  8512  00358E  508C               	movf	140,w,c	;volatile
  8513  003590  0B0F               	andlw	15
  8514  003592  1004               	iorwf	??_LCD_Comando^0,w,c
  8515  003594  6E8C               	movwf	140,c	;volatile
  8516  003596                     
  8517                           ;LCD_Libreria.c: 39:     LATDbits.LATD2 = 0;
  8518  003596  948C               	bcf	140,2,c	;volatile
  8519  003598                     
  8520                           ;LCD_Libreria.c: 40:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8521  003598  0E07               	movlw	7
  8522  00359A  6E04               	movwf	??_LCD_Comando^0,c
  8523  00359C  0E7D               	movlw	125
  8524  00359E                     u5047:
  8525  00359E  2EE8               	decfsz	wreg,f,c
  8526  0035A0  D7FE               	bra	u5047
  8527  0035A2  2E04               	decfsz	??_LCD_Comando^0,f,c
  8528  0035A4  D7FC               	bra	u5047
  8529  0035A6  F000               	nop	
  8530  0035A8                     
  8531                           ;LCD_Libreria.c: 41:     LATDbits.LATD3 = 1;
  8532  0035A8  868C               	bsf	140,3,c	;volatile
  8533  0035AA                     
  8534                           ;LCD_Libreria.c: 42:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8535  0035AA  0E07               	movlw	7
  8536  0035AC  6E04               	movwf	??_LCD_Comando^0,c
  8537  0035AE  0E7D               	movlw	125
  8538  0035B0                     u5057:
  8539  0035B0  2EE8               	decfsz	wreg,f,c
  8540  0035B2  D7FE               	bra	u5057
  8541  0035B4  2E04               	decfsz	??_LCD_Comando^0,f,c
  8542  0035B6  D7FC               	bra	u5057
  8543  0035B8  F000               	nop	
  8544  0035BA                     
  8545                           ;LCD_Libreria.c: 43:     LATDbits.LATD3 = 0;
  8546  0035BA  968C               	bcf	140,3,c	;volatile
  8547                           
  8548                           ;LCD_Libreria.c: 45:     LATD &= 0X0F;
  8549  0035BC  0E0F               	movlw	15
  8550  0035BE  168C               	andwf	140,f,c	;volatile
  8551                           
  8552                           ;LCD_Libreria.c: 46:     LATD |= ((cmd&0x0F)<<4);
  8553  0035C0  C005  F004         	movff	LCD_Comando@cmd,??_LCD_Comando
  8554  0035C4  0E0F               	movlw	15
  8555  0035C6  1604               	andwf	??_LCD_Comando^0,f,c
  8556  0035C8  3804               	swapf	??_LCD_Comando^0,w,c
  8557  0035CA  0BF0               	andlw	240
  8558  0035CC  128C               	iorwf	140,f,c	;volatile
  8559  0035CE                     
  8560                           ;LCD_Libreria.c: 56:     LATDbits.LATD2 = 0;
  8561  0035CE  948C               	bcf	140,2,c	;volatile
  8562  0035D0                     
  8563                           ;LCD_Libreria.c: 57:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8564  0035D0  0E07               	movlw	7
  8565  0035D2  6E04               	movwf	??_LCD_Comando^0,c
  8566  0035D4  0E7D               	movlw	125
  8567  0035D6                     u5067:
  8568  0035D6  2EE8               	decfsz	wreg,f,c
  8569  0035D8  D7FE               	bra	u5067
  8570  0035DA  2E04               	decfsz	??_LCD_Comando^0,f,c
  8571  0035DC  D7FC               	bra	u5067
  8572  0035DE  F000               	nop	
  8573  0035E0                     
  8574                           ;LCD_Libreria.c: 58:     LATDbits.LATD3 = 1;
  8575  0035E0  868C               	bsf	140,3,c	;volatile
  8576  0035E2                     
  8577                           ;LCD_Libreria.c: 59:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8578  0035E2  0E07               	movlw	7
  8579  0035E4  6E04               	movwf	??_LCD_Comando^0,c
  8580  0035E6  0E7D               	movlw	125
  8581  0035E8                     u5077:
  8582  0035E8  2EE8               	decfsz	wreg,f,c
  8583  0035EA  D7FE               	bra	u5077
  8584  0035EC  2E04               	decfsz	??_LCD_Comando^0,f,c
  8585  0035EE  D7FC               	bra	u5077
  8586  0035F0  F000               	nop	
  8587  0035F2                     
  8588                           ;LCD_Libreria.c: 60:     LATDbits.LATD3 = 0;
  8589  0035F2  968C               	bcf	140,3,c	;volatile
  8590  0035F4  0012               	return		;funcret
  8591  0035F6                     __end_of_LCD_Comando:
  8592                           	callstack 0
  8593                           
  8594 ;; *************** function _LCD_Cadena *****************
  8595 ;; Defined at:
  8596 ;;		line 92 in file "LCD_Libreria.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;  dat             2    5[COMRAM] PTR unsigned char 
  8599 ;;		 -> datos(16), 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;		None
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  1    wreg      void 
  8604 ;; Registers used:
  8605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8611 ;;      Params:         2       0       0       0       0       0       0       0       0
  8612 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8613 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8614 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8615 ;;Total ram usage:        2 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    3
  8618 ;; This function calls:
  8619 ;;		_LCD_Caracter
  8620 ;; This function is called by:
  8621 ;;		_main
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           	psect	text34
  8626  003A5C                     __ptext34:
  8627                           	callstack 0
  8628  003A5C                     _LCD_Cadena:
  8629                           	callstack 27
  8630  003A5C                     
  8631                           ;LCD_Libreria.c: 95:     while(*dat != '\0'){
  8632  003A5C  EF39  F01D         	goto	l4058
  8633  003A60                     l4054:
  8634                           
  8635                           ;LCD_Libreria.c: 96:         LCD_Caracter(*dat);
  8636  003A60  C006  FFD9         	movff	LCD_Cadena@dat,fsr2l
  8637  003A64  C007  FFDA         	movff	LCD_Cadena@dat+1,fsr2h
  8638  003A68  50DF               	movf	indf2,w,c
  8639  003A6A  ECFB  F01A         	call	_LCD_Caracter
  8640  003A6E                     
  8641                           ;LCD_Libreria.c: 97:         dat++;
  8642  003A6E  4A06               	infsnz	LCD_Cadena@dat^0,f,c
  8643  003A70  2A07               	incf	(LCD_Cadena@dat+1)^0,f,c
  8644  003A72                     l4058:
  8645                           
  8646                           ;LCD_Libreria.c: 95:     while(*dat != '\0'){
  8647  003A72  C006  FFD9         	movff	LCD_Cadena@dat,fsr2l
  8648  003A76  C007  FFDA         	movff	LCD_Cadena@dat+1,fsr2h
  8649  003A7A  50DF               	movf	indf2,w,c
  8650  003A7C  A4D8               	btfss	status,2,c
  8651  003A7E  EF43  F01D         	goto	u4801
  8652  003A82  EF45  F01D         	goto	u4800
  8653  003A86                     u4801:
  8654  003A86  EF30  F01D         	goto	l4054
  8655  003A8A                     u4800:
  8656  003A8A  0012               	return		;funcret
  8657  003A8C                     __end_of_LCD_Cadena:
  8658                           	callstack 0
  8659                           
  8660 ;; *************** function _LCD_Caracter *****************
  8661 ;; Defined at:
  8662 ;;		line 72 in file "LCD_Libreria.c"
  8663 ;; Parameters:    Size  Location     Type
  8664 ;;  data            1    wreg     unsigned char 
  8665 ;; Auto vars:     Size  Location     Type
  8666 ;;  data            1    4[COMRAM] unsigned char 
  8667 ;; Return value:  Size  Location     Type
  8668 ;;                  1    wreg      void 
  8669 ;; Registers used:
  8670 ;;		wreg, status,2, status,0
  8671 ;; Tracked objects:
  8672 ;;		On entry : 0/0
  8673 ;;		On exit  : 0/0
  8674 ;;		Unchanged: 0/0
  8675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8676 ;;      Params:         0       0       0       0       0       0       0       0       0
  8677 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8678 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8679 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8680 ;;Total ram usage:        2 bytes
  8681 ;; Hardware stack levels used:    1
  8682 ;; Hardware stack levels required when called:    2
  8683 ;; This function calls:
  8684 ;;		Nothing
  8685 ;; This function is called by:
  8686 ;;		_LCD_Cadena
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690                           	psect	text35
  8691  0035F6                     __ptext35:
  8692                           	callstack 0
  8693  0035F6                     _LCD_Caracter:
  8694                           	callstack 27
  8695                           
  8696                           ;incstack = 0
  8697                           ;LCD_Caracter@data stored from wreg
  8698  0035F6  6E05               	movwf	LCD_Caracter@data^0,c
  8699  0035F8                     
  8700                           ;LCD_Libreria.c: 73:     LATD = (LATD&0X0F) | (data&0xF0);
  8701  0035F8  C005  F004         	movff	LCD_Caracter@data,??_LCD_Caracter
  8702  0035FC  0EF0               	movlw	240
  8703  0035FE  1604               	andwf	??_LCD_Caracter^0,f,c
  8704  003600  508C               	movf	140,w,c	;volatile
  8705  003602  0B0F               	andlw	15
  8706  003604  1004               	iorwf	??_LCD_Caracter^0,w,c
  8707  003606  6E8C               	movwf	140,c	;volatile
  8708  003608                     
  8709                           ;LCD_Libreria.c: 75:     LATDbits.LATD2 = 1;
  8710  003608  848C               	bsf	140,2,c	;volatile
  8711  00360A                     
  8712                           ;LCD_Libreria.c: 76:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8713  00360A  0E07               	movlw	7
  8714  00360C  6E04               	movwf	??_LCD_Caracter^0,c
  8715  00360E  0E7D               	movlw	125
  8716  003610                     u5087:
  8717  003610  2EE8               	decfsz	wreg,f,c
  8718  003612  D7FE               	bra	u5087
  8719  003614  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8720  003616  D7FC               	bra	u5087
  8721  003618  F000               	nop	
  8722  00361A                     
  8723                           ;LCD_Libreria.c: 77:     LATDbits.LATD3 = 1;
  8724  00361A  868C               	bsf	140,3,c	;volatile
  8725  00361C                     
  8726                           ;LCD_Libreria.c: 78:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8727  00361C  0E07               	movlw	7
  8728  00361E  6E04               	movwf	??_LCD_Caracter^0,c
  8729  003620  0E7D               	movlw	125
  8730  003622                     u5097:
  8731  003622  2EE8               	decfsz	wreg,f,c
  8732  003624  D7FE               	bra	u5097
  8733  003626  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8734  003628  D7FC               	bra	u5097
  8735  00362A  F000               	nop	
  8736  00362C                     
  8737                           ;LCD_Libreria.c: 79:     LATDbits.LATD3 = 0;
  8738  00362C  968C               	bcf	140,3,c	;volatile
  8739                           
  8740                           ;LCD_Libreria.c: 81:     LATD &= 0X0F;
  8741  00362E  0E0F               	movlw	15
  8742  003630  168C               	andwf	140,f,c	;volatile
  8743                           
  8744                           ;LCD_Libreria.c: 82:     LATD |= ((data&0x0F)<<4);
  8745  003632  C005  F004         	movff	LCD_Caracter@data,??_LCD_Caracter
  8746  003636  0E0F               	movlw	15
  8747  003638  1604               	andwf	??_LCD_Caracter^0,f,c
  8748  00363A  3804               	swapf	??_LCD_Caracter^0,w,c
  8749  00363C  0BF0               	andlw	240
  8750  00363E  128C               	iorwf	140,f,c	;volatile
  8751  003640                     
  8752                           ;LCD_Libreria.c: 84:     LATDbits.LATD2 = 1;
  8753  003640  848C               	bsf	140,2,c	;volatile
  8754  003642                     
  8755                           ;LCD_Libreria.c: 85:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8756  003642  0E07               	movlw	7
  8757  003644  6E04               	movwf	??_LCD_Caracter^0,c
  8758  003646  0E7D               	movlw	125
  8759  003648                     u5107:
  8760  003648  2EE8               	decfsz	wreg,f,c
  8761  00364A  D7FE               	bra	u5107
  8762  00364C  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8763  00364E  D7FC               	bra	u5107
  8764  003650  F000               	nop	
  8765  003652                     
  8766                           ;LCD_Libreria.c: 86:     LATDbits.LATD3 = 1;
  8767  003652  868C               	bsf	140,3,c	;volatile
  8768  003654                     
  8769                           ;LCD_Libreria.c: 87:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8770  003654  0E07               	movlw	7
  8771  003656  6E04               	movwf	??_LCD_Caracter^0,c
  8772  003658  0E7D               	movlw	125
  8773  00365A                     u5117:
  8774  00365A  2EE8               	decfsz	wreg,f,c
  8775  00365C  D7FE               	bra	u5117
  8776  00365E  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8777  003660  D7FC               	bra	u5117
  8778  003662  F000               	nop	
  8779  003664                     
  8780                           ;LCD_Libreria.c: 88:     LATDbits.LATD3 = 0;
  8781  003664  968C               	bcf	140,3,c	;volatile
  8782  003666  0012               	return		;funcret
  8783  003668                     __end_of_LCD_Caracter:
  8784                           	callstack 0
  8785                           
  8786 ;; *************** function _Int_Init *****************
  8787 ;; Defined at:
  8788 ;;		line 8 in file "Interrupcion.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;		None
  8791 ;; Auto vars:     Size  Location     Type
  8792 ;;		None
  8793 ;; Return value:  Size  Location     Type
  8794 ;;                  1    wreg      void 
  8795 ;; Registers used:
  8796 ;;		None
  8797 ;; Tracked objects:
  8798 ;;		On entry : 0/0
  8799 ;;		On exit  : 0/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8802 ;;      Params:         0       0       0       0       0       0       0       0       0
  8803 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8805 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8806 ;;Total ram usage:        0 bytes
  8807 ;; Hardware stack levels used:    1
  8808 ;; Hardware stack levels required when called:    2
  8809 ;; This function calls:
  8810 ;;		Nothing
  8811 ;; This function is called by:
  8812 ;;		_main
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816                           	psect	text36
  8817  003B20                     __ptext36:
  8818                           	callstack 0
  8819  003B20                     _Int_Init:
  8820                           	callstack 28
  8821  003B20                     
  8822                           ;Interrupcion.c: 9:     TRISBbits.RB0 = 1;
  8823  003B20  8093               	bsf	147,0,c	;volatile
  8824                           
  8825                           ;Interrupcion.c: 10:     TRISBbits.RB1 = 1;
  8826  003B22  8293               	bsf	147,1,c	;volatile
  8827                           
  8828                           ;Interrupcion.c: 11:     INTCONbits.INT0IE = 1;
  8829  003B24  88F2               	bsf	242,4,c	;volatile
  8830                           
  8831                           ;Interrupcion.c: 12:     INTCON3bits.INT1E = 1;
  8832  003B26  86F0               	bsf	240,3,c	;volatile
  8833                           
  8834                           ;Interrupcion.c: 13:     INTCONbits.INT0IF = 0;
  8835  003B28  92F2               	bcf	242,1,c	;volatile
  8836                           
  8837                           ;Interrupcion.c: 14:     INTCON3bits.INT1F = 0;
  8838  003B2A  90F0               	bcf	240,0,c	;volatile
  8839                           
  8840                           ;Interrupcion.c: 15:     INTCON2bits.INTEDG0 = 0;
  8841  003B2C  9CF1               	bcf	241,6,c	;volatile
  8842                           
  8843                           ;Interrupcion.c: 16:     INTCON2bits.INTEDG1 = 0;
  8844  003B2E  9AF1               	bcf	241,5,c	;volatile
  8845                           
  8846                           ;Interrupcion.c: 17:     RCONbits.IPEN = 1;
  8847  003B30  8ED0               	bsf	208,7,c	;volatile
  8848                           
  8849                           ;Interrupcion.c: 18:     INTCON3bits.INT1P = 0;
  8850  003B32  9CF0               	bcf	240,6,c	;volatile
  8851                           
  8852                           ;Interrupcion.c: 19:     INTCONbits.GIEL = 1;
  8853  003B34  8CF2               	bsf	242,6,c	;volatile
  8854                           
  8855                           ;Interrupcion.c: 20:     INTCONbits.GIEH = 1;
  8856  003B36  8EF2               	bsf	242,7,c	;volatile
  8857  003B38  0012               	return		;funcret
  8858  003B3A                     __end_of_Int_Init:
  8859                           	callstack 0
  8860                           
  8861 ;; *************** function _ADC_Read *****************
  8862 ;; Defined at:
  8863 ;;		line 19 in file "ADC_Libreria.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;  ch              1    wreg     unsigned char 
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;  ch              1    6[COMRAM] unsigned char 
  8868 ;; Return value:  Size  Location     Type
  8869 ;;                  2    3[COMRAM] unsigned short 
  8870 ;; Registers used:
  8871 ;;		wreg, status,2, status,0
  8872 ;; Tracked objects:
  8873 ;;		On entry : 0/0
  8874 ;;		On exit  : 0/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8877 ;;      Params:         2       0       0       0       0       0       0       0       0
  8878 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8879 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8880 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8881 ;;Total ram usage:        4 bytes
  8882 ;; Hardware stack levels used:    1
  8883 ;; Hardware stack levels required when called:    2
  8884 ;; This function calls:
  8885 ;;		Nothing
  8886 ;; This function is called by:
  8887 ;;		_main
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           	psect	text37
  8892  00390A                     __ptext37:
  8893                           	callstack 0
  8894  00390A                     _ADC_Read:
  8895                           	callstack 28
  8896                           
  8897                           ;incstack = 0
  8898                           ;ADC_Read@ch stored from wreg
  8899  00390A  6E07               	movwf	ADC_Read@ch^0,c
  8900  00390C                     
  8901                           ;ADC_Libreria.c: 20:     if(ch >= 13){
  8902  00390C  0E0C               	movlw	12
  8903  00390E  6407               	cpfsgt	ADC_Read@ch^0,c
  8904  003910  EF8C  F01C         	goto	u4771
  8905  003914  EF8E  F01C         	goto	u4770
  8906  003918                     u4771:
  8907  003918  EF90  F01C         	goto	l4030
  8908  00391C                     u4770:
  8909  00391C                     
  8910                           ;ADC_Libreria.c: 21:         ch = 0;
  8911  00391C  0E00               	movlw	0
  8912  00391E  6E07               	movwf	ADC_Read@ch^0,c
  8913  003920                     l4030:
  8914                           
  8915                           ;ADC_Libreria.c: 23:     ADCON0bits.CHS = ch;
  8916  003920  C007  F006         	movff	ADC_Read@ch,??_ADC_Read
  8917  003924  4606               	rlncf	??_ADC_Read^0,f,c
  8918  003926  4606               	rlncf	??_ADC_Read^0,f,c
  8919  003928  50C2               	movf	194,w,c	;volatile
  8920  00392A  1806               	xorwf	??_ADC_Read^0,w,c
  8921  00392C  0BC3               	andlw	-61
  8922  00392E  1806               	xorwf	??_ADC_Read^0,w,c
  8923  003930  6EC2               	movwf	194,c	;volatile
  8924  003932                     
  8925                           ;ADC_Libreria.c: 24:     ADCON0bits.GO_NOT_DONE = 1;
  8926  003932  82C2               	bsf	194,1,c	;volatile
  8927  003934                     l53:
  8928  003934  B2C2               	btfsc	194,1,c	;volatile
  8929  003936  EF9F  F01C         	goto	u4781
  8930  00393A  EFA1  F01C         	goto	u4780
  8931  00393E                     u4781:
  8932  00393E  EF9A  F01C         	goto	l53
  8933  003942                     u4780:
  8934  003942                     
  8935                           ;ADC_Libreria.c: 26:     return ADRES;
  8936  003942  CFC3 F004          	movff	4035,?_ADC_Read	;volatile
  8937  003946  CFC4 F005          	movff	4036,?_ADC_Read+1	;volatile
  8938  00394A  0012               	return		;funcret
  8939  00394C                     __end_of_ADC_Read:
  8940                           	callstack 0
  8941                           
  8942 ;; *************** function _ADC_Init *****************
  8943 ;; Defined at:
  8944 ;;		line 6 in file "ADC_Libreria.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;		None
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;		None
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  1    wreg      void 
  8951 ;; Registers used:
  8952 ;;		wreg, status,2
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8958 ;;      Params:         0       0       0       0       0       0       0       0       0
  8959 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8960 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8961 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8962 ;;Total ram usage:        0 bytes
  8963 ;; Hardware stack levels used:    1
  8964 ;; Hardware stack levels required when called:    2
  8965 ;; This function calls:
  8966 ;;		Nothing
  8967 ;; This function is called by:
  8968 ;;		_main
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           	psect	text38
  8973  003ADA                     __ptext38:
  8974                           	callstack 0
  8975  003ADA                     _ADC_Init:
  8976                           	callstack 28
  8977  003ADA                     
  8978                           ;ADC_Libreria.c: 7:     ADCON1bits.PCFG = 0b1101;
  8979  003ADA  50C1               	movf	193,w,c	;volatile
  8980  003ADC  0BF0               	andlw	-16
  8981  003ADE  090D               	iorlw	13
  8982  003AE0  6EC1               	movwf	193,c	;volatile
  8983                           
  8984                           ;ADC_Libreria.c: 8:     ADCON1bits.VCFG = 0b00;
  8985  003AE2  0ECF               	movlw	-49
  8986  003AE4  16C1               	andwf	193,f,c	;volatile
  8987                           
  8988                           ;ADC_Libreria.c: 9:     ADCON0bits.CHS = 0b0000;
  8989  003AE6  0EC3               	movlw	-61
  8990  003AE8  16C2               	andwf	194,f,c	;volatile
  8991                           
  8992                           ;ADC_Libreria.c: 11:     ADCON2bits.ADCS = 0b101;
  8993  003AEA  50C0               	movf	192,w,c	;volatile
  8994  003AEC  0BF8               	andlw	-8
  8995  003AEE  0905               	iorlw	5
  8996  003AF0  6EC0               	movwf	192,c	;volatile
  8997                           
  8998                           ;ADC_Libreria.c: 13:     ADCON2bits.ACQT = 0b010;
  8999  003AF2  50C0               	movf	192,w,c	;volatile
  9000  003AF4  0BC7               	andlw	-57
  9001  003AF6  0910               	iorlw	16
  9002  003AF8  6EC0               	movwf	192,c	;volatile
  9003  003AFA                     
  9004                           ;ADC_Libreria.c: 15:     ADCON2bits.ADFM = 1;
  9005  003AFA  8EC0               	bsf	192,7,c	;volatile
  9006  003AFC                     
  9007                           ;ADC_Libreria.c: 16:     ADCON0bits.ADON = 1;
  9008  003AFC  80C2               	bsf	194,0,c	;volatile
  9009  003AFE  0012               	return		;funcret
  9010  003B00                     __end_of_ADC_Init:
  9011                           	callstack 0
  9012                           
  9013 ;; *************** function _INT1_ISR *****************
  9014 ;; Defined at:
  9015 ;;		line 32 in file "Interrupcion.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;		None
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;		None
  9020 ;; Return value:  Size  Location     Type
  9021 ;;                  1    wreg      void 
  9022 ;; Registers used:
  9023 ;;		wreg, status,2, status,0
  9024 ;; Tracked objects:
  9025 ;;		On entry : 0/0
  9026 ;;		On exit  : 0/0
  9027 ;;		Unchanged: 0/0
  9028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9029 ;;      Params:         0       0       0       0       0       0       0       0       0
  9030 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9031 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9032 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9033 ;;Total ram usage:        3 bytes
  9034 ;; Hardware stack levels used:    1
  9035 ;; Hardware stack levels required when called:    1
  9036 ;; This function calls:
  9037 ;;		Nothing
  9038 ;; This function is called by:
  9039 ;;		Interrupt level 1
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           	psect	intcodelo
  9044  000018                     __pintcodelo:
  9045                           	callstack 0
  9046  000018                     _INT1_ISR:
  9047                           	callstack 21
  9048                           
  9049                           ;incstack = 0
  9050  000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9051  00001A  CFD8 F001          	movff	status,??_INT1_ISR
  9052  00001E  CFE8 F002          	movff	wreg,??_INT1_ISR+1
  9053  000022  CFE0 F003          	movff	bsr,??_INT1_ISR+2
  9054  000026                     
<<<<<<< HEAD
  9055                           ;Interrupcion.c: 33:     x++;
  9056  000026  0100               	movlb	0	; () banked
  9057  000028  2BCC               	incf	_x& (0+255),f,b
  9058  00002A                     
  9059                           ; BSR set to: 0
  9060                           ;Interrupcion.c: 34:     if(x >4){
  9061  00002A  0E04               	movlw	4
  9062  00002C  65CC               	cpfsgt	_x& (0+255),b
=======
  9055                           ;Interrupcion.c: 33:     x--;
  9056  000026  0100               	movlb	0	; () banked
  9057  000028  07CC               	decf	_x& (0+255),f,b
  9058  00002A                     
  9059                           ; BSR set to: 0
  9060                           ;Interrupcion.c: 34:     if(x == 0){
  9061  00002A  51CC               	movf	_x& (0+255),w,b
  9062  00002C  A4D8               	btfss	status,2,c
>>>>>>> testing
  9063  00002E  EF1B  F000         	goto	i1u496_21
  9064  000032  EF1D  F000         	goto	i1u496_20
  9065  000036                     i1u496_21:
  9066  000036  EF1F  F000         	goto	i1l4184
  9067  00003A                     i1u496_20:
  9068  00003A                     
  9069                           ; BSR set to: 0
<<<<<<< HEAD
  9070                           ;Interrupcion.c: 35:         x = 1;
  9071  00003A  0E01               	movlw	1
=======
  9070                           ;Interrupcion.c: 35:         x = 4;
  9071  00003A  0E04               	movlw	4
>>>>>>> testing
  9072  00003C  6FCC               	movwf	_x& (0+255),b
  9073  00003E                     i1l4184:
  9074                           
  9075                           ; BSR set to: 0
  9076                           ;Interrupcion.c: 37:     INTCON3bits.INT1F = 0;
  9077  00003E  90F0               	bcf	240,0,c	;volatile
  9078  000040                     
  9079                           ; BSR set to: 0
  9080  000040  C003  FFE0         	movff	??_INT1_ISR+2,bsr
  9081  000044  C002  FFE8         	movff	??_INT1_ISR+1,wreg
  9082  000048  C001  FFD8         	movff	??_INT1_ISR,status
  9083  00004C  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  9084  00004E  0010               	retfie	
  9085  000050                     __end_of_INT1_ISR:
  9086                           	callstack 0
  9087                           
  9088 ;; *************** function _INT0_ISR *****************
  9089 ;; Defined at:
  9090 ;;		line 24 in file "Interrupcion.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;		None
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;		None
  9095 ;; Return value:  Size  Location     Type
  9096 ;;                  1    wreg      void 
  9097 ;; Registers used:
  9098 ;;		wreg, status,2, status,0
  9099 ;; Tracked objects:
  9100 ;;		On entry : 0/0
  9101 ;;		On exit  : 0/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9104 ;;      Params:         0       0       0       0       0       0       0       0       0
  9105 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9107 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9108 ;;Total ram usage:        0 bytes
  9109 ;; Hardware stack levels used:    1
  9110 ;; This function calls:
  9111 ;;		Nothing
  9112 ;; This function is called by:
  9113 ;;		Interrupt level 2
  9114 ;; This function uses a non-reentrant model
  9115 ;;
  9116                           
  9117                           	psect	intcode
  9118  000008                     __pintcode:
  9119                           	callstack 0
  9120  000008                     _INT0_ISR:
  9121                           	callstack 21
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;incstack = 0
  9125  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9126  00000A  ED80  F01D         	call	int_func,f	;refresh shadow registers
  9127                           
  9128                           	psect	intcode_body
  9129  003B00                     __pintcode_body:
  9130                           	callstack 21
  9131  003B00                     int_func:
  9132                           	callstack 21
  9133  003B00  0006               	pop		; remove dummy address from shadow register refresh
  9134  003B02                     
<<<<<<< HEAD
  9135                           ;Interrupcion.c: 25:     x--;
  9136  003B02  0100               	movlb	0	; () banked
  9137  003B04  07CC               	decf	_x& (0+255),f,b
  9138  003B06                     
  9139                           ; BSR set to: 0
  9140                           ;Interrupcion.c: 26:     if(x == 0){
  9141  003B06  51CC               	movf	_x& (0+255),w,b
  9142  003B08  A4D8               	btfss	status,2,c
=======
  9135                           ;Interrupcion.c: 25:     x++;
  9136  003B02  0100               	movlb	0	; () banked
  9137  003B04  2BCC               	incf	_x& (0+255),f,b
  9138  003B06                     
  9139                           ; BSR set to: 0
  9140                           ;Interrupcion.c: 26:     if(x >4){
  9141  003B06  0E04               	movlw	4
  9142  003B08  65CC               	cpfsgt	_x& (0+255),b
>>>>>>> testing
  9143  003B0A  EF89  F01D         	goto	i2u495_41
  9144  003B0E  EF8B  F01D         	goto	i2u495_40
  9145  003B12                     i2u495_41:
  9146  003B12  EF8D  F01D         	goto	i2l4176
  9147  003B16                     i2u495_40:
  9148  003B16                     
  9149                           ; BSR set to: 0
<<<<<<< HEAD
  9150                           ;Interrupcion.c: 27:         x = 4;
  9151  003B16  0E04               	movlw	4
=======
  9150                           ;Interrupcion.c: 27:         x = 1;
  9151  003B16  0E01               	movlw	1
>>>>>>> testing
  9152  003B18  6FCC               	movwf	_x& (0+255),b
  9153  003B1A                     i2l4176:
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;Interrupcion.c: 29:     INTCONbits.INT0IF = 0;
  9157  003B1A  92F2               	bcf	242,1,c	;volatile
  9158  003B1C                     
  9159                           ; BSR set to: 0
  9160  003B1C  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9161  003B1E  0011               	retfie		f
  9162  003B20                     __end_of_INT0_ISR:
  9163                           	callstack 0
  9164                           
  9165                           	psect	rparam
  9166  0000                     
  9167                           	psect	temp
  9168  000057                     btemp:
  9169                           	callstack 0
  9170  000057                     	ds	1
  9171  0000                     int$flags	set	btemp
  9172  0000                     wtemp8	set	btemp+1
  9173  0000                     ttemp5	set	btemp+1
  9174  0000                     ttemp6	set	btemp+4
  9175  0000                     ttemp7	set	btemp+8
  9176                           
  9177                           	psect	idloc
  9178                           
  9179                           ;Config register IDLOC0 @ 0x200000
  9180                           ;	unspecified, using default values
  9181  200000                     	org	2097152
  9182  200000  FF                 	db	255
  9183                           
  9184                           ;Config register IDLOC1 @ 0x200001
  9185                           ;	unspecified, using default values
  9186  200001                     	org	2097153
  9187  200001  FF                 	db	255
  9188                           
  9189                           ;Config register IDLOC2 @ 0x200002
  9190                           ;	unspecified, using default values
  9191  200002                     	org	2097154
  9192  200002  FF                 	db	255
  9193                           
  9194                           ;Config register IDLOC3 @ 0x200003
  9195                           ;	unspecified, using default values
  9196  200003                     	org	2097155
  9197  200003  FF                 	db	255
  9198                           
  9199                           ;Config register IDLOC4 @ 0x200004
  9200                           ;	unspecified, using default values
  9201  200004                     	org	2097156
  9202  200004  FF                 	db	255
  9203                           
  9204                           ;Config register IDLOC5 @ 0x200005
  9205                           ;	unspecified, using default values
  9206  200005                     	org	2097157
  9207  200005  FF                 	db	255
  9208                           
  9209                           ;Config register IDLOC6 @ 0x200006
  9210                           ;	unspecified, using default values
  9211  200006                     	org	2097158
  9212  200006  FF                 	db	255
  9213                           
  9214                           ;Config register IDLOC7 @ 0x200007
  9215                           ;	unspecified, using default values
  9216  200007                     	org	2097159
  9217  200007  FF                 	db	255
  9218                           
  9219                           	psect	config
  9220                           
  9221                           ;Config register CONFIG1L @ 0x300000
  9222                           ;	PLL Prescaler Selection bits
  9223                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9224                           ;	System Clock Postscaler Selection bits
  9225                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9226                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9227                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9228  300000                     	org	3145728
  9229  300000  00                 	db	0
  9230                           
  9231                           ;Config register CONFIG1H @ 0x300001
  9232                           ;	Oscillator Selection bits
  9233                           ;	FOSC = HS, HS oscillator (HS)
  9234                           ;	Fail-Safe Clock Monitor Enable bit
  9235                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9236                           ;	Internal/External Oscillator Switchover bit
  9237                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9238  300001                     	org	3145729
  9239  300001  0C                 	db	12
  9240                           
  9241                           ;Config register CONFIG2L @ 0x300002
  9242                           ;	Power-up Timer Enable bit
  9243                           ;	PWRT = ON, PWRT enabled
  9244                           ;	Brown-out Reset Enable bits
  9245                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9246                           ;	Brown-out Reset Voltage bits
  9247                           ;	BORV = 3, Minimum setting 2.05V
  9248                           ;	USB Voltage Regulator Enable bit
  9249                           ;	VREGEN = OFF, USB voltage regulator disabled
  9250  300002                     	org	3145730
  9251  300002  18                 	db	24
  9252                           
  9253                           ;Config register CONFIG2H @ 0x300003
  9254                           ;	Watchdog Timer Enable bit
  9255                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9256                           ;	Watchdog Timer Postscale Select bits
  9257                           ;	WDTPS = 32768, 1:32768
  9258  300003                     	org	3145731
  9259  300003  1E                 	db	30
  9260                           
  9261                           ; Padding undefined space
  9262  300004                     	org	3145732
  9263  300004  FF                 	db	255
  9264                           
  9265                           ;Config register CONFIG3H @ 0x300005
  9266                           ;	CCP2 MUX bit
  9267                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9268                           ;	PORTB A/D Enable bit
  9269                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9270                           ;	Low-Power Timer 1 Oscillator Enable bit
  9271                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9272                           ;	MCLR Pin Enable bit
  9273                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9274  300005                     	org	3145733
  9275  300005  81                 	db	129
  9276                           
  9277                           ;Config register CONFIG4L @ 0x300006
  9278                           ;	Stack Full/Underflow Reset Enable bit
  9279                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  9280                           ;	Single-Supply ICSP Enable bit
  9281                           ;	LVP = ON, Single-Supply ICSP enabled
  9282                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9283                           ;	ICPRT = OFF, ICPORT disabled
  9284                           ;	Extended Instruction Set Enable bit
  9285                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9286                           ;	Background Debugger Enable bit
  9287                           ;	DEBUG = 0x1, unprogrammed default
  9288  300006                     	org	3145734
  9289  300006  84                 	db	132
  9290                           
  9291                           ; Padding undefined space
  9292  300007                     	org	3145735
  9293  300007  FF                 	db	255
  9294                           
  9295                           ;Config register CONFIG5L @ 0x300008
  9296                           ;	Code Protection bit
  9297                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9298                           ;	Code Protection bit
  9299                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9300                           ;	Code Protection bit
  9301                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9302                           ;	Code Protection bit
  9303                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9304  300008                     	org	3145736
  9305  300008  0F                 	db	15
  9306                           
  9307                           ;Config register CONFIG5H @ 0x300009
  9308                           ;	Boot Block Code Protection bit
  9309                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9310                           ;	Data EEPROM Code Protection bit
  9311                           ;	CPD = OFF, Data EEPROM is not code-protected
  9312  300009                     	org	3145737
  9313  300009  C0                 	db	192
  9314                           
  9315                           ;Config register CONFIG6L @ 0x30000A
  9316                           ;	Write Protection bit
  9317                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9318                           ;	Write Protection bit
  9319                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9320                           ;	Write Protection bit
  9321                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9322                           ;	Write Protection bit
  9323                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9324  30000A                     	org	3145738
  9325  30000A  0F                 	db	15
  9326                           
  9327                           ;Config register CONFIG6H @ 0x30000B
  9328                           ;	Configuration Register Write Protection bit
  9329                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9330                           ;	Boot Block Write Protection bit
  9331                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9332                           ;	Data EEPROM Write Protection bit
  9333                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9334  30000B                     	org	3145739
  9335  30000B  E0                 	db	224
  9336                           
  9337                           ;Config register CONFIG7L @ 0x30000C
  9338                           ;	Table Read Protection bit
  9339                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9340                           ;	Table Read Protection bit
  9341                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9342                           ;	Table Read Protection bit
  9343                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9344                           ;	Table Read Protection bit
  9345                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9346  30000C                     	org	3145740
  9347  30000C  0F                 	db	15
  9348                           
  9349                           ;Config register CONFIG7H @ 0x30000D
  9350                           ;	Boot Block Table Read Protection bit
  9351                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9352  30000D                     	org	3145741
  9353  30000D  40                 	db	64
  9354                           tosu	equ	0xFFF
  9355                           tosh	equ	0xFFE
  9356                           tosl	equ	0xFFD
  9357                           stkptr	equ	0xFFC
  9358                           pclatu	equ	0xFFB
  9359                           pclath	equ	0xFFA
  9360                           pcl	equ	0xFF9
  9361                           tblptru	equ	0xFF8
  9362                           tblptrh	equ	0xFF7
  9363                           tblptrl	equ	0xFF6
  9364                           tablat	equ	0xFF5
  9365                           prodh	equ	0xFF4
  9366                           prodl	equ	0xFF3
  9367                           indf0	equ	0xFEF
  9368                           postinc0	equ	0xFEE
  9369                           postdec0	equ	0xFED
  9370                           preinc0	equ	0xFEC
  9371                           plusw0	equ	0xFEB
  9372                           fsr0h	equ	0xFEA
  9373                           fsr0l	equ	0xFE9
  9374                           wreg	equ	0xFE8
  9375                           indf1	equ	0xFE7
  9376                           postinc1	equ	0xFE6
  9377                           postdec1	equ	0xFE5
  9378                           preinc1	equ	0xFE4
  9379                           plusw1	equ	0xFE3
  9380                           fsr1h	equ	0xFE2
  9381                           fsr1l	equ	0xFE1
  9382                           bsr	equ	0xFE0
  9383                           indf2	equ	0xFDF
  9384                           postinc2	equ	0xFDE
  9385                           postdec2	equ	0xFDD
  9386                           preinc2	equ	0xFDC
  9387                           plusw2	equ	0xFDB
  9388                           fsr2h	equ	0xFDA
  9389                           fsr2l	equ	0xFD9
  9390                           status	equ	0xFD8

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         119
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     80      86
    BANK0           160     94     127
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> datos(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> datos(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1072_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> datos(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> datos(BANK0[16]), 

    LCD_Cadena@dat	PTR unsigned char  size(2) Largest target is 16
		 -> datos(BANK0[16]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _LCD_XY->_LCD_Comando
    _LCD_Init->_LCD_Comando
    _LCD_Cadena->_LCD_Caracter

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   33586
                                             78 COMRAM     2     2      0
                           _ADC_Init
                           _ADC_Read
                           _Int_Init
                         _LCD_Cadena
                           _LCD_Init
                             _LCD_XY
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   28800
                                             76 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27987
                                             76 COMRAM     2     2      0
                                             70 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   27604
                                             66 COMRAM    10     4      6
                                             56 BANK0     14    14      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22149
                                             54 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              9 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             28 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             42 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             42 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     626
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_XY                                               4     0      4     718
                                              5 COMRAM     4     0      4
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      44
                                              5 COMRAM     1     1      0
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (2) _LCD_Comando                                          2     2      0      44
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Cadena                                           2     0      2     393
                                              5 COMRAM     2     0      2
                       _LCD_Caracter
 ---------------------------------------------------------------------------------
 (2) _LCD_Caracter                                         2     2      0      44
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Int_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      45
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INT1_ISR                                             3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Int_Init
   _LCD_Cadena
     _LCD_Caracter
   _LCD_Init
     _LCD_Comando
   _LCD_XY
     _LCD_Comando
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _INT1_ISR (ROOT)

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5E      7F       5       79.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     50      56       1       91.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     125      20        0.0%
DATA                 0      0     125       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
<<<<<<< HEAD
Symbol Table                                                                                   Mon Feb 15 20:46:46 2021
=======
Symbol Table                                                                                   Mon Feb 15 20:44:00 2021
>>>>>>> testing

           ___fldiv@aexp 001C             ___fldiv@bexp 001B            ?_LCD_Caracter 0001  
                      _x 00CC             ___fldiv@sign 0014             ?_LCD_Comando 0001  
                     l53 3934                       l55 3942                       l56 394A  
                     l80 3666                       l72 35F4                       l49 3AFE  
                     l69 37DA                       l77 3AB2                       l86 3A8A  
           ___awdiv@sign 0009                       bsr 000FE0      ___wmul@multiplicand 0006  
                    l101 3B38                      l116 3AD8                      l413 2F00  
                    l360 34D8                      l347 3366                      l700 23DE  
                    l381 2FBE                      l390 39BA                      l711 249C  
                    l703 23A2                      l375 3582                      l712 248A  
                    l386 3004                      l730 1E80                      l740 20DC  
                    l644 1AEA                      l709 2424                      l661 1C04  
                    l653 1DBA                      l645 1AD8                      l734 21E4  
                    l670 1CD4                      l646 1A9E                      l902 0FAA  
                    l671 1CC2                      l840 3428                      l737 2076  
                    l771 2B0E                      l747 21A6                      l739 20EE  
                    l835 33AC                      l774 2C6A                      l686 38C4  
                    l838 33EE                      l960 18FA                      l785 2C02  
                    l945 14CA                      l778 2BA6                      l698 257E  
                    l858 13D6                      l794 382C                      l876 0C12  
                    l973 36C0                      l974 36C8                      l967 1844  
                    l984 3102                      _pad 3368                      _vin 00C6  
           ___awmod@sign 0009                      wreg 000FE8             ___flmul@aexp 0023  
           ___flmul@bexp 0024             ___flmul@sign 001E             ___flmul@temp 0029  
           ___flmul@prod 0025             ___fltol@exp1 000D                     l1013 2DF2  
                   l1022 2AB6                     l1103 3728                     l1032 39F2  
                   l1040 387E                     l1016 2DFA                     l1025 29FA  
                   l1061 32A2                     l1046 3982                     l3000 2434  
                   l1072 3B3A                     l3002 2442                     l3012 24AC  
                   l3020 24F4                     l3004 2446                     l3100 1F2A  
                   l1084 3A28                     l1069 3908                     l3030 255E  
                   l3022 250E                     l3014 24B8                     l3006 2454  
                   l3110 1F7C                     l3102 1F36                     l1078 3784  
                   l4000 3798                     l3200 32FE                     l3032 256C  
                   l3024 2524                     l3016 24C6                     l3008 2482  
                   l3120 1FFA                     l3112 1F8C                     l3104 1F46  
                   l1088 31D8                     l4010 37C2                     l4002 379E  
                   l3210 3338                     l3202 3306                     l3034 2572  
                   l3026 253E                     l3018 24F0                     l3130 2074  
                   l3122 2030                     l3114 1FA8                     l3106 1F52  
                   l3050 1DD8                     l1098 3720                     l4020 3AFA  
                   l4012 37C8                     l4004 37AE                     l4100 2C58  
                   l3220 335E                     l3212 333A                     l3204 3314  
                   l3036 2574                     l3028 255A                     l3140 20D4  
                   l3132 2086                     l3124 203E                     l3116 1FB4  
                   l3108 1F62                     l3060 1E1E                     l3052 1DE8  
                   l3044 1DBC                     l3300 399A                     l4022 3AFC  
                   l4030 3920                     l4014 37CE                     l4006 37B4  
                   l4102 2C5A                     l3214 3340                     l3206 331A  
                   l3230 3444                     l3150 2142                     l3134 2094  
                   l3126 205C                     l3118 1FD0                     l3070 1E4A  
                   l3062 1E24                     l3054 1DF8                     l3046 1DC8  
                   l3302 39AA                     l4110 2588                     l4032 3932  
                   l4024 3B20                     l4016 37D4                     l4008 37BC  
                   l3208 3330                     l3216 3346                     l3240 3478  
                   l3232 3448                     l3224 342A                     l3160 21AA  
                   l3144 20FE                     l3152 2146                     l3136 2098  
                   l3128 2066                     l3080 1EA0                     l3072 1E5A  
                   l3064 1E2A                     l3056 1E08                     l3048 1DD6  
                   l3320 2E66                     l3312 2E26                     l4040 37FE  
<<<<<<< HEAD
                   l4120 25F6                     l4112 258C                     l4018 3ADA  
=======
                   l4120 25F8                     l4112 258C                     l4018 3ADA  
>>>>>>> testing
                   l4026 390C                     l4050 3AAA                     l3218 3356  
                   l3250 34B2                     l3242 3480                     l3234 3456  
                   l3226 342E                     l3170 21D4                     l3162 21BA  
                   l3154 2160                     l3146 210A                     l3138 20A6  
                   l3090 1EE0                     l3074 1E6A                     l3066 1E38  
                   l3058 1E0E                     l3330 2E96                     l3322 2E74  
                   l3314 2E50                     l3306 2DFC                     l3410 28C6  
                   l3402 3700                     l4042 381A                     l4034 37DC  
<<<<<<< HEAD
                   l4130 2666                     l4122 261C                     l4114 2590  
=======
                   l4130 2668                     l4122 261E                     l4114 2590  
>>>>>>> testing
                   l4106 2580                     l4028 391C                     l4052 3A5C  
                   l4060 2ABA                     l3180 32A4                     l3244 348E  
                   l3252 34B8                     l3236 345E                     l3228 343C  
                   l3260 34DA                     l3164 21C8                     l3156 2174  
                   l3148 2118                     l3092 1EEC                     l3084 1EB4  
                   l3076 1E70                     l3068 1E3A                     l2700 197C  
                   l3340 2EC0                     l3332 2EA0                     l3316 2E52  
                   l3308 2E12                     l3420 29AE                     l3412 291C  
                   l3404 3712                     l3500 09B4                     l4036 37EE  
<<<<<<< HEAD
                   l4140 2700                     l4132 2674                     l4124 2630  
                   l4116 25A2                     l4108 2584                     l4054 3A60  
=======
                   l4140 2702                     l4132 2676                     l4124 2632  
                   l4116 25A4                     l4108 2584                     l4054 3A60  
>>>>>>> testing
                   l4046 3A8C                     l4062 2ACA                     l3190 32D0  
                   l3182 32A8                     l3254 34C8                     l3246 34A4  
                   l3238 3470                     l3270 357A                     l3262 3508  
                   l3166 21CA                     l3158 218E                     l3094 1F04  
                   l3086 1EC0                     l3078 1E90                     l2710 19B2  
                   l2702 1982                     l3174 3880                     l3342 2ED0  
                   l3318 2E62                     l3430 2A96                     l3422 29EA  
                   l3414 2930                     l3350 3368                     l3510 0A3E  
<<<<<<< HEAD
                   l3502 09DA                     l4038 37F6                     l4150 27A4  
                   l4134 26BA                     l4142 2716                     l4126 263C  
                   l4118 25B0                     l4056 3A6E                     l4048 3A9E  
=======
                   l3502 09DA                     l4038 37F6                     l4150 27A6  
                   l4134 26BC                     l4142 2718                     l4126 263E  
                   l4118 25B2                     l4056 3A6E                     l4048 3A9E  
>>>>>>> testing
                   l4080 2B90                     l4072 2B48                     l4064 2AD8  
                   l3440 382E                     l3192 32D8                     l3184 32B6  
                   l3256 34D0                     l3248 34AC                     l3272 3580  
                   l3264 3518                     l3280 2F40                     l3168 21D0  
                   l3096 1F10                     l3088 1ECA                     l2800 1B78  
                   l2720 19EE                     l2712 19C2                     l2704 1990  
                   l3176 3890                     l3344 2EE0                     l3328 2E8C  
                   l3432 2AA6                     l3416 293E                     l3424 2A1E  
                   l3408 28A6                     l3360 33B8                     l3352 3376  
                   l3600 0E52                     l3520 0A74                     l4160 27FC  
<<<<<<< HEAD
                   l4152 27B8                     l4144 272A                     l4136 26E0  
                   l4128 2652                     l4058 3A72                     l4090 2C10  
=======
                   l4152 27BA                     l4144 272C                     l4136 26E2  
                   l4128 2654                     l4058 3A72                     l4090 2C10  
>>>>>>> testing
                   l4082 2B9C                     l4074 2B50                     l4066 2B1E  
                   l3442 3832                     l3194 32DC                     l3186 32BE  
                   l3266 3546                     l3290 2FAC                     l3282 2F6E  
                   l3098 1F1C                     l2802 1B9E                     l2810 1BF4  
                   l2730 1A0C                     l2722 19FC                     l2714 19C4  
                   l2706 1992                     l3346 2EF0                     l3338 2EB4  
                   l3426 2A5A                     l3362 33CC                     l3354 338A  
                   l3610 0F1E                     l3602 0E70                     l3530 0B3E  
<<<<<<< HEAD
                   l3506 0A10                     l4162 2842                     l4154 27C4  
                   l4146 2738                     l4138 26F4                     l4092 2C12  
=======
                   l3506 0A10                     l4162 2842                     l4154 27C6  
                   l4146 273A                     l4138 26F6                     l4092 2C12  
>>>>>>> testing
                   l4084 2BD8                     l4076 2B5C                     l4068 2B34  
                   l2900 3AB4                     l3436 39BC                     l3444 3846  
                   l3196 32E4                     l3188 32C2                     l3268 3556  
                   l3292 2FFC                     l3284 2F7E                     l3276 2F02  
                   l2820 1C48                     l2812 1C1A                     l2804 1BD2  
                   l2740 1A20                     l2732 1A10                     l2724 1A00  
                   l2708 19A2                     l2716 19CC                     l3380 3098  
                   l3372 3006                     l3428 2A6E                     l3364 33D0  
                   l3356 3398                     l3700 1270                     l3620 0F96  
                   l3612 0F2E                     l3604 0EA4                     l3540 0BC0  
                   l3532 0B72                     l3524 0AAA                     l3508 0A22  
                   l3460 0856                     l3452 0826                     l4164 2868  
<<<<<<< HEAD
                   l4148 277E                     l4156 27DA                     l4094 2C16  
=======
                   l4148 2780                     l4156 27DC                     l4094 2C16  
>>>>>>> testing
                   l4086 2BE4                     l4078 2B8E                     l2902 3AD0  
                   l3446 3874                     l3198 32F6                     l2910 2200  
                   l3294 3002                     l3286 2F8C                     l3278 2F30  
                   l2830 1C72                     l2822 1C56                     l2814 1C2A  
                   l2806 1BD4                     l2750 1A34                     l2742 1A24  
                   l2734 1A14                     l2726 1A04                     l2718 19DC  
                   l3390 30FA                     l3374 3026                     l2670 3226  
                   l2662 31DA                     l3366 33FC                     l3358 33A4  
                   l3710 12CC                     l3702 127C                     l3630 104C  
                   l3622 0FA2                     l3614 0F3E                     l3606 0ED6  
                   l3542 0BD2                     l3550 0C1E                     l3534 0B7A  
                   l3526 0ADE                     l3518 0A5A                     l3470 08AC  
                   l3462 087A                     l3454 0830                     l4166 287C  
                   l4158 27EE                     l4096 2C3A                     l4088 2BF2  
                   l3448 3878                     l2920 2234                     l2912 2202  
                   l3288 2F9E                     l2840 1CA4                     l2832 1C82  
                   l2824 1C58                     l2808 1BE4                     l2760 1A86  
                   l2752 1A38                     l2744 1A28                     l2736 1A18  
                   l2728 1A08                     l2680 1916                     l3376 3064  
                   l3384 30A4                     l2672 325C                     l2664 31EC  
                   l3368 3410                     l3720 1316                     l3704 1282  
                   l3712 12D2                     l3640 1096                     l3632 105E  
                   l3624 0FC6                     l3616 0F72                     l3608 0EEC  
                   l3560 0C5E                     l3544 0BE4                     l3528 0AE4  
                   l3536 0BAC                     l3480 08DA                     l3472 08BE  
                   l3464 0884                     l3456 0840                     l3800 3148  
                   l4256 148A                     l4168 2888                     l4098 2C4A  
                   l4258 2D28                     l2930 2266                     l2914 2212  
                   l2922 223C                     l2906 21E6                     l3298 3984  
                   l2850 1CFE                     l2842 1CBA                     l2826 1C66  
                   l2818 1C3E                     l2834 1C84                     l2770 1ACA  
                   l2762 1A96                     l2746 1A2C                     l2738 1A1C  
                   l2754 1A3C                     l2690 194A                     l2682 1918  
                   l3386 30B6                     l3378 308C                     l2666 31FE  
                   l3394 372A                     l3730 1346                     l3722 1322  
                   l3714 12E4                     l3706 12A8                     l3650 10CC  
                   l3642 10A6                     l3634 106C                     l3626 102A  
                   l3618 0F82                     l3570 0CBA                     l3562 0C94  
                   l3546 0BEC                     l3538 0BBC                     l3490 094E  
                   l3474 08CA                     l3482 08E0                     l3466 088C  
                   l3458 084E                     l3802 3160                     l2940 229A  
                   l2932 2268                     l2924 224C                     l2916 2222  
                   l2908 21F2                     l2860 1D7A                     l2852 1D38  
                   l2828 1C6E                     l2836 1C92                     l2772 1ACC  
                   l2764 1AAC                     l2756 1A40                     l2748 1A30  
                   l2684 1928                     l2692 1952                     l2676 18FC  
                   l2668 3208                     l3396 373A                     l3740 13A0  
                   l3724 132A                     l3716 12FE                     l3708 12C4  
                   l3660 1100                     l3652 10D0                     l3644 10AA  
                   l3628 1038                     l3636 1074                     l3580 0CFE  
                   l3572 0CCC                     l3564 0C9C                     l3556 0C30  
                   l3548 0C06                     l3492 096A                     l3484 0906  
                   l3476 08D2                     l3468 089E                     l3804 317C  
                   l3900 17CE                     l3820 141E                     l3812 13D8  
                   l3750 2C6C                     l2950 22E0                     l2934 2278  
                   l2942 22A2                     l2926 2252                     l2918 2232  
                   l2870 1D9A                     l2862 1D7E                     l2846 1CE4  
                   l2854 1D3A                     l2838 1C96                     l2790 1B54  
                   l2782 1B1C                     l2774 1AD6                     l2766 1AB8  
                   l2758 1A6A                     l2694 1962                     l2686 1938  
                   l2678 1908                     l3398 36CA                     l3742 13B0  
                   l3734 137A                     l3726 133A                     l3718 1304  
                   l3670 119E                     l3662 1104                     l3654 10D6  
                   l3646 10B0                     l3638 1088                     l3590 0D48  
                   l3582 0D16                     l3574 0CDA                     l3558 0C42  
                   l3566 0CA0                     l3494 0982                     l3478 08D6  
                   l3806 318E                     l3902 17E0                     l3910 1858  
                   l3830 1446                     l3822 142C                     l3814 13FC  
                   ?_pad 0014                     l3760 2CDA                     l3752 2C80  
                   l2960 2308                     l2952 22E4                     l2944 22B2  
                   l2936 2288                     l2928 2258                     l2872 1DA8  
                   l2864 1D8C                     l2856 1D4A                     l2848 1CF0  
                   l2792 1B58                     l2784 1B2C                     l2776 1AF8  
                   l2768 1ABC                     l2696 1968                     l2688 1948  
                   l2880 38D2                     l3744 13B6                     l3736 138C  
                   l3728 1340                     l3680 11FC                     l3648 10BC  
                   l3656 10DC                     l3664 110A                     l3672 11A2  
                   l3592 0D5C                     l3584 0D28                     l3576 0CDE  
                   l3568 0CA8                     l3496 098C                     l3488 093C  
                   l3808 31B6                     l3912 187C                     l3920 18AA  
                   l3904 1814                     l3824 142E                     l3816 140A  
                   l3770 2D02                     l3762 2CDE                     l3754 2C84  
                   l2970 2356                     l2946 22C8                     l2938 2298  
                   l2874 1DAA                     l2866 1D92                     l2858 1D5A  
                   l2794 1B66                     l2786 1B3A                     l2778 1B08  
                   l2698 197A                     l2882 38E4                     l2890 3A04  
                   l3738 1398                     l3690 123A                     l3682 120C  
                   l3674 11C0                     l3666 1162                     l3658 10EE  
                   l3594 0DC0                     l3578 0CF0                     l3586 0D30  
                   l3922 18B8                     l3914 188A                     l3850 14D8  
                   l3842 1458                     l3834 144C                     l3826 1440  
                   l3818 141A                     l3772 2D0A                     l3756 2C88  
                   l2980 23A0                     l2972 2366                     l2964 231C  
                   l2948 22D8                     l2956 22F8                     l2868 1D94  
                   l2796 1B68                     l2788 1B48                     l2884 38E8  
                   l2892 3A1C                     l3692 124A                     l3684 1210  
                   l3676 11DC                     l3668 1196                     l3596 0E18  
                   l3588 0D38                     l3916 189E                     l3860 1538  
                   l3852 14DA                     l3950 35A8                     l3782 2DB2  
                   l3774 2D3E                     l3766 2CE4                     l3758 2CA4  
                   l2990 23EE                     l2982 23AC                     l2974 236E  
                   l2966 2336                     l2958 2308                     l2798 1B72  
                   l2878 38C6                     l2886 39F4                     l3694 1252  
                   l3686 1220                     l3678 11EE                     l3598 0E4C  
                   l3870 15E8                     l3862 1572                     l3854 14FE  
                   l3846 1464                     l3838 1452                     l3926 18C4  
                   l3960 35E0                     l3952 35AA                     l3944 3586  
                   l3784 2DC4                     l3768 2CFA                     l2992 2404  
                   l2984 23CA                     l2976 237E                     l2968 2346  
                   l2888 3A00                     l2896 394C                     l3696 1260  
                   l3688 1232                     l3792 3104                     l3928 18E8  
                   l3880 166E                     l3864 1592                     l3856 1506  
                   l3872 15FA                     l3848 14B8                     l3970 360A  
                   l3962 35E2                     l3954 35BA                     l3946 3596  
                   l3786 2DD6                     l3778 2D74                     l2994 240A  
                   l2986 23CC                     l2978 2392                     l3698 1268  
                   l3794 312E                     l3890 1706                     l3882 16A0  
                   l3874 161C                     l3866 15A0                     l3858 1514  
                   l3980 3642                     l3972 361A                     l3964 35F2  
                   l3956 35CE                     l3948 3598                     l2996 2414  
                   l2988 23DC                     l3884 16B2                     l3876 162C  
                   l3982 3652                     l3974 361C                     l3966 35F8  
                   l3958 35D0                     l2998 2422                     l3798 313A  
                   l3886 16C8                     l3894 1732                     l3878 165E  
                   l3990 3670                     l3984 3654                     l3976 362C  
                   l3968 3608                     l3896 1760                     l3888 16D6  
                   l3992 367E                     l3986 3664                     l3978 3640  
                   l3994 36A4                     l3996 3786                     l3988 3668  
                   l3998 3794                     STR_1 0801                     STR_2 0801  
                   STR_3 0801                     STR_4 0801                     STR_5 0811  
                   STR_6 0819                     STR_9 0815                     u3000 2278  
                   u3001 2274                     u3010 2288                     u3011 2284  
                   u3100 2442                     u3020 22C8                     u3101 243E  
                   u3021 22C4                     u3110 2454                     u3030 2308  
                   u3111 2450                     u3031 2304                     u3120 2482  
                   u3040 237E                     u3200 1DE8                     u4000 0906  
                   _LATD 000F8C                     u3121 247E                     u3041 237A  
                   u3201 1DE4                     u4001 0902                     u3130 2498  
                   u3050 23A0                     u3210 1DF8                     u4010 0934  
                   u3131 2494                     u3051 239C                     u3211 1DF4  
                   u4011 092E                     u3140 24AC                     u3060 23CA  
                   u3300 20A6                     u3220 1E38                     u2500 31FE  
                   u4100 0BAC                     u4020 0936                     u3141 24A8  
                   u3061 23C6                     u3301 20A2                     u3221 1E34  
                   u2501 31FA                     u4101 0BA8                     u3150 24C6  
                   u3070 23EE                     u3310 20D4                     u3230 1E4A  
                   u2510 3226                     u4110 0BD2                     u4030 094E  
                   u3151 24C2                     u3071 23EA                     u3311 20D0  
                   u3231 1E46                     u2511 3222                     u4111 0BCE  
                   u4031 094A                     u3400 32F6                     u3160 250E  
                   u3080 2404                     u3320 20EA                     u3240 1E5A  
                   u2600 19EE                     u2520 325C                     u4200 0CDA  
                   u4120 0BE4                     u4040 09DA                     u3401 32F2  
                   u3161 250A                     u3081 2400                     u3321 20E6  
                   u3241 1E56                     u2601 19EA                     u2521 3258  
                   u4201 0CD6                     u4121 0BE0                     u4041 09D6  
                   u3410 3314                     u3170 253E                     u3090 2422  
                   u3330 20FE                     u3250 1E90                     u2610 19FC  
                   u2530 1916                     u4210 0CF0                     u4130 0C06  
                   u4050 0A08                     u3411 3310                     u3171 253A  
                   u3091 241E                     u3331 20FA                     u3251 1E8C  
                   u2611 19F8                     u2531 1912                     u4211 0CEC  
                   u4131 0C02                     u4051 0A02                     u3420 3330  
                   u3180 256C                     u3500 3508                     u3340 2118  
                   u3260 1EA0                     u2700 1B3A                     u2620 1A6A  
                   u2540 1928                     u4300 104C                     u4220 0CFE  
                   u4140 0C2C                     u4060 0A0A                     u3421 332C  
                   u3181 2568                     u3501 3504                     u3341 2114  
                   u3261 1E9C                     u2701 1B36                     u2621 1A66  
                   u2541 1924                     u4301 1048                     u4221 0CFA  
                   u4141 0C28                     u3430 3356                     u3510 3546  
                   u3350 2160                     u3270 201A                     u3190 1DD6  
                   u2710 1B48                     u2630 1A82                     u2550 1938  
                   u4310 105E                     u4230 0D28                     u4150 0C42  
                   u4070 0A22                     u3431 3352                     u3511 3542  
                   u3351 215C                     u3191 1DD2                     u2711 1B44  
                   u2631 1A7C                     u2551 1934                     u4311 105A  
                   u4231 0D24                     u4151 0C3E                     u4071 0A1E  
                   u5007 2892                     u3440 343C                     u3520 357A  
                   u3360 218E                     u3280 2074                     u2800 1C92  
                   u2720 1B66                     u2640 1A84                     u2560 197A  
                   u3600 2E46                     u4400 1232                     u4320 106C  
                   u4240 0E70                     u4160 0C5E                     u4080 0AA6  
                   u5017 378C                     u3441 3438                     u3521 3576  
                   u3361 218A                     u3281 2070                     u2801 1C8E  
                   u2721 1B62                     u2561 1976                     u4401 122E  
                   u4321 1068                     u4241 0E6C                     u4161 0C5A  
                   u4081 0AA2                     u3450 3456                     u3530 2F30  
                   u3370 21C8                     u3290 2094                     u2810 1CA4  
                   u2730 1B9E                     u2650 1AAC                     u2570 1990  
                   u3610 2E74                     u2490 31EC                     u4410 1260  
                   u4330 1088                     u4250 0ED6                     u4170 0C94  
                   u4090 0B3A                     u5107 3648                     u5027 37A4  
                   u3451 3452                     u3531 2F2C                     u3371 21C4  
                   u3291 2090                     u3275 2010                     u2811 1CA0  
                   u2731 1B9A                     u2651 1AA8                     u2571 198C  
                   u3611 2E70                     u2491 31E8                     u4411 125C  
                   u4331 1084                     u4251 0ED2                     u4171 0C90  
                   u4091 0B36                     u4500 2CF6                     u3380 32B6  
                   u3460 3470                     u3540 2F6E                     u2900 1D8C  
                   u2820 1CBA                     u2740 1BE4                     u2660 1ACA  
                   u2580 19A2                     u3620 2E88                     u3700 3046  
                   u4420 12E4                     u4340 1096                     u4260 0F1E  
                   u4180 0CBA                     u5117 365A                     u5037 37B6  
                   u4501 2CF2                     u3381 32B2                     u3461 346C  
                   u3541 2F6A                     u2901 1D88                     u2821 1CB6  
                   u2741 1BE0                     u2661 1AC6                     u2581 199E  
                   u3621 2E84                     u3605 2E3C                     u4421 12E0  
                   u4341 1092                     u4261 0F1A                     u4181 0CB6  
                   u4510 2DAC                     u3390 32D0                     u3470 348E  
                   u3550 2F8C                     u2910 1DA8                     u2830 1CD0  
                   u2750 1C1A                     u2670 1AEA                     u2590 19B2  
                   u3630 2EB0                     u3710 3064                     u4430 12FE  
                   u4350 10EE                     u4270 0F2E                     u4190 0CCC  
                   u5047 359E                     u4511 2DA6                     u3391 32CC  
                   u3471 348A                     u3551 2F88                     u2911 1DA4  
                   u2831 1CCC                     u2751 1C16                     u2671 1AE6  
                   u2591 19AE                     u3631 2EAC                     u3711 3060  
                   u4431 12FA                     u4351 10EA                     u4271 0F2A  
                   u4191 0CC8                     u4520 2DAE                     u3480 34A4  
                   u3560 2FAC                     u2840 1CE4                     u2760 1C2A  
                   u2680 1AF8                     u3640 2ED0                     u3720 308C  
                   u2920 3908                     u3800 36FC                     u4440 1316  
                   u4360 11C0                     u4280 0F96                     u4600 13FC  
                   u5057 35B0                     u3481 34A0                     u3561 2FA8  
                   u2841 1CE0                     u2761 1C26                     u2681 1AF4  
                   u3641 2ECC                     u3721 3088                     u3705 303C  
                   u2921 3904                     u4441 1312                     u4361 11BC  
                   u4281 0F92                     u4601 13F8                     u4530 2DC4  
                   u3490 34C8                     u3570 2FFC                     u2850 1CFE  
                   u2770 1C56                     u2690 1B08                     u3650 2EE0  
                   u3730 30B6                     u2930 3A1C                     u3810 3712  
                   u4450 1374                     u4370 11DC                     u4290 1038  
                   u4610 14CA                     u5067 35D6                     u4531 2DC0  
                   u3491 34C4                     u3571 2FF8                     u2851 1CFA  
                   u2771 1C52                     u2691 1B04                     u3651 2EDC  
                   u3731 30B2                     u2931 3A18                     u3811 370E  
                   u4451 136E                     u4371 11D8                     u4291 1034  
                   u4611 14C6                     u4540 2DD6                     u3580 399A  
                   u2860 1D38                     u2780 1C66                     u3900 2A5A  
                   u3820 28EE                     u3660 3376                     u2940 397C  
                   u4460 1376                     u4380 11EE                     u4700 16B2  
                   u4620 14D8                     u5077 35E8                     u4541 2DD2  
                   u3581 3996                     u2861 1D34                     u2781 1C62  
                   u3901 2A56                     u3661 3372                     u2941 3976  
                   u4381 11EA                     u4701 16AE                     u4621 14D4  
                   u2870 1D4A                     u2790 1C82                     u3590 2E12  
                   u3750 30F0                     u3910 2A96                     u3830 291C  
                   u3670 3398                     u2950 397E                     u4470 138C  
                   u4390 11FC                     u4550 312E                     u4710 1760  
                   u4630 14FE                     u5087 3610                     u2871 1D46  
                   u2791 1C7E                     u3591 2E0E                     u3751 30EA  
                   u3911 2A92                     u3831 2918                     u3671 3394  
                   u4471 1388                     u4391 11F8                     u4551 312A  
                   u4711 175C                     u4631 14FA                     u4800 3A8A  
                   u3920 39EC                     u4480 2CA4                     u2960 2200  
                   u2880 1D5A                     u3760 30F2                     u3840 293E  
                   u3680 33EE                     u4560 3160                     u4720 17C6  
                   u4640 1538                     u5097 3622                     u4801 3A86  
                   u3921 39E6                     u4481 2CA0                     u2961 21FC  
                   u2881 1D56                     u3745 30C8                     u3841 293A  
                   u3825 28E4                     u3681 33EA                     u4561 315C  
                   u4721 17C0                     u4641 1534                     u4810 2ACA  
                   u3930 39EE                     u4490 2CDA                     u2970 2212  
                   u2890 1D7A                     u3690 33FC                     u3770 3772  
                   u4570 317C                     u4730 17C8                     u4650 15E0  
                   u4811 2AC6                     u4491 2CD6                     u2971 220E  
                   u2891 1D76                     u3691 33F8                     u4571 3178  
                   u4651 15DA                     u4900 2C58                     u4820 2AD8  
                   u3940 3846                     u2980 2222                     u3860 29AA  
                   u3780 3784                     u4580 318E                     u4740 17E0  
                   u4660 15E2                     u4901 2C54                     u4821 2AD4  
                   u3941 3842                     u2981 221E                     u3861 29A6  
                   u3781 3780                     u4581 318A                     u4741 17DC  
                   u4830 2B34                     u3950 3874                     u2990 2266  
                   u3870 29CE                     u3790 36FA                     u4590 31B6  
<<<<<<< HEAD
                   u4750 187C                     u4670 15FA                     u4910 25A2  
                   u4831 2B30                     u3951 3870                     u2991 2262  
                   u3855 2952                     u3791 36F4                     u4591 31B2  
                   u4751 1878                     u4671 15F6                     u4911 259E  
                   u4840 2B8A                     u3880 29EA                     u3856 295C  
                   u3960 084E                     u4680 162C                     u4760 36C0  
                   u4920 2666                     u4841 2B86                     u3881 29E6  
                   u3857 296C                     u3777 3768                     u3961 084A  
                   u4681 1628                     u4761 36BC                     u4921 2662  
                   u4770 391C                     u4850 2BD4                     u3890 2A3E  
                   u3970 089E                     u4690 166E                     u4930 272A  
                   u4771 3918                     u4851 2BD0                     u3875 29C4  
                   u3971 089A                     u4691 166A                     u4931 2726  
=======
                   u4750 187C                     u4670 15FA                     u4910 25A4  
                   u4831 2B30                     u3951 3870                     u2991 2262  
                   u3855 2952                     u3791 36F4                     u4591 31B2  
                   u4751 1878                     u4671 15F6                     u4911 25A0  
                   u4840 2B8A                     u3880 29EA                     u3856 295C  
                   u3960 084E                     u4680 162C                     u4760 36C0  
                   u4920 2668                     u4841 2B86                     u3881 29E6  
                   u3857 296C                     u3777 3768                     u3961 084A  
                   u4681 1628                     u4761 36BC                     u4921 2664  
                   u4770 391C                     u4850 2BD4                     u3890 2A3E  
                   u3970 089E                     u4690 166E                     u4930 272C  
                   u4771 3918                     u4851 2BD0                     u3875 29C4  
                   u3971 089A                     u4691 166A                     u4931 2728  
>>>>>>> testing
                   u4780 3942                     u4860 2BF2                     u3980 08AC  
                   u4940 27EE                     u4781 393E                     u4861 2BEE  
                   u3981 08A8                     u4941 27EA                     u4790 3A9E  
                   u4870 2C02                     u3990 08BE                     u4791 3A9A  
                   u4871 2BFE                     u3895 2A34                     u3991 08BA  
                   u4880 2C10                     u4881 2C0C                     u4890 2C4A  
<<<<<<< HEAD
                   u4891 2C46                     u4977 2646                     u4987 270A  
                   u4997 27CE                     _dbuf 0100                     _atoi 2C6C  
=======
                   u4891 2C46                     u4977 2648                     u4987 270C  
                   u4997 27D0                     _dbuf 0100                     _atoi 2C6C  
>>>>>>> testing
                   _main 2580                     _prec 0053                     _nout 00CA  
                   pad@i 001B                     pad@p 0018                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001D                     fsr2l 000FD9  
                   btemp 0057         __end_of_ADC_Init 3B00         __end_of_ADC_Read 394C  
          ___fpclassifyf 3006                     prodh 000FF4                     prodl 000FF3  
                   start 0050          ___fldiv@new_exp 0015             _tolower$1356 0010  
           ___param_bank 000000           ??_LCD_Caracter 0004                    ??_pad 001A  
       __end_of_LCD_Init 37DC         __end_of_INT0_ISR 3B20         __end_of_INT1_ISR 0050  
          ___fltol@sign1 000C                    ?_atoi 000B          __end_of___fladd 1DBC  
                  ?_main 0001          __end_of___fldiv 2580          __end_of___awdiv 3368  
        __end_of___flneg 39BC                    _ADRES 000FC3                    STR_10 081D  
                  STR_13 0821                    STR_15 0821          __end_of___awmod 34DA  
        __end_of___flmul 21E6          __end_of___flsub 38C6          __end_of___fltol 2F02  
        ___awdiv@divisor 0006                    i1l113 0040                    i2l107 3B1C  
        ___awdiv@counter 0008             vfpfcnvrt@fmt 0045                    _TRISD 000F95  
                  _datos 00CD      __size_of_LCD_Cadena 0030                    _flags 0055  
                  _fputc 31DA                    _fputs 38C6          __end_of_isdigit 39F4  
                  atoi@n 0018                    pad@fp 0014                    atoi@s 000B  
                  _width 0051                    _putch 3B3A          __end_of_isspace 3880  
        __end_of_isupper 3984                    tablat 000FF5                    ttemp5 0058  
                  ttemp6 005B                    ttemp7 005F                    status 000FD8  
                  wtemp8 0058          __end_of_sprintf 382E           ?___fpclassifyf 0004  
        __end_of_tolower 372A          __end_of_strncmp 31DA          __initialization 3A2A  
           __end_of_atoi 2DFC             __end_of_main 28A6            LCD_Cadena@dat 0006  
       __end_of_Int_Init 3B3A                   ??_atoi 000D                   ??_main 004F  
          __activetblptr 000002                   ?_fputc 0004                   ?_fputs 000D  
       ___awdiv@dividend 0004                   ?_putch 0001                   _LCD_XY 3A8C  
                 i1l4180 002A                   i1l4182 003A                   i1l4184 003E  
                 i1l4178 0026                   i2l4170 3B02                   i2l4172 3B06  
                 i2l4174 3B16                   i2l4176 3B1A            vfpfcnvrt@done 0098  
       __end_of___xxtofl 2C6C             vfprintf@cfmt 004D                   ___flge 2F02  
                 ___fleq 34DA                ??___fladd 000C                   ___wmul 3AB4  
              ??___fldiv 000C                ??___awdiv 0008                ??___flneg 0008  
              ??___awmod 0008                ??___flmul 001A                ??___flsub 0033  
              ??___fltol 0008                   _efgtoa 0826                   _floorf 28A6  
                 clear_0 3A30                   clear_1 3A3C         ___awdiv@quotient 000A  
        ___awmod@divisor 0006          ___awmod@counter 0008                   pad@buf 0016  
   __size_of_LCD_Comando 0072                   _strcpy 372A                   _strlen 39F4  
                 fputc@c 0004                   fputs@c 0011                   fputs@i 0012  
                 fputs@s 000D                ??_isdigit 0006          ___fpclassifyf@e 000C  
              ?_ADC_Init 0001          ___fpclassifyf@u 000E                ?_ADC_Read 0004  
        ___fpclassifyf@x 0004             __mediumconst 0000                ??_isspace 0006  
                 tblptrh 000FF7                ??_isupper 0006                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 36CA  
   __end_of_LCD_Caracter 3668                ??_sprintf 004F                ??_tolower 000C  
              ??_strncmp 000A               ___flge@ff1 002B               ___flge@ff2 002F  
        ??___fpclassifyf 0008             ___xxtofl@arg 000E             ___xxtofl@exp 000D  
           ___xxtofl@val 0004               ___fleq@ff1 0004               ___fleq@ff2 0008  
             __accesstop 0060  __end_of__initialization 3A4E                ?_LCD_Init 0001  
              ?_INT0_ISR 0001                ?_INT1_ISR 0001               ___flneg@f1 0004  
          ___rparam_used 000001               ___fltol@f1 0004             ??_LCD_Cadena 0008  
         __pcstackCOMRAM 0001            __end_of_fputc 32A4            __end_of_fputs 390A  
          __end_of_putch 3B3C               ??_ADC_Init 0004               ??_ADC_Read 0006  
                ??_fputc 0008                  ??_fputs 0011       __end_of_LCD_Cadena 3A8C  
                ??_putch 0004               __pbssBANK0 00BE               __pbssBANK1 0100  
                ?_LCD_XY 0006                  LCD_XY@x 0006                  LCD_XY@y 0008  
              ?_Int_Init 0001               ??_LCD_Init 0006               ??_INT0_ISR 0001  
             ??_INT1_ISR 0001                  ?___flge 002B                  ?___fleq 0004  
                ?___wmul 0004                  ?_efgtoa 0037                  ?_floorf 001D  
             ADC_Read@ch 0007                  ?_strcpy 0004                  ?_strlen 0004  
       LCD_Caracter@data 0005                ?___xxtofl 0004       __size_of_vfpfcnvrt 0524  
        __size_of_LCD_XY 0028               ??_Int_Init 0004                  __Hparam 0000  
                __Lparam 0000          __size_of___flge 0104          __size_of___fleq 00AA  
                ___fladd 18FC                  ___fldiv 21E6                  ___awdiv 32A4  
                ___flneg 3984                  ___awmod 342A                  ___flmul 1DBC  
                ___flsub 3880                  ___fltol 2DFC          __size_of___wmul 0026  
              ?_vfprintf 00A6             __psmallconst 0800          __size_of_efgtoa 0BB2  
        __size_of_floorf 0212                  __pcinit 3A2A                  __ramtop 0800  
                __ptext0 2580                  __ptext1 37DC                  __ptext2 3668  
                __ptext3 13D8                  __ptext4 3104                  __ptext5 0826  
                __ptext6 36CA                  __ptext7 394C                  __ptext8 372A  
                __ptext9 3368          __size_of_strcpy 005C          __size_of_strlen 0036  
  __size_of_LCD_Caracter 0072             __size_of_pad 00C2                  _isdigit 39BC  
             ??___xxtofl 0008         ___awmod@dividend 0004                  _isspace 382E  
                _isupper 394C                  efgtoa@c 003D                  efgtoa@d 0078  
                efgtoa@e 0090                  efgtoa@f 0039                  efgtoa@g 008C  
                efgtoa@h 0082                  efgtoa@i 008A                  efgtoa@l 0086  
                efgtoa@m 0074                  efgtoa@n 0092                  efgtoa@p 007C  
                efgtoa@t 0070                  efgtoa@u 0094                  efgtoa@w 007F  
                atoi@neg 0011           LCD_Comando@cmd 0005                  _sprintf 37DC  
                _tolower 36CA                  _strncmp 3104           __pintcode_body 3B00  
   end_of_initialization 3A4E                  floorf@e 002B                  floorf@m 0027  
                floorf@u 002D                  floorf@x 001D                  fputc@fp 0006  
          __Lmediumconst 0000                  int_func 3B00                  fputs@fp 000F  
      __end_of_vfpfcnvrt 18FC               efgtoa@mode 0081               efgtoa@sign 007A  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE             _LCD_Caracter 35F6               ??_vfprintf 004D  
                strcpy@d 000C                  strlen@a 0006                  strcpy@s 000A  
                strlen@s 0004              ___fladd@grs 0013            ___xxtofl@sign 000C  
              _TRISAbits 000F92                _TRISBbits 000F93              ___fldiv@grs 0017  
            ___fldiv@rem 0010        __size_of_ADC_Init 0026        __size_of_ADC_Read 0042  
            ___flmul@grs 001F           __end_of_LCD_XY 3AB4        __size_of_LCD_Init 0056  
      __size_of_INT0_ISR 3B18        __size_of_INT1_ISR 0038            ??_LCD_Comando 0004  
         __end_of___flge 3006           __end_of___fleq 3584              vfpfcnvrt@ap 0047  
            vfpfcnvrt@ct 00A2              vfpfcnvrt@fp 0043           __end_of___wmul 3ADA  
         __end_of_efgtoa 13D8           __end_of_floorf 2AB8               floorf@F524 00BE  
         __end_of_strcpy 3786           __end_of_strlen 3A2A      start_initialization 3A2A  
            __end_of_pad 342A                 ??_LCD_XY 000A    __end_of___fpclassifyf 3104  
      __size_of_Int_Init 001A              vfprintf@fmt 00A8                 ??___flge 0033  
               ??___fleq 000C                 ??___wmul 0008                 ??_efgtoa 003E  
               ??_floorf 0021                 ??_strcpy 0008                 ??_strlen 0006  
              ___fladd@a 0008                ___fladd@b 0004                ___fldiv@a 0008  
              ___fldiv@b 0004      __end_of_LCD_Comando 35F6                ___flmul@a 0016  
              ___flmul@b 0012              __pbssCOMRAM 0051                ___flsub@a 002F  
              ___flsub@b 002B            __pcstackBANK0 0060        __size_of___xxtofl 01B4  
              _atoi$1261 0013                _atoi$1262 0017                _atoi$1263 0015  
            _efgtoa$1203 0068              _efgtoa$1207 006A              _efgtoa$1208 006C  
            _efgtoa$1209 006E              _efgtoa$1197 0064              _efgtoa$1198 0066  
              __pintcode 0008                 ?___fladd 0004                 ?___fldiv 0004  
               ?___awdiv 0004                 ?___flneg 0004                 ?___awmod 0004  
               ?___flmul 0012                 ?___flsub 002B                 ?___fltol 0004  
            __pintcodelo 0018        __size_of_vfprintf 0062              __smallconst 0800  
               ?_isdigit 0004                 _ADC_Init 3ADA                 _ADC_Read 390A  
               ?_isspace 0004                 ?_isupper 0004                 ?_sprintf 00AC  
               ?_tolower 000A           __size_of_fputc 00CA           __size_of_fputs 0044  
               ?_strncmp 0004           __size_of_putch 0002                 _LCD_Init 3786  
               _INT0_ISR 0008                 _INT1_ISR 0018           ___wmul@product 0008  
               _LATDbits 000F8C                 i1u496_20 003A                 i1u496_21 0036  
               i2u495_40 3B16                 i2u495_41 3B12                 _RCONbits 000FD0  
              _valor_adc 00DD              _LCD_Comando 3584                _vfpfcnvrt 13D8  
             _ADCON0bits 000FC2               _ADCON1bits 000FC1               _ADCON2bits 000FC0  
      ___wmul@multiplier 0004             _isspace$1292 000A               vfpfcnvrt@c 00A5  
             vfpfcnvrt@f 009E              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
               _Int_Init 3B20                 __Hrparam 0000               vfprintf@ap 00AA  
               __Lrparam 0000               vfprintf@fp 00A6         __size_of___fladd 04C0  
       __size_of___fldiv 039A         __size_of___awdiv 00C4         __size_of___flneg 0038  
       __size_of___awmod 00B0         __size_of___flmul 042A         __size_of___flsub 0046  
       __size_of___fltol 0106               ?_vfpfcnvrt 0043       ___fpclassifyf@F463 00C2  
             sprintf@fmt 00AE                 ___xxtofl 2AB8         __size_of_isdigit 0038  
       __size_of_isspace 0052                 __ptext10 39F4                 __ptext11 38C6  
               __ptext20 1DBC                 __ptext12 31DA                 __ptext21 2F02  
               __ptext13 3B3A                 __ptext30 2AB8                 __ptext22 34DA  
               __ptext14 28A6                 __ptext31 3A8C                 __ptext23 21E6  
               __ptext15 3006                 __ptext32 3786                 __ptext24 342A  
               __ptext16 2DFC                 __ptext33 3584                 __ptext25 32A4  
               __ptext17 3880                 __ptext34 3A5C                 __ptext26 2C6C  
               __ptext18 18FC                 __ptext35 35F6                 __ptext27 382E  
               __ptext19 3984                 __ptext36 3B20                 __ptext28 39BC  
               __ptext37 390A                 __ptext29 3AB4                 __ptext38 3ADA  
       __size_of_isupper 0038         __size_of_sprintf 0052         __size_of_tolower 0060  
             strcpy@dest 0004         __size_of_strncmp 00D6            __size_of_atoi 0190  
          __size_of_main 0326                 efgtoa@fp 0037                 efgtoa@ne 0076  
             _LCD_Cadena 3A5C                 efgtoa@pp 0072                 efgtoa@ou 0060  
               int$flags 0057                 _vfprintf 3668           _vfpfcnvrt$1223 009A  
         _vfpfcnvrt$1227 009C               _INTCONbits 000FF2                 isdigit@c 0004  
               intlevel1 0000                 intlevel2 0000                sprintf@ap 00B6  
               isspace@c 0004                strcpy@src 0006                 isupper@c 0004  
              strncmp@_l 0004                strncmp@_r 0006              efgtoa@nmode 007E  
            ??_vfpfcnvrt 0049                 sprintf@f 00B8                 tolower@c 000A  
               sprintf@s 00AC   __size_of___fpclassifyf 00FE                 strncmp@l 000B  
               strncmp@n 0008                 strncmp@r 000D            ___fladd@signs 0010  
           ___fladd@aexp 0011             ___fladd@bexp 0012              ?_LCD_Cadena 0006  
